{"version":3,"file":"ngl.umd.js","sources":["src/polyfills.js","src/utils.js","src/utils/registry.js","src/math/math-utils.js","src/color/colormaker.js","src/selection/selection-constants.js","src/selection/selection-parser.js","src/selection/selection-test.js","src/selection/selection.js","src/color/selection-colormaker.js","src/color/colormaker-registry.js","src/parser/parser-registry.js","src/worker/worker-utils.js","src/worker/worker-registry.js","src/globals.js","src/streamer/streamer.js","src/streamer/file-streamer.js","src/streamer/network-streamer.js","src/loader/loader.js","src/loader/parser-loader.js","src/script.js","src/loader/script-loader.js","src/loader/loader-utils.js","src/writer/writer.js","src/writer/pdb-writer.js","src/writer/sdf-writer.js","src/utils/io-buffer.js","src/writer/stl-writer.js","src/utils/counter.js","src/viewer/stats.js","src/shader/shader-utils.js","src/viewer/viewer-constants.js","src/viewer/tiled-renderer.js","src/math/math-constants.js","src/math/array-utils.js","src/viewer/viewer-utils.js","src/viewer/gl-utils.js","src/viewer/viewer.js","src/constants.js","src/stage/mouse-observer.js","src/controls/trackball-controls.js","src/controls/picking-proxy.js","src/controls/picking-controls.js","src/controls/viewer-controls.js","src/animation/animation.js","src/controls/animation-controls.js","src/utils/queue.js","src/representation/representation.js","src/worker/worker.js","src/worker/worker-pool.js","src/math/vector-utils.js","src/geometry/dash.js","src/geometry/primitive.js","src/geometry/spatial-hash.js","src/store/store.js","src/store/contact-store.js","src/utils/bitarray.js","src/utils/adjacency-list.js","src/chemistry/interactions/features.js","src/structure/structure-constants.js","src/chemistry/geometry.js","src/chemistry/valence-model.js","src/structure/data.js","src/chemistry/functional-groups.js","src/chemistry/interactions/charged.js","src/chemistry/interactions/hydrogen-bonds.js","src/chemistry/interactions/metal-binding.js","src/chemistry/interactions/hydrophobic.js","src/chemistry/interactions/halogen-bonds.js","src/chemistry/interactions/refine-contacts.js","src/chemistry/interactions/contact.js","src/utils/picker.js","src/surface/marching-cubes.js","src/math/matrix-utils.js","src/surface/surface-utils.js","src/surface/surface.js","src/surface/volume.js","src/buffer/buffer.js","src/buffer/mesh-buffer.js","src/buffer/surface-buffer.js","src/buffer/doublesided-buffer.js","src/buffer/contour-buffer.js","src/representation/surface-representation.js","src/component/annotation.js","src/controls/component-controls.js","src/utils/radius-factory.js","src/math/principal-axes.js","src/surface/filtered-volume.js","src/store/bond-hash.js","src/store/bond-store.js","src/store/atom-store.js","src/store/residue-store.js","src/store/chain-store.js","src/store/model-store.js","src/geometry/helixorient.js","src/geometry/helixbundle.js","src/utils/binary-heap.js","src/utils/kdtree.js","src/proxy/atom-proxy.js","src/geometry/kdtree.js","src/symmetry/symmetry-constants.js","src/symmetry/symmetry-utils.js","src/symmetry/assembly.js","src/structure/structure-builder.js","src/structure/structure-utils.js","src/store/atom-type.js","src/store/atom-map.js","src/store/residue-type.js","src/store/residue-map.js","src/proxy/bond-proxy.js","src/proxy/residue-proxy.js","src/proxy/polymer.js","src/proxy/chain-proxy.js","src/proxy/model-proxy.js","src/structure/structure.js","src/geometry/shape.js","src/representation/buffer-representation.js","src/buffer/geometry-buffer.js","src/buffer/spheregeometry-buffer.js","src/buffer/mapped-buffer.js","src/buffer/mappedquad-buffer.js","src/buffer/sphereimpostor-buffer.js","src/buffer/sphere-buffer.js","src/buffer/point-buffer.js","src/representation/dot-representation.js","src/buffer/image-buffer.js","src/surface/volume-slice.js","src/representation/slice-representation.js","src/marilia_custom_classes/DnaOrigamiNanostructure.js","src/marilia_custom_classes/MultiscaleRepresentation.js","src/representation/representation-utils.js","src/component/element.js","src/component/representation-element.js","src/component/component.js","src/component/collection.js","src/component/representation-collection.js","src/component/trajectory-element.js","src/trajectory/frames.js","src/align/superposition.js","src/trajectory/trajectory-player.js","src/trajectory/trajectory.js","src/trajectory/frames-trajectory.js","src/trajectory/structure-trajectory.js","src/trajectory/remote-trajectory.js","src/trajectory/trajectory-utils.js","src/structure/structure-view.js","src/align/alignment.js","src/align/align-utils.js","src/component/structure-component.js","src/geometry/spline.js","src/representation/structure-representation.js","src/buffer/tubemesh-buffer.js","src/representation/cartoon-representation.js","src/buffer/cylindergeometry-buffer.js","src/buffer/mappedalignedbox-buffer.js","src/buffer/cylinderimpostor-buffer.js","src/buffer/cylinder-buffer.js","src/buffer/wideline-buffer.js","src/representation/ballandstick-representation.js","src/controls/TEST.js","src/controls/mouse-actions.js","src/controls/mouse-controls.js","src/controls/key-actions.js","src/controls/key-controls.js","src/stage/picking-behavior.js","src/stage/mouse-behavior.js","src/stage/animation-behavior.js","src/stage/key-behavior.js","src/component/surface-component.js","src/component/volume-component.js","src/component/component-collection.js","src/stage/stage.js","src/component/shape-component.js","src/color/atomindex-colormaker.js","src/color/bfactor-colormaker.js","src/color/chainid-colormaker.js","src/color/chainindex-colormaker.js","src/color/chainname-colormaker.js","src/color/densityfit-colormaker.js","src/color/electrostatic-colormaker.js","src/color/element-colormaker.js","src/color/entityindex-colormaker.js","src/color/entitytype-colormaker.js","src/color/geoquality-colormaker.js","src/color/hydrophobicity-colormaker.js","src/color/modelindex-colormaker.js","src/color/moleculetype-colormaker.js","src/color/occupancy-colormaker.js","src/color/partialcharge-colormaker.js","src/color/random-colormaker.js","src/color/randomcoilindex-colormaker.js","src/color/residueindex-colormaker.js","src/color/resname-colormaker.js","src/color/sstruc-colormaker.js","src/color/uniform-colormaker.js","src/color/value-colormaker.js","src/color/volume-colormaker.js","src/representation/measurement-representation.js","src/utils/edt.js","src/buffer/text-buffer.js","src/representation/angle-representation.js","src/representation/axes-representation.js","src/representation/backbone-representation.js","src/representation/base-representation.js","src/representation/contact-representation.js","src/representation/dihedral-representation.js","src/representation/dihedral-histogram-representation.js","src/representation/distance-representation.js","src/buffer/vector-buffer.js","src/representation/helixorient-representation.js","src/representation/licorice-representation.js","src/buffer/mappedbox-buffer.js","src/buffer/hyperballstickimpostor-buffer.js","src/buffer/hyperballstick-buffer.js","src/representation/hyperball-representation.js","src/utils/label-factory.js","src/representation/label-representation.js","src/representation/line-representation.js","src/geometry/grid.js","src/surface/edt-surface.js","src/surface/av-surface.js","src/surface/molecular-surface.js","src/representation/molecularsurface-representation.js","src/representation/point-representation.js","src/buffer/ribbon-buffer.js","src/representation/ribbon-representation.js","src/representation/rocket-representation.js","src/representation/rope-representation.js","src/representation/spacefill-representation.js","src/buffer/trace-buffer.js","src/representation/trace-representation.js","src/representation/tube-representation.js","src/representation/unitcell-representation.js","src/representation/validation-representation.js","src/buffer/cone-buffer.js","src/viewer/geometry-group.js","src/buffer/arrow-buffer.js","src/buffer/box-buffer.js","src/buffer/ellipsoid-buffer.js","src/buffer/octahedron-buffer.js","src/buffer/tetrahedron-buffer.js","src/buffer/torus-buffer.js","src/parser/parser.js","src/parser/structure-parser.js","src/structure/entity.js","src/symmetry/unitcell.js","src/parser/pdb-parser.js","src/parser/cif-parser.js","src/parser/gro-parser.js","lib/mmtf.es6.js","src/parser/mmtf-parser.js","src/parser/mol2-parser.js","src/parser/pdbqt-parser.js","src/parser/pqr-parser.js","src/parser/sdf-parser.js","src/parser/prmtop-parser.js","src/parser/psf-parser.js","src/parser/top-parser.js","src/parser/trajectory-parser.js","src/parser/dcd-parser.js","src/utils/netcdf-reader.js","src/parser/nctraj-parser.js","src/parser/trr-parser.js","src/parser/xtc-parser.js","src/parser/volume-parser.js","src/parser/cube-parser.js","src/parser/dsn6-parser.js","src/parser/dx-parser.js","src/parser/dxbin-parser.js","src/parser/mrc-parser.js","src/parser/xplor-parser.js","src/parser/kin-parser.js","src/parser/surface-parser.js","src/parser/obj-parser.js","src/parser/ply-parser.js","src/parser/csv-parser.js","src/parser/json-parser.js","src/parser/msgpack-parser.js","src/parser/netcdf-parser.js","src/parser/text-parser.js","src/utils/parse-xml.js","src/parser/xml-parser.js","src/structure/validation.js","src/parser/validation-parser.js","lib/pako_inflate.es6.js","src/utils/gzip-decompressor.js","src/datasource/datasource.js","src/datasource/rcsb-datasource.js","src/datasource/pubchem-datasource.js","src/datasource/passthrough-datasource.js","src/datasource/static-datasource.js","src/datasource/mdsrv-datasource.js","src/ui/parameters.js","src/version.js","src/marilia_custom_classes/CustomComponent.js","src/ngl.js"],"sourcesContent":["/**\r\n * @file shims\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/// ///////////\r\n// Polyfills\r\n\r\nif (typeof window !== 'undefined') {\r\n  (function () {\r\n    'use strict'\r\n    // Console-polyfill. MIT license.\r\n    // https://github.com/paulmillr/console-polyfill\r\n    // Make it safe to do console.log() always.\r\n\r\n    window.console = window.console || {}\r\n    var con = window.console\r\n    var prop, method\r\n    var empty = {}\r\n    var dummy = function () {}\r\n    var properties = 'memory'.split(',')\r\n    var methods = (\r\n      'assert,clear,count,debug,dir,dirxml,error,exception,group,' +\r\n      'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\r\n      'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn'\r\n    ).split(',')\r\n\r\n    while ((prop = properties.pop())) if (!con[prop]) con[prop] = empty\r\n    while ((method = methods.pop())) if (!con[method]) con[method] = dummy\r\n  })()\r\n}\r\n\r\nif (typeof window !== 'undefined' && typeof window.HTMLCanvasElement !== 'undefined' && !window.HTMLCanvasElement.prototype.toBlob) {\r\n  // http://code.google.com/p/chromium/issues/detail?id=67587#57\r\n  Object.defineProperty(window.HTMLCanvasElement.prototype, 'toBlob', {\r\n\r\n    value: function (callback, type, quality) {\r\n      var bin = window.atob(this.toDataURL(type, quality).split(',')[ 1 ])\r\n      var len = bin.length\r\n      var len32 = len >> 2\r\n      var a8 = new Uint8Array(len)\r\n      var a32 = new Uint32Array(a8.buffer, 0, len32)\r\n\r\n      for (var i = 0, j = 0; i < len32; i++) {\r\n        a32[i] = (\r\n          bin.charCodeAt(j++) |\r\n          bin.charCodeAt(j++) << 8 |\r\n          bin.charCodeAt(j++) << 16 |\r\n          bin.charCodeAt(j++) << 24\r\n        )\r\n      }\r\n\r\n      var tailLength = len & 3\r\n\r\n      while (tailLength--) {\r\n        a8[ j ] = bin.charCodeAt(j++)\r\n      }\r\n\r\n      callback(new window.Blob([ a8 ], { 'type': type || 'image/png' }))\r\n    }\r\n\r\n  })\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\r\nMath.cbrt = Math.cbrt || function (x) {\r\n  var y = Math.pow(Math.abs(x), 1 / 3)\r\n  return x < 0 ? -y : y\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\nif (!Math.sign) {\r\n  Math.sign = function (x) {\r\n    // If x is NaN, the result is NaN.\r\n    // If x is -0, the result is -0.\r\n    // If x is +0, the result is +0.\r\n    // If x is negative and not -0, the result is -1.\r\n    // If x is positive and not +0, the result is +1.\r\n    x = +x // convert to a number\r\n    if (x === 0 || isNaN(x)) {\r\n      return Number(x)\r\n    }\r\n    return x > 0 ? 1 : -1\r\n  }\r\n}\r\n\r\nif (!Number.isInteger) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n  Number.isInteger = function isInteger (nVal) {\r\n    return typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal\r\n  }\r\n}\r\n\r\nif (!Number.isNaN) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\n  Number.isNaN = function isNaN (value) {\r\n    return value !== value // eslint-disable-line no-self-compare\r\n  }\r\n}\r\n\r\nif (!Object.assign) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n  Object.defineProperty(Object, 'assign', {\r\n\r\n    enumerable: false,\r\n    configurable: true,\r\n    writable: true,\r\n\r\n    value: function (target/*, firstSource */) {\r\n      'use strict'\r\n      if (target === undefined || target === null) { throw new TypeError('Cannot convert first argument to object') }\r\n\r\n      var to = Object(target)\r\n\r\n      var hasPendingException = false\r\n      var pendingException\r\n\r\n      for (var i = 1; i < arguments.length; i++) {\r\n        var nextSource = arguments[i]\r\n        if (nextSource === undefined || nextSource === null) { continue }\r\n\r\n        var keysArray = Object.keys(Object(nextSource))\r\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\r\n          var nextKey = keysArray[nextIndex]\r\n          try {\r\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey)\r\n            if (desc !== undefined && desc.enumerable) { to[nextKey] = nextSource[nextKey] }\r\n          } catch (e) {\r\n            if (!hasPendingException) {\r\n              hasPendingException = true\r\n              pendingException = e\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasPendingException) { throw pendingException }\r\n      }\r\n\r\n      return to\r\n    }\r\n\r\n  })\r\n}\r\n\r\nif (!String.prototype.startsWith) {\r\n  /*! https://mths.be/startswith v0.2.0 by @mathias */\r\n\r\n  (function () {\r\n    'use strict' // needed to support `apply`/`call` with `undefined`/`null`\r\n    var defineProperty = (function () {\r\n      // IE 8 only supports `Object.defineProperty` on DOM elements\r\n      var result\r\n      try {\r\n        var object = {}\r\n        var $defineProperty = Object.defineProperty\r\n        result = $defineProperty(object, object, object) && $defineProperty\r\n      } catch (error) {} // eslint-disable-line no-empty\r\n      return result\r\n    }())\r\n    var toString = {}.toString\r\n    var startsWith = function (search) {\r\n      if (this === null) {\r\n        throw TypeError()\r\n      }\r\n      var string = String(this)\r\n      if (search && toString.call(search) === '[object RegExp]') {\r\n        throw TypeError()\r\n      }\r\n      var stringLength = string.length\r\n      var searchString = String(search)\r\n      var searchLength = searchString.length\r\n      var position = arguments.length > 1 ? arguments[1] : undefined\r\n      // `ToInteger`\r\n      var pos = position ? Number(position) : 0\r\n      if (Number.isNaN(pos)) {\r\n        pos = 0\r\n      }\r\n      var start = Math.min(Math.max(pos, 0), stringLength)\r\n      // Avoid the `indexOf` call if no match is possible\r\n      if (searchLength + start > stringLength) {\r\n        return false\r\n      }\r\n      var index = -1\r\n      while (++index < searchLength) {\r\n        if (string.charCodeAt(start + index) !== searchString.charCodeAt(index)) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    }\r\n    if (defineProperty) {\r\n      defineProperty(String.prototype, 'startsWith', {\r\n        'value': startsWith,\r\n        'configurable': true,\r\n        'writable': true\r\n      })\r\n    } else {\r\n      // eslint-disable-next-line no-extend-native\r\n      String.prototype.startsWith = startsWith\r\n    }\r\n  }())\r\n}\r\n\r\nif (!String.prototype.endsWith) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.endsWith = function (searchString, position) {\r\n    var subjectString = this.toString()\r\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n      position = subjectString.length\r\n    }\r\n    position -= searchString.length\r\n    var lastIndex = subjectString.indexOf(searchString, position)\r\n    return lastIndex !== -1 && lastIndex === position\r\n  }\r\n}\r\n\r\nif (!String.prototype.repeat) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.repeat = function (count) {\r\n    'use strict'\r\n    if (this === null) {\r\n      throw new TypeError('can\\'t convert ' + this + ' to object')\r\n    }\r\n    var str = '' + this\r\n    count = +count\r\n    if (Number.isNaN(count)) {\r\n      count = 0\r\n    }\r\n    if (count < 0) {\r\n      throw new RangeError('repeat count must be non-negative')\r\n    }\r\n    if (count === Infinity) {\r\n      throw new RangeError('repeat count must be less than infinity')\r\n    }\r\n    count = Math.floor(count)\r\n    if (str.length === 0 || count === 0) {\r\n      return ''\r\n    }\r\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n    // main part. But anyway, most current (August 2014) browsers can't handle\r\n    // strings 1 << 28 chars or longer, so:\r\n    if (str.length * count >= 1 << 28) {\r\n      throw new RangeError('repeat count must not overflow maximum string size')\r\n    }\r\n    var rpt = ''\r\n    for (;;) {\r\n      if ((count & 1) === 1) {\r\n        rpt += str\r\n      }\r\n      count >>>= 1\r\n      if (count === 0) {\r\n        break\r\n      }\r\n      str += str\r\n    }\r\n    // Could we try:\r\n    // return Array(count + 1).join(this);\r\n    return rpt\r\n  }\r\n}\r\n\r\nif (!String.prototype.includes) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.includes = function (search, start) {\r\n    'use strict'\r\n    if (typeof start !== 'number') {\r\n      start = 0\r\n    }\r\n\r\n    if (start + search.length > this.length) {\r\n      return false\r\n    } else {\r\n      return this.indexOf(search, start) !== -1\r\n    }\r\n  }\r\n}\r\n\r\nif (!Array.prototype.includes) {\r\n  // eslint-disable-next-line no-extend-native\r\n  Array.prototype.includes = function (searchElement /*, fromIndex */) {\r\n    'use strict'\r\n    if (this == null) {\r\n      throw new TypeError('Array.prototype.includes called on null or undefined')\r\n    }\r\n\r\n    var O = Object(this)\r\n    var len = parseInt(O.length, 10) || 0\r\n    if (len === 0) {\r\n      return false\r\n    }\r\n    var n = parseInt(arguments[1], 10) || 0\r\n    var k\r\n    if (n >= 0) {\r\n      k = n\r\n    } else {\r\n      k = len + n\r\n      if (k < 0) { k = 0 }\r\n    }\r\n    var currentElement\r\n    while (k < len) {\r\n      currentElement = O[k]\r\n      if (searchElement === currentElement ||\r\n          (Number.isNaN(searchElement) && Number.isNaN(currentElement))\r\n      ) {\r\n        return true\r\n      }\r\n      k++\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\n// Reference: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from\r\nif (!Array.from) {\r\n  Array.from = (function () {\r\n    var toStr = Object.prototype.toString\r\n    var isCallable = function (fn) {\r\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]'\r\n    }\r\n    var toInteger = function (value) {\r\n      var number = Number(value)\r\n      if (isNaN(number)) { return 0 }\r\n      if (number === 0 || !isFinite(number)) { return number }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\r\n    }\r\n    var maxSafeInteger = Math.pow(2, 53) - 1\r\n    var toLength = function (value) {\r\n      var len = toInteger(value)\r\n      return Math.min(Math.max(len, 0), maxSafeInteger)\r\n    }\r\n\r\n    // The length property of the from method is 1.\r\n    return function from (arrayLike/*, mapFn, thisArg */) {\r\n      // 1. Let C be the this value.\r\n      var C = this\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike)\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError('Array.from requires an array-like object - not null or undefined')\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined\r\n      var T\r\n      if (typeof mapFn !== 'undefined') {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError('Array.from: when provided, the second argument must be a function')\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2]\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length)\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len)\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue\r\n      while (k < len) {\r\n        kValue = items[k]\r\n        if (mapFn) {\r\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\r\n        } else {\r\n          A[k] = kValue\r\n        }\r\n        k += 1\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len\r\n      // 20. Return A.\r\n      return A\r\n    }\r\n  }())\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n  (function () {\r\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n\r\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\r\n\r\n    // MIT license\r\n\r\n    var lastTime = 0\r\n    var vendors = [ 'ms', 'moz', 'webkit', 'o' ]\r\n\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n      window.requestAnimationFrame = (\r\n        window[ vendors[ x ] + 'RequestAnimationFrame' ]\r\n      )\r\n\r\n      window.cancelAnimationFrame = (\r\n        window[ vendors[ x ] + 'CancelAnimationFrame' ] ||\r\n        window[ vendors[ x ] + 'CancelRequestAnimationFrame' ]\r\n      )\r\n    }\r\n\r\n    if (!window.requestAnimationFrame) {\r\n      window.requestAnimationFrame = function (callback/*, element */) {\r\n        var currTime = new Date().getTime()\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n        var id = window.setTimeout(function () {\r\n          var time = currTime + timeToCall\r\n          callback(time)\r\n        }, timeToCall)\r\n\r\n        lastTime = currTime + timeToCall\r\n\r\n        return id\r\n      }\r\n    }\r\n\r\n    if (!window.cancelAnimationFrame) {\r\n      window.cancelAnimationFrame = function (id) {\r\n        clearTimeout(id)\r\n      }\r\n    }\r\n  }())\r\n}\r\n\r\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\r\n  // Missing in IE9-11.\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n  // eslint-disable-next-line no-extend-native\r\n  Object.defineProperty(Function.prototype, 'name', {\r\n\r\n    get: function () {\r\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[ 1 ]\r\n    }\r\n\r\n  })\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n  if (window.performance === undefined) {\r\n    /* global self */\r\n    self.performance = {}\r\n  }\r\n\r\n  if (window.performance.now === undefined) {\r\n    (function () {\r\n      var start = Date.now()\r\n\r\n      window.performance.now = function () {\r\n        return Date.now() - start\r\n      }\r\n    })()\r\n  }\r\n}\r\n\r\nif (Object.defineProperty !== undefined) {\r\n  // Missing in IE < 13\r\n  // MIT license\r\n  // Copyright (c) 2016 Financial Times\r\n  // https://github.com/Financial-Times/polyfill-service\r\n  if (Number.MAX_SAFE_INTEGER === undefined) {\r\n    Object.defineProperty(Number, 'MAX_SAFE_INTEGER', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: Math.pow(2, 53) - 1\r\n    })\r\n  }\r\n  if (Number.MIN_SAFE_INTEGER === undefined) {\r\n    Object.defineProperty(Number, 'MIN_SAFE_INTEGER', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: -(Math.pow(2, 53) - 1)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector2, Vector3, Matrix4, Quaternion } from 'three';\r\nexport function getQuery(id) {\r\n    if (typeof window === 'undefined')\r\n        return undefined;\r\n    const a = new RegExp(`${id}=([^&#=]*)`);\r\n    const m = a.exec(window.location.search);\r\n    if (m) {\r\n        return decodeURIComponent(m[1]);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function boolean(value) {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    if (typeof value === 'string') {\r\n        return /^1|true|t|yes|y$/i.test(value);\r\n    }\r\n    return true;\r\n}\r\nexport function defaults(value, defaultValue) {\r\n    return value !== undefined ? value : defaultValue;\r\n}\r\nexport function createParams(params, defaultParams) {\r\n    const o = Object.assign({}, params);\r\n    for (const k in defaultParams) {\r\n        const value = params[k];\r\n        if (value === undefined)\r\n            o[k] = defaultParams[k];\r\n    }\r\n    return o;\r\n}\r\nexport function updateParams(params, newParams) {\r\n    for (const k in newParams) {\r\n        const value = newParams[k];\r\n        if (value !== undefined)\r\n            params[k] = value;\r\n    }\r\n    return params;\r\n}\r\nexport function pick(object) {\r\n    const properties = [].slice.call(arguments, 1);\r\n    return properties.reduce((a, e) => {\r\n        a[e] = object[e];\r\n        return a;\r\n    }, {});\r\n}\r\nexport function flatten(array, ret) {\r\n    ret = defaults(ret, []);\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (Array.isArray(array[i])) {\r\n            flatten(array[i], ret);\r\n        }\r\n        else {\r\n            ret.push(array[i]);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport function getProtocol() {\r\n    const protocol = window.location.protocol;\r\n    return protocol.match(/http(s)?:/gi) === null ? 'http:' : protocol;\r\n}\r\nexport function getBrowser() {\r\n    if (typeof window === 'undefined')\r\n        return false;\r\n    const ua = window.navigator.userAgent;\r\n    if (/Opera|OPR/.test(ua)) {\r\n        return 'Opera';\r\n    }\r\n    else if (/Chrome/i.test(ua)) {\r\n        return 'Chrome';\r\n    }\r\n    else if (/Firefox/i.test(ua)) {\r\n        return 'Firefox';\r\n    }\r\n    else if (/Mobile(\\/.*)? Safari/i.test(ua)) {\r\n        return 'Mobile Safari';\r\n    }\r\n    else if (/MSIE/i.test(ua)) {\r\n        return 'Internet Explorer';\r\n    }\r\n    else if (/Safari/i.test(ua)) {\r\n        return 'Safari';\r\n    }\r\n    return false;\r\n}\r\nexport function getAbsolutePath(relativePath) {\r\n    const loc = window.location;\r\n    const pn = loc.pathname;\r\n    const basePath = pn.substring(0, pn.lastIndexOf('/') + 1);\r\n    return loc.origin + basePath + relativePath;\r\n}\r\nexport function deepCopy(src) {\r\n    if (typeof src !== 'object') {\r\n        return src;\r\n    }\r\n    const dst = Array.isArray(src) ? [] : {};\r\n    for (let key in src) {\r\n        dst[key] = deepCopy(src[key]);\r\n    }\r\n    return dst;\r\n}\r\nexport function deepEqual(a, b) {\r\n    // from https://github.com/epoberezkin/fast-deep-equal MIT\r\n    if (a === b)\r\n        return true;\r\n    const arrA = Array.isArray(a);\r\n    const arrB = Array.isArray(b);\r\n    if (arrA && arrB) {\r\n        if (a.length !== b.length)\r\n            return false;\r\n        for (let i = 0; i < a.length; i++) {\r\n            if (!deepEqual(a[i], b[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    if (arrA !== arrB)\r\n        return false;\r\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n        const keys = Object.keys(a);\r\n        if (keys.length !== Object.keys(b).length)\r\n            return false;\r\n        const dateA = a instanceof Date;\r\n        const dateB = b instanceof Date;\r\n        if (dateA && dateB)\r\n            return a.getTime() === b.getTime();\r\n        if (dateA !== dateB)\r\n            return false;\r\n        const regexpA = a instanceof RegExp;\r\n        const regexpB = b instanceof RegExp;\r\n        if (regexpA && regexpB)\r\n            return a.toString() === b.toString();\r\n        if (regexpA !== regexpB)\r\n            return false;\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\r\n                return false;\r\n        }\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (!deepEqual(a[keys[i]], b[keys[i]]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction openUrl(url) {\r\n    const opened = window.open(url, '_blank');\r\n    if (!opened) {\r\n        window.location.href = url;\r\n    }\r\n}\r\nexport function download(data, downloadName = 'download') {\r\n    // using ideas from https://github.com/eligrey/FileSaver.js/blob/master/FileSaver.js\r\n    if (!data)\r\n        return;\r\n    const isSafari = getBrowser() === 'Safari';\r\n    const isChromeIos = /CriOS\\/[\\d]+/.test(window.navigator.userAgent);\r\n    const a = document.createElement('a');\r\n    function open(str) {\r\n        openUrl(isChromeIos ? str : str.replace(/^data:[^;]*;/, 'data:attachment/file;'));\r\n    }\r\n    if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\r\n        // native saveAs in IE 10+\r\n        navigator.msSaveOrOpenBlob(data, downloadName);\r\n    }\r\n    else if ((isSafari || isChromeIos) && FileReader) {\r\n        if (data instanceof Blob) {\r\n            // no downloading of blob urls in Safari\r\n            var reader = new FileReader();\r\n            reader.onloadend = function () {\r\n                open(reader.result);\r\n            };\r\n            reader.readAsDataURL(data);\r\n        }\r\n        else {\r\n            open(data);\r\n        }\r\n    }\r\n    else {\r\n        let objectUrlCreated = false;\r\n        if (data instanceof Blob) {\r\n            data = URL.createObjectURL(data);\r\n            objectUrlCreated = true;\r\n        }\r\n        if ('download' in a) {\r\n            // download link available\r\n            a.style.display = 'hidden';\r\n            document.body.appendChild(a);\r\n            a.href = data;\r\n            a.download = downloadName;\r\n            a.target = '_blank';\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }\r\n        else {\r\n            openUrl(data);\r\n        }\r\n        if (objectUrlCreated) {\r\n            window.URL.revokeObjectURL(data);\r\n        }\r\n    }\r\n}\r\nexport function submit(url, data, callback, onerror) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('POST', url);\r\n    xhr.addEventListener('load', function () {\r\n        if (xhr.status === 200 || xhr.status === 304) {\r\n            callback(xhr.response);\r\n        }\r\n        else {\r\n            if (typeof onerror === 'function') {\r\n                onerror(xhr.status);\r\n            }\r\n        }\r\n    }, false);\r\n    xhr.send(data);\r\n}\r\nexport function open(callback, extensionList = ['*']) {\r\n    const fileInput = document.createElement('input');\r\n    fileInput.type = 'file';\r\n    fileInput.multiple = true;\r\n    fileInput.style.display = 'hidden';\r\n    document.body.appendChild(fileInput);\r\n    fileInput.accept = '.' + extensionList.join(',.');\r\n    fileInput.addEventListener('change', function (e) {\r\n        callback(e.target.files);\r\n    }, false);\r\n    fileInput.click();\r\n}\r\nexport function throttle(func, wait, options) {\r\n    // from http://underscorejs.org/docs/underscore.html\r\n    let context;\r\n    let args;\r\n    let result;\r\n    let timeout = null;\r\n    let previous = 0;\r\n    if (!options)\r\n        options = {};\r\n    function later() {\r\n        previous = options.leading === false ? 0 : Date.now();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n        if (!timeout)\r\n            context = args = null;\r\n    }\r\n    return function throttle() {\r\n        var now = Date.now();\r\n        if (!previous && options.leading === false)\r\n            previous = now;\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            result = func.apply(context, args);\r\n            if (!timeout)\r\n                context = args = null;\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n}\r\nexport function lexicographicCompare(elm1, elm2) {\r\n    if (elm1 < elm2)\r\n        return -1;\r\n    if (elm1 > elm2)\r\n        return 1;\r\n    return 0;\r\n}\r\n/**\r\n * Does a binary search to get the index of an element in the input array\r\n * @function\r\n * @example\r\n * var array = [ 1, 2, 3, 4, 5, 6 ];\r\n * var element = 4;\r\n * binarySearchIndexOf( array, element );  // returns 3\r\n *\r\n * @param {Array} array - sorted array\r\n * @param {Anything} element - element to search for in the array\r\n * @param {Function} [compareFunction] - compare function\r\n * @return {Number} the index of the element or -1 if not in the array\r\n */\r\nexport function binarySearchIndexOf(array, element, compareFunction = lexicographicCompare) {\r\n    let low = 0;\r\n    let high = array.length - 1;\r\n    while (low <= high) {\r\n        const mid = (low + high) >> 1;\r\n        const cmp = compareFunction(element, array[mid]);\r\n        if (cmp > 0) {\r\n            low = mid + 1;\r\n        }\r\n        else if (cmp < 0) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return -low - 1;\r\n}\r\nexport function binarySearchForLeftRange(array, leftRange) {\r\n    let high = array.length - 1;\r\n    if (array[high] < leftRange)\r\n        return -1;\r\n    let low = 0;\r\n    while (low <= high) {\r\n        const mid = (low + high) >> 1;\r\n        if (array[mid] >= leftRange) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return high + 1;\r\n}\r\nexport function binarySearchForRightRange(array, rightRange) {\r\n    if (array[0] > rightRange)\r\n        return -1;\r\n    let low = 0;\r\n    let high = array.length - 1;\r\n    while (low <= high) {\r\n        const mid = (low + high) >> 1;\r\n        if (array[mid] > rightRange) {\r\n            high = mid - 1;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return low - 1;\r\n}\r\nexport function rangeInSortedArray(array, min, max) {\r\n    const indexLeft = binarySearchForLeftRange(array, min);\r\n    const indexRight = binarySearchForRightRange(array, max);\r\n    if (indexLeft === -1 || indexRight === -1 || indexLeft > indexRight) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return indexRight - indexLeft + 1;\r\n    }\r\n}\r\nexport function dataURItoImage(dataURI) {\r\n    const img = document.createElement('img');\r\n    img.src = dataURI;\r\n    return img;\r\n}\r\nexport function uniqueArray(array) {\r\n    return array.sort().filter(function (value, index, sorted) {\r\n        return (index === 0) || (value !== sorted[index - 1]);\r\n    });\r\n}\r\n// String/arraybuffer conversion\r\nexport function uint8ToString(u8a) {\r\n    const chunkSize = 0x7000;\r\n    if (u8a.length > chunkSize) {\r\n        const c = [];\r\n        for (let i = 0; i < u8a.length; i += chunkSize) {\r\n            c.push(String.fromCharCode.apply(null, u8a.subarray(i, i + chunkSize)));\r\n        }\r\n        return c.join('');\r\n    }\r\n    else {\r\n        return String.fromCharCode.apply(null, u8a);\r\n    }\r\n}\r\nexport function uint8ToLines(u8a, chunkSize = 1024 * 1024 * 10, newline = '\\n') {\r\n    let partialLine = '';\r\n    let lines = [];\r\n    for (let i = 0; i < u8a.length; i += chunkSize) {\r\n        const str = uint8ToString(u8a.subarray(i, i + chunkSize));\r\n        const idx = str.lastIndexOf(newline);\r\n        if (idx === -1) {\r\n            partialLine += str;\r\n        }\r\n        else {\r\n            const str2 = partialLine + str.substr(0, idx);\r\n            lines = lines.concat(str2.split(newline));\r\n            if (idx === str.length - newline.length) {\r\n                partialLine = '';\r\n            }\r\n            else {\r\n                partialLine = str.substr(idx + newline.length);\r\n            }\r\n        }\r\n    }\r\n    if (partialLine !== '') {\r\n        lines.push(partialLine);\r\n    }\r\n    return lines;\r\n}\r\nexport function getTypedArray(arrayType, arraySize) {\r\n    switch (arrayType) {\r\n        case 'int8':\r\n            return new Int8Array(arraySize);\r\n        case 'int16':\r\n            return new Int16Array(arraySize);\r\n        case 'int32':\r\n            return new Int32Array(arraySize);\r\n        case 'uint8':\r\n            return new Uint8Array(arraySize);\r\n        case 'uint16':\r\n            return new Uint16Array(arraySize);\r\n        case 'uint32':\r\n            return new Uint32Array(arraySize);\r\n        case 'float32':\r\n            return new Float32Array(arraySize);\r\n        default:\r\n            throw new Error('arrayType unknown: ' + arrayType);\r\n    }\r\n}\r\nexport function getUintArray(sizeOrArray, maxUint) {\r\n    const TypedArray = maxUint > 65535 ? Uint32Array : Uint16Array;\r\n    return new TypedArray(sizeOrArray);\r\n}\r\nexport function ensureArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\nexport function ensureBuffer(a) {\r\n    return (a.buffer && a.buffer instanceof ArrayBuffer) ? a.buffer : a;\r\n}\r\nfunction _ensureClassFromArg(arg, constructor) {\r\n    return arg instanceof constructor ? arg : new constructor(arg);\r\n}\r\nfunction _ensureClassFromArray(array, constructor) {\r\n    if (array === undefined) {\r\n        array = new constructor();\r\n    }\r\n    else if (Array.isArray(array)) {\r\n        array = new constructor().fromArray(array);\r\n    }\r\n    return array;\r\n}\r\nexport function ensureVector2(v) {\r\n    return _ensureClassFromArray(v, Vector2);\r\n}\r\nexport function ensureVector3(v) {\r\n    return _ensureClassFromArray(v, Vector3);\r\n}\r\nexport function ensureMatrix4(m) {\r\n    return _ensureClassFromArray(m, Matrix4);\r\n}\r\nexport function ensureQuaternion(q) {\r\n    return _ensureClassFromArray(q, Quaternion);\r\n}\r\nexport function ensureFloat32Array(a) {\r\n    return _ensureClassFromArg(a, Float32Array);\r\n}\r\nexport function createRingBuffer(length) {\r\n    let pointer = 0;\r\n    let count = 0;\r\n    const buffer = [];\r\n    return {\r\n        has: function (value) { return buffer.indexOf(value) !== -1; },\r\n        get: function (idx) { return buffer[idx]; },\r\n        push: function (item) {\r\n            buffer[pointer] = item;\r\n            pointer = (length + pointer + 1) % length;\r\n            ++count;\r\n        },\r\n        get count() { return count; },\r\n        get data() { return buffer.slice(0, Math.min(count, length)); },\r\n        clear: function () {\r\n            count = 0;\r\n            pointer = 0;\r\n            buffer.length = 0;\r\n        }\r\n    };\r\n}\r\nexport function createSimpleDict() {\r\n    const set = {};\r\n    return {\r\n        has: function (k) { return set[JSON.stringify(k)] !== undefined; },\r\n        add: function (k, v) { set[JSON.stringify(k)] = v; },\r\n        del: function (k) { delete set[JSON.stringify(k)]; },\r\n        get values() { return Object.keys(set).map(k => set[k]); }\r\n    };\r\n}\r\nexport function createSimpleSet() {\r\n    const set = {};\r\n    return {\r\n        has: function (v) { return set[JSON.stringify(v)] !== undefined; },\r\n        add: function (v) { set[JSON.stringify(v)] = v; },\r\n        del: function (v) { delete set[JSON.stringify(v)]; },\r\n        get list() { return Object.keys(set).map(k => set[k]); },\r\n    };\r\n}\r\n//# sourceMappingURL=utils.js.map","/**\r\n * @file Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nfunction toLowerCaseString(value) {\r\n    return defaults(value, '').toString().toLowerCase();\r\n}\r\nexport default class Registry {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this._dict = {};\r\n    }\r\n    add(key, value) {\r\n        this._dict[toLowerCaseString(key)] = value;\r\n    }\r\n    get(key) {\r\n        return this._dict[toLowerCaseString(key)];\r\n    }\r\n    get names() {\r\n        return Object.keys(this._dict);\r\n    }\r\n}\r\n//# sourceMappingURL=registry.js.map","/**\r\n * @file Math Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport function degToRad(deg) {\r\n    return deg * 0.01745; // deg * Math.PI / 180\r\n}\r\nexport function radToDeg(rad) {\r\n    return rad * 57.29578; // rad * 180 / Math.PI\r\n}\r\n// http://www.broofa.com/Tools/Math.uuid.htm\r\nconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\nconst uuid = new Array(36);\r\nexport function generateUUID() {\r\n    let rnd = 0;\r\n    let r;\r\n    for (let i = 0; i < 36; i++) {\r\n        if (i === 8 || i === 13 || i === 18 || i === 23) {\r\n            uuid[i] = '-';\r\n        }\r\n        else if (i === 14) {\r\n            uuid[i] = '4';\r\n        }\r\n        else {\r\n            if (rnd <= 0x02)\r\n                rnd = 0x2000000 + (Math.random() * 0x1000000) | 0;\r\n            r = rnd & 0xf;\r\n            rnd = rnd >> 4;\r\n            uuid[i] = chars[(i === 19) ? (r & 0x3) | 0x8 : r];\r\n        }\r\n    }\r\n    return uuid.join('');\r\n}\r\nexport function countSetBits(i) {\r\n    i = i - ((i >> 1) & 0x55555555);\r\n    i = (i & 0x33333333) + ((i >> 2) & 0x33333333);\r\n    return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;\r\n}\r\nexport function normalize(value, min, max) {\r\n    return (value - min) / (max - min);\r\n}\r\nexport function clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nexport function pclamp(value) {\r\n    return clamp(value, 0, 100);\r\n}\r\nexport function saturate(value) {\r\n    return clamp(value, 0, 1);\r\n}\r\nexport function lerp(start, stop, alpha) {\r\n    return start + (stop - start) * alpha;\r\n}\r\nexport function spline(p0, p1, p2, p3, t, tension) {\r\n    const v0 = (p2 - p0) * tension;\r\n    const v1 = (p3 - p1) * tension;\r\n    const t2 = t * t;\r\n    const t3 = t * t2;\r\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 +\r\n        (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 +\r\n        v0 * t + p1;\r\n}\r\nexport function smoothstep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return x * x * (3 - 2 * x);\r\n}\r\nexport function smootherstep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n}\r\nexport function smootheststep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return (-20 * Math.pow(x, 7) +\r\n        70 * Math.pow(x, 6) -\r\n        84 * Math.pow(x, 5) +\r\n        35 * Math.pow(x, 4));\r\n}\r\nexport function almostIdentity(value, start, stop) {\r\n    if (value > start)\r\n        return value;\r\n    const a = 2 * stop - start;\r\n    const b = 2 * start - 3 * stop;\r\n    const t = value / start;\r\n    return (a * t + b) * t * t + stop;\r\n}\r\n//# sourceMappingURL=math-utils.js.map","/**\r\n * @file Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport * as chroma from 'chroma-js';\r\nimport { createParams } from '../utils';\r\nexport const ScaleDefaultParameters = {\r\n    scale: 'uniform',\r\n    mode: 'hcl',\r\n    domain: [0, 1],\r\n    value: 0xFFFFFF,\r\n    reverse: false\r\n};\r\nconst tmpColor = new Color();\r\n/**\r\n * Class for making colors.\r\n * @interface\r\n */\r\nclass Colormaker {\r\n    /**\r\n     * Create a colormaker instance\r\n     * @param  {ColormakerParameters} params - colormaker parameter\r\n     */\r\n    constructor(params = {}) {\r\n        this.parameters = createParams(params, ScaleDefaultParameters);\r\n        if (typeof this.parameters.value === 'string') {\r\n            this.parameters.value = tmpColor.set(this.parameters.value).getHex();\r\n        }\r\n        if (this.parameters.structure) {\r\n            this.atomProxy = this.parameters.structure.getAtomProxy();\r\n        }\r\n    }\r\n    getScale(params = {}) {\r\n        const p = createParams(params, this.parameters);\r\n        if (p.scale === 'rainbow') {\r\n            p.scale = ['red', 'orange', 'yellow', 'green', 'blue'];\r\n        }\r\n        else if (p.scale === 'rwb') {\r\n            p.scale = ['red', 'white', 'blue'];\r\n        }\r\n        if (p.reverse) {\r\n            p.domain.reverse();\r\n        }\r\n        return chroma\r\n            .scale(p.scale) // TODO\r\n            .mode(p.mode)\r\n            .domain(p.domain)\r\n            .out('num'); // TODO\r\n    }\r\n    /**\r\n     * safe a color to an array\r\n     * @param  {Integer} color - hex color value\r\n     * @param  {Array|TypedArray} array - destination\r\n     * @param  {Integer} offset - index into the array\r\n     * @return {Array} the destination array\r\n     */\r\n    colorToArray(color, array = [], offset = 0) {\r\n        array[offset] = (color >> 16 & 255) / 255;\r\n        array[offset + 1] = (color >> 8 & 255) / 255;\r\n        array[offset + 2] = (color & 255) / 255;\r\n        return array;\r\n    }\r\n    /**\r\n     * safe a atom color to an array\r\n     * @param  {AtomProxy} atom - atom to get color for\r\n     * @param  {Array|TypedArray} array - destination\r\n     * @param  {Integer} offset - index into the array\r\n     * @return {Array} the destination array\r\n     */\r\n    atomColorToArray(atom, array, offset) {\r\n        return this.colorToArray(this.atomColor ? this.atomColor(atom) : 0x000000, array, offset);\r\n    }\r\n    /**\r\n     * return the color for an bond\r\n     * @param  {BondProxy} bond - bond to get color for\r\n     * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n     * @return {Integer} hex bond color\r\n     */\r\n    bondColor(bond, fromTo) {\r\n        if (this.atomProxy && this.atomColor) {\r\n            this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2;\r\n            return this.atomColor(this.atomProxy);\r\n        }\r\n        else {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    /**\r\n     * safe a bond color to an array\r\n     * @param  {BondProxy} bond - bond to get color for\r\n     * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n     * @param  {Array|TypedArray} array - destination\r\n     * @param  {Integer} offset - index into the array\r\n     * @return {Array} the destination array\r\n     */\r\n    bondColorToArray(bond, fromTo, array, offset) {\r\n        return this.colorToArray(this.bondColor(bond, fromTo), array, offset);\r\n    }\r\n    /**\r\n     * safe a volume cell color to an array\r\n     * @param  {Integer} index - volume cell index\r\n     * @param  {Array|TypedArray} array - destination\r\n     * @param  {Integer} offset - index into the array\r\n     * @return {Array} the destination array\r\n     */\r\n    volumeColorToArray(index, array, offset) {\r\n        return this.colorToArray(this.volumeColor ? this.volumeColor(index) : 0x000000, array, offset);\r\n    }\r\n    /**\r\n     * safe a color for coordinates in space to an array\r\n     * @param  {Vector3} coords - xyz coordinates\r\n     * @param  {Array|TypedArray} array - destination\r\n     * @param  {Integer} offset - index into the array\r\n     * @return {Array} the destination array\r\n     */\r\n    positionColorToArray(coords, array, offset) {\r\n        return this.colorToArray(this.positionColor ? this.positionColor(coords) : 0x000000, array, offset);\r\n    }\r\n}\r\nexport default Colormaker;\r\n//# sourceMappingURL=colormaker.js.map","/**\r\n * @file Selection Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport var kwd;\r\n(function (kwd) {\r\n    kwd[kwd[\"PROTEIN\"] = 1] = \"PROTEIN\";\r\n    kwd[kwd[\"NUCLEIC\"] = 2] = \"NUCLEIC\";\r\n    kwd[kwd[\"RNA\"] = 3] = \"RNA\";\r\n    kwd[kwd[\"DNA\"] = 4] = \"DNA\";\r\n    kwd[kwd[\"POLYMER\"] = 5] = \"POLYMER\";\r\n    kwd[kwd[\"WATER\"] = 6] = \"WATER\";\r\n    kwd[kwd[\"HELIX\"] = 7] = \"HELIX\";\r\n    kwd[kwd[\"SHEET\"] = 8] = \"SHEET\";\r\n    kwd[kwd[\"TURN\"] = 9] = \"TURN\";\r\n    kwd[kwd[\"BACKBONE\"] = 10] = \"BACKBONE\";\r\n    kwd[kwd[\"SIDECHAIN\"] = 11] = \"SIDECHAIN\";\r\n    kwd[kwd[\"ALL\"] = 12] = \"ALL\";\r\n    kwd[kwd[\"HETERO\"] = 13] = \"HETERO\";\r\n    kwd[kwd[\"ION\"] = 14] = \"ION\";\r\n    kwd[kwd[\"SACCHARIDE\"] = 15] = \"SACCHARIDE\";\r\n    kwd[kwd[\"SUGAR\"] = 15] = \"SUGAR\";\r\n    kwd[kwd[\"BONDED\"] = 16] = \"BONDED\";\r\n    kwd[kwd[\"RING\"] = 17] = \"RING\";\r\n    kwd[kwd[\"AROMATICRING\"] = 18] = \"AROMATICRING\";\r\n    kwd[kwd[\"METAL\"] = 19] = \"METAL\";\r\n    kwd[kwd[\"NONE\"] = 20] = \"NONE\";\r\n})(kwd || (kwd = {}));\r\nexport const SelectAllKeyword = ['*', '', 'ALL'];\r\nexport const SelectNoneKeyword = ['NONE'];\r\nexport const AtomOnlyKeywords = [\r\n    kwd.BACKBONE, kwd.SIDECHAIN, kwd.BONDED, kwd.RING, kwd.AROMATICRING, kwd.METAL\r\n];\r\nexport const ChainKeywords = [\r\n    kwd.POLYMER, kwd.WATER\r\n];\r\nexport const SmallResname = ['ALA', 'GLY', 'SER'];\r\nexport const NucleophilicResname = ['CYS', 'SER', 'THR'];\r\nexport const HydrophobicResname = ['ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL'];\r\nexport const AromaticResname = ['PHE', 'TRP', 'TYR', 'HIS'];\r\nexport const AmideResname = ['ASN', 'GLN'];\r\nexport const AcidicResname = ['ASP', 'GLU'];\r\nexport const BasicResname = ['ARG', 'HIS', 'LYS'];\r\nexport const ChargedResname = ['ARG', 'ASP', 'GLU', 'HIS', 'LYS'];\r\nexport const PolarResname = ['ASN', 'ARG', 'ASP', 'CYS', 'GLY', 'GLN', 'GLU', 'HIS', 'LYS', 'SER', 'THR', 'TYR'];\r\nexport const NonpolarResname = ['ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL'];\r\nexport const CyclicResname = ['HIS', 'PHE', 'PRO', 'TRP', 'TYR'];\r\nexport const AliphaticResname = ['ALA', 'GLY', 'ILE', 'LEU', 'VAL'];\r\n//# sourceMappingURL=selection-constants.js.map","/**\r\n * @file Selection Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { kwd, SelectAllKeyword, SmallResname, NucleophilicResname, HydrophobicResname, AromaticResname, AmideResname, AcidicResname, BasicResname, ChargedResname, PolarResname, NonpolarResname, CyclicResname, AliphaticResname } from './selection-constants';\r\nfunction parseSele(string) {\r\n    let retSelection = {\r\n        operator: undefined,\r\n        rules: []\r\n    };\r\n    if (!string) {\r\n        return retSelection;\r\n    }\r\n    let selection = retSelection;\r\n    let newSelection;\r\n    let oldSelection;\r\n    const selectionStack = [];\r\n    string = string.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').trim();\r\n    if (string.charAt(0) === '(' && string.substr(-1) === ')') {\r\n        string = string.slice(1, -1).trim();\r\n    }\r\n    const chunks = string.split(/\\s+/);\r\n    // Log.log( string, chunks )\r\n    const createNewContext = (operator) => {\r\n        newSelection = {\r\n            operator,\r\n            rules: []\r\n        };\r\n        if (selection === undefined) {\r\n            selection = newSelection;\r\n            retSelection = newSelection;\r\n        }\r\n        else {\r\n            selection.rules.push(newSelection);\r\n            selectionStack.push(selection);\r\n            selection = newSelection;\r\n        }\r\n    };\r\n    const getPrevContext = function (operator) {\r\n        oldSelection = selection;\r\n        selection = selectionStack.pop();\r\n        if (selection === undefined) {\r\n            createNewContext(operator);\r\n            pushRule(oldSelection);\r\n        }\r\n    };\r\n    const pushRule = function (rule) {\r\n        selection.rules.push(rule);\r\n    };\r\n    let not = false;\r\n    for (let i = 0; i < chunks.length; ++i) {\r\n        const c = chunks[i];\r\n        const cu = c.toUpperCase();\r\n        // handle parens\r\n        if (c === '(') {\r\n            // Log.log( \"(\" );\r\n            not = false;\r\n            createNewContext();\r\n            continue;\r\n        }\r\n        else if (c === ')') {\r\n            // Log.log( \")\" );\r\n            getPrevContext();\r\n            if (selection.negate) {\r\n                getPrevContext();\r\n            }\r\n            continue;\r\n        }\r\n        // leave 'not' context\r\n        if (not > 0) {\r\n            if (cu === 'NOT') {\r\n                not = 1;\r\n            }\r\n            else if (not === 1) {\r\n                not = 2;\r\n            }\r\n            else if (not === 2) {\r\n                not = false;\r\n                getPrevContext();\r\n            }\r\n            else {\r\n                throw new Error(\"something went wrong with 'not'\");\r\n            }\r\n        }\r\n        // handle logic operators\r\n        if (cu === 'AND') {\r\n            // Log.log( \"AND\" );\r\n            if (selection.operator === 'OR') {\r\n                const lastRule = selection.rules.pop();\r\n                createNewContext('AND');\r\n                pushRule(lastRule);\r\n            }\r\n            else {\r\n                selection.operator = 'AND';\r\n            }\r\n            continue;\r\n        }\r\n        else if (cu === 'OR') {\r\n            // Log.log( \"OR\" );\r\n            if (selection.operator === 'AND') {\r\n                getPrevContext('OR');\r\n            }\r\n            else {\r\n                selection.operator = 'OR';\r\n            }\r\n            continue;\r\n        }\r\n        else if (c.toUpperCase() === 'NOT') {\r\n            // Log.log( \"NOT\", j );\r\n            not = 1;\r\n            createNewContext();\r\n            selection.negate = true;\r\n            continue;\r\n        }\r\n        else {\r\n            // Log.log( \"chunk\", c, j, selection );\r\n        }\r\n        // handle keyword attributes\r\n        // ensure `cu` is not a number before testing if it is in the\r\n        // kwd enum dictionary which includes the enum numbers as well...\r\n        if (+cu !== +cu) {\r\n            const keyword = kwd[cu];\r\n            if (keyword !== undefined) {\r\n                pushRule({ keyword });\r\n                continue;\r\n            }\r\n        }\r\n        if (cu === 'HYDROGEN') {\r\n            pushRule({\r\n                operator: 'OR',\r\n                rules: [\r\n                    { element: 'H' },\r\n                    { element: 'D' }\r\n                ]\r\n            });\r\n            continue;\r\n        }\r\n        if (cu === 'SMALL') {\r\n            pushRule({ resname: SmallResname });\r\n            continue;\r\n        }\r\n        if (cu === 'NUCLEOPHILIC') {\r\n            pushRule({ resname: NucleophilicResname });\r\n            continue;\r\n        }\r\n        if (cu === 'HYDROPHOBIC') {\r\n            pushRule({ resname: HydrophobicResname });\r\n            continue;\r\n        }\r\n        if (cu === 'AROMATIC') {\r\n            pushRule({ resname: AromaticResname });\r\n            continue;\r\n        }\r\n        if (cu === 'AMIDE') {\r\n            pushRule({ resname: AmideResname });\r\n            continue;\r\n        }\r\n        if (cu === 'ACIDIC') {\r\n            pushRule({ resname: AcidicResname });\r\n            continue;\r\n        }\r\n        if (cu === 'BASIC') {\r\n            pushRule({ resname: BasicResname });\r\n            continue;\r\n        }\r\n        if (cu === 'CHARGED') {\r\n            pushRule({ resname: ChargedResname });\r\n            continue;\r\n        }\r\n        if (cu === 'POLAR') {\r\n            pushRule({ resname: PolarResname });\r\n            continue;\r\n        }\r\n        if (cu === 'NONPOLAR') {\r\n            pushRule({ resname: NonpolarResname });\r\n            continue;\r\n        }\r\n        if (cu === 'CYCLIC') {\r\n            pushRule({ resname: CyclicResname });\r\n            continue;\r\n        }\r\n        if (cu === 'ALIPHATIC') {\r\n            pushRule({ resname: AliphaticResname });\r\n            continue;\r\n        }\r\n        if (cu === 'SIDECHAINATTACHED') {\r\n            pushRule({\r\n                operator: 'OR',\r\n                rules: [\r\n                    { keyword: kwd.SIDECHAIN },\r\n                    {\r\n                        operator: 'AND',\r\n                        negate: false,\r\n                        rules: [\r\n                            { keyword: kwd.PROTEIN },\r\n                            {\r\n                                operator: 'OR',\r\n                                negate: false,\r\n                                rules: [\r\n                                    { atomname: 'CA' },\r\n                                    { atomname: 'BB' }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        operator: 'AND',\r\n                        negate: false,\r\n                        rules: [\r\n                            { resname: 'PRO' },\r\n                            { atomname: 'N' }\r\n                        ]\r\n                    },\r\n                    {\r\n                        operator: 'AND',\r\n                        negate: false,\r\n                        rules: [\r\n                            { keyword: kwd.NUCLEIC },\r\n                            {\r\n                                operator: 'OR',\r\n                                negate: true,\r\n                                rules: [\r\n                                    { atomname: 'P' },\r\n                                    { atomname: 'OP1' },\r\n                                    { atomname: 'OP2' },\r\n                                    { atomname: \"O3'\" },\r\n                                    { atomname: 'O3*' },\r\n                                    { atomname: \"O5'\" },\r\n                                    { atomname: 'O5*' },\r\n                                    { atomname: \"C5'\" },\r\n                                    { atomname: 'C5*' }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n            continue;\r\n        }\r\n        if (cu === 'LIGAND') {\r\n            pushRule({\r\n                operator: 'AND',\r\n                rules: [\r\n                    {\r\n                        operator: 'OR',\r\n                        rules: [\r\n                            {\r\n                                operator: 'AND',\r\n                                rules: [\r\n                                    { keyword: kwd.HETERO },\r\n                                    {\r\n                                        negate: true,\r\n                                        operator: undefined,\r\n                                        rules: [\r\n                                            { keyword: kwd.POLYMER }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                negate: true,\r\n                                operator: undefined,\r\n                                rules: [\r\n                                    { keyword: kwd.POLYMER }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        negate: true,\r\n                        operator: undefined,\r\n                        rules: [\r\n                            {\r\n                                operator: 'OR',\r\n                                rules: [\r\n                                    { keyword: kwd.WATER },\r\n                                    { keyword: kwd.ION }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            });\r\n            continue;\r\n        }\r\n        if (SelectAllKeyword.indexOf(cu) !== -1) {\r\n            pushRule({ keyword: kwd.ALL });\r\n            continue;\r\n        }\r\n        // handle atom expressions\r\n        if (c.charAt(0) === '@') {\r\n            const indexList = c.substr(1).split(',').map(x => parseInt(x));\r\n            indexList.sort(function (a, b) { return a - b; });\r\n            pushRule({ atomindex: indexList });\r\n            continue;\r\n        }\r\n        if (c.charAt(0) === '#') {\r\n            console.error('# for element selection deprecated, use _');\r\n            pushRule({ element: cu.substr(1) });\r\n            continue;\r\n        }\r\n        if (c.charAt(0) === '_') {\r\n            pushRule({ element: cu.substr(1) });\r\n            continue;\r\n        }\r\n        if (c[0] === '[' && c[c.length - 1] === ']') {\r\n            const resnameList = cu.substr(1, c.length - 2).split(',');\r\n            const resname = resnameList.length > 1 ? resnameList : resnameList[0];\r\n            pushRule({ resname: resname });\r\n            continue;\r\n        }\r\n        else if ((c.length >= 1 && c.length <= 4) &&\r\n            c[0] !== '^' && c[0] !== ':' && c[0] !== '.' && c[0] !== '%' && c[0] !== '/' &&\r\n            isNaN(parseInt(c))) {\r\n            pushRule({ resname: cu });\r\n            continue;\r\n        }\r\n        // there must be only one constraint per rule\r\n        // otherwise a test quickly becomes not applicable\r\n        // e.g. chainTest for chainname when resno is present too\r\n        const sele = {\r\n            operator: 'AND',\r\n            rules: []\r\n        };\r\n        const model = c.split('/');\r\n        if (model.length > 1 && model[1]) {\r\n            if (isNaN(parseInt(model[1]))) {\r\n                throw new Error('model must be an integer');\r\n            }\r\n            sele.rules.push({\r\n                model: parseInt(model[1])\r\n            });\r\n        }\r\n        const altloc = model[0].split('%');\r\n        if (altloc.length > 1) {\r\n            sele.rules.push({\r\n                altloc: altloc[1]\r\n            });\r\n        }\r\n        const atomname = altloc[0].split('.');\r\n        if (atomname.length > 1 && atomname[1]) {\r\n            if (atomname[1].length > 4) {\r\n                throw new Error('atomname must be one to four characters');\r\n            }\r\n            sele.rules.push({\r\n                atomname: atomname[1].substring(0, 4).toUpperCase()\r\n            });\r\n        }\r\n        const chain = atomname[0].split(':');\r\n        if (chain.length > 1 && chain[1]) {\r\n            sele.rules.push({\r\n                chainname: chain[1]\r\n            });\r\n        }\r\n        const inscode = chain[0].split('^');\r\n        if (inscode.length > 1) {\r\n            sele.rules.push({\r\n                inscode: inscode[1]\r\n            });\r\n        }\r\n        if (inscode[0]) {\r\n            let negate, negate2;\r\n            if (inscode[0][0] === '-') {\r\n                inscode[0] = inscode[0].substr(1);\r\n                negate = true;\r\n            }\r\n            if (inscode[0].includes('--')) {\r\n                inscode[0] = inscode[0].replace('--', '-');\r\n                negate2 = true;\r\n            }\r\n            let resi = inscode[0].split('-');\r\n            if (resi.length === 1) {\r\n                let resiSingle = parseInt(resi[0]);\r\n                if (isNaN(resiSingle)) {\r\n                    throw new Error('resi must be an integer');\r\n                }\r\n                if (negate)\r\n                    resiSingle *= -1;\r\n                sele.rules.push({\r\n                    resno: resiSingle\r\n                });\r\n            }\r\n            else if (resi.length === 2) {\r\n                const resiRange = resi.map(x => parseInt(x));\r\n                if (negate)\r\n                    resiRange[0] *= -1;\r\n                if (negate2)\r\n                    resiRange[1] *= -1;\r\n                sele.rules.push({\r\n                    resno: [resiRange[0], resiRange[1]]\r\n                });\r\n            }\r\n            else {\r\n                throw new Error(\"resi range must contain one '-'\");\r\n            }\r\n        }\r\n        // round up\r\n        if (sele.rules.length === 1) {\r\n            pushRule(sele.rules[0]);\r\n        }\r\n        else if (sele.rules.length > 1) {\r\n            pushRule(sele);\r\n        }\r\n        else {\r\n            throw new Error('empty selection chunk');\r\n        }\r\n    }\r\n    // cleanup\r\n    if (retSelection.operator === undefined &&\r\n        retSelection.rules.length === 1 &&\r\n        retSelection.rules[0].hasOwnProperty('operator')) {\r\n        retSelection = retSelection.rules[0];\r\n    }\r\n    return retSelection;\r\n}\r\nexport { parseSele };\r\n//# sourceMappingURL=selection-parser.js.map","/**\r\n * @file Selection Test\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { binarySearchIndexOf, rangeInSortedArray } from '../utils';\r\nimport { kwd, AtomOnlyKeywords, ChainKeywords } from './selection-constants';\r\nfunction atomTestFn(a, s) {\r\n    // returning -1 means the rule is not applicable\r\n    if (s.atomname === undefined && s.element === undefined &&\r\n        s.altloc === undefined && s.atomindex === undefined &&\r\n        s.keyword === undefined && s.inscode === undefined &&\r\n        s.resname === undefined && s.sstruc === undefined &&\r\n        s.resno === undefined && s.chainname === undefined &&\r\n        s.model === undefined)\r\n        return -1;\r\n    if (s.keyword !== undefined) {\r\n        if (s.keyword === kwd.BACKBONE && !a.isBackbone())\r\n            return false;\r\n        if (s.keyword === kwd.SIDECHAIN && !a.isSidechain())\r\n            return false;\r\n        if (s.keyword === kwd.BONDED && !a.isBonded())\r\n            return false;\r\n        if (s.keyword === kwd.RING && !a.isRing())\r\n            return false;\r\n        if (s.keyword === kwd.AROMATICRING && !a.isAromatic())\r\n            return false;\r\n        if (s.keyword === kwd.HETERO && !a.isHetero())\r\n            return false;\r\n        if (s.keyword === kwd.PROTEIN && !a.isProtein())\r\n            return false;\r\n        if (s.keyword === kwd.NUCLEIC && !a.isNucleic())\r\n            return false;\r\n        if (s.keyword === kwd.RNA && !a.isRna())\r\n            return false;\r\n        if (s.keyword === kwd.DNA && !a.isDna())\r\n            return false;\r\n        if (s.keyword === kwd.POLYMER && !a.isPolymer())\r\n            return false;\r\n        if (s.keyword === kwd.WATER && !a.isWater())\r\n            return false;\r\n        if (s.keyword === kwd.HELIX && !a.isHelix())\r\n            return false;\r\n        if (s.keyword === kwd.SHEET && !a.isSheet())\r\n            return false;\r\n        if (s.keyword === kwd.TURN && !a.isTurn())\r\n            return false;\r\n        if (s.keyword === kwd.ION && !a.isIon())\r\n            return false;\r\n        if (s.keyword === kwd.SACCHARIDE && !a.isSaccharide())\r\n            return false;\r\n        if (s.keyword === kwd.METAL && !a.isMetal())\r\n            return false;\r\n    }\r\n    if (s.atomname !== undefined && s.atomname !== a.atomname)\r\n        return false;\r\n    if (s.element !== undefined && s.element !== a.element)\r\n        return false;\r\n    if (s.altloc !== undefined && s.altloc !== a.altloc)\r\n        return false;\r\n    if (s.atomindex !== undefined &&\r\n        binarySearchIndexOf(s.atomindex, a.index) < 0)\r\n        return false;\r\n    if (s.resname !== undefined) {\r\n        if (Array.isArray(s.resname)) {\r\n            if (!s.resname.includes(a.resname))\r\n                return false;\r\n        }\r\n        else {\r\n            if (s.resname !== a.resname)\r\n                return false;\r\n        }\r\n    }\r\n    if (s.sstruc !== undefined && s.sstruc !== a.sstruc)\r\n        return false;\r\n    if (s.resno !== undefined) {\r\n        if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n            if (s.resno[0] > a.resno || s.resno[1] < a.resno)\r\n                return false;\r\n        }\r\n        else {\r\n            if (s.resno !== a.resno)\r\n                return false;\r\n        }\r\n    }\r\n    if (s.inscode !== undefined && s.inscode !== a.inscode)\r\n        return false;\r\n    if (s.chainname !== undefined && s.chainname !== a.chainname)\r\n        return false;\r\n    if (s.model !== undefined && s.model !== a.modelIndex)\r\n        return false;\r\n    return true;\r\n}\r\nfunction residueTestFn(r, s) {\r\n    // returning -1 means the rule is not applicable\r\n    if (s.resname === undefined && s.resno === undefined && s.inscode === undefined &&\r\n        s.sstruc === undefined && s.model === undefined && s.chainname === undefined &&\r\n        s.atomindex === undefined &&\r\n        (s.keyword === undefined || AtomOnlyKeywords.includes(s.keyword)))\r\n        return -1;\r\n    if (s.keyword !== undefined) {\r\n        if (s.keyword === kwd.HETERO && !r.isHetero())\r\n            return false;\r\n        if (s.keyword === kwd.PROTEIN && !r.isProtein())\r\n            return false;\r\n        if (s.keyword === kwd.NUCLEIC && !r.isNucleic())\r\n            return false;\r\n        if (s.keyword === kwd.RNA && !r.isRna())\r\n            return false;\r\n        if (s.keyword === kwd.DNA && !r.isDna())\r\n            return false;\r\n        if (s.keyword === kwd.POLYMER && !r.isPolymer())\r\n            return false;\r\n        if (s.keyword === kwd.WATER && !r.isWater())\r\n            return false;\r\n        if (s.keyword === kwd.HELIX && !r.isHelix())\r\n            return false;\r\n        if (s.keyword === kwd.SHEET && !r.isSheet())\r\n            return false;\r\n        if (s.keyword === kwd.TURN && !r.isTurn())\r\n            return false;\r\n        if (s.keyword === kwd.ION && !r.isIon())\r\n            return false;\r\n        if (s.keyword === kwd.SACCHARIDE && !r.isSaccharide())\r\n            return false;\r\n    }\r\n    if (s.atomindex !== undefined &&\r\n        rangeInSortedArray(s.atomindex, r.atomOffset, r.atomEnd) === 0)\r\n        return false;\r\n    if (s.resname !== undefined) {\r\n        if (Array.isArray(s.resname)) {\r\n            if (!s.resname.includes(r.resname))\r\n                return false;\r\n        }\r\n        else {\r\n            if (s.resname !== r.resname)\r\n                return false;\r\n        }\r\n    }\r\n    if (s.sstruc !== undefined && s.sstruc !== r.sstruc)\r\n        return false;\r\n    if (s.resno !== undefined) {\r\n        if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n            if (s.resno[0] > r.resno || s.resno[1] < r.resno)\r\n                return false;\r\n        }\r\n        else {\r\n            if (s.resno !== r.resno)\r\n                return false;\r\n        }\r\n    }\r\n    if (s.inscode !== undefined && s.inscode !== r.inscode)\r\n        return false;\r\n    if (s.chainname !== undefined && s.chainname !== r.chainname)\r\n        return false;\r\n    if (s.model !== undefined && s.model !== r.modelIndex)\r\n        return false;\r\n    return true;\r\n}\r\nfunction chainTestFn(c, s) {\r\n    // returning -1 means the rule is not applicable\r\n    if (s.chainname === undefined && s.model === undefined && s.atomindex === undefined &&\r\n        (s.keyword === undefined || !ChainKeywords.includes(s.keyword) || !c.entity))\r\n        return -1;\r\n    if (s.keyword !== undefined) {\r\n        if (s.keyword === kwd.POLYMER && !c.entity.isPolymer())\r\n            return false;\r\n        if (s.keyword === kwd.WATER && !c.entity.isWater())\r\n            return false;\r\n    }\r\n    if (s.atomindex !== undefined &&\r\n        rangeInSortedArray(s.atomindex, c.atomOffset, c.atomEnd) === 0)\r\n        return false;\r\n    if (s.chainname !== undefined && s.chainname !== c.chainname)\r\n        return false;\r\n    if (s.model !== undefined && s.model !== c.modelIndex)\r\n        return false;\r\n    return true;\r\n}\r\nfunction modelTestFn(m, s) {\r\n    // returning -1 means the rule is not applicable\r\n    if (s.model === undefined && s.atomindex === undefined)\r\n        return -1;\r\n    if (s.atomindex !== undefined &&\r\n        rangeInSortedArray(s.atomindex, m.atomOffset, m.atomEnd) === 0)\r\n        return false;\r\n    if (s.model !== undefined && s.model !== m.index)\r\n        return false;\r\n    return true;\r\n}\r\nfunction makeTest(selection, fn) {\r\n    if (selection === null)\r\n        return false;\r\n    if (selection.error)\r\n        return false;\r\n    if (!selection.rules || selection.rules.length === 0)\r\n        return false;\r\n    const n = selection.rules.length;\r\n    const t = !selection.negate;\r\n    const f = !!selection.negate;\r\n    const subTests = [];\r\n    for (let i = 0; i < n; ++i) {\r\n        const s = selection.rules[i];\r\n        if (s.hasOwnProperty('operator')) {\r\n            subTests[i] = makeTest(s, fn); // TODO\r\n        }\r\n    }\r\n    // ( x and y ) can short circuit on false\r\n    // ( x or y ) can short circuit on true\r\n    // not ( x and y )\r\n    return function test(entity) {\r\n        const and = selection.operator === 'AND';\r\n        let na = false;\r\n        for (let i = 0; i < n; ++i) {\r\n            const s = selection.rules[i]; // TODO\r\n            let ret;\r\n            if (s.hasOwnProperty('operator')) {\r\n                const test = subTests[i];\r\n                if (test !== false) {\r\n                    ret = test(entity);\r\n                }\r\n                else {\r\n                    ret = -1;\r\n                }\r\n                if (ret === -1) {\r\n                    na = true;\r\n                    continue;\r\n                }\r\n                else if (ret === true) {\r\n                    if (and) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        return t;\r\n                    }\r\n                }\r\n                else {\r\n                    if (and) {\r\n                        return f;\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (s.keyword === kwd.ALL) {\r\n                    if (and) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        return t;\r\n                    }\r\n                }\r\n                else if (s.keyword === kwd.NONE) {\r\n                    if (and) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        return f;\r\n                    }\r\n                }\r\n                ret = fn(entity, s);\r\n                // console.log( entity.qualifiedName(), ret, s, selection.negate, \"t\", t, \"f\", f )\r\n                if (ret === -1) {\r\n                    na = true;\r\n                    continue;\r\n                }\r\n                else if (ret === true) {\r\n                    if (and) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        return t;\r\n                    }\r\n                }\r\n                else {\r\n                    if (and) {\r\n                        return f;\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (na) {\r\n            return -1;\r\n        }\r\n        else {\r\n            if (and) {\r\n                return t;\r\n            }\r\n            else {\r\n                return f;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction filter(selection, fn) {\r\n    if (selection.error)\r\n        return selection;\r\n    if (!selection.rules || selection.rules.length === 0)\r\n        return selection;\r\n    const n = selection.rules.length;\r\n    const filtered = {\r\n        operator: selection.operator,\r\n        rules: []\r\n    };\r\n    if (selection.hasOwnProperty('negate')) {\r\n        filtered.negate = selection.negate;\r\n    }\r\n    for (let i = 0; i < n; ++i) {\r\n        const s = selection.rules[i];\r\n        if (s.hasOwnProperty('operator')) {\r\n            const fs = filter(s, fn);\r\n            if (fs !== null)\r\n                filtered.rules.push(fs); // TODO\r\n        }\r\n        else if (!fn(s)) {\r\n            filtered.rules.push(s); // TODO\r\n        }\r\n    }\r\n    if (filtered.rules.length > 0) { // TODO\r\n        // TODO maybe the filtered rules could be returned\r\n        // in some case, but the way how tests are applied\r\n        // e.g. when traversing a structure would also need\r\n        // to change\r\n        return selection;\r\n        // return filtered;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nfunction makeAtomTest(selection, atomOnly = false) {\r\n    let filteredSelection = selection;\r\n    if (atomOnly) {\r\n        filteredSelection = filter(selection, function (s) {\r\n            if (s.keyword !== undefined && !AtomOnlyKeywords.includes(s.keyword))\r\n                return true;\r\n            if (s.model !== undefined)\r\n                return true;\r\n            if (s.chainname !== undefined)\r\n                return true;\r\n            if (s.resname !== undefined)\r\n                return true;\r\n            if (s.resno !== undefined)\r\n                return true;\r\n            if (s.sstruc !== undefined)\r\n                return true;\r\n            return false;\r\n        });\r\n    }\r\n    return makeTest(filteredSelection, atomTestFn);\r\n}\r\nfunction makeResidueTest(selection, residueOnly = false) {\r\n    let filteredSelection = selection;\r\n    if (residueOnly) {\r\n        filteredSelection = filter(selection, function (s) {\r\n            if (s.keyword !== undefined && AtomOnlyKeywords.includes(s.keyword))\r\n                return true;\r\n            if (s.model !== undefined)\r\n                return true;\r\n            if (s.chainname !== undefined)\r\n                return true;\r\n            if (s.atomname !== undefined)\r\n                return true;\r\n            if (s.element !== undefined)\r\n                return true;\r\n            if (s.altloc !== undefined)\r\n                return true;\r\n            return false;\r\n        });\r\n    }\r\n    return makeTest(filteredSelection, residueTestFn);\r\n}\r\nfunction makeChainTest(selection, chainOnly = false) {\r\n    let filteredSelection = selection;\r\n    if (chainOnly) {\r\n        filteredSelection = filter(selection, function (s) {\r\n            if (s.keyword !== undefined && !ChainKeywords.includes(s.keyword))\r\n                return true;\r\n            // if( s.model!==undefined ) return true;\r\n            if (s.resname !== undefined)\r\n                return true;\r\n            if (s.resno !== undefined)\r\n                return true;\r\n            if (s.atomname !== undefined)\r\n                return true;\r\n            if (s.element !== undefined)\r\n                return true;\r\n            if (s.altloc !== undefined)\r\n                return true;\r\n            if (s.sstruc !== undefined)\r\n                return true;\r\n            if (s.inscode !== undefined)\r\n                return true;\r\n            return false;\r\n        });\r\n    }\r\n    return makeTest(filteredSelection, chainTestFn);\r\n}\r\nfunction makeModelTest(selection, modelOnly = false) {\r\n    let filteredSelection = selection;\r\n    if (modelOnly) {\r\n        filteredSelection = filter(selection, function (s) {\r\n            if (s.keyword !== undefined)\r\n                return true;\r\n            if (s.chainname !== undefined)\r\n                return true;\r\n            if (s.resname !== undefined)\r\n                return true;\r\n            if (s.resno !== undefined)\r\n                return true;\r\n            if (s.atomname !== undefined)\r\n                return true;\r\n            if (s.element !== undefined)\r\n                return true;\r\n            if (s.altloc !== undefined)\r\n                return true;\r\n            if (s.sstruc !== undefined)\r\n                return true;\r\n            if (s.inscode !== undefined)\r\n                return true;\r\n            return false;\r\n        });\r\n    }\r\n    return makeTest(filteredSelection, modelTestFn);\r\n}\r\nexport { makeAtomTest, makeResidueTest, makeChainTest, makeModelTest };\r\n//# sourceMappingURL=selection-test.js.map","/**\r\n * @file Selection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { parseSele } from './selection-parser';\r\nimport { makeAtomTest, makeResidueTest, makeChainTest, makeModelTest } from './selection-test';\r\nimport { SelectAllKeyword, SelectNoneKeyword } from './selection-constants';\r\n/**\r\n * Selection\r\n */\r\nclass Selection {\r\n    /**\r\n     * Create Selection\r\n     * @param {String} string - selection string, see {@tutorial selection-language}\r\n     */\r\n    constructor(string) {\r\n        this.signals = {\r\n            stringChanged: new Signal()\r\n        };\r\n        this.setString(string);\r\n    }\r\n    get type() { return 'selection'; }\r\n    setString(string, silent) {\r\n        if (string === undefined)\r\n            string = this.string || '';\r\n        if (string === this.string)\r\n            return;\r\n        try {\r\n            this.selection = parseSele(string);\r\n        }\r\n        catch (e) {\r\n            // Log.error( e.stack );\r\n            this.selection = { 'error': e.message };\r\n        }\r\n        const selection = this.selection;\r\n        this.string = string;\r\n        this.test = makeAtomTest(selection);\r\n        this.residueTest = makeResidueTest(selection);\r\n        this.chainTest = makeChainTest(selection);\r\n        this.modelTest = makeModelTest(selection);\r\n        this.atomOnlyTest = makeAtomTest(selection, true);\r\n        this.residueOnlyTest = makeResidueTest(selection, true);\r\n        this.chainOnlyTest = makeChainTest(selection, true);\r\n        this.modelOnlyTest = makeModelTest(selection, true);\r\n        if (!silent) {\r\n            this.signals.stringChanged.dispatch(this.string);\r\n        }\r\n    }\r\n    isAllSelection() {\r\n        return SelectAllKeyword.includes(this.string.toUpperCase());\r\n    }\r\n    isNoneSelection() {\r\n        return SelectNoneKeyword.includes(this.string.toUpperCase());\r\n    }\r\n}\r\nexport default Selection;\r\n//# sourceMappingURL=selection.js.map","/**\r\n * @file Selection Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Selection from '../selection/selection';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color based on {@link Selection}\r\n */\r\nclass SelectionColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.colormakerList = []; // TODO\r\n        this.selectionList = [];\r\n        const dataList = params.dataList || [];\r\n        dataList.forEach((data) => {\r\n            const [scheme, sele, params = {}] = data;\r\n            if (ColormakerRegistry.hasScheme(scheme)) {\r\n                Object.assign(params, {\r\n                    scheme: scheme,\r\n                    structure: this.parameters.structure\r\n                });\r\n            }\r\n            else {\r\n                Object.assign(params, {\r\n                    scheme: 'uniform',\r\n                    value: new Color(scheme).getHex()\r\n                });\r\n            }\r\n            this.colormakerList.push(ColormakerRegistry.getScheme(params));\r\n            this.selectionList.push(new Selection(sele));\r\n        });\r\n    }\r\n    atomColor(a) {\r\n        for (let i = 0, n = this.selectionList.length; i < n; ++i) {\r\n            const test = this.selectionList[i].test;\r\n            if (test && test(a)) {\r\n                return this.colormakerList[i].atomColor(a);\r\n            }\r\n        }\r\n        return 0xFFFFFF;\r\n    }\r\n}\r\nexport default SelectionColormaker;\r\n//# sourceMappingURL=selection-colormaker.js.map","/**\r\n * @file Colormaker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { generateUUID } from '../math/math-utils';\r\nimport Colormaker from './colormaker';\r\nimport SelectionColormaker from './selection-colormaker';\r\nconst ColormakerScales = {\r\n    '': '',\r\n    // Sequential\r\n    OrRd: '[S] Orange-Red',\r\n    PuBu: '[S] Purple-Blue',\r\n    BuPu: '[S] Blue-Purple',\r\n    Oranges: '[S] Oranges',\r\n    BuGn: '[S] Blue-Green',\r\n    YlOrBr: '[S] Yellow-Orange-Brown',\r\n    YlGn: '[S] Yellow-Green',\r\n    Reds: '[S] Reds',\r\n    RdPu: '[S] Red-Purple',\r\n    Greens: '[S] Greens',\r\n    YlGnBu: '[S] Yellow-Green-Blue',\r\n    Purples: '[S] Purples',\r\n    GnBu: '[S] Green-Blue',\r\n    Greys: '[S] Greys',\r\n    YlOrRd: '[S] Yellow-Orange-Red',\r\n    PuRd: '[S] Purple-Red',\r\n    Blues: '[S] Blues',\r\n    PuBuGn: '[S] Purple-Blue-Green',\r\n    // Diverging\r\n    Viridis: '[D] Viridis',\r\n    Spectral: '[D] Spectral',\r\n    RdYlGn: '[D] Red-Yellow-Green',\r\n    RdBu: '[D] Red-Blue',\r\n    PiYG: '[D] Pink-Yellowgreen',\r\n    PRGn: '[D] Purplered-Green',\r\n    RdYlBu: '[D] Red-Yellow-Blue',\r\n    BrBG: '[D] Brown-Bluegreen',\r\n    RdGy: '[D] Red-Grey',\r\n    PuOr: '[D] Purple-Orange',\r\n    // Qualitative\r\n    Set1: '[Q] Set1',\r\n    Set2: '[Q] Set2',\r\n    Set3: '[Q] Set3',\r\n    Dark2: '[Q] Dark2',\r\n    Paired: '[Q] Paired',\r\n    Pastel1: '[Q] Pastel1',\r\n    Pastel2: '[Q] Pastel2',\r\n    Accent: '[Q] Accent',\r\n    // Other\r\n    rainbow: '[?] Rainbow',\r\n    rwb: '[?] Red-White-Blue'\r\n};\r\nconst ColormakerModes = {\r\n    '': '',\r\n    rgb: 'Red Green Blue',\r\n    hsv: 'Hue Saturation Value',\r\n    hsl: 'Hue Saturation Lightness',\r\n    hsi: 'Hue Saturation Intensity',\r\n    lab: 'CIE L*a*b*',\r\n    hcl: 'Hue Chroma Lightness'\r\n};\r\n/**\r\n * Class for registering {@link Colormaker}s. Generally use the\r\n * global {@link src/globals.js~ColormakerRegistry} instance.\r\n */\r\nclass ColormakerRegistry {\r\n    constructor() {\r\n        this.schemes = {};\r\n        this.userSchemes = {};\r\n    }\r\n    getScheme(params) {\r\n        const p = params || {};\r\n        const id = (p.scheme || '').toLowerCase();\r\n        let SchemeClass;\r\n        if (id in this.schemes) {\r\n            SchemeClass = this.schemes[id];\r\n        }\r\n        else if (id in this.userSchemes) {\r\n            SchemeClass = this.userSchemes[id];\r\n        }\r\n        else {\r\n            SchemeClass = Colormaker;\r\n        }\r\n        return new SchemeClass(params);\r\n    }\r\n    /**\r\n     * Get an description of available schemes as an\r\n     * object with id-label as key-value pairs\r\n     * @return {Object} available schemes\r\n     */\r\n    getSchemes() {\r\n        const types = {};\r\n        Object.keys(this.schemes).forEach(function (k) {\r\n            types[k] = k;\r\n        });\r\n        Object.keys(this.userSchemes).forEach(function (k) {\r\n            types[k] = k.split('|')[1];\r\n        });\r\n        return types;\r\n    }\r\n    /**\r\n     * Get an description of available scales as an\r\n     * object with id-label as key-value pairs\r\n     * @return {Object} available scales\r\n     */\r\n    getScales() {\r\n        return ColormakerScales;\r\n    }\r\n    getModes() {\r\n        return ColormakerModes;\r\n    }\r\n    /**\r\n     * Add a scheme with a hardcoded id\r\n     * @param {String} id - the id\r\n     * @param {Colormaker} scheme - the colormaker\r\n     * @return {undefined}\r\n     */\r\n    add(id, scheme) {\r\n        id = id.toLowerCase();\r\n        this.schemes[id] = scheme;\r\n    }\r\n    /**\r\n     * Register a custom scheme\r\n     *\r\n     * @example\r\n     * // Create a class with a `atomColor` method that returns a hex color.\r\n     * var schemeId = NGL.ColormakerRegistry.addScheme( function( params ){\r\n     *     this.atomColor = function( atom ){\r\n     *         if( atom.serial < 1000 ){\r\n     *             return 0x0000FF;  // blue\r\n     *         }else if( atom.serial > 2000 ){\r\n     *             return 0xFF0000;  // red\r\n     *         }else{\r\n     *             return 0x00FF00;  // green\r\n     *         }\r\n     *     };\r\n     * } );\r\n     *\r\n     * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n     *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n     *     o.autoView();\r\n     * } );\r\n     *\r\n     * @param {Function|Colormaker} scheme - constructor or {@link Colormaker} instance\r\n     * @param {String} label - scheme label\r\n     * @return {String} id to refer to the registered scheme\r\n     */\r\n    addScheme(scheme, label) {\r\n        if (!(scheme instanceof Colormaker)) {\r\n            scheme = this._createScheme(scheme);\r\n        }\r\n        return this._addUserScheme(scheme, label);\r\n    }\r\n    /**\r\n     * Add a user-defined scheme\r\n     * @param {Colormaker} scheme - the user-defined scheme\r\n     * @param {String} [label] - scheme label\r\n     * @return {String} id to refer to the registered scheme\r\n     */\r\n    _addUserScheme(scheme, label) {\r\n        label = label || '';\r\n        const id = `${generateUUID()}|${label}`.toLowerCase();\r\n        this.userSchemes[id] = scheme;\r\n        return id;\r\n    }\r\n    /**\r\n     * Remove the scheme with the given id\r\n     * @param  {String} id - scheme to remove\r\n     * @return {undefined}\r\n     */\r\n    removeScheme(id) {\r\n        id = id.toLowerCase();\r\n        delete this.userSchemes[id];\r\n    }\r\n    _createScheme(constructor) {\r\n        const _Colormaker = function (params) {\r\n            Colormaker.call(this, params);\r\n            constructor.call(this, params);\r\n        };\r\n        _Colormaker.prototype = Colormaker.prototype;\r\n        _Colormaker.prototype.constructor = Colormaker;\r\n        return _Colormaker;\r\n    }\r\n    /**\r\n     * Create and a selection-based coloring scheme. Supply a list with pairs\r\n     * of colorname and selection for coloring by selections. Use the last\r\n     * entry as a default (catch all) coloring definition.\r\n     *\r\n     * @example\r\n     * var schemeId = NGL.ColormakerRegistry.addSelectionScheme( [\r\n     *     [ \"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\" ],\r\n     *     [ \"green\", \"311-322\" ],\r\n     *     [ \"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\" ],\r\n     *     [ \"blue\", \"1-39 or 96-112 or 174-201 or 278-288\" ],\r\n     *     [ \"white\", \"*\" ]\r\n     * ], \"Transmembrane 3dqb\" );\r\n     *\r\n     * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n     *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n     *     o.autoView();\r\n     * } );\r\n     *\r\n     * @param {Array} dataList - cloror-selection pairs\r\n     * @param {String} label - scheme name\r\n     * @return {String} id to refer to the registered scheme\r\n     */\r\n    addSelectionScheme(dataList, label) {\r\n        class MySelectionColormaker extends SelectionColormaker {\r\n            constructor(params) {\r\n                super(Object.assign({ dataList }, params));\r\n            }\r\n        }\r\n        return this._addUserScheme(MySelectionColormaker, label);\r\n    }\r\n    /**\r\n     * Check if a scheme with the given id exists\r\n     * @param  {String}  id - the id to check\r\n     * @return {Boolean} flag indicating if the scheme exists\r\n     */\r\n    hasScheme(id) {\r\n        id = id.toLowerCase();\r\n        return id in this.schemes || id in this.userSchemes;\r\n    }\r\n}\r\nexport default ColormakerRegistry;\r\n//# sourceMappingURL=colormaker-registry.js.map","/**\r\n * @file Parser Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Registry from '../utils/registry';\r\nclass ParserRegistry extends Registry {\r\n    constructor() {\r\n        super('parser');\r\n    }\r\n    __hasObjName(key, objName) {\r\n        const parser = this.get(key);\r\n        return parser && parser.prototype.__objName === objName;\r\n    }\r\n    isTrajectory(key) {\r\n        return this.__hasObjName(key, 'frames');\r\n    }\r\n    isStructure(key) {\r\n        return this.__hasObjName(key, 'structure');\r\n    }\r\n    isVolume(key) {\r\n        return this.__hasObjName(key, 'volume');\r\n    }\r\n    isSurface(key) {\r\n        return this.__hasObjName(key, 'surface');\r\n    }\r\n    isBinary(key) {\r\n        const parser = this.get(key);\r\n        return parser && parser.prototype.isBinary;\r\n    }\r\n    isXml(key) {\r\n        const parser = this.get(key);\r\n        return parser && parser.prototype.isXml;\r\n    }\r\n    isJson(key) {\r\n        const parser = this.get(key);\r\n        return parser && parser.prototype.isJson;\r\n    }\r\n    getTrajectoryExtensions() {\r\n        return this.names.filter(name => this.isTrajectory(name));\r\n    }\r\n    getStructureExtensions() {\r\n        return this.names.filter(name => this.isStructure(name));\r\n    }\r\n    getVolumeExtensions() {\r\n        return this.names.filter(name => this.isVolume(name));\r\n    }\r\n    getSurfaceExtensions() {\r\n        return this.names.filter(name => this.isSurface(name));\r\n    }\r\n}\r\nexport default ParserRegistry;\r\n//# sourceMappingURL=parser-registry.js.map","/**\r\n * @file Worker Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { uniqueArray } from '../utils';\r\nfunction getWorkerDeps(vars) {\r\n    const deps = vars;\r\n    vars.forEach(function (sym) {\r\n        if (sym.__deps) {\r\n            Array.prototype.push.apply(deps, getWorkerDeps(sym.__deps));\r\n        }\r\n    });\r\n    return deps;\r\n}\r\nfunction makeWorkerString(vars) {\r\n    const deps = uniqueArray(getWorkerDeps(vars));\r\n    return deps.map(function (sym) {\r\n        return sym.toString();\r\n    }).join('\\n\\n\\n');\r\n}\r\nfunction onmessage(e) {\r\n    const name = e.data.__name;\r\n    const postId = e.data.__postId;\r\n    /* global self */\r\n    if (name === undefined) {\r\n        console.error('message __name undefined');\r\n    }\r\n    else if (self.func === undefined) {\r\n        console.error('worker func undefined', name);\r\n    }\r\n    else {\r\n        const callback = function (aMessage, transferList) {\r\n            aMessage = aMessage || {};\r\n            if (postId !== undefined)\r\n                aMessage.__postId = postId;\r\n            try {\r\n                self.postMessage(aMessage, transferList);\r\n            }\r\n            catch (error) {\r\n                console.error('self.postMessage:', error);\r\n                self.postMessage(aMessage);\r\n            }\r\n        };\r\n        self.func(e, callback);\r\n    }\r\n}\r\nexport function makeWorkerBlob(func, deps) {\r\n    let str = \"'use strict';\\n\\n\" + makeWorkerString(deps);\r\n    str += '\\n\\n\\nself.func = ' + func.toString() + ';';\r\n    str += '\\n\\n\\nself.onmessage = ' + onmessage.toString() + ';';\r\n    // console.log(str);\r\n    return new Blob([str], { type: 'application/javascript' });\r\n}\r\n//# sourceMappingURL=worker-utils.js.map","/**\r\n * @file Worker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { makeWorkerBlob } from './worker-utils';\r\nclass WorkerRegistry {\r\n    constructor() {\r\n        this.activeWorkerCount = 0;\r\n        this._funcDict = {};\r\n        this._depsDict = {};\r\n        this._blobDict = {};\r\n    }\r\n    add(name, func, deps) {\r\n        this._funcDict[name] = func;\r\n        this._depsDict[name] = deps;\r\n    }\r\n    get(name) {\r\n        if (!this._blobDict[name]) {\r\n            this._blobDict[name] = makeWorkerBlob(this._funcDict[name], this._depsDict[name]);\r\n        }\r\n        return this._blobDict[name];\r\n    }\r\n}\r\nexport default WorkerRegistry;\r\n//# sourceMappingURL=worker-registry.js.map","/**\r\n * @file Globals\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { getBrowser, getQuery, boolean } from './utils';\r\nimport Registry from './utils/registry';\r\nimport _ColormakerRegistry from './color/colormaker-registry';\r\nimport _ParserRegistry from './parser/parser-registry';\r\nimport _WorkerRegistry from './worker/worker-registry';\r\n/**\r\n * The browser name: \"Opera\", \"Chrome\", \"Firefox\", \"Mobile Safari\",\r\n * \"Internet Explorer\", \"Safari\" or false.\r\n */\r\nexport const Browser = getBrowser();\r\n/**\r\n * Flag indicating support for the 'passive' option for event handler\r\n */\r\nexport let SupportsPassiveEventHandler = false;\r\ntry {\r\n    // Test via a getter in the options object to see if the passive property is accessed\r\n    const opts = Object.defineProperty({}, 'passive', {\r\n        get: function () {\r\n            SupportsPassiveEventHandler = true;\r\n        }\r\n    });\r\n    window.addEventListener('test', e => { }, opts);\r\n}\r\ncatch (e) { }\r\n/**\r\n * Flag indicating a mobile browser\r\n */\r\nexport const Mobile = typeof window !== 'undefined' ? typeof window.orientation !== 'undefined' : false;\r\nexport let SupportsReadPixelsFloat = false;\r\nexport function setSupportsReadPixelsFloat(value) {\r\n    SupportsReadPixelsFloat = value;\r\n}\r\n/**\r\n * Flag indicating support for the `EXT_frag_depth` WebGL extension\r\n * (Always present in WebGL2)\r\n */\r\nexport let ExtensionFragDepth = false;\r\nexport function setExtensionFragDepth(value) {\r\n    ExtensionFragDepth = value;\r\n}\r\nexport const Log = {\r\n    log: Function.prototype.bind.call(console.log, console),\r\n    info: Function.prototype.bind.call(console.info, console),\r\n    warn: Function.prototype.bind.call(console.warn, console),\r\n    error: Function.prototype.bind.call(console.error, console),\r\n    time: Function.prototype.bind.call(console.time, console),\r\n    timeEnd: Function.prototype.bind.call(console.timeEnd, console)\r\n};\r\nexport let MeasurementDefaultParams = {\r\n    color: 'green',\r\n    labelColor: 0x808080,\r\n    labelAttachment: 'bottom-center',\r\n    labelSize: 0.7,\r\n    labelZOffset: 0.5,\r\n    labelYOffset: 0.1,\r\n    labelBorder: true,\r\n    labelBorderColor: 0xd3d3d3,\r\n    labelBorderWidth: 0.25,\r\n    lineOpacity: 0.8,\r\n    linewidth: 5.0,\r\n    opacity: 0.6,\r\n    labelUnit: 'angstrom',\r\n    arcVisible: true,\r\n    planeVisible: false\r\n};\r\nexport function setMeasurementDefaultParams(params = {}) {\r\n    Object.assign(MeasurementDefaultParams, params);\r\n}\r\nexport let Debug = boolean(getQuery('debug'));\r\nexport function setDebug(value) {\r\n    Debug = value;\r\n}\r\nexport const WebglErrorMessage = '<div style=\"display:flex;align-items:center;justify-content:center;height:100%;\"><p style=\"padding:15px;text-align:center;\">Your browser/graphics card does not seem to support <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/WebGL\">WebGL</a>.<br/><br/>Find out how to get it <a target=\"_blank\" href=\"http://get.webgl.org/\">here</a>.</p></div>';\r\n/**\r\n * List of file extensions to be recognized as scripts\r\n */\r\nexport const ScriptExtensions = ['ngl', 'js'];\r\nexport const WorkerRegistry = new _WorkerRegistry();\r\nexport const ColormakerRegistry = new _ColormakerRegistry();\r\nexport const DatasourceRegistry = new Registry('datasource');\r\nexport const RepresentationRegistry = new Registry('representatation');\r\nexport const ParserRegistry = new _ParserRegistry();\r\nexport const ShaderRegistry = new Registry('shader');\r\nexport const DecompressorRegistry = new Registry('decompressor');\r\nexport const ComponentRegistry = new Registry('component');\r\nexport const BufferRegistry = new Registry('buffer');\r\nexport const PickerRegistry = new Registry('picker');\r\nexport let ListingDatasource;\r\nexport function setListingDatasource(value) {\r\n    ListingDatasource = value;\r\n}\r\nexport let TrajectoryDatasource;\r\nexport function setTrajectoryDatasource(value) {\r\n    TrajectoryDatasource = value;\r\n}\r\n//# sourceMappingURL=globals.js.map","/**\r\n * @file Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { DecompressorRegistry } from '../globals';\r\nimport { uint8ToString, defaults } from '../utils';\r\nclass Streamer {\r\n    constructor(src, params = {}) {\r\n        this.chunkSize = 1024 * 1024 * 10;\r\n        this.newline = '\\n';\r\n        this.__pointer = 0;\r\n        this.__partialLine = '';\r\n        this.compressed = defaults(params.compressed, false);\r\n        this.binary = defaults(params.binary, false);\r\n        this.json = defaults(params.json, false);\r\n        this.xml = defaults(params.xml, false);\r\n        this.src = src;\r\n    }\r\n    isBinary() {\r\n        return this.binary || this.compressed;\r\n    }\r\n    read() {\r\n        return this._read().then(data => {\r\n            const decompressFn = this.compressed ? DecompressorRegistry.get(this.compressed) : undefined;\r\n            if (this.compressed && decompressFn) {\r\n                this.data = decompressFn(data);\r\n            }\r\n            else {\r\n                if ((this.binary || this.compressed) && data instanceof ArrayBuffer) {\r\n                    data = new Uint8Array(data);\r\n                }\r\n                this.data = data;\r\n            }\r\n            return this.data;\r\n        });\r\n    }\r\n    _chunk(start, end) {\r\n        end = Math.min(this.data.length, end);\r\n        if (start === 0 && this.data.length === end) {\r\n            return this.data;\r\n        }\r\n        else {\r\n            if (this.isBinary()) {\r\n                return this.data.subarray(start, end);\r\n            }\r\n            else {\r\n                return this.data.substring(start, end);\r\n            }\r\n        }\r\n    }\r\n    chunk(start) {\r\n        const end = start + this.chunkSize;\r\n        return this._chunk(start, end);\r\n    }\r\n    peekLines(m) {\r\n        const data = this.data;\r\n        const n = data.length;\r\n        // FIXME does not work for multi-char newline\r\n        const newline = this.isBinary() ? this.newline.charCodeAt(0) : this.newline;\r\n        let i;\r\n        let count = 0;\r\n        for (i = 0; i < n; ++i) {\r\n            if (data[i] === newline)\r\n                ++count;\r\n            if (count === m)\r\n                break;\r\n        }\r\n        const chunk = this._chunk(0, i + 1);\r\n        const d = this.chunkToLines(chunk, '', i > n);\r\n        return d.lines;\r\n    }\r\n    chunkCount() {\r\n        return Math.floor(this.data.length / this.chunkSize) + 1;\r\n    }\r\n    asText() {\r\n        return this.isBinary() ? uint8ToString(this.data) : this.data;\r\n    }\r\n    chunkToLines(chunk, partialLine, isLast) {\r\n        const newline = this.newline;\r\n        if (!this.isBinary() && chunk.length === this.data.length) {\r\n            return {\r\n                lines: chunk.split(newline),\r\n                partialLine: ''\r\n            };\r\n        }\r\n        let lines = [];\r\n        const str = this.isBinary() ? uint8ToString(chunk) : chunk;\r\n        const idx = str.lastIndexOf(newline);\r\n        if (idx === -1) {\r\n            partialLine += str;\r\n        }\r\n        else {\r\n            const str2 = partialLine + str.substr(0, idx);\r\n            lines = lines.concat(str2.split(newline));\r\n            if (idx === str.length - newline.length) {\r\n                partialLine = '';\r\n            }\r\n            else {\r\n                partialLine = str.substr(idx + newline.length);\r\n            }\r\n        }\r\n        if (isLast && partialLine !== '') {\r\n            lines.push(partialLine);\r\n        }\r\n        return {\r\n            lines: lines,\r\n            partialLine: partialLine\r\n        };\r\n    }\r\n    nextChunk() {\r\n        const start = this.__pointer;\r\n        if (start > this.data.length) {\r\n            return undefined;\r\n        }\r\n        this.__pointer += this.chunkSize;\r\n        return this.chunk(start);\r\n    }\r\n    nextChunkOfLines() {\r\n        const chunk = this.nextChunk();\r\n        if (chunk === undefined) {\r\n            return undefined;\r\n        }\r\n        const isLast = this.__pointer > this.data.length;\r\n        const d = this.chunkToLines(chunk, this.__partialLine, isLast);\r\n        this.__partialLine = d.partialLine;\r\n        return d.lines;\r\n    }\r\n    eachChunk(callback) {\r\n        const chunkSize = this.chunkSize;\r\n        const n = this.data.length;\r\n        const chunkCount = this.chunkCount();\r\n        for (let i = 0; i < n; i += chunkSize) {\r\n            const chunk = this.chunk(i);\r\n            const chunkNo = Math.round(i / chunkSize);\r\n            callback(chunk, chunkNo, chunkCount);\r\n        }\r\n    }\r\n    eachChunkOfLines(callback) {\r\n        this.eachChunk((chunk, chunkNo, chunkCount) => {\r\n            const isLast = chunkNo === chunkCount + 1;\r\n            const d = this.chunkToLines(chunk, this.__partialLine, isLast);\r\n            this.__partialLine = d.partialLine;\r\n            callback(d.lines, chunkNo, chunkCount);\r\n        });\r\n    }\r\n    dispose() {\r\n        delete this.src;\r\n    }\r\n}\r\nexport default Streamer;\r\n//# sourceMappingURL=streamer.js.map","/**\r\n * @file File Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Streamer from './streamer';\r\nclass FileStreamer extends Streamer {\r\n    _read() {\r\n        return new Promise((resolve, reject) => {\r\n            const file = this.src;\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n                if (event.target)\r\n                    resolve(event.target.result);\r\n            };\r\n            // if (typeof this.onprogress === 'function') {\r\n            //   reader.onprogress = event => this.onprogress(event)\r\n            // }\r\n            reader.onerror = event => reject(event);\r\n            if (this.binary || this.compressed) {\r\n                reader.readAsArrayBuffer(file);\r\n            }\r\n            else {\r\n                reader.readAsText(file);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default FileStreamer;\r\n//# sourceMappingURL=file-streamer.js.map","/**\r\n * @file Network Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Streamer from './streamer';\r\nclass NetworkStreamer extends Streamer {\r\n    _read() {\r\n        return new Promise((resolve, reject) => {\r\n            const url = this.src;\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, true);\r\n            xhr.addEventListener('load', () => {\r\n                if (xhr.status === 200 || xhr.status === 304 ||\r\n                    // when requesting from local file system\r\n                    // the status in Google Chrome/Chromium is 0\r\n                    xhr.status === 0) {\r\n                    try {\r\n                        resolve(xhr.response);\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }\r\n                else {\r\n                    reject(xhr.statusText);\r\n                }\r\n            }, false);\r\n            // if (typeof this.onprogress === 'function') {\r\n            //   xhr.addEventListener('progress', event => this.onprogress(event), false);\r\n            // }\r\n            xhr.addEventListener('error', event => reject('network error'), false);\r\n            if (this.isBinary()) {\r\n                xhr.responseType = 'arraybuffer';\r\n            }\r\n            else if (this.json) {\r\n                xhr.responseType = 'json';\r\n            }\r\n            else if (this.xml) {\r\n                xhr.responseType = 'document';\r\n            }\r\n            else {\r\n                xhr.responseType = 'text';\r\n            }\r\n            // xhr.crossOrigin = true;\r\n            xhr.send();\r\n        });\r\n    }\r\n}\r\nexport default NetworkStreamer;\r\n//# sourceMappingURL=network-streamer.js.map","/**\r\n * @file Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport { createParams } from '../utils';\r\nimport FileStreamer from '../streamer/file-streamer';\r\nimport NetworkStreamer from '../streamer/network-streamer';\r\n/**\r\n * Loader parameter object.\r\n * @typedef {Object} LoaderParameters - loader parameters\r\n * @property {String} ext - file extension, determines file type\r\n * @property {Boolean} compressed - flag data as compressed\r\n * @property {Boolean} binary - flag data as binary\r\n * @property {String} name - set data name\r\n */\r\n/**\r\n * Loader base class\r\n */\r\nclass Loader {\r\n    /**\r\n     * Construct a loader object\r\n     * @param  {String|File|Blob} src - data source, string is interpreted as an URL\r\n     * @param  {LoaderParameters} params - parameters object\r\n     */\r\n    constructor(src, params = {}) {\r\n        this.parameters = createParams(params, {\r\n            ext: '',\r\n            compressed: false,\r\n            binary: ParserRegistry.isBinary(params.ext || ''),\r\n            name: '',\r\n            dir: '',\r\n            path: '',\r\n            protocol: ''\r\n        });\r\n        const streamerParams = {\r\n            compressed: this.parameters.compressed,\r\n            binary: this.parameters.binary,\r\n            json: ParserRegistry.isJson(this.parameters.ext),\r\n            xml: ParserRegistry.isXml(this.parameters.ext)\r\n        };\r\n        if ((typeof File !== 'undefined' && src instanceof File) ||\r\n            (typeof Blob !== 'undefined' && src instanceof Blob)) {\r\n            this.streamer = new FileStreamer(src, streamerParams);\r\n        }\r\n        else {\r\n            this.streamer = new NetworkStreamer(src, streamerParams);\r\n        }\r\n    }\r\n}\r\nexport default Loader;\r\n//# sourceMappingURL=loader.js.map","/**\r\n * @file Parser Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport Loader from './loader';\r\n/**\r\n * Parser loader class\r\n * @extends Loader\r\n */\r\nclass ParserLoader extends Loader {\r\n    constructor(src, params = {}) {\r\n        super(src, params);\r\n        this.parserParams = {\r\n            voxelSize: params.voxelSize,\r\n            firstModelOnly: params.firstModelOnly,\r\n            asTrajectory: params.asTrajectory,\r\n            cAlphaOnly: params.cAlphaOnly,\r\n            name: this.parameters.name,\r\n            path: this.parameters.path\r\n        };\r\n    }\r\n    /**\r\n     * Load parsed object\r\n     * @return {Promise} resolves to the loaded & parsed {@link Structure},\r\n     *                   {@link Volume}, {@link Surface} or data object\r\n     */\r\n    load() {\r\n        var ParserClass = ParserRegistry.get(this.parameters.ext);\r\n        var parser = new ParserClass(this.streamer, this.parserParams);\r\n        return parser.parse();\r\n    }\r\n}\r\nexport default ParserLoader;\r\n//# sourceMappingURL=parser-loader.js.map","/**\r\n * @file Script\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { Log } from './globals';\r\n/**\r\n * Script class\r\n */\r\nclass Script {\r\n    /**\r\n     * Create a script instance\r\n     * @param {String} functionBody - the function source\r\n     * @param {String} name - name of the script\r\n     * @param {String} path - path of the script\r\n     */\r\n    constructor(functionBody, name, path) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.signals = {\r\n            elementAdded: new Signal(),\r\n            elementRemoved: new Signal(),\r\n            nameChanged: new Signal()\r\n        };\r\n        this.type = 'Script';\r\n        this.dir = path.substring(0, path.lastIndexOf('/') + 1);\r\n        try {\r\n            /* eslint-disable no-new-func */\r\n            this.fn = new Function('stage', '__name', '__path', '__dir', functionBody);\r\n        }\r\n        catch (e) {\r\n            Log.error('Script compilation failed', e);\r\n            this.fn = function () { };\r\n        }\r\n    }\r\n    /**\r\n     * Execute the script\r\n     * @param  {Stage} stage - the stage context\r\n     * @return {Promise} - resolve when script finished running\r\n     */\r\n    run(stage) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.fn.apply(null, [stage, this.name, this.path, this.dir]);\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                Log.error('Script.fn', e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default Script;\r\n//# sourceMappingURL=script.js.map","/**\r\n * @file Script Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Loader from './loader';\r\nimport Script from '../script';\r\n/**\r\n * Script loader class\r\n * @extends Loader\r\n */\r\nclass ScriptLoader extends Loader {\r\n    /**\r\n     * Load script\r\n     * @return {Promise} resolves to the loaded {@link Script}\r\n     */\r\n    load() {\r\n        return this.streamer.read().then(() => {\r\n            return new Script(this.streamer.asText(), this.parameters.name, this.parameters.path);\r\n        });\r\n    }\r\n}\r\nexport default ScriptLoader;\r\n//# sourceMappingURL=script-loader.js.map","/**\r\n * @file Loader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { DatasourceRegistry, DecompressorRegistry, ParserRegistry, ScriptExtensions } from '../globals';\r\nimport ParserLoader from './parser-loader';\r\nimport ScriptLoader from './script-loader';\r\nexport function getFileInfo(file) {\r\n    const compressedExtList = DecompressorRegistry.names;\r\n    let path;\r\n    let compressed;\r\n    let protocol = '';\r\n    if (file instanceof File) {\r\n        path = file.name;\r\n    }\r\n    else if (file instanceof Blob) {\r\n        path = '';\r\n    }\r\n    else {\r\n        path = file;\r\n    }\r\n    const queryIndex = path.lastIndexOf('?');\r\n    const query = queryIndex !== -1 ? path.substring(queryIndex) : '';\r\n    path = path.substring(0, queryIndex === -1 ? path.length : queryIndex);\r\n    const name = path.replace(/^.*[\\\\/]/, '');\r\n    let base = name.substring(0, name.lastIndexOf('.'));\r\n    const nameSplit = name.split('.');\r\n    let ext = nameSplit.length > 1 ? (nameSplit.pop() || '').toLowerCase() : '';\r\n    const protocolMatch = path.match(/^(.+):\\/\\/(.+)$/);\r\n    if (protocolMatch) {\r\n        protocol = protocolMatch[1].toLowerCase();\r\n        path = protocolMatch[2] || '';\r\n    }\r\n    const dir = path.substring(0, path.lastIndexOf('/') + 1);\r\n    if (compressedExtList.includes(ext)) {\r\n        compressed = ext;\r\n        const n = path.length - ext.length - 1;\r\n        ext = (path.substr(0, n).split('.').pop() || '').toLowerCase();\r\n        const m = base.length - ext.length - 1;\r\n        base = base.substr(0, m);\r\n    }\r\n    else {\r\n        compressed = false;\r\n    }\r\n    return { path, name, ext, base, dir, compressed, protocol, query, 'src': file };\r\n}\r\nexport function getDataInfo(src) {\r\n    let info = getFileInfo(src);\r\n    const datasource = DatasourceRegistry.get(info.protocol);\r\n    if (datasource) {\r\n        info = getFileInfo(datasource.getUrl(info.src));\r\n        if (!info.ext && datasource.getExt) {\r\n            info.ext = datasource.getExt(src);\r\n        }\r\n    }\r\n    return info;\r\n}\r\n/**\r\n * Load a file\r\n *\r\n * @example\r\n * // load from URL\r\n * NGL.autoLoad( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n *\r\n * @example\r\n * // load binary data in CCP4 format via a Blob\r\n * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n * NGL.autoLoad( binaryBlob, { ext: \"ccp4\" } );\r\n *\r\n * @example\r\n * // load string data in PDB format via a Blob\r\n * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n * NGL.autoLoad( stringBlob, { ext: \"pdb\" } );\r\n *\r\n * @example\r\n * // load a File object\r\n * NGL.autoLoad( file );\r\n *\r\n * @param  {String|File|Blob} file - either a URL or an object containing the file data\r\n * @param  {LoaderParameters} params - loading parameters\r\n * @return {Promise} Promise resolves to the loaded data\r\n */\r\nexport function autoLoad(file, params = {}) {\r\n    const p = Object.assign(getDataInfo(file), params);\r\n    let loader;\r\n    if (ParserRegistry.names.includes(p.ext)) {\r\n        loader = new ParserLoader(p.src, p);\r\n    }\r\n    else if (ScriptExtensions.includes(p.ext)) {\r\n        loader = new ScriptLoader(p.src, p);\r\n    }\r\n    if (loader) {\r\n        return loader.load();\r\n    }\r\n    else {\r\n        return Promise.reject(new Error(`autoLoad: ext '${p.ext}' unknown`));\r\n    }\r\n}\r\n//# sourceMappingURL=loader-utils.js.map","/**\r\n * @file Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults, download } from '../utils';\r\n/**\r\n * Base class for writers\r\n * @interface\r\n */\r\nclass Writer {\r\n    /**\r\n     * Get a blob with the written data\r\n     * @return {Blob} the blob\r\n     */\r\n    getBlob() {\r\n        return new Blob([this.getData()], { type: this.mimeType });\r\n    }\r\n    /**\r\n     * Trigger a download of the\r\n     * @param  {[type]} name [description]\r\n     * @param  {[type]} ext  [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    download(name, ext) {\r\n        name = defaults(name, this.defaultName);\r\n        ext = defaults(ext, this.defaultExt);\r\n        download(this.getBlob(), `${name}.${ext}`);\r\n    }\r\n}\r\nexport default Writer;\r\n//# sourceMappingURL=writer.js.map","/**\r\n * @file Pdb Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { sprintf } from 'sprintf-js';\r\nimport Writer from './writer';\r\nimport { defaults, ensureArray } from '../utils';\r\n// http://www.wwpdb.org/documentation/file-format\r\n// Sample PDB line, the coords X,Y,Z are fields 5,6,7 on each line.\r\n// ATOM      1  N   ARG     1      29.292  13.212 -12.751  1.00 33.78      1BPT 108\r\nconst AtomFormat = 'ATOM  %5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s';\r\nconst HetatmFormat = 'HETATM%5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s';\r\n/**\r\n * Create a PDB file from a Structure object\r\n */\r\nexport default class PdbWriter extends Writer {\r\n    /**\r\n     * @param  {Structure} structure - the structure object\r\n     * @param  {Object} params - parameters]\r\n     */\r\n    constructor(structure, params) {\r\n        super();\r\n        this.mimeType = 'text/plain';\r\n        this.defaultName = 'structure';\r\n        this.defaultExt = 'pdb';\r\n        const p = Object.assign({}, params);\r\n        this.renumberSerial = defaults(p.renumberSerial, true);\r\n        this.remarks = ensureArray(defaults(p.remarks, []));\r\n        this.structure = structure;\r\n        this._records = [];\r\n    }\r\n    _writeRecords() {\r\n        this._records.length = 0;\r\n        this._writeTitle();\r\n        this._writeRemarks();\r\n        this._writeAtoms();\r\n    }\r\n    _writeTitle() {\r\n        // FIXME multiline if title line longer than 80 chars\r\n        this._records.push(sprintf('TITLE %-74s', this.structure.name));\r\n    }\r\n    _writeRemarks() {\r\n        this.remarks.forEach(str => {\r\n            this._records.push(sprintf('REMARK %-73s', str));\r\n        });\r\n        if (this.structure.trajectory) {\r\n            this._records.push(sprintf('REMARK %-73s', \"Trajectory '\" + this.structure.trajectory.name + \"'\"));\r\n            this._records.push(sprintf('REMARK %-73s', `Frame ${this.structure.trajectory.frame}` // TODO\r\n            ));\r\n        }\r\n    }\r\n    _writeAtoms() {\r\n        let ia = 1;\r\n        let im = 1;\r\n        this.structure.eachModel(m => {\r\n            this._records.push(sprintf('MODEL %-74d', im++));\r\n            m.eachAtom((a) => {\r\n                const formatString = a.hetero ? HetatmFormat : AtomFormat;\r\n                const serial = this.renumberSerial ? ia : a.serial;\r\n                // Alignment of one-letter atom name such as C starts at column 14,\r\n                // while two-letter atom name such as FE starts at column 13.\r\n                let atomname = a.atomname;\r\n                if (atomname.length === 1)\r\n                    atomname = ' ' + atomname;\r\n                this._records.push(sprintf(formatString, serial, atomname, a.resname, defaults(a.chainname, ' '), a.resno, a.x, a.y, a.z, defaults(a.occupancy, 1.0), defaults(a.bfactor, 0.0), '', // segid\r\n                defaults(a.element, '')));\r\n                ia += 1;\r\n            });\r\n            this._records.push(sprintf('%-80s', 'ENDMDL'));\r\n            im += 1;\r\n        });\r\n        this._records.push(sprintf('%-80s', 'END'));\r\n    }\r\n    getString() {\r\n        console.warn('PdbWriter.getString() is deprecated, use .getData instead');\r\n        return this.getData();\r\n    }\r\n    /**\r\n     * Get string containing the PDB file data\r\n     * @return {String} PDB file\r\n     */\r\n    getData() {\r\n        this._writeRecords();\r\n        return this._records.join('\\n');\r\n    }\r\n}\r\n//# sourceMappingURL=pdb-writer.js.map","/**\r\n * Writer class for sdf/mol files.\r\n */\r\nimport { sprintf } from 'sprintf-js';\r\nimport Writer from './writer.js';\r\n// Hard-coded chiral as false as we don't specify it any atoms\r\nconst CountFormat = '%3i%3i  0  0  0  0  0  0  0  0999 V2000';\r\nconst AtomLine = '%10.4f%10.4f%10.4f %-3s 0%3i  0  0  0';\r\nconst BondFormat = '%3i%3i%3i  0  0  0';\r\nclass SdfWriter extends Writer {\r\n    /**\r\n     * @param {Structure} structure - structure to write\r\n     * @param {Object} params - parameters\r\n     */\r\n    constructor(structure) {\r\n        super();\r\n        this.mimeType = 'text/plain';\r\n        this.defaultName = 'structure';\r\n        this.defaultExt = 'sdf';\r\n        this.structure = structure;\r\n        // Follow the pdb-writer example:\r\n        this._records = [];\r\n    }\r\n    get idString() {\r\n        return this.structure.id;\r\n    }\r\n    get titleString() {\r\n        return '  ' + this.structure.title;\r\n    }\r\n    get countsString() {\r\n        return sprintf(CountFormat, this.structure.atomCount, this.structure.bondCount);\r\n    }\r\n    get chargeLines() {\r\n        const pairs = [];\r\n        this.structure.eachAtom(ap => {\r\n            if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n                pairs.push([ap.index, ap.formalCharge]);\r\n            }\r\n        });\r\n        const lines = [];\r\n        for (let i = 0; i < pairs.length; i += 8) {\r\n            const nCharges = Math.min(8, pairs.length - i);\r\n            let s = sprintf('M  CHG%3i', nCharges);\r\n            for (let j = i; j < i + nCharges; j++) {\r\n                s += sprintf(' %3i %3i', pairs[j][0] + 1, pairs[j][1]);\r\n            }\r\n            lines.push(s);\r\n        }\r\n        return lines;\r\n    }\r\n    formatAtom(ap) {\r\n        let charge = 0;\r\n        if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n            charge = 4 - ap.formalCharge;\r\n        }\r\n        const line = sprintf(AtomLine, ap.x, ap.y, ap.z, ap.element, charge);\r\n        if (line.length !== 48) {\r\n            throw new Error('Incompatible atom for sdf format');\r\n        }\r\n        return line;\r\n    }\r\n    formatBond(bp) {\r\n        return sprintf(BondFormat, bp.atomIndex1 + 1, bp.atomIndex2 + 1, bp.bondOrder);\r\n    }\r\n    _writeRecords() {\r\n        this._records.length = 0;\r\n        this._writeHeader();\r\n        this._writeCTab();\r\n        this._writeFooter();\r\n    }\r\n    _writeHeader() {\r\n        this._records.push(this.idString, this.titleString, '');\r\n    }\r\n    _writeCTab() {\r\n        this._records.push(this.countsString);\r\n        this.structure.eachAtom(ap => {\r\n            this._records.push(this.formatAtom(ap));\r\n        });\r\n        this.structure.eachBond(bp => {\r\n            this._records.push(this.formatBond(bp));\r\n        });\r\n        this.chargeLines.forEach(line => {\r\n            this._records.push(line);\r\n        });\r\n        this._records.push('M  END');\r\n    }\r\n    _writeFooter() {\r\n        this._records.push('$$$$');\r\n    }\r\n    getData() {\r\n        this._writeRecords();\r\n        return this._records.join('\\n');\r\n    }\r\n}\r\nexport default SdfWriter;\r\n//# sourceMappingURL=sdf-writer.js.map","/**\r\n * @file IO Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted and converted to TypeScript from https://github.com/image-js/iobuffer\r\n * MIT License, Copyright (c) 2015 Michaël Zasso\r\n */\r\nconst defaultByteLength = 1024 * 8;\r\nconst charArray = [];\r\n/**\r\n * Class for writing and reading binary data\r\n */\r\nclass IOBuffer {\r\n    /**\r\n     * If it's a number, it will initialize the buffer with the number as\r\n     * the buffer's length. If it's undefined, it will initialize the buffer\r\n     * with a default length of 8 Kb. If its an ArrayBuffer, a TypedArray,\r\n     * it will create a view over the underlying ArrayBuffer.\r\n     */\r\n    constructor(data, params = {}) {\r\n        this._mark = 0;\r\n        this._marks = [];\r\n        this.offset = 0; // The current offset of the buffer's pointer\r\n        this.littleEndian = true;\r\n        let dataIsGiven = false;\r\n        if (data === undefined) {\r\n            data = defaultByteLength;\r\n        }\r\n        if (typeof data === 'number') {\r\n            data = new ArrayBuffer(data);\r\n        }\r\n        else {\r\n            dataIsGiven = true;\r\n        }\r\n        const offset = params.offset ? params.offset >>> 0 : 0;\r\n        let byteLength = data.byteLength - offset;\r\n        let dvOffset = offset;\r\n        if (!(data instanceof ArrayBuffer)) {\r\n            if (data.byteLength !== data.buffer.byteLength) {\r\n                dvOffset = data.byteOffset + offset;\r\n            }\r\n            data = data.buffer;\r\n        }\r\n        if (dataIsGiven) {\r\n            this._lastWrittenByte = byteLength;\r\n        }\r\n        else {\r\n            this._lastWrittenByte = 0;\r\n        }\r\n        this.buffer = data;\r\n        this.length = byteLength;\r\n        this.byteLength = byteLength;\r\n        this.byteOffset = dvOffset;\r\n        this._data = new DataView(this.buffer, dvOffset, byteLength);\r\n    }\r\n    /**\r\n     * Checks if the memory allocated to the buffer is sufficient to store more bytes after the offset\r\n     * @param {number} [byteLength=1] The needed memory in bytes\r\n     * @return {boolean} Returns true if there is sufficient space and false otherwise\r\n     */\r\n    available(byteLength) {\r\n        if (byteLength === undefined)\r\n            byteLength = 1;\r\n        return (this.offset + byteLength) <= this.length;\r\n    }\r\n    /**\r\n     * Check if little-endian mode is used for reading and writing multi-byte values\r\n     * @return {boolean} Returns true if little-endian mode is used, false otherwise\r\n     */\r\n    isLittleEndian() {\r\n        return this.littleEndian;\r\n    }\r\n    /**\r\n     * Set little-endian mode for reading and writing multi-byte values\r\n     * @return {IOBuffer}\r\n     */\r\n    setLittleEndian() {\r\n        this.littleEndian = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Check if big-endian mode is used for reading and writing multi-byte values\r\n     * @return {boolean} Returns true if big-endian mode is used, false otherwise\r\n     */\r\n    isBigEndian() {\r\n        return !this.littleEndian;\r\n    }\r\n    /**\r\n     * Switches to big-endian mode for reading and writing multi-byte values\r\n     * @return {IOBuffer}\r\n     */\r\n    setBigEndian() {\r\n        this.littleEndian = false;\r\n        return this;\r\n    }\r\n    /**\r\n     * Move the pointer n bytes forward\r\n     * @param {number} n\r\n     * @return {IOBuffer}\r\n     */\r\n    skip(n) {\r\n        if (n === undefined)\r\n            n = 1;\r\n        this.offset += n;\r\n        return this;\r\n    }\r\n    /**\r\n     * Move the pointer to the given offset\r\n     * @param {number} offset\r\n     * @return {IOBuffer}\r\n     */\r\n    seek(offset) {\r\n        this.offset = offset;\r\n        return this;\r\n    }\r\n    /**\r\n     * Store the current pointer offset.\r\n     * @see {@link IOBuffer#reset}\r\n     * @return {IOBuffer}\r\n     */\r\n    mark() {\r\n        this._mark = this.offset;\r\n        return this;\r\n    }\r\n    /**\r\n     * Move the pointer back to the last pointer offset set by mark\r\n     * @see {@link IOBuffer#mark}\r\n     * @return {IOBuffer}\r\n     */\r\n    reset() {\r\n        this.offset = this._mark;\r\n        return this;\r\n    }\r\n    /**\r\n     * Push the current pointer offset to the mark stack\r\n     * @see {@link IOBuffer#popMark}\r\n     * @return {IOBuffer}\r\n     */\r\n    pushMark() {\r\n        this._marks.push(this.offset);\r\n        return this;\r\n    }\r\n    /**\r\n     * Pop the last pointer offset from the mark stack, and set the current pointer offset to the popped value\r\n     * @see {@link IOBuffer#pushMark}\r\n     * @return {IOBuffer}\r\n     */\r\n    popMark() {\r\n        const offset = this._marks.pop();\r\n        if (offset === undefined)\r\n            throw new Error('Mark stack empty');\r\n        this.seek(offset);\r\n        return this;\r\n    }\r\n    /**\r\n     * Move the pointer offset back to 0\r\n     * @return {IOBuffer}\r\n     */\r\n    rewind() {\r\n        this.offset = 0;\r\n        return this;\r\n    }\r\n    /**\r\n     * Make sure the buffer has sufficient memory to write a given byteLength at the current pointer offset\r\n     * If the buffer's memory is insufficient, this method will create a new buffer (a copy) with a length\r\n     * that is twice (byteLength + current offset)\r\n     * @param {number} [byteLength = 1]\r\n     * @return {IOBuffer}\r\n     */\r\n    ensureAvailable(byteLength) {\r\n        if (byteLength === undefined)\r\n            byteLength = 1;\r\n        if (!this.available(byteLength)) {\r\n            const lengthNeeded = this.offset + byteLength;\r\n            const newLength = lengthNeeded * 2;\r\n            const newArray = new Uint8Array(newLength);\r\n            newArray.set(new Uint8Array(this.buffer));\r\n            this.buffer = newArray.buffer;\r\n            this.length = this.byteLength = newLength;\r\n            this._data = new DataView(this.buffer);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Read a byte and return false if the byte's value is 0, or true otherwise\r\n     * Moves pointer forward\r\n     * @return {boolean}\r\n     */\r\n    readBoolean() {\r\n        return this.readUint8() !== 0;\r\n    }\r\n    /**\r\n     * Read a signed 8-bit integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readInt8() {\r\n        return this._data.getInt8(this.offset++);\r\n    }\r\n    /**\r\n     * Read an unsigned 8-bit integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readUint8() {\r\n        return this._data.getUint8(this.offset++);\r\n    }\r\n    /**\r\n     * Alias for {@link IOBuffer#readUint8}\r\n     * @return {number}\r\n     */\r\n    readByte() {\r\n        return this.readUint8();\r\n    }\r\n    /**\r\n     * Read n bytes and move pointer forward.\r\n     * @param {number} n\r\n     * @return {Uint8Array}\r\n     */\r\n    readBytes(n) {\r\n        if (n === undefined)\r\n            n = 1;\r\n        var bytes = new Uint8Array(n);\r\n        for (var i = 0; i < n; i++) {\r\n            bytes[i] = this.readByte();\r\n        }\r\n        return bytes;\r\n    }\r\n    /**\r\n     * Read a 16-bit signed integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readInt16() {\r\n        var value = this._data.getInt16(this.offset, this.littleEndian);\r\n        this.offset += 2;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read a 16-bit unsigned integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readUint16() {\r\n        var value = this._data.getUint16(this.offset, this.littleEndian);\r\n        this.offset += 2;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read a 32-bit signed integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readInt32() {\r\n        var value = this._data.getInt32(this.offset, this.littleEndian);\r\n        this.offset += 4;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read a 32-bit unsigned integer and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readUint32() {\r\n        var value = this._data.getUint32(this.offset, this.littleEndian);\r\n        this.offset += 4;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read a 32-bit floating number and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readFloat32() {\r\n        var value = this._data.getFloat32(this.offset, this.littleEndian);\r\n        this.offset += 4;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read a 64-bit floating number and move pointer forward\r\n     * @return {number}\r\n     */\r\n    readFloat64() {\r\n        var value = this._data.getFloat64(this.offset, this.littleEndian);\r\n        this.offset += 8;\r\n        return value;\r\n    }\r\n    /**\r\n     * Read 1-byte ascii character and move pointer forward\r\n     * @return {string}\r\n     */\r\n    readChar() {\r\n        return String.fromCharCode(this.readInt8());\r\n    }\r\n    /**\r\n     * Read n 1-byte ascii characters and move pointer forward\r\n     * @param {number} n\r\n     * @return {string}\r\n     */\r\n    readChars(n = 1) {\r\n        charArray.length = n;\r\n        for (var i = 0; i < n; i++) {\r\n            charArray[i] = this.readChar();\r\n        }\r\n        return charArray.join('');\r\n    }\r\n    /**\r\n     * Write 0xff if the passed value is truthy, 0x00 otherwise\r\n     * @param {any} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeBoolean(value = false) {\r\n        this.writeUint8(value ? 0xff : 0x00);\r\n        return this;\r\n    }\r\n    /**\r\n     * Write value as an 8-bit signed integer\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeInt8(value) {\r\n        this.ensureAvailable(1);\r\n        this._data.setInt8(this.offset++, value);\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write value as a 8-bit unsigned integer\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeUint8(value) {\r\n        this.ensureAvailable(1);\r\n        this._data.setUint8(this.offset++, value);\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * An alias for {@link IOBuffer#writeUint8}\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeByte(value) {\r\n        return this.writeUint8(value);\r\n    }\r\n    /**\r\n     * Write bytes\r\n     * @param {Array|Uint8Array} bytes\r\n     * @return {IOBuffer}\r\n     */\r\n    writeBytes(bytes) {\r\n        this.ensureAvailable(bytes.length);\r\n        for (var i = 0; i < bytes.length; i++) {\r\n            this._data.setUint8(this.offset++, bytes[i]);\r\n        }\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write value as an 16-bit signed integer\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeInt16(value) {\r\n        this.ensureAvailable(2);\r\n        this._data.setInt16(this.offset, value, this.littleEndian);\r\n        this.offset += 2;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write value as a 16-bit unsigned integer\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeUint16(value) {\r\n        this.ensureAvailable(2);\r\n        this._data.setUint16(this.offset, value, this.littleEndian);\r\n        this.offset += 2;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write a 32-bit signed integer at the current pointer offset\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeInt32(value) {\r\n        this.ensureAvailable(4);\r\n        this._data.setInt32(this.offset, value, this.littleEndian);\r\n        this.offset += 4;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write a 32-bit unsigned integer at the current pointer offset\r\n     * @param {number} value - The value to set\r\n     * @return {IOBuffer}\r\n     */\r\n    writeUint32(value) {\r\n        this.ensureAvailable(4);\r\n        this._data.setUint32(this.offset, value, this.littleEndian);\r\n        this.offset += 4;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write a 32-bit floating number at the current pointer offset\r\n     * @param {number} value - The value to set\r\n     * @return {IOBuffer}\r\n     */\r\n    writeFloat32(value) {\r\n        this.ensureAvailable(4);\r\n        this._data.setFloat32(this.offset, value, this.littleEndian);\r\n        this.offset += 4;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write a 64-bit floating number at the current pointer offset\r\n     * @param {number} value\r\n     * @return {IOBuffer}\r\n     */\r\n    writeFloat64(value) {\r\n        this.ensureAvailable(8);\r\n        this._data.setFloat64(this.offset, value, this.littleEndian);\r\n        this.offset += 8;\r\n        this._updateLastWrittenByte();\r\n        return this;\r\n    }\r\n    /**\r\n     * Write the charCode of the passed string's first character to the current pointer offset\r\n     * @param {string} str - The character to set\r\n     * @return {IOBuffer}\r\n     */\r\n    writeChar(str) {\r\n        return this.writeUint8(str.charCodeAt(0));\r\n    }\r\n    /**\r\n     * Write the charCodes of the passed string's characters to the current pointer offset\r\n     * @param {string} str\r\n     * @return {IOBuffer}\r\n     */\r\n    writeChars(str) {\r\n        for (var i = 0; i < str.length; i++) {\r\n            this.writeUint8(str.charCodeAt(i));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Export a Uint8Array view of the internal buffer.\r\n     * The view starts at the byte offset and its length\r\n     * is calculated to stop at the last written byte or the original length.\r\n     * @return {Uint8Array}\r\n     */\r\n    toArray() {\r\n        return new Uint8Array(this.buffer, this.byteOffset, this._lastWrittenByte);\r\n    }\r\n    /**\r\n     * Update the last written byte offset\r\n     * @private\r\n     */\r\n    _updateLastWrittenByte() {\r\n        if (this.offset > this._lastWrittenByte) {\r\n            this._lastWrittenByte = this.offset;\r\n        }\r\n    }\r\n}\r\nexport default IOBuffer;\r\n//# sourceMappingURL=io-buffer.js.map","/**\r\n * @file STL Writer\r\n * @author Paul Pillot <paul.pillot@cimf.ca>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport Writer from './writer';\r\nimport IOBuffer from '../utils/io-buffer';\r\n// https://en.wikipedia.org/wiki/STL_(file_format)#ASCII_STL\r\n/**\r\n * Create an STL File from a surface Object (e.g. for 3D printing)\r\n *\r\n * @example\r\n * molsurf = new MolecularSurface(structure)\r\n * surf = molsurf.getSurface({type: 'av', probeRadius: 1.4})\r\n * stl = new StlWriter(surf)\r\n * stl.download('myFileName')\r\n */\r\nexport default class StlWriter extends Writer {\r\n    /**\r\n     * @param {Surface} surface - the surface to write out\r\n     */\r\n    constructor(surface) {\r\n        super();\r\n        this.mimeType = 'application/vnd.ms-pki.stl';\r\n        this.defaultName = 'surface';\r\n        this.defaultExt = 'stl';\r\n        this.surface = surface;\r\n    }\r\n    /*\r\n     * Get STL Binary data\r\n     *\r\n     * Adapted from: https://github.com/mrdoob/three.js/blob/master/examples/js/exporters/STLBinaryExporter.js\r\n     * see https://en.wikipedia.org/wiki/STL_(file_format)#Binary_STL for the file format description\r\n     *\r\n     * @return {DataView} the data\r\n     */\r\n    getData() {\r\n        const triangles = this.surface.index.length / 3;\r\n        const bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4;\r\n        const output = new IOBuffer(bufferLength);\r\n        output.skip(80); // skip header\r\n        output.writeUint32(triangles);\r\n        const vector = new Vector3();\r\n        const vectorNorm1 = new Vector3();\r\n        const vectorNorm2 = new Vector3();\r\n        const vectorNorm3 = new Vector3();\r\n        // traversing vertices\r\n        for (let i = 0; i < triangles; i++) {\r\n            const indices = [\r\n                this.surface.index[i * 3],\r\n                this.surface.index[i * 3 + 1],\r\n                this.surface.index[i * 3 + 2]\r\n            ];\r\n            vectorNorm1.fromArray(this.surface.normal, indices[0] * 3);\r\n            vectorNorm2.fromArray(this.surface.normal, indices[1] * 3);\r\n            vectorNorm3.fromArray(this.surface.normal, indices[2] * 3);\r\n            vector.addVectors(vectorNorm1, vectorNorm2).add(vectorNorm3).normalize();\r\n            output.writeFloat32(vector.x);\r\n            output.writeFloat32(vector.y);\r\n            output.writeFloat32(vector.z);\r\n            for (let j = 0; j < 3; j++) {\r\n                vector.fromArray(this.surface.position, indices[j] * 3);\r\n                output.writeFloat32(vector.x); // vertices\r\n                output.writeFloat32(vector.y);\r\n                output.writeFloat32(vector.z);\r\n            }\r\n            output.writeUint16(0); // attribute byte count\r\n        }\r\n        return new DataView(output.buffer);\r\n    }\r\n}\r\n//# sourceMappingURL=stl-writer.js.map","/**\r\n * @file Counter\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log } from '../globals';\r\nimport * as signalsWrapper from 'signals';\r\n/**\r\n * Counter class for keeping track of counts\r\n */\r\nclass Counter {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.signals = {\r\n            countChanged: new signalsWrapper.Signal()\r\n        };\r\n    }\r\n    /**\r\n     * Set the `count` to zero\r\n     * @return {undefined}\r\n     */\r\n    clear() {\r\n        this.change(-this.count);\r\n    }\r\n    /**\r\n     * Change the `count`\r\n     * @fires Counter#countChanged\r\n     * @param {Integer} delta - count change\r\n     * @return {undefined}\r\n     */\r\n    change(delta) {\r\n        this.count += delta;\r\n        this.signals.countChanged.dispatch(delta, this.count);\r\n        if (this.count < 0) {\r\n            Log.warn('Counter.count below zero', this.count);\r\n        }\r\n    }\r\n    /**\r\n     * Increments the `count` by one.\r\n     * @return {undefined}\r\n     */\r\n    increment() {\r\n        this.change(1);\r\n    }\r\n    /**\r\n     * Decrements the `count` by one.\r\n     * @return {undefined}\r\n     */\r\n    decrement() {\r\n        this.change(-1);\r\n    }\r\n    /**\r\n     * Listen to another counter object and change this `count` by the\r\n     * same amount\r\n     * @param  {Counter} counter - the counter object to listen to\r\n     * @return {undefined}\r\n     */\r\n    listen(counter) {\r\n        this.change(counter.count);\r\n        counter.signals.countChanged.add(this.change, this);\r\n    }\r\n    /**\r\n     * Stop listening to the other counter object\r\n     * @param  {Counter} counter - the counter object to stop listening to\r\n     * @return {undefined}\r\n     */\r\n    unlisten(counter) {\r\n        const countChanged = counter.signals.countChanged;\r\n        if (countChanged.has(this.change, this)) {\r\n            countChanged.remove(this.change, this);\r\n        }\r\n    }\r\n    /**\r\n     * Invole the callback function once, when the `count` becomes zero\r\n     * @param  {Function} callback - the callback function\r\n     * @param  {Object}   context - the context for the callback function\r\n     * @return {undefined}\r\n     */\r\n    onZeroOnce(callback, context) {\r\n        if (this.count === 0) {\r\n            callback.call(context);\r\n        }\r\n        else {\r\n            const fn = () => {\r\n                if (this.count === 0) {\r\n                    this.signals.countChanged.remove(fn, this);\r\n                    callback.call(context);\r\n                }\r\n            };\r\n            this.signals.countChanged.add(fn, this);\r\n        }\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n        this.signals.countChanged.dispose();\r\n    }\r\n}\r\nexport default Counter;\r\n//# sourceMappingURL=counter.js.map","/**\r\n * @file Stats\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport * as signalsWrapper from 'signals';\r\nexport default class Stats {\r\n    constructor() {\r\n        this.signals = {\r\n            updated: new signalsWrapper.Signal()\r\n        };\r\n        this.maxDuration = -Infinity;\r\n        this.minDuration = Infinity;\r\n        this.avgDuration = 14;\r\n        this.lastDuration = Infinity;\r\n        this.prevFpsTime = 0;\r\n        this.lastFps = Infinity;\r\n        this.lastFrames = 1;\r\n        this.frames = 0;\r\n        this.count = 0;\r\n        this.begin();\r\n    }\r\n    update() {\r\n        this.startTime = this.end();\r\n        this.currentTime = this.startTime;\r\n        this.signals.updated.dispatch();\r\n    }\r\n    begin() {\r\n        this.startTime = window.performance.now();\r\n        this.lastFrames = this.frames;\r\n    }\r\n    end() {\r\n        const time = window.performance.now();\r\n        this.count += 1;\r\n        this.frames += 1;\r\n        this.lastDuration = time - this.startTime;\r\n        this.minDuration = Math.min(this.minDuration, this.lastDuration);\r\n        this.maxDuration = Math.max(this.maxDuration, this.lastDuration);\r\n        this.avgDuration -= this.avgDuration / 30;\r\n        this.avgDuration += this.lastDuration / 30;\r\n        if (time > this.prevFpsTime + 1000) {\r\n            this.lastFps = this.frames;\r\n            this.prevFpsTime = time;\r\n            this.frames = 0;\r\n        }\r\n        return time;\r\n    }\r\n}\r\n//# sourceMappingURL=stats.js.map","/**\r\n * @file Shader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ShaderChunk } from 'three';\r\nimport './chunk/fog_fragment.glsl';\r\nimport './chunk/interior_fragment.glsl';\r\nimport './chunk/matrix_scale.glsl';\r\nimport './chunk/nearclip_vertex.glsl';\r\nimport './chunk/nearclip_fragment.glsl';\r\nimport './chunk/opaque_back_fragment.glsl';\r\nimport './chunk/radiusclip_vertex.glsl';\r\nimport './chunk/radiusclip_fragment.glsl';\r\nimport './chunk/unpack_color.glsl';\r\nimport { ShaderRegistry } from '../globals';\r\nfunction getDefines(defines) {\r\n    if (defines === undefined)\r\n        return '';\r\n    const lines = [];\r\n    for (const name in defines) {\r\n        const value = defines[name];\r\n        if (!value)\r\n            continue;\r\n        lines.push(`#define ${name} ${value}`);\r\n    }\r\n    return lines.join('\\n') + '\\n';\r\n}\r\nconst reInclude = /^(?!\\/\\/)\\s*#include\\s+(\\S+)/gmi;\r\nconst shaderCache = {};\r\nexport function getShader(name, defines = {}) {\r\n    let hash = name + '|';\r\n    for (const key in defines) {\r\n        hash += key + ':' + defines[key];\r\n    }\r\n    if (!shaderCache[hash]) {\r\n        const definesText = getDefines(defines);\r\n        let shaderText = ShaderRegistry.get(`shader/${name}`);\r\n        if (!shaderText) {\r\n            throw new Error(`empty shader, '${name}'`);\r\n        }\r\n        shaderText = shaderText.replace(reInclude, function (match, p1) {\r\n            const path = `shader/chunk/${p1}.glsl`;\r\n            const chunk = ShaderRegistry.get(path) || ShaderChunk[p1];\r\n            if (!chunk) {\r\n                throw new Error(`empty chunk, '${p1}'`);\r\n            }\r\n            return chunk;\r\n        });\r\n        shaderCache[hash] = definesText + shaderText;\r\n    }\r\n    return shaderCache[hash];\r\n}\r\n//# sourceMappingURL=shader-utils.js.map","/**\r\n * @file Viewer Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug } from '../globals';\r\nif (typeof WebGLRenderingContext !== 'undefined') {\r\n    const wrcp = WebGLRenderingContext.prototype;\r\n    // wrap WebGL debug function used by three.js and\r\n    // ignore calls to them when the debug flag is not set\r\n    const _getShaderParameter = wrcp.getShaderParameter;\r\n    wrcp.getShaderParameter = function getShaderParameter() {\r\n        if (Debug) {\r\n            return _getShaderParameter.apply(this, arguments);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    const _getShaderInfoLog = wrcp.getShaderInfoLog;\r\n    wrcp.getShaderInfoLog = function getShaderInfoLog() {\r\n        if (Debug) {\r\n            return _getShaderInfoLog.apply(this, arguments);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n    const _getProgramParameter = wrcp.getProgramParameter;\r\n    wrcp.getProgramParameter = function getProgramParameter(program, pname) {\r\n        if (Debug || pname !== wrcp.LINK_STATUS) {\r\n            return _getProgramParameter.apply(this, arguments);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    const _getProgramInfoLog = wrcp.getProgramInfoLog;\r\n    wrcp.getProgramInfoLog = function getProgramInfoLog() {\r\n        if (Debug) {\r\n            return _getProgramInfoLog.apply(this, arguments);\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    };\r\n}\r\nexport const JitterVectors = [\r\n    [\r\n        [0, 0]\r\n    ],\r\n    [\r\n        [4, 4], [-4, -4]\r\n    ],\r\n    [\r\n        [-2, -6], [6, -2], [-6, 2], [2, 6]\r\n    ],\r\n    [\r\n        [1, -3], [-1, 3], [5, 1], [-3, -5],\r\n        [-5, 5], [-7, -1], [3, 7], [7, -7]\r\n    ],\r\n    [\r\n        [1, 1], [-1, -3], [-3, 2], [4, -1],\r\n        [-5, -2], [2, 5], [5, 3], [3, -5],\r\n        [-2, 6], [0, -7], [-4, -6], [-6, 4],\r\n        [-8, 0], [7, -4], [6, 7], [-7, -8]\r\n    ],\r\n    [\r\n        [-4, -7], [-7, -5], [-3, -5], [-5, -4],\r\n        [-1, -4], [-2, -2], [-6, -1], [-4, 0],\r\n        [-7, 1], [-1, 2], [-6, 3], [-3, 3],\r\n        [-7, 6], [-3, 6], [-5, 7], [-1, 7],\r\n        [5, -7], [1, -6], [6, -5], [4, -4],\r\n        [2, -3], [7, -2], [1, -1], [4, -1],\r\n        [2, 1], [6, 2], [0, 4], [4, 4],\r\n        [2, 5], [7, 5], [5, 6], [3, 7]\r\n    ]\r\n];\r\nJitterVectors.forEach(offsetList => {\r\n    offsetList.forEach(offset => {\r\n        // 0.0625 = 1 / 16\r\n        offset[0] *= 0.0625;\r\n        offset[1] *= 0.0625;\r\n    });\r\n});\r\n//# sourceMappingURL=viewer-constants.js.map","/**\r\n * @file Tiled Renderer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nclass TiledRenderer {\r\n    constructor(renderer, camera, viewer, params) {\r\n        this.canvas = document.createElement('canvas');\r\n        this._viewer = viewer;\r\n        this._factor = defaults(params.factor, 2);\r\n        this._antialias = defaults(params.antialias, false);\r\n        this._onProgress = params.onProgress;\r\n        this._onFinish = params.onFinish;\r\n        if (this._antialias)\r\n            this._factor *= 2;\r\n        this._n = this._factor * this._factor;\r\n        // canvas\r\n        this._width = this._viewer.width;\r\n        this._height = this._viewer.height;\r\n        if (this._antialias) {\r\n            this.canvas.width = this._width * this._factor / 2;\r\n            this.canvas.height = this._height * this._factor / 2;\r\n        }\r\n        else {\r\n            this.canvas.width = this._width * this._factor;\r\n            this.canvas.height = this._height * this._factor;\r\n        }\r\n        this._ctx = this.canvas.getContext('2d');\r\n        this._viewerSampleLevel = viewer.sampleLevel;\r\n        this._viewer.setSampling(-1);\r\n    }\r\n    _renderTile(i) {\r\n        const viewer = this._viewer;\r\n        const width = this._width;\r\n        const height = this._height;\r\n        const factor = this._factor;\r\n        const x = i % factor;\r\n        const y = Math.floor(i / factor);\r\n        const offsetX = x * width;\r\n        const offsetY = y * height;\r\n        viewer.camera.setViewOffset(width * factor, height * factor, offsetX, offsetY, width, height);\r\n        viewer.render();\r\n        if (this._antialias) {\r\n            const w = Math.round((offsetX + width) / 2) - Math.round(offsetX / 2);\r\n            const h = Math.round((offsetY + height) / 2) - Math.round(offsetY / 2);\r\n            this._ctx.drawImage(viewer.renderer.domElement, Math.round(offsetX / 2), Math.round(offsetY / 2), w, h);\r\n        }\r\n        else {\r\n            this._ctx.drawImage(viewer.renderer.domElement, Math.floor(offsetX), Math.floor(offsetY), Math.ceil(width), Math.ceil(height));\r\n        }\r\n        if (typeof this._onProgress === 'function') {\r\n            this._onProgress(i + 1, this._n, false);\r\n        }\r\n    }\r\n    _finalize() {\r\n        this._viewer.setSampling(this._viewerSampleLevel);\r\n        this._viewer.camera.view = null; // TODO\r\n        if (typeof this._onFinish === 'function') {\r\n            this._onFinish(this._n + 1, this._n, false);\r\n        }\r\n    }\r\n    render() {\r\n        for (let i = 0; i <= this._n; ++i) {\r\n            if (i === this._n) {\r\n                this._finalize();\r\n            }\r\n            else {\r\n                this._renderTile(i);\r\n            }\r\n        }\r\n    }\r\n    renderAsync() {\r\n        let count = 0;\r\n        const n = this._n;\r\n        const fn = () => {\r\n            if (count === n) {\r\n                this._finalize();\r\n            }\r\n            else {\r\n                this._renderTile(count);\r\n            }\r\n            count += 1;\r\n        };\r\n        for (let i = 0; i <= n; ++i) {\r\n            setTimeout(fn, 0);\r\n        }\r\n    }\r\n}\r\nexport default TiledRenderer;\r\n//# sourceMappingURL=tiled-renderer.js.map","/**\r\n * @file Math Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport const EPS = 0.0000001;\r\nexport const TwoPI = 2 * Math.PI;\r\nexport const DEG2RAD = Math.PI / 180;\r\nexport const RAD2DEG = 180 / Math.PI;\r\n//# sourceMappingURL=math-constants.js.map","/**\r\n * @file Array Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { TwoPI } from './math-constants';\r\nexport function circularMean(array, max, stride = 1, offset = 0, indices) {\r\n    // http://en.wikipedia.org/wiki/Center_of_mass#Systems_with_periodic_boundary_conditions\r\n    // Bai, Linge; Breen, David (2008). Calculating Center of Mass in an Unbounded 2D Environment. Journal of Graphics, GPU, and Game Tools 13 (4): 53–60.\r\n    // http://stackoverflow.com/questions/18166507/using-fft-to-find-the-center-of-mass-under-periodic-boundary-conditions\r\n    const n = indices ? indices.length : array.length / stride;\r\n    let cosMean = 0;\r\n    let sinMean = 0;\r\n    if (indices) {\r\n        for (let i = 0; i < n; ++i) {\r\n            const c = (array[indices[i] * stride + offset] + max) % max;\r\n            const angle = (c / max) * TwoPI - Math.PI;\r\n            cosMean += Math.cos(angle);\r\n            sinMean += Math.sin(angle);\r\n        }\r\n    }\r\n    else {\r\n        for (let i = offset; i < n; i += stride) {\r\n            const c = (array[i] + max) % max;\r\n            const angle = (c / max) * TwoPI - Math.PI;\r\n            cosMean += Math.cos(angle);\r\n            sinMean += Math.sin(angle);\r\n        }\r\n    }\r\n    cosMean /= n;\r\n    sinMean /= n;\r\n    const meanAngle = Math.atan2(sinMean, cosMean);\r\n    const mean = (meanAngle + Math.PI) / TwoPI * max;\r\n    return mean;\r\n}\r\nexport function calculateCenterArray(array1, array2, center, offset = 0) {\r\n    const n = array1.length;\r\n    const c = center || new Float32Array(n);\r\n    for (let i = 0; i < n; i += 3) {\r\n        c[offset + i + 0] = (array1[i + 0] + array2[i + 0]) / 2.0;\r\n        c[offset + i + 1] = (array1[i + 1] + array2[i + 1]) / 2.0;\r\n        c[offset + i + 2] = (array1[i + 2] + array2[i + 2]) / 2.0;\r\n    }\r\n    return c;\r\n}\r\nexport function calculateDirectionArray(array1, array2) {\r\n    const n = array1.length;\r\n    const direction = new Float32Array(n);\r\n    for (let i = 0; i < n; i += 3) {\r\n        direction[i + 0] = array2[i + 0] - array1[i + 0];\r\n        direction[i + 1] = array2[i + 1] - array1[i + 1];\r\n        direction[i + 2] = array2[i + 2] - array1[i + 2];\r\n    }\r\n    return direction;\r\n}\r\nexport function uniformArray(n, a, optionalTarget) {\r\n    const array = optionalTarget || new Float32Array(n);\r\n    for (let i = 0; i < n; ++i) {\r\n        array[i] = a;\r\n    }\r\n    return array;\r\n}\r\nexport function uniformArray3(n, a, b, c, optionalTarget) {\r\n    const array = optionalTarget || new Float32Array(n * 3);\r\n    for (let i = 0; i < n; ++i) {\r\n        const j = i * 3;\r\n        array[j + 0] = a;\r\n        array[j + 1] = b;\r\n        array[j + 2] = c;\r\n    }\r\n    return array;\r\n}\r\nexport function centerArray3(array, center = new Vector3()) {\r\n    const n = array.length;\r\n    for (let i = 0; i < n; i += 3) {\r\n        center.x += array[i];\r\n        center.y += array[i + 1];\r\n        center.z += array[i + 2];\r\n    }\r\n    center.divideScalar(n / 3);\r\n    return center;\r\n}\r\nexport function serialArray(n) {\r\n    const array = new Float32Array(n);\r\n    for (let i = 0; i < n; ++i) {\r\n        array[i] = i;\r\n    }\r\n    return array;\r\n}\r\nexport function serialBlockArray(n, b, offset = 0, optionalTarget) {\r\n    const array = optionalTarget || new Float32Array(n * b);\r\n    for (let i = 0; i < n; ++i) {\r\n        const k = offset + i * b;\r\n        for (let j = 0; j < b; ++j) {\r\n            array[k + j] = i;\r\n        }\r\n    }\r\n    return array;\r\n}\r\nexport function randomColorArray(n) {\r\n    const array = new Float32Array(n * 3);\r\n    for (let i = 0; i < n; ++i) {\r\n        const j = i * 3;\r\n        array[j + 0] = Math.random();\r\n        array[j + 1] = Math.random();\r\n        array[j + 2] = Math.random();\r\n    }\r\n    return array;\r\n}\r\nexport function replicateArrayEntries(array, m) {\r\n    const n = array.length;\r\n    const repArr = new Float32Array(n * m);\r\n    for (let i = 0; i < n; ++i) {\r\n        const k = i * m;\r\n        const a = array[i];\r\n        for (let j = 0; j < m; ++j) {\r\n            repArr[k + j] = a;\r\n        }\r\n    }\r\n    return repArr;\r\n}\r\nexport function replicateArray3Entries(array, m) {\r\n    const n = array.length / 3;\r\n    const repArr = new Float32Array(n * m * 3);\r\n    for (let i = 0; i < n; ++i) {\r\n        const v = i * 3;\r\n        const k = i * m * 3;\r\n        const a = array[v + 0];\r\n        const b = array[v + 1];\r\n        const c = array[v + 2];\r\n        for (let j = 0; j < m; ++j) {\r\n            const l = k + j * 3;\r\n            repArr[l + 0] = a;\r\n            repArr[l + 1] = b;\r\n            repArr[l + 2] = c;\r\n        }\r\n    }\r\n    return repArr;\r\n}\r\nexport function calculateMeanArray(array1, array2) {\r\n    const n = array1.length;\r\n    const mean = new Float32Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n        mean[i] = (array1[i] + array2[i]) / 2.0;\r\n    }\r\n    return mean;\r\n}\r\nexport function calculateMinArray(array1, array2) {\r\n    const n = array1.length;\r\n    const min = new Float32Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n        min[i] = Math.min(array1[i], array2[i]);\r\n    }\r\n    return min;\r\n}\r\nexport function copyArray(src, dst, srcOffset, dstOffset, length) {\r\n    for (let i = 0; i < length; ++i) {\r\n        dst[dstOffset + i] = src[srcOffset + i];\r\n    }\r\n}\r\nexport function copyWithin(array, srcOffset, dstOffset, length) {\r\n    copyArray(array, array, srcOffset, dstOffset, length);\r\n}\r\nconst swap = new Float32Array(4);\r\nconst temp = new Float32Array(4);\r\n/**\r\n * quicksortIP\r\n * @function\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * In-place quicksort for typed arrays (e.g. for Float32Array)\r\n * provides fast sorting\r\n * useful e.g. for a custom shader and/or BufferGeometry\r\n * Complexity: http://bigocheatsheet.com/ see Quicksort\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * eleSize: 3 //because of (x, y, z)\r\n * orderElement: 0 //order according to x\r\n *\r\n * @param {TypedArray} arr - array to be sorted\r\n * @param {Integer} eleSize - element size\r\n * @param {Integer} orderElement - index of element used for sorting, < eleSize\r\n * @param {Integer} [begin] - start index for range to be sorted\r\n * @param {Integer} [end] - end index for range to be sorted\r\n * @return {TypedArray} the input array\r\n */\r\nexport function quicksortIP(arr, eleSize, orderElement, begin = 0, end) {\r\n    end = (end || (arr.length / eleSize)) - 1;\r\n    const stack = [];\r\n    let sp = -1;\r\n    let left = begin;\r\n    let right = end;\r\n    let tmp = 0.0;\r\n    let x = 0;\r\n    let y = 0;\r\n    const swapF = function (a, b) {\r\n        a *= eleSize;\r\n        b *= eleSize;\r\n        for (y = 0; y < eleSize; y++) {\r\n            tmp = arr[a + y];\r\n            arr[a + y] = arr[b + y];\r\n            arr[b + y] = tmp;\r\n        }\r\n    };\r\n    let i, j;\r\n    while (true) {\r\n        if (right - left <= 25) {\r\n            for (j = left + 1; j <= right; j++) {\r\n                for (x = 0; x < eleSize; x++) {\r\n                    swap[x] = arr[j * eleSize + x];\r\n                }\r\n                i = j - 1;\r\n                while (i >= left && arr[i * eleSize + orderElement] > swap[orderElement]) {\r\n                    for (x = 0; x < eleSize; x++) {\r\n                        arr[(i + 1) * eleSize + x] = arr[i * eleSize + x];\r\n                    }\r\n                    i--;\r\n                }\r\n                for (x = 0; x < eleSize; x++) {\r\n                    arr[(i + 1) * eleSize + x] = swap[x];\r\n                }\r\n            }\r\n            if (sp === -1)\r\n                break;\r\n            right = stack[sp--]; // ?\r\n            left = stack[sp--];\r\n        }\r\n        else {\r\n            const median = (left + right) >> 1;\r\n            i = left + 1;\r\n            j = right;\r\n            swapF(median, i);\r\n            if (arr[left * eleSize + orderElement] > arr[right * eleSize + orderElement]) {\r\n                swapF(left, right);\r\n            }\r\n            if (arr[i * eleSize + orderElement] > arr[right * eleSize + orderElement]) {\r\n                swapF(i, right);\r\n            }\r\n            if (arr[left * eleSize + orderElement] > arr[i * eleSize + orderElement]) {\r\n                swapF(left, i);\r\n            }\r\n            for (x = 0; x < eleSize; x++) {\r\n                temp[x] = arr[i * eleSize + x];\r\n            }\r\n            while (true) {\r\n                do\r\n                    i++;\r\n                while (arr[i * eleSize + orderElement] < temp[orderElement]);\r\n                do\r\n                    j--;\r\n                while (arr[j * eleSize + orderElement] > temp[orderElement]);\r\n                if (j < i)\r\n                    break;\r\n                swapF(i, j);\r\n            }\r\n            for (x = 0; x < eleSize; x++) {\r\n                arr[(left + 1) * eleSize + x] = arr[j * eleSize + x];\r\n                arr[j * eleSize + x] = temp[x];\r\n            }\r\n            if (right - i + 1 >= j - left) {\r\n                stack[++sp] = i;\r\n                stack[++sp] = right;\r\n                right = j - 1;\r\n            }\r\n            else {\r\n                stack[++sp] = left;\r\n                stack[++sp] = j - 1;\r\n                left = i;\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\nexport function quicksortCmp(arr, cmp, begin = 0, end) {\r\n    cmp = cmp || function cmp(a, b) {\r\n        if (a > b)\r\n            return 1;\r\n        if (a < b)\r\n            return -1;\r\n        return 0;\r\n    };\r\n    end = (end || arr.length) - 1;\r\n    const stack = [];\r\n    let sp = -1;\r\n    let left = begin;\r\n    let right = end;\r\n    let tmp;\r\n    function swap(a, b) {\r\n        const tmp2 = arr[a];\r\n        arr[a] = arr[b];\r\n        arr[b] = tmp2;\r\n    }\r\n    let i, j;\r\n    while (true) {\r\n        if (right - left <= 25) {\r\n            for (let k = left + 1; k <= right; ++k) {\r\n                tmp = arr[k];\r\n                i = k - 1;\r\n                while (i >= left && cmp(arr[i], tmp) > 0) {\r\n                    arr[i + 1] = arr[i];\r\n                    --i;\r\n                }\r\n                arr[i + 1] = tmp;\r\n            }\r\n            if (sp === -1)\r\n                break;\r\n            right = stack[sp--]; // ?\r\n            left = stack[sp--];\r\n        }\r\n        else {\r\n            const median = (left + right) >> 1;\r\n            i = left + 1;\r\n            j = right;\r\n            swap(median, i);\r\n            if (cmp(arr[left], arr[right]) > 0) {\r\n                swap(left, right);\r\n            }\r\n            if (cmp(arr[i], arr[right]) > 0) {\r\n                swap(i, right);\r\n            }\r\n            if (cmp(arr[left], arr[i]) > 0) {\r\n                swap(left, i);\r\n            }\r\n            tmp = arr[i];\r\n            while (true) {\r\n                do\r\n                    i++;\r\n                while (cmp(arr[i], tmp) < 0);\r\n                do\r\n                    j--;\r\n                while (cmp(arr[j], tmp) > 0);\r\n                if (j < i)\r\n                    break;\r\n                swap(i, j);\r\n            }\r\n            arr[left + 1] = arr[j];\r\n            arr[j] = tmp;\r\n            if (right - i + 1 >= j - left) {\r\n                stack[++sp] = i;\r\n                stack[++sp] = right;\r\n                right = j - 1;\r\n            }\r\n            else {\r\n                stack[++sp] = left;\r\n                stack[++sp] = j - 1;\r\n                left = i;\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\nexport function quickselectCmp(arr, n, cmp, left = 0, right) {\r\n    cmp = cmp || function cmp(a, b) {\r\n        if (a > b)\r\n            return 1;\r\n        if (a < b)\r\n            return -1;\r\n        return 0;\r\n    };\r\n    right = (right || arr.length) - 1;\r\n    let pivotIndex, pivotValue, storeIndex;\r\n    function swap(a, b) {\r\n        const tmp = arr[a];\r\n        arr[a] = arr[b];\r\n        arr[b] = tmp;\r\n    }\r\n    while (true) {\r\n        if (left === right) {\r\n            return arr[left];\r\n        }\r\n        pivotIndex = (left + right) >> 1;\r\n        pivotValue = arr[pivotIndex];\r\n        swap(pivotIndex, right);\r\n        storeIndex = left;\r\n        for (let i = left; i < right; ++i) {\r\n            if (cmp(arr[i], pivotValue) < 0) {\r\n                swap(storeIndex, i);\r\n                ++storeIndex;\r\n            }\r\n        }\r\n        swap(right, storeIndex);\r\n        pivotIndex = storeIndex;\r\n        if (n === pivotIndex) {\r\n            return arr[n];\r\n        }\r\n        else if (n < pivotIndex) {\r\n            right = pivotIndex - 1;\r\n        }\r\n        else {\r\n            left = pivotIndex + 1;\r\n        }\r\n    }\r\n}\r\nexport function arrayMax(array) {\r\n    let max = -Infinity;\r\n    for (let i = 0, il = array.length; i < il; ++i) {\r\n        if (array[i] > max)\r\n            max = array[i];\r\n    }\r\n    return max;\r\n}\r\nexport function arrayMin(array) {\r\n    let min = Infinity;\r\n    for (let i = 0, il = array.length; i < il; ++i) {\r\n        if (array[i] < min)\r\n            min = array[i];\r\n    }\r\n    return min;\r\n}\r\nexport function arraySum(array, stride = 1, offset = 0) {\r\n    const n = array.length;\r\n    let sum = 0;\r\n    for (let i = offset; i < n; i += stride) {\r\n        sum += array[i];\r\n    }\r\n    return sum;\r\n}\r\nexport function arrayMean(array, stride = 1, offset = 0) {\r\n    return arraySum(array, stride, offset) / (array.length / stride);\r\n}\r\nexport function arrayRms(array) {\r\n    const n = array.length;\r\n    let sumSq = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n        const di = array[i];\r\n        sumSq += di * di;\r\n    }\r\n    return Math.sqrt(sumSq / n);\r\n}\r\nexport function arraySorted(array) {\r\n    for (let i = 1, il = array.length; i < il; ++i) {\r\n        if (array[i - 1] > array[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexport function arraySortedCmp(array, cmp) {\r\n    for (let i = 1, il = array.length; i < il; ++i) {\r\n        if (cmp(array[i - 1], array[i]) > 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=array-utils.js.map","/**\r\n * @file Viewer Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector2, Vector3, Matrix4, Points } from 'three';\r\nimport { createParams } from '../utils';\r\nimport TiledRenderer from './tiled-renderer';\r\nimport { quicksortCmp } from '../math/array-utils';\r\nfunction _trimCanvas(canvas, r, g, b, a) {\r\n    const canvasHeight = canvas.height;\r\n    const canvasWidth = canvas.width;\r\n    const ctx = canvas.getContext('2d');\r\n    const pixels = ctx.getImageData(0, 0, canvasWidth, canvasHeight).data;\r\n    let x, y, doBreak, off;\r\n    doBreak = false;\r\n    for (y = 0; y < canvasHeight; y++) {\r\n        for (x = 0; x < canvasWidth; x++) {\r\n            off = (y * canvasWidth + x) * 4;\r\n            if (pixels[off] !== r || pixels[off + 1] !== g ||\r\n                pixels[off + 2] !== b || pixels[off + 3] !== a) {\r\n                doBreak = true;\r\n                break;\r\n            }\r\n        }\r\n        if (doBreak) {\r\n            break;\r\n        }\r\n    }\r\n    const topY = y;\r\n    doBreak = false;\r\n    for (x = 0; x < canvasWidth; x++) {\r\n        for (y = 0; y < canvasHeight; y++) {\r\n            off = (y * canvasWidth + x) * 4;\r\n            if (pixels[off] !== r || pixels[off + 1] !== g ||\r\n                pixels[off + 2] !== b || pixels[off + 3] !== a) {\r\n                doBreak = true;\r\n                break;\r\n            }\r\n        }\r\n        if (doBreak) {\r\n            break;\r\n        }\r\n    }\r\n    const topX = x;\r\n    doBreak = false;\r\n    for (y = canvasHeight - 1; y >= 0; y--) {\r\n        for (x = canvasWidth - 1; x >= 0; x--) {\r\n            off = (y * canvasWidth + x) * 4;\r\n            if (pixels[off] !== r || pixels[off + 1] !== g ||\r\n                pixels[off + 2] !== b || pixels[off + 3] !== a) {\r\n                doBreak = true;\r\n                break;\r\n            }\r\n        }\r\n        if (doBreak) {\r\n            break;\r\n        }\r\n    }\r\n    const bottomY = y;\r\n    doBreak = false;\r\n    for (x = canvasWidth - 1; x >= 0; x--) {\r\n        for (y = canvasHeight - 1; y >= 0; y--) {\r\n            off = (y * canvasWidth + x) * 4;\r\n            if (pixels[off] !== r || pixels[off + 1] !== g ||\r\n                pixels[off + 2] !== b || pixels[off + 3] !== a) {\r\n                doBreak = true;\r\n                break;\r\n            }\r\n        }\r\n        if (doBreak) {\r\n            break;\r\n        }\r\n    }\r\n    const bottomX = x;\r\n    const trimedCanvas = document.createElement('canvas');\r\n    trimedCanvas.width = bottomX - topX;\r\n    trimedCanvas.height = bottomY - topY;\r\n    const trimedCtx = trimedCanvas.getContext('2d');\r\n    trimedCtx.drawImage(canvas, topX, topY, trimedCanvas.width, trimedCanvas.height, 0, 0, trimedCanvas.width, trimedCanvas.height);\r\n    return trimedCanvas;\r\n}\r\n/**\r\n * Image parameter object.\r\n * @typedef {Object} ImageParameters - image generation parameters\r\n * @property {Boolean} trim - trim the image\r\n * @property {Integer} factor - scaling factor to apply to the viewer canvas\r\n * @property {Boolean} antialias - antialias the image\r\n * @property {Boolean} transparent - transparent image background\r\n */\r\nexport const ImageDefaultParameters = {\r\n    trim: false,\r\n    factor: 1,\r\n    antialias: false,\r\n    transparent: false,\r\n    onProgress: undefined\r\n};\r\n/**\r\n * Make image from what is shown in a viewer canvas\r\n * @param  {Viewer} viewer - the viewer\r\n * @param  {ImageParameters} params - parameters object\r\n * @return {Promise} A Promise object that resolves to an image {@link Blob}.\r\n */\r\nexport function makeImage(viewer, params = {}) {\r\n    const { trim, factor, antialias, transparent } = createParams(params, ImageDefaultParameters);\r\n    const renderer = viewer.renderer;\r\n    const camera = viewer.camera;\r\n    const originalClearAlpha = renderer.getClearAlpha();\r\n    const backgroundColor = renderer.getClearColor();\r\n    function setLineWidthAndPixelSize(invert = false) {\r\n        let _factor = factor;\r\n        if (antialias)\r\n            _factor *= 2;\r\n        if (invert)\r\n            _factor = 1 / _factor;\r\n        viewer.scene.traverse(function (o) {\r\n            const m = o.material;\r\n            if (m && m.linewidth) {\r\n                m.linewidth *= _factor;\r\n            }\r\n            if (m && m.uniforms && m.uniforms.size) {\r\n                if (m.uniforms.size.__seen === undefined) {\r\n                    m.uniforms.size.value *= _factor;\r\n                    m.uniforms.size.__seen = true;\r\n                }\r\n            }\r\n            if (m && m.uniforms && m.uniforms.linewidth) {\r\n                if (m.uniforms.linewidth.__seen === undefined) {\r\n                    m.uniforms.linewidth.value *= _factor;\r\n                    m.uniforms.linewidth.__seen = true;\r\n                }\r\n            }\r\n        });\r\n        viewer.scene.traverse(function (o) {\r\n            const m = o.material;\r\n            if (m && m.uniforms && m.uniforms.size) {\r\n                delete m.uniforms.size.__seen;\r\n            }\r\n            if (m && m.uniforms && m.uniforms.linewidth) {\r\n                delete m.uniforms.linewidth.__seen;\r\n            }\r\n        });\r\n    }\r\n    function trimCanvas(canvas) {\r\n        if (trim) {\r\n            const bg = backgroundColor;\r\n            const r = transparent ? 0 : bg.r * 255;\r\n            const g = transparent ? 0 : bg.g * 255;\r\n            const b = transparent ? 0 : bg.b * 255;\r\n            const a = transparent ? 0 : 255;\r\n            return _trimCanvas(canvas, r, g, b, a);\r\n        }\r\n        else {\r\n            return canvas;\r\n        }\r\n    }\r\n    function onProgress(i, n, finished) {\r\n        if (typeof params.onProgress === 'function') {\r\n            params.onProgress(i, n, finished);\r\n        }\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        const tiledRenderer = new TiledRenderer(renderer, camera, viewer, { factor, antialias, onProgress, onFinish });\r\n        renderer.setClearAlpha(transparent ? 0 : 1);\r\n        setLineWidthAndPixelSize();\r\n        tiledRenderer.renderAsync();\r\n        function onFinish(i, n) {\r\n            const canvas = trimCanvas(tiledRenderer.canvas);\r\n            canvas.toBlob(function (blob) {\r\n                renderer.setClearAlpha(originalClearAlpha);\r\n                setLineWidthAndPixelSize(true);\r\n                viewer.requestRender();\r\n                onProgress(n, n, true);\r\n                if (blob) {\r\n                    resolve(blob);\r\n                }\r\n                else {\r\n                    reject('error creating image');\r\n                }\r\n            }, 'image/png');\r\n        }\r\n    });\r\n}\r\nconst vertex = new Vector3();\r\nconst matrix = new Matrix4();\r\nconst modelViewProjectionMatrix = new Matrix4();\r\nexport function sortProjectedPosition(scene, camera) {\r\n    // console.time( \"sort\" );\r\n    scene.traverseVisible(function (o) {\r\n        if (!(o instanceof Points) || !o.userData.buffer.parameters.sortParticles) {\r\n            return;\r\n        }\r\n        const attributes = o.geometry.attributes; // TODO\r\n        const n = attributes.position.count;\r\n        if (n === 0)\r\n            return;\r\n        matrix.multiplyMatrices(camera.matrixWorldInverse, o.matrixWorld);\r\n        modelViewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, matrix);\r\n        let sortData, sortArray, zArray, cmpFn;\r\n        if (!o.userData.sortData) {\r\n            zArray = new Float32Array(n);\r\n            sortArray = new Uint32Array(n);\r\n            cmpFn = function (ai, bi) {\r\n                const a = zArray[ai];\r\n                const b = zArray[bi];\r\n                if (a > b)\r\n                    return 1;\r\n                if (a < b)\r\n                    return -1;\r\n                return 0;\r\n            };\r\n            sortData = {\r\n                __zArray: zArray,\r\n                __sortArray: sortArray,\r\n                __cmpFn: cmpFn\r\n            };\r\n            o.userData.sortData = sortData;\r\n        }\r\n        else {\r\n            sortData = o.userData.sortData;\r\n            zArray = sortData.__zArray;\r\n            sortArray = sortData.__sortArray;\r\n            cmpFn = sortData.__cmpFn;\r\n        }\r\n        for (let i = 0; i < n; ++i) {\r\n            vertex.fromArray(attributes.position.array, i * 3);\r\n            vertex.applyMatrix4(modelViewProjectionMatrix);\r\n            // negate, so that sorting order is reversed\r\n            zArray[i] = -vertex.z;\r\n            sortArray[i] = i;\r\n        }\r\n        quicksortCmp(sortArray, cmpFn);\r\n        let index, indexSrc, indexDst, tmpTab;\r\n        for (let name in attributes) {\r\n            const attr = attributes[name];\r\n            const array = attr.array;\r\n            const itemSize = attr.itemSize;\r\n            if (!sortData[name]) {\r\n                sortData[name] = new Float32Array(itemSize * n);\r\n            }\r\n            tmpTab = sortData[name];\r\n            sortData[name] = array;\r\n            for (let i = 0; i < n; ++i) {\r\n                index = sortArray[i];\r\n                for (let j = 0; j < itemSize; ++j) {\r\n                    indexSrc = index * itemSize + j;\r\n                    indexDst = i * itemSize + j;\r\n                    tmpTab[indexDst] = array[indexSrc];\r\n                }\r\n            }\r\n            attributes[name].array = tmpTab;\r\n            attributes[name].needsUpdate = true;\r\n        }\r\n    });\r\n    // console.timeEnd( \"sort\" );\r\n}\r\nconst resolution = new Vector2();\r\nconst projectionMatrixInverse = new Matrix4();\r\nconst projectionMatrixTranspose = new Matrix4();\r\nexport function updateMaterialUniforms(group, camera, renderer, cDist, bRadius) {\r\n    let size = new Vector2();\r\n    renderer.getSize(size);\r\n    const canvasHeight = size.height;\r\n    const pixelRatio = renderer.getPixelRatio();\r\n    const ortho = camera.type === 'OrthographicCamera';\r\n    resolution.set(size.width, size.height);\r\n    projectionMatrixInverse.getInverse(camera.projectionMatrix);\r\n    projectionMatrixTranspose.copy(camera.projectionMatrix).transpose();\r\n    group.traverse(function (o) {\r\n        const m = o.material;\r\n        if (!m)\r\n            return;\r\n        const u = m.uniforms;\r\n        if (!u)\r\n            return;\r\n        if (m.clipNear) {\r\n            const nearFactor = (50 - m.clipNear) / 50;\r\n            const nearClip = cDist - (bRadius * nearFactor);\r\n            u.clipNear.value = nearClip;\r\n        }\r\n        if (u.canvasHeight) {\r\n            u.canvasHeight.value = canvasHeight;\r\n        }\r\n        if (u.resolution) {\r\n            u.resolution.value.copy(resolution);\r\n        }\r\n        if (u.pixelRatio) {\r\n            u.pixelRatio.value = pixelRatio;\r\n        }\r\n        if (u.projectionMatrixInverse) {\r\n            u.projectionMatrixInverse.value.copy(projectionMatrixInverse);\r\n        }\r\n        if (u.projectionMatrixTranspose) {\r\n            u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose);\r\n        }\r\n        if (u.ortho) {\r\n            u.ortho.value = ortho;\r\n        }\r\n    });\r\n}\r\nexport function updateCameraUniforms(group, camera) {\r\n    projectionMatrixInverse.getInverse(camera.projectionMatrix);\r\n    projectionMatrixTranspose.copy(camera.projectionMatrix).transpose();\r\n    group.traverse(function (o) {\r\n        const m = o.material;\r\n        if (!m)\r\n            return;\r\n        const u = m.uniforms;\r\n        if (!u)\r\n            return;\r\n        if (u.projectionMatrixInverse) {\r\n            u.projectionMatrixInverse.value.copy(projectionMatrixInverse);\r\n        }\r\n        if (u.projectionMatrixTranspose) {\r\n            u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose);\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=viewer-utils.js.map","/**\r\n * @file Viewer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// adapted from https://webglfundamentals.org/webgl/resources/webgl-utils.js\r\n// Copyright 2012, Gregg Tavares. Modified BSD License\r\nexport function createProgram(gl, shaders, attribs, locations) {\r\n    const program = gl.createProgram();\r\n    if (!program) {\r\n        console.log(`error creating WebGL program`);\r\n        return;\r\n    }\r\n    shaders.forEach(shader => gl.attachShader(program, shader));\r\n    if (attribs) {\r\n        attribs.forEach((attrib, i) => {\r\n            gl.bindAttribLocation(program, locations ? locations[i] : i, attrib);\r\n        });\r\n    }\r\n    gl.linkProgram(program);\r\n    // Check the link status\r\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (!linked) {\r\n        console.log(`error linking program: ${gl.getProgramInfoLog(program)}`);\r\n        gl.deleteProgram(program);\r\n        return null;\r\n    }\r\n    return program;\r\n}\r\nexport function loadShader(gl, shaderSource, shaderType) {\r\n    const shader = gl.createShader(shaderType);\r\n    if (!shader) {\r\n        console.log(`error creating WebGL shader ${shaderType}`);\r\n        return; // can't create shader\r\n    }\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    // Check the compile status\r\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (!compiled) {\r\n        console.log(`error compiling shader ${shader}: ${gl.getShaderInfoLog(shader)}`);\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    return shader;\r\n}\r\n//\r\nexport function getErrorDescription(gl, error) {\r\n    switch (error) {\r\n        case gl.NO_ERROR: return 'no error';\r\n        case gl.INVALID_ENUM: return 'invalid enum';\r\n        case gl.INVALID_VALUE: return 'invalid value';\r\n        case gl.INVALID_OPERATION: return 'invalid operation';\r\n        case gl.INVALID_FRAMEBUFFER_OPERATION: return 'invalid framebuffer operation';\r\n        case gl.OUT_OF_MEMORY: return 'out of memory';\r\n        case gl.CONTEXT_LOST_WEBGL: return 'context lost';\r\n    }\r\n    return 'unknown error';\r\n}\r\nexport function getExtension(gl, name) {\r\n    const ext = gl.getExtension(name);\r\n    if (!ext)\r\n        console.log(`extension '${name}' not available`);\r\n    return ext;\r\n}\r\nconst TextureTestVertShader = `\r\nattribute vec4 a_position;\r\n\r\nvoid main() {\r\n  gl_Position = a_position;\r\n}`;\r\nconst TextureTestFragShader = `\r\nprecision mediump float;\r\nuniform vec4 u_color;\r\nuniform sampler2D u_texture;\r\n\r\nvoid main() {\r\n  gl_FragColor = texture2D(u_texture, vec2(0.5, 0.5)) * u_color;\r\n}`;\r\nconst TextureTestTexCoords = new Float32Array([\r\n    -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0\r\n]);\r\nexport function testTextureSupport(type) {\r\n    // adapted from\r\n    // https://stackoverflow.com/questions/28827511/webgl-ios-render-to-floating-point-texture\r\n    // Get A WebGL context\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 16;\r\n    canvas.height = 16;\r\n    canvas.style.width = 16 + 'px';\r\n    canvas.style.height = 16 + 'px';\r\n    const gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\n    if (!gl) {\r\n        console.log(`error creating webgl context for ${type}`);\r\n        return false;\r\n    }\r\n    if (!(gl instanceof WebGLRenderingContext)) {\r\n        console.log(`Got unexpected type for WebGL rendering context`);\r\n        return false;\r\n    }\r\n    getExtension(gl, 'OES_texture_float');\r\n    getExtension(gl, 'OES_texture_half_float');\r\n    getExtension(gl, 'WEBGL_color_buffer_float');\r\n    // setup shaders\r\n    const vertShader = loadShader(gl, TextureTestVertShader, gl.VERTEX_SHADER);\r\n    const fragShader = loadShader(gl, TextureTestFragShader, gl.FRAGMENT_SHADER);\r\n    if (!vertShader || !fragShader)\r\n        return false;\r\n    // setup program\r\n    const program = createProgram(gl, [vertShader, fragShader]);\r\n    if (!program) {\r\n        console.log(`error creating WebGL program`);\r\n        return false;\r\n    }\r\n    gl.useProgram(program);\r\n    // look up where the vertex data needs to go.\r\n    const positionLocation = gl.getAttribLocation(program, \"a_position\");\r\n    const colorLoc = gl.getUniformLocation(program, \"u_color\");\r\n    if (!colorLoc) {\r\n        console.log(`error getting 'u_color' uniform location`);\r\n        return false;\r\n    }\r\n    // provide texture coordinates for the rectangle.\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, TextureTestTexCoords, gl.STATIC_DRAW);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n    const whiteTex = gl.createTexture();\r\n    const whiteData = new Uint8Array([255, 255, 255, 255]);\r\n    gl.bindTexture(gl.TEXTURE_2D, whiteTex);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, whiteData);\r\n    const tex = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    const fb = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\r\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n        console.log(`error creating framebuffer for ${type}`);\r\n        return false;\r\n    }\r\n    // Draw the rectangle.\r\n    gl.bindTexture(gl.TEXTURE_2D, whiteTex);\r\n    gl.uniform4fv(colorLoc, [0, 10, 20, 1]);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.clearColor(1, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.uniform4fv(colorLoc, [0, 1 / 10, 1 / 20, 1]);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    // Check if rendered correctly\r\n    const pixel = new Uint8Array(4);\r\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n    if (pixel[0] !== 0 || pixel[1] < 248 || pixel[2] < 248 || pixel[3] < 254) {\r\n        console.log(`not able to actually render to ${type} texture`);\r\n        return false;\r\n    }\r\n    // Check reading from float texture\r\n    if (type === gl.FLOAT) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n        const floatPixel = new Float32Array(4);\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, floatPixel);\r\n        const error = gl.getError();\r\n        if (error) {\r\n            console.log(`error reading pixels as float: '${getErrorDescription(gl, error)}'`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=gl-utils.js.map","/**\r\n * @file Viewer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { PerspectiveCamera, OrthographicCamera, StereoCamera, Vector2, Box3, Vector3, Matrix4, Color, WebGLRenderer, WebGLRenderTarget, NearestFilter, LinearFilter, AdditiveBlending, RGBAFormat, FloatType, /*HalfFloatType, */ UnsignedByteType, ShaderMaterial, PlaneGeometry, Scene, Mesh, Group, Uniform, Fog, SpotLight, AmbientLight, BufferGeometry, BufferAttribute, LineSegments } from 'three';\r\nimport '../shader/BasicLine.vert';\r\nimport '../shader/BasicLine.frag';\r\nimport '../shader/Quad.vert';\r\nimport '../shader/Quad.frag';\r\nimport { Debug, Log, WebglErrorMessage, Browser, setExtensionFragDepth, SupportsReadPixelsFloat, setSupportsReadPixelsFloat } from '../globals';\r\nimport { degToRad } from '../math/math-utils';\r\nimport Stats from './stats';\r\nimport { getShader } from '../shader/shader-utils';\r\nimport { JitterVectors } from './viewer-constants';\r\nimport { makeImage, sortProjectedPosition, updateMaterialUniforms, updateCameraUniforms } from './viewer-utils';\r\nimport { testTextureSupport } from './gl-utils';\r\nconst pixelBufferFloat = new Float32Array(4 * 25);\r\nconst pixelBufferUint = new Uint8Array(4 * 25);\r\n// When picking, we read a 25 pixel (5x5) array (readRenderTargetPixels)\r\n// We read the pixels in the order below to find what was picked.\r\n// This starts at the center and tries successively further points.\r\n// (Many points will be at equal distance to the center, their order\r\n// is arbitrary).\r\nconst pixelOrder = [12, 7, 13, 17, 11, 6, 8, 18, 16, 2, 14, 22, 10, 1, 3, 9, 19, 23, 21, 15, 5, 0, 4, 24, 20];\r\nconst tmpMatrix = new Matrix4();\r\nfunction onBeforeRender(renderer, scene, camera, geometry, material /*, group */) {\r\n    const u = material.uniforms;\r\n    const updateList = [];\r\n    if (u.objectId) {\r\n        u.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255;\r\n        updateList.push('objectId');\r\n    }\r\n    if (u.modelViewMatrixInverse || u.modelViewMatrixInverseTranspose ||\r\n        u.modelViewProjectionMatrix || u.modelViewProjectionMatrixInverse) {\r\n        this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld);\r\n    }\r\n    if (u.modelViewMatrixInverse) {\r\n        u.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix);\r\n        updateList.push('modelViewMatrixInverse');\r\n    }\r\n    if (u.modelViewMatrixInverseTranspose) {\r\n        if (u.modelViewMatrixInverse) {\r\n            u.modelViewMatrixInverseTranspose.value.copy(u.modelViewMatrixInverse.value).transpose();\r\n        }\r\n        else {\r\n            u.modelViewMatrixInverseTranspose.value\r\n                .getInverse(this.modelViewMatrix)\r\n                .transpose();\r\n        }\r\n        updateList.push('modelViewMatrixInverseTranspose');\r\n    }\r\n    if (u.modelViewProjectionMatrix) {\r\n        u.modelViewProjectionMatrix.value.multiplyMatrices(camera.projectionMatrix, this.modelViewMatrix);\r\n        updateList.push('modelViewProjectionMatrix');\r\n    }\r\n    if (u.modelViewProjectionMatrixInverse) {\r\n        if (u.modelViewProjectionMatrix) {\r\n            tmpMatrix.copy(u.modelViewProjectionMatrix.value);\r\n            u.modelViewProjectionMatrixInverse.value.getInverse(tmpMatrix);\r\n        }\r\n        else {\r\n            tmpMatrix.multiplyMatrices(camera.projectionMatrix, this.modelViewMatrix);\r\n            u.modelViewProjectionMatrixInverse.value.getInverse(tmpMatrix);\r\n        }\r\n        updateList.push('modelViewProjectionMatrixInverse');\r\n    }\r\n    if (updateList.length) {\r\n        const materialProperties = renderer.properties.get(material);\r\n        if (materialProperties.program) {\r\n            const gl = renderer.getContext();\r\n            const p = materialProperties.program;\r\n            gl.useProgram(p.program);\r\n            const pu = p.getUniforms();\r\n            updateList.forEach(function (name) {\r\n                pu.setValue(gl, name, u[name].value);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Viewer class\r\n * @class\r\n * @param {String|Element} [idOrElement] - dom id or element\r\n */\r\nexport default class Viewer {\r\n    constructor(idOrElement) {\r\n        this.boundingBox = new Box3();\r\n        this.boundingBoxSize = new Vector3();\r\n        this.boundingBoxLength = 0;\r\n        this.info = {\r\n            memory: {\r\n                programs: 0,\r\n                geometries: 0,\r\n                textures: 0\r\n            },\r\n            render: {\r\n                calls: 0,\r\n                vertices: 0,\r\n                faces: 0,\r\n                points: 0\r\n            }\r\n        };\r\n        this.distVector = new Vector3();\r\n        this.signals = {\r\n            ticked: new Signal(),\r\n            rendered: new Signal()\r\n        };\r\n        if (typeof idOrElement === 'string') {\r\n            const elm = document.getElementById(idOrElement);\r\n            if (elm === null) {\r\n                this.container = document.createElement('div');\r\n            }\r\n            else {\r\n                this.container = elm;\r\n            }\r\n        }\r\n        else if (idOrElement instanceof HTMLElement) {\r\n            this.container = idOrElement;\r\n        }\r\n        else {\r\n            this.container = document.createElement('div');\r\n        }\r\n        if (this.container === document.body) {\r\n            this.width = window.innerWidth || 1;\r\n            this.height = window.innerHeight || 1;\r\n        }\r\n        else {\r\n            const box = this.container.getBoundingClientRect();\r\n            this.width = box.width || 1;\r\n            this.height = box.height || 1;\r\n            this.container.style.overflow = 'hidden';\r\n        }\r\n        this.wrapper = document.createElement('div');\r\n        this.wrapper.style.position = 'relative';\r\n        this.container.appendChild(this.wrapper);\r\n        this._initParams();\r\n        this._initStats();\r\n        this._initCamera();\r\n        this._initScene();\r\n        if (this._initRenderer() === false) {\r\n            Log.error('Viewer: could not initialize renderer');\r\n            return;\r\n        }\r\n        this._initHelper();\r\n        // fog & background\r\n        this.setBackground();\r\n        this.setFog();\r\n        this.animate = this.animate.bind(this);\r\n    }\r\n    _initParams() {\r\n        this.parameters = {\r\n            fogColor: new Color(0x000000),\r\n            fogNear: 50,\r\n            fogFar: 100,\r\n            backgroundColor: new Color(0x000000),\r\n            cameraType: 'perspective',\r\n            cameraFov: 40,\r\n            cameraEyeSep: 0.3,\r\n            cameraZ: -80,\r\n            clipNear: 0,\r\n            clipFar: 100,\r\n            clipDist: 10,\r\n            clipMode: 'scene',\r\n            clipScale: 'relative',\r\n            lightColor: new Color(0xdddddd),\r\n            lightIntensity: 1.0,\r\n            ambientColor: new Color(0xdddddd),\r\n            ambientIntensity: 0.2,\r\n            sampleLevel: 0\r\n        };\r\n    }\r\n    _initCamera() {\r\n        const lookAt = new Vector3(0, 0, 0);\r\n        const { width, height } = this;\r\n        this.perspectiveCamera = new PerspectiveCamera(this.parameters.cameraFov, width / height);\r\n        this.perspectiveCamera.position.z = this.parameters.cameraZ;\r\n        this.perspectiveCamera.lookAt(lookAt);\r\n        this.orthographicCamera = new OrthographicCamera(width / -2, width / 2, height / 2, height / -2);\r\n        this.orthographicCamera.position.z = this.parameters.cameraZ;\r\n        this.orthographicCamera.lookAt(lookAt);\r\n        this.stereoCamera = new StereoCamera();\r\n        this.stereoCamera.aspect = 0.5;\r\n        this.stereoCamera.eyeSep = this.parameters.cameraEyeSep;\r\n        const cameraType = this.parameters.cameraType;\r\n        if (cameraType === 'orthographic') {\r\n            this.camera = this.orthographicCamera;\r\n        }\r\n        else if (cameraType === 'perspective' || cameraType === 'stereo') {\r\n            this.camera = this.perspectiveCamera;\r\n        }\r\n        else {\r\n            throw new Error(`Unknown cameraType '${cameraType}'`);\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n    _initStats() {\r\n        this.stats = new Stats();\r\n    }\r\n    _initScene() {\r\n        if (!this.scene) {\r\n            this.scene = new Scene();\r\n            this.scene.name = 'scene';\r\n        }\r\n        this.rotationGroup = new Group();\r\n        this.rotationGroup.name = 'rotationGroup';\r\n        this.scene.add(this.rotationGroup);\r\n        this.translationGroup = new Group();\r\n        this.translationGroup.name = 'translationGroup';\r\n        this.rotationGroup.add(this.translationGroup);\r\n        this.modelGroup = new Group();\r\n        this.modelGroup.name = 'modelGroup';\r\n        this.translationGroup.add(this.modelGroup);\r\n        this.pickingGroup = new Group();\r\n        this.pickingGroup.name = 'pickingGroup';\r\n        this.translationGroup.add(this.pickingGroup);\r\n        this.backgroundGroup = new Group();\r\n        this.backgroundGroup.name = 'backgroundGroup';\r\n        this.translationGroup.add(this.backgroundGroup);\r\n        this.helperGroup = new Group();\r\n        this.helperGroup.name = 'helperGroup';\r\n        this.translationGroup.add(this.helperGroup);\r\n        // fog\r\n        this.scene.fog = new Fog(this.parameters.fogColor.getHex());\r\n        // light\r\n        this.spotLight = new SpotLight(this.parameters.lightColor.getHex(), this.parameters.lightIntensity);\r\n        this.scene.add(this.spotLight);\r\n        this.ambientLight = new AmbientLight(this.parameters.ambientColor.getHex(), this.parameters.ambientIntensity);\r\n        this.scene.add(this.ambientLight);\r\n    }\r\n    _initRenderer() {\r\n        const dpr = window.devicePixelRatio;\r\n        const { width, height } = this;\r\n        try {\r\n            this.renderer = new WebGLRenderer({\r\n                preserveDrawingBuffer: true,\r\n                alpha: true,\r\n                antialias: true\r\n            });\r\n        }\r\n        catch (e) {\r\n            this.wrapper.innerHTML = WebglErrorMessage;\r\n            return false;\r\n        }\r\n        this.renderer.setPixelRatio(dpr);\r\n        this.renderer.setSize(width, height);\r\n        this.renderer.autoClear = false;\r\n        this.renderer.sortObjects = true;\r\n        const gl = this.renderer.getContext();\r\n        // console.log(gl.getContextAttributes().antialias)\r\n        // console.log(gl.getParameter(gl.SAMPLES))\r\n        // For WebGL1, extensions must be explicitly enabled. \r\n        // The following are builtin to WebGL2 (and don't appear as \r\n        // extensions)\r\n        // EXT_frag_depth, OES_element_index_uint, OES_texture_float \r\n        // OES_texture_half_float\r\n        // The WEBGL_color_buffer_float extension is replaced by\r\n        // EXT_color_buffer_float\r\n        // If not webgl2 context, explicitly check for these\r\n        if (!this.renderer.capabilities.isWebGL2) {\r\n            setExtensionFragDepth(this.renderer.capabilities.isWebGL2);\r\n            this.renderer.extensions.get('OES_element_index_uint');\r\n            setSupportsReadPixelsFloat((this.renderer.extensions.get('OES_texture_float') &&\r\n                this.renderer.extensions.get('WEBGL_color_buffer_float')) ||\r\n                (this.renderer.extensions.get('OES_texture_float') &&\r\n                    testTextureSupport(gl.FLOAT)));\r\n            // picking texture\r\n            this.renderer.extensions.get('OES_texture_float');\r\n            this.supportsHalfFloat = (this.renderer.extensions.get('OES_texture_half_float') &&\r\n                testTextureSupport(0x8D61));\r\n        }\r\n        else {\r\n            setExtensionFragDepth(true);\r\n            setSupportsReadPixelsFloat(this.renderer.extensions.get('EXT_color_buffer_float'));\r\n            this.supportsHalfFloat = true;\r\n        }\r\n        this.wrapper.appendChild(this.renderer.domElement);\r\n        const dprWidth = width * dpr;\r\n        const dprHeight = height * dpr;\r\n        if (Debug) {\r\n            console.log(JSON.stringify({\r\n                'Browser': Browser,\r\n                'OES_texture_float': !!this.renderer.extensions.get('OES_texture_float'),\r\n                'OES_texture_half_float': !!this.renderer.extensions.get('OES_texture_half_float'),\r\n                'WEBGL_color_buffer_float': !!this.renderer.extensions.get('WEBGL_color_buffer_float'),\r\n                'testTextureSupport Float': testTextureSupport(gl.FLOAT),\r\n                'testTextureSupport HalfFloat': testTextureSupport(0x8D61),\r\n                'this.supportsHalfFloat': this.supportsHalfFloat,\r\n                'SupportsReadPixelsFloat': SupportsReadPixelsFloat\r\n            }, null, 2));\r\n        }\r\n        this.pickingTarget = new WebGLRenderTarget(dprWidth, dprHeight, {\r\n            minFilter: NearestFilter,\r\n            magFilter: NearestFilter,\r\n            stencilBuffer: false,\r\n            format: RGBAFormat,\r\n            type: SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n        });\r\n        this.pickingTarget.texture.generateMipmaps = false;\r\n        // workaround to reset the gl state after using testTextureSupport\r\n        // fixes some bug where nothing is rendered to the canvas\r\n        // when animations are started on page load\r\n        this.renderer.setRenderTarget(this.pickingTarget);\r\n        this.renderer.clear();\r\n        this.renderer.setRenderTarget(null);\r\n        // ssaa textures\r\n        this.sampleTarget = new WebGLRenderTarget(dprWidth, dprHeight, {\r\n            minFilter: LinearFilter,\r\n            magFilter: LinearFilter,\r\n            format: RGBAFormat\r\n        });\r\n        this.holdTarget = new WebGLRenderTarget(dprWidth, dprHeight, {\r\n            minFilter: NearestFilter,\r\n            magFilter: NearestFilter,\r\n            format: RGBAFormat,\r\n            type: UnsignedByteType\r\n            // using HalfFloatType or FloatType does not work on some Chrome 61 installations\r\n            // type: this.supportsHalfFloat ? HalfFloatType : (\r\n            //   SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n            // )\r\n        });\r\n        this.compositeUniforms = {\r\n            'tForeground': new Uniform(this.sampleTarget.texture),\r\n            'scale': new Uniform(1.0)\r\n        };\r\n        this.compositeMaterial = new ShaderMaterial({\r\n            uniforms: this.compositeUniforms,\r\n            vertexShader: getShader('Quad.vert'),\r\n            fragmentShader: getShader('Quad.frag'),\r\n            premultipliedAlpha: true,\r\n            transparent: true,\r\n            blending: AdditiveBlending,\r\n            depthTest: false,\r\n            depthWrite: false\r\n        });\r\n        this.compositeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n        this.compositeScene = new Scene();\r\n        this.compositeScene.name = 'compositeScene';\r\n        this.compositeScene.add(new Mesh(new PlaneGeometry(2, 2), this.compositeMaterial));\r\n    }\r\n    _initHelper() {\r\n        const indices = new Uint16Array([\r\n            0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6,\r\n            6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7\r\n        ]);\r\n        const positions = new Float32Array(8 * 3);\r\n        const bbGeometry = new BufferGeometry();\r\n        bbGeometry.setIndex(new BufferAttribute(indices, 1));\r\n        bbGeometry.setAttribute('position', new BufferAttribute(positions, 3));\r\n        const bbMaterial = new ShaderMaterial({\r\n            uniforms: { 'uColor': { value: new Color('skyblue') } },\r\n            vertexShader: getShader('BasicLine.vert'),\r\n            fragmentShader: getShader('BasicLine.frag')\r\n        });\r\n        this.boundingBoxMesh = new LineSegments(bbGeometry, bbMaterial);\r\n        this.helperGroup.add(this.boundingBoxMesh);\r\n    }\r\n    updateHelper() {\r\n        const position = this.boundingBoxMesh.geometry.attributes.position; // TODO\r\n        const array = position.array;\r\n        const { min, max } = this.boundingBox;\r\n        array[0] = max.x;\r\n        array[1] = max.y;\r\n        array[2] = max.z;\r\n        array[3] = min.x;\r\n        array[4] = max.y;\r\n        array[5] = max.z;\r\n        array[6] = min.x;\r\n        array[7] = min.y;\r\n        array[8] = max.z;\r\n        array[9] = max.x;\r\n        array[10] = min.y;\r\n        array[11] = max.z;\r\n        array[12] = max.x;\r\n        array[13] = max.y;\r\n        array[14] = min.z;\r\n        array[15] = min.x;\r\n        array[16] = max.y;\r\n        array[17] = min.z;\r\n        array[18] = min.x;\r\n        array[19] = min.y;\r\n        array[20] = min.z;\r\n        array[21] = max.x;\r\n        array[22] = min.y;\r\n        array[23] = min.z;\r\n        position.needsUpdate = true;\r\n        if (!this.boundingBox.isEmpty()) {\r\n            this.boundingBoxMesh.geometry.computeBoundingSphere();\r\n        }\r\n    }\r\n    /** Distance from origin (lookAt point) */\r\n    get cameraDistance() {\r\n        return Math.abs(this.camera.position.z);\r\n    }\r\n    /** Set distance from origin (lookAt point); along the -z axis */\r\n    set cameraDistance(d) {\r\n        this.camera.position.z = -d;\r\n    }\r\n    add(buffer, instanceList) {\r\n        // Log.time( \"Viewer.add\" );\r\n        if (instanceList) {\r\n            instanceList.forEach(instance => this.addBuffer(buffer, instance));\r\n        }\r\n        else {\r\n            this.addBuffer(buffer);\r\n        }\r\n        buffer.group.name = 'meshGroup';\r\n        buffer.wireframeGroup.name = 'wireframeGroup';\r\n        if (buffer.parameters.background) {\r\n            this.backgroundGroup.add(buffer.group);\r\n            this.backgroundGroup.add(buffer.wireframeGroup);\r\n        }\r\n        else {\r\n            this.modelGroup.add(buffer.group);\r\n            this.modelGroup.add(buffer.wireframeGroup);\r\n        }\r\n        if (buffer.pickable) {\r\n            this.pickingGroup.add(buffer.pickingGroup);\r\n        }\r\n        if (Debug)\r\n            this.updateHelper();\r\n        // Log.timeEnd( \"Viewer.add\" );\r\n    }\r\n    addBuffer(buffer, instance) {\r\n        // Log.time( \"Viewer.addBuffer\" );\r\n        function setUserData(object) {\r\n            if (object instanceof Group) {\r\n                object.children.forEach(setUserData);\r\n            }\r\n            else {\r\n                object.userData.buffer = buffer;\r\n                object.userData.instance = instance;\r\n                object.onBeforeRender = onBeforeRender;\r\n            }\r\n        }\r\n        const mesh = buffer.getMesh();\r\n        if (instance) {\r\n            mesh.applyMatrix4(instance.matrix);\r\n        }\r\n        setUserData(mesh);\r\n        buffer.group.add(mesh);\r\n        const wireframeMesh = buffer.getWireframeMesh();\r\n        if (instance) {\r\n            // wireframeMesh.applyMatrix( instance.matrix );\r\n            wireframeMesh.matrix.copy(mesh.matrix);\r\n            wireframeMesh.position.copy(mesh.position);\r\n            wireframeMesh.quaternion.copy(mesh.quaternion);\r\n            wireframeMesh.scale.copy(mesh.scale);\r\n        }\r\n        setUserData(wireframeMesh);\r\n        buffer.wireframeGroup.add(wireframeMesh);\r\n        if (buffer.pickable) {\r\n            const pickingMesh = buffer.getPickingMesh();\r\n            if (instance) {\r\n                // pickingMesh.applyMatrix( instance.matrix );\r\n                pickingMesh.matrix.copy(mesh.matrix);\r\n                pickingMesh.position.copy(mesh.position);\r\n                pickingMesh.quaternion.copy(mesh.quaternion);\r\n                pickingMesh.scale.copy(mesh.scale);\r\n            }\r\n            setUserData(pickingMesh);\r\n            buffer.pickingGroup.add(pickingMesh);\r\n        }\r\n        if (instance) {\r\n            this._updateBoundingBox(buffer.geometry, buffer.matrix, instance.matrix);\r\n        }\r\n        else {\r\n            this._updateBoundingBox(buffer.geometry, buffer.matrix);\r\n        }\r\n        // Log.timeEnd( \"Viewer.addBuffer\" );\r\n    }\r\n    remove(buffer) {\r\n        this.translationGroup.children.forEach(function (group) {\r\n            group.remove(buffer.group);\r\n            group.remove(buffer.wireframeGroup);\r\n        });\r\n        if (buffer.pickable) {\r\n            this.pickingGroup.remove(buffer.pickingGroup);\r\n        }\r\n        this.updateBoundingBox();\r\n        if (Debug)\r\n            this.updateHelper();\r\n        // this.requestRender();\r\n    }\r\n    _updateBoundingBox(geometry, matrix, instanceMatrix) {\r\n        const boundingBox = this.boundingBox;\r\n        function updateGeometry(geometry, matrix, instanceMatrix) {\r\n            if (geometry.boundingBox == null) {\r\n                geometry.computeBoundingBox();\r\n            }\r\n            const geoBoundingBox = geometry.boundingBox.clone();\r\n            if (matrix) {\r\n                geoBoundingBox.applyMatrix4(matrix);\r\n            }\r\n            if (instanceMatrix) {\r\n                geoBoundingBox.applyMatrix4(instanceMatrix);\r\n            }\r\n            if (geoBoundingBox.min.equals(geoBoundingBox.max)) {\r\n                // mainly to give a single impostor geometry some volume\r\n                // as it is only expanded in the shader on the GPU\r\n                geoBoundingBox.expandByScalar(5);\r\n            }\r\n            boundingBox.union(geoBoundingBox);\r\n        }\r\n        function updateNode(node) {\r\n            if (node.geometry !== undefined) {\r\n                let matrix, instanceMatrix;\r\n                if (node.userData.buffer) {\r\n                    matrix = node.userData.buffer.matrix;\r\n                }\r\n                if (node.userData.instance) {\r\n                    instanceMatrix = node.userData.instance.matrix;\r\n                }\r\n                updateGeometry(node.geometry, matrix, instanceMatrix); // TODO\r\n            }\r\n        }\r\n        if (geometry) {\r\n            updateGeometry(geometry, matrix, instanceMatrix);\r\n        }\r\n        else {\r\n            boundingBox.makeEmpty();\r\n            this.modelGroup.traverse(updateNode);\r\n            this.backgroundGroup.traverse(updateNode);\r\n        }\r\n        boundingBox.getSize(this.boundingBoxSize);\r\n        this.boundingBoxLength = this.boundingBoxSize.length();\r\n    }\r\n    updateBoundingBox() {\r\n        this._updateBoundingBox();\r\n        if (Debug)\r\n            this.updateHelper();\r\n    }\r\n    getPickingPixels() {\r\n        const { width, height } = this;\r\n        const n = width * height * 4;\r\n        const imgBuffer = SupportsReadPixelsFloat ? new Float32Array(n) : new Uint8Array(n);\r\n        this.render(true);\r\n        this.renderer.readRenderTargetPixels(this.pickingTarget, 0, 0, width, height, imgBuffer);\r\n        return imgBuffer;\r\n    }\r\n    getImage(picking) {\r\n        return new Promise(resolve => {\r\n            if (picking) {\r\n                const { width, height } = this;\r\n                const n = width * height * 4;\r\n                let imgBuffer = this.getPickingPixels();\r\n                if (SupportsReadPixelsFloat) {\r\n                    const imgBuffer2 = new Uint8Array(n);\r\n                    for (let i = 0; i < n; ++i) {\r\n                        imgBuffer2[i] = Math.round(imgBuffer[i] * 255);\r\n                    }\r\n                    imgBuffer = imgBuffer2;\r\n                }\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                const ctx = canvas.getContext('2d'); // TODO\r\n                const imgData = ctx.getImageData(0, 0, width, height);\r\n                imgData.data.set(imgBuffer); // TODO\r\n                ctx.putImageData(imgData, 0, 0);\r\n                canvas.toBlob(resolve, 'image/png'); // TODO\r\n            }\r\n            else {\r\n                this.renderer.domElement.toBlob(resolve, 'image/png'); // TODO\r\n            }\r\n        });\r\n    }\r\n    makeImage(params = {}) {\r\n        return makeImage(this, params);\r\n    }\r\n    setLight(color, intensity, ambientColor, ambientIntensity) {\r\n        const p = this.parameters;\r\n        if (color !== undefined)\r\n            p.lightColor.set(color); // TODO\r\n        if (intensity !== undefined)\r\n            p.lightIntensity = intensity;\r\n        if (ambientColor !== undefined)\r\n            p.ambientColor.set(ambientColor); // TODO\r\n        if (ambientIntensity !== undefined)\r\n            p.ambientIntensity = ambientIntensity;\r\n        this.requestRender();\r\n    }\r\n    setFog(color, near, far) {\r\n        const p = this.parameters;\r\n        if (color !== undefined)\r\n            p.fogColor.set(color); // TODO\r\n        if (near !== undefined)\r\n            p.fogNear = near;\r\n        if (far !== undefined)\r\n            p.fogFar = far;\r\n        this.requestRender();\r\n    }\r\n    setBackground(color) {\r\n        const p = this.parameters;\r\n        if (color)\r\n            p.backgroundColor.set(color); // TODO\r\n        this.setFog(p.backgroundColor);\r\n        this.renderer.setClearColor(p.backgroundColor, 0);\r\n        this.renderer.domElement.style.backgroundColor = p.backgroundColor.getStyle();\r\n        this.requestRender();\r\n    }\r\n    setSampling(level) {\r\n        if (level !== undefined) {\r\n            this.parameters.sampleLevel = level;\r\n            this.sampleLevel = level;\r\n        }\r\n        this.requestRender();\r\n    }\r\n    setCamera(type, fov, eyeSep) {\r\n        const p = this.parameters;\r\n        if (type)\r\n            p.cameraType = type;\r\n        if (fov)\r\n            p.cameraFov = fov;\r\n        if (eyeSep)\r\n            p.cameraEyeSep = eyeSep;\r\n        if (p.cameraType === 'orthographic') {\r\n            if (this.camera !== this.orthographicCamera) {\r\n                this.camera = this.orthographicCamera;\r\n                this.camera.position.copy(this.perspectiveCamera.position);\r\n                this.camera.up.copy(this.perspectiveCamera.up);\r\n                this.updateZoom();\r\n            }\r\n        }\r\n        else if (p.cameraType === 'perspective' || p.cameraType === 'stereo') {\r\n            if (this.camera !== this.perspectiveCamera) {\r\n                this.camera = this.perspectiveCamera;\r\n                this.camera.position.copy(this.orthographicCamera.position);\r\n                this.camera.up.copy(this.orthographicCamera.up);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`Unknown cameraType '${p.cameraType}'`);\r\n        }\r\n        this.perspectiveCamera.fov = p.cameraFov;\r\n        this.stereoCamera.eyeSep = p.cameraEyeSep;\r\n        this.camera.updateProjectionMatrix();\r\n        this.requestRender();\r\n    }\r\n    setClip(near, far, dist, clipMode, clipScale) {\r\n        const p = this.parameters;\r\n        if (near !== undefined)\r\n            p.clipNear = near;\r\n        if (far !== undefined)\r\n            p.clipFar = far;\r\n        if (dist !== undefined)\r\n            p.clipDist = dist;\r\n        if (clipMode !== undefined)\r\n            p.clipMode = clipMode;\r\n        if (clipScale !== undefined)\r\n            p.clipScale = clipScale;\r\n        this.requestRender();\r\n    }\r\n    setSize(width, height) {\r\n        this.width = width || 1;\r\n        this.height = height || 1;\r\n        this.perspectiveCamera.aspect = this.width / this.height;\r\n        this.orthographicCamera.left = -this.width / 2;\r\n        this.orthographicCamera.right = this.width / 2;\r\n        this.orthographicCamera.top = this.height / 2;\r\n        this.orthographicCamera.bottom = -this.height / 2;\r\n        this.camera.updateProjectionMatrix();\r\n        const dpr = window.devicePixelRatio;\r\n        this.renderer.setPixelRatio(dpr);\r\n        this.renderer.setSize(width, height);\r\n        const dprWidth = this.width * dpr;\r\n        const dprHeight = this.height * dpr;\r\n        this.pickingTarget.setSize(dprWidth, dprHeight);\r\n        this.sampleTarget.setSize(dprWidth, dprHeight);\r\n        this.holdTarget.setSize(dprWidth, dprHeight);\r\n        this.requestRender();\r\n    }\r\n    handleResize() {\r\n        if (this.container === document.body) {\r\n            this.setSize(window.innerWidth, window.innerHeight);\r\n        }\r\n        else {\r\n            const box = this.container.getBoundingClientRect();\r\n            this.setSize(box.width, box.height);\r\n        }\r\n    }\r\n    updateInfo(reset) {\r\n        const { memory, render } = this.info;\r\n        if (reset) {\r\n            memory.programs = 0;\r\n            memory.geometries = 0;\r\n            memory.textures = 0;\r\n            render.calls = 0;\r\n            render.vertices = 0;\r\n            render.points = 0;\r\n        }\r\n        else {\r\n            const rInfo = this.renderer.info;\r\n            const rMemory = rInfo.memory;\r\n            const rRender = rInfo.render;\r\n            memory.geometries = rMemory.geometries;\r\n            memory.textures = rMemory.textures;\r\n            render.calls += rRender.calls;\r\n            render.faces += rRender.triangles;\r\n            render.points += rRender.points;\r\n        }\r\n    }\r\n    animate() {\r\n        this.signals.ticked.dispatch(this.stats);\r\n        const delta = window.performance.now() - this.stats.startTime;\r\n        if (delta > 500 && !this.isStill && this.sampleLevel < 3 && this.sampleLevel !== -1) {\r\n            const currentSampleLevel = this.sampleLevel;\r\n            this.sampleLevel = 3;\r\n            this.renderPending = true;\r\n            this.render();\r\n            this.isStill = true;\r\n            this.sampleLevel = currentSampleLevel;\r\n            if (Debug)\r\n                Log.log('rendered still frame');\r\n        }\r\n        window.requestAnimationFrame(this.animate);\r\n    }\r\n    pick(x, y) {\r\n        if (this.parameters.cameraType === 'stereo') {\r\n            // TODO picking broken for stereo camera\r\n            return {\r\n                'pid': 0,\r\n                'instance': undefined,\r\n                'picker': undefined\r\n            };\r\n        }\r\n        x *= window.devicePixelRatio;\r\n        y *= window.devicePixelRatio;\r\n        x = Math.max(x - 2, 0);\r\n        y = Math.max(y - 2, 0);\r\n        let pid = 0, instance, picker;\r\n        const pixelBuffer = SupportsReadPixelsFloat ? pixelBufferFloat : pixelBufferUint;\r\n        this.render(true);\r\n        this.renderer.readRenderTargetPixels(this.pickingTarget, x, y, 5, 5, pixelBuffer);\r\n        for (let i = 0; i < pixelOrder.length; i++) {\r\n            const offset = pixelOrder[i] * 4;\r\n            const oid = Math.round(pixelBuffer[offset + 3]);\r\n            const object = this.pickingGroup.getObjectById(oid);\r\n            if (object) {\r\n                instance = object.userData.instance;\r\n                picker = object.userData.buffer.picking;\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n            if (SupportsReadPixelsFloat) {\r\n                pid =\r\n                    ((Math.round(pixelBuffer[offset] * 255) << 16) & 0xFF0000) |\r\n                        ((Math.round(pixelBuffer[offset + 1] * 255) << 8) & 0x00FF00) |\r\n                        ((Math.round(pixelBuffer[offset + 2] * 255)) & 0x0000FF);\r\n            }\r\n            else {\r\n                pid =\r\n                    (pixelBuffer[offset] << 16) |\r\n                        (pixelBuffer[offset + 1] << 8) |\r\n                        (pixelBuffer[offset + 2]);\r\n            }\r\n        }\r\n        // if( Debug ){\r\n        //   const rgba = Array.apply( [], pixelBuffer );\r\n        //   Log.log( pixelBuffer );\r\n        //   Log.log(\r\n        //     \"picked color\",\r\n        //     rgba.map( c => { return c.toPrecision( 2 ) } )\r\n        //   );\r\n        //   Log.log( \"picked pid\", pid );\r\n        //   Log.log( \"picked oid\", oid );\r\n        //   Log.log( \"picked object\", object );\r\n        //   Log.log( \"picked instance\", instance );\r\n        //   Log.log( \"picked position\", x, y );\r\n        //   Log.log( \"devicePixelRatio\", window.devicePixelRatio );\r\n        // }\r\n        return { pid, instance, picker };\r\n    }\r\n    requestRender() {\r\n        if (this.renderPending) {\r\n            // Log.info(\"there is still a 'render' call pending\")\r\n            return;\r\n        }\r\n        // start gathering stats anew after inactivity\r\n        if (window.performance.now() - this.stats.startTime > 22) {\r\n            this.stats.begin();\r\n            this.isStill = false;\r\n        }\r\n        this.renderPending = true;\r\n        window.requestAnimationFrame(() => {\r\n            this.render();\r\n            this.stats.update();\r\n        });\r\n    }\r\n    updateZoom() {\r\n        const fov = degToRad(this.perspectiveCamera.fov);\r\n        const height = 2 * Math.tan(fov / 2) * this.cameraDistance;\r\n        this.orthographicCamera.zoom = this.height / height;\r\n    }\r\n    /**\r\n     * Convert an absolute clip value to a relative one using bRadius.\r\n     *\r\n     * 0.0 -> 50.0\r\n     * bRadius -> 0.0\r\n     */\r\n    absoluteToRelative(d) {\r\n        return 50 * (1 - d / this.bRadius);\r\n    }\r\n    /**\r\n     * Convert a relative clip value to an absolute one using bRadius\r\n     *\r\n     * 0.0 -> bRadius\r\n     * 50.0 -> 0.0\r\n     */\r\n    relativeToAbsolute(d) {\r\n        return this.bRadius * (1 - d / 50);\r\n    }\r\n    /**\r\n     * Intepret clipMode, clipScale and set the camera and fog clipping.\r\n     * Also ensures bRadius and cDist are valid\r\n     */\r\n    __updateClipping() {\r\n        const p = this.parameters;\r\n        // bRadius must always be updated for material-based clipping\r\n        // and for focus calculations\r\n        this.bRadius = Math.max(10, this.boundingBoxLength * 0.5);\r\n        // FL: Removed below, but leaving commented as I don't understand intention\r\n        // this.bRadius += this.boundingBox.getCenter(this.distVector).length()\r\n        if (!isFinite(this.bRadius)) {\r\n            this.bRadius = 50;\r\n        }\r\n        this.camera.getWorldPosition(this.distVector);\r\n        this.cDist = this.distVector.length();\r\n        if (!this.cDist) {\r\n            // recover from a broken (NaN) camera position\r\n            this.cameraDistance = Math.abs(p.cameraZ);\r\n            this.cDist = Math.abs(p.cameraZ);\r\n        }\r\n        // fog\r\n        const fog = this.scene.fog;\r\n        fog.color.set(p.fogColor);\r\n        if (p.clipMode === 'camera') {\r\n            // Always interpret clipScale as absolute for clipMode camera\r\n            this.camera.near = p.clipNear;\r\n            this.camera.far = p.clipFar;\r\n            fog.near = p.fogNear;\r\n            fog.far = p.fogFar;\r\n        }\r\n        else {\r\n            // scene mode\r\n            if (p.clipScale === 'absolute') {\r\n                // absolute scene mode; offset clip planes from scene center\r\n                // (note: positive values move near plane towards camera and rear plane away)\r\n                this.camera.near = this.cDist - p.clipNear;\r\n                this.camera.far = this.cDist + p.clipFar;\r\n                fog.near = this.cDist - p.fogNear;\r\n                fog.far = this.cDist + p.fogFar;\r\n            }\r\n            else {\r\n                // relative scene mode (default): convert pecentages to Angstroms\r\n                const nearFactor = (50 - p.clipNear) / 50;\r\n                const farFactor = -(50 - p.clipFar) / 50;\r\n                this.camera.near = this.cDist - (this.bRadius * nearFactor);\r\n                this.camera.far = this.cDist + (this.bRadius * farFactor);\r\n                const fogNearFactor = (50 - p.fogNear) / 50;\r\n                const fogFarFactor = -(50 - p.fogFar) / 50;\r\n                fog.near = this.cDist - (this.bRadius * fogNearFactor);\r\n                fog.far = this.cDist + (this.bRadius * fogFarFactor);\r\n            }\r\n        }\r\n        if (p.clipMode !== 'camera') {\r\n            if (this.camera.type === 'PerspectiveCamera') {\r\n                this.camera.near = Math.max(0.1, p.clipDist, this.camera.near);\r\n                this.camera.far = Math.max(1, this.camera.far);\r\n                fog.near = Math.max(0.1, fog.near);\r\n                fog.far = Math.max(1, fog.far);\r\n            }\r\n            else if (this.camera.type === 'OrthographicCamera') {\r\n                if (p.clipDist > 0) {\r\n                    this.camera.near = Math.max(p.clipDist, this.camera.near);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    __updateCamera() {\r\n        const camera = this.camera;\r\n        camera.updateMatrix();\r\n        camera.updateMatrixWorld(true);\r\n        camera.updateProjectionMatrix();\r\n        updateMaterialUniforms(this.scene, camera, this.renderer, this.cDist, this.bRadius);\r\n        sortProjectedPosition(this.scene, camera);\r\n    }\r\n    __setVisibility(model, picking, background, helper) {\r\n        this.modelGroup.visible = model;\r\n        this.pickingGroup.visible = picking;\r\n        this.backgroundGroup.visible = background;\r\n        this.helperGroup.visible = helper;\r\n    }\r\n    __updateLights() {\r\n        this.spotLight.color.set(this.parameters.lightColor);\r\n        this.spotLight.intensity = this.parameters.lightIntensity;\r\n        this.distVector.copy(this.camera.position).setLength(this.boundingBoxLength * 100);\r\n        this.spotLight.position.copy(this.camera.position).add(this.distVector);\r\n        this.ambientLight.color.set(this.parameters.ambientColor);\r\n        this.ambientLight.intensity = this.parameters.ambientIntensity;\r\n    }\r\n    __renderPickingGroup(camera) {\r\n        this.renderer.setRenderTarget(this.pickingTarget || null);\r\n        this.renderer.clear();\r\n        this.__setVisibility(false, true, false, false);\r\n        this.renderer.render(this.scene, camera);\r\n        this.renderer.setRenderTarget(null);\r\n        this.updateInfo();\r\n        //  back to standard render target\r\n        this.renderer.setRenderTarget(null); // TODO\r\n        // if (Debug) {\r\n        //   this.__setVisibility(false, true, false, true);\r\n        //   this.renderer.clear();\r\n        //   this.renderer.render(this.scene, camera);\r\n        // }\r\n    }\r\n    __renderModelGroup(camera, renderTarget) {\r\n        this.renderer.setRenderTarget(renderTarget || null);\r\n        this.renderer.clear();\r\n        this.__setVisibility(false, false, true, false);\r\n        this.renderer.render(this.scene, camera);\r\n        this.renderer.clear(false, true, true);\r\n        this.updateInfo();\r\n        this.__setVisibility(true, false, false, Debug);\r\n        this.renderer.render(this.scene, camera);\r\n        this.renderer.setRenderTarget(null); // set back to default canvas\r\n        this.updateInfo();\r\n    }\r\n    __renderSuperSample(camera) {\r\n        // based on the Supersample Anti-Aliasing Render Pass\r\n        // contributed to three.js by bhouston / http://clara.io/\r\n        //\r\n        // This manual approach to SSAA re-renders the scene ones for\r\n        // each sample with camera jitter and accumulates the results.\r\n        // References: https://en.wikipedia.org/wiki/Supersampling\r\n        const offsetList = JitterVectors[Math.max(0, Math.min(this.sampleLevel, 5))];\r\n        const baseSampleWeight = 1.0 / offsetList.length;\r\n        const roundingRange = 1 / 32;\r\n        this.compositeUniforms.tForeground.value = this.sampleTarget.texture;\r\n        let width = this.sampleTarget.width;\r\n        const height = this.sampleTarget.height;\r\n        if (this.parameters.cameraType === 'stereo') {\r\n            width /= 2;\r\n        }\r\n        // render the scene multiple times, each slightly jitter offset\r\n        // from the last and accumulate the results.\r\n        for (let i = 0; i < offsetList.length; ++i) {\r\n            const offset = offsetList[i];\r\n            camera.setViewOffset(width, height, offset[0], offset[1], width, height);\r\n            camera.updateProjectionMatrix();\r\n            updateCameraUniforms(this.scene, camera);\r\n            let sampleWeight = baseSampleWeight;\r\n            // the theory is that equal weights for each sample lead to an\r\n            // accumulation of rounding errors.\r\n            // The following equation varies the sampleWeight per sample\r\n            // so that it is uniformly distributed across a range of values\r\n            // whose rounding errors cancel each other out.\r\n            const uniformCenteredDistribution = -0.5 + (i + 0.5) / offsetList.length;\r\n            sampleWeight += roundingRange * uniformCenteredDistribution;\r\n            this.compositeUniforms.scale.value = sampleWeight;\r\n            this.__renderModelGroup(camera, this.sampleTarget);\r\n            this.renderer.setRenderTarget(this.holdTarget);\r\n            if (i === 0) {\r\n                this.renderer.clear();\r\n            }\r\n            this.renderer.render(this.compositeScene, this.compositeCamera);\r\n        }\r\n        this.compositeUniforms.scale.value = 1.0;\r\n        this.compositeUniforms.tForeground.value = this.holdTarget.texture;\r\n        camera.clearViewOffset();\r\n        this.renderer.setRenderTarget(null);\r\n        this.renderer.clear();\r\n        this.renderer.render(this.compositeScene, this.compositeCamera);\r\n    }\r\n    __renderStereo(picking = false) {\r\n        const stereoCamera = this.stereoCamera;\r\n        stereoCamera.update(this.perspectiveCamera);\r\n        const renderer = this.renderer;\r\n        let size = new Vector2();\r\n        renderer.getSize(size);\r\n        renderer.setScissorTest(true);\r\n        renderer.setScissor(0, 0, size.width / 2, size.height);\r\n        renderer.setViewport(0, 0, size.width / 2, size.height);\r\n        updateCameraUniforms(this.scene, stereoCamera.cameraL);\r\n        this.__render(picking, stereoCamera.cameraL);\r\n        renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\r\n        renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\r\n        updateCameraUniforms(this.scene, stereoCamera.cameraR);\r\n        this.__render(picking, stereoCamera.cameraR);\r\n        renderer.setScissorTest(false);\r\n        renderer.setViewport(0, 0, size.width, size.height);\r\n    }\r\n    __render(picking = false, camera) {\r\n        if (picking) {\r\n            if (!this.lastRenderedPicking)\r\n                this.__renderPickingGroup(camera);\r\n        }\r\n        else if (this.sampleLevel > 0 && this.parameters.cameraType !== 'stereo') {\r\n            // TODO super sample broken for stereo camera\r\n            this.__renderSuperSample(camera);\r\n        }\r\n        else {\r\n            this.__renderModelGroup(camera);\r\n        }\r\n    }\r\n    render(picking = false) {\r\n        if (this.rendering) {\r\n            Log.warn(\"'tried to call 'render' from within 'render'\");\r\n            return;\r\n        }\r\n        // Log.time('Viewer.render')\r\n        this.rendering = true;\r\n        try {\r\n            this.__updateClipping();\r\n            this.__updateCamera();\r\n            this.__updateLights();\r\n            this.updateInfo(true);\r\n            // render\r\n            if (this.parameters.cameraType === 'stereo') {\r\n                this.__renderStereo(picking);\r\n            }\r\n            else {\r\n                this.__render(picking, this.camera);\r\n            }\r\n            this.lastRenderedPicking = picking;\r\n        }\r\n        finally {\r\n            this.rendering = false;\r\n            this.renderPending = false;\r\n        }\r\n        this.signals.rendered.dispatch();\r\n        // Log.timeEnd('Viewer.render')\r\n        // Log.log(this.info.memory, this.info.render)\r\n    }\r\n    clear() {\r\n        Log.log('scene cleared');\r\n        this.scene.remove(this.rotationGroup);\r\n        this._initScene();\r\n        this.renderer.clear();\r\n    }\r\n    dispose() {\r\n        this.renderer.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=viewer.js.map","/**\r\n * @file Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport const LeftMouseButton = 1;\r\nexport const MiddleMouseButton = 2;\r\nexport const RightMouseButton = 3;\r\n//# sourceMappingURL=constants.js.map","/**\r\n * @file Mouse Observer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector2, Vector3 } from 'three';\r\nimport { Signal } from 'signals';\r\nimport { LeftMouseButton, RightMouseButton } from '../constants.js';\r\nimport { defaults } from '../utils';\r\n/**\r\n * @example\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @typedef {Object} MouseSignals\r\n * @property {Signal<Integer, Integer>} moved - on move: deltaX, deltaY\r\n * @property {Signal<Number>} scrolled - on scroll: delta\r\n * @property {Signal<Integer, Integer>} dragged - on drag: deltaX, deltaY\r\n * @property {Signal} dropped - on drop\r\n * @property {Signal} clicked - on click\r\n * @property {Signal} hovered - on hover\r\n */\r\nfunction getTouchDistance(event) {\r\n    const dx = event.touches[0].pageX - event.touches[1].pageX;\r\n    const dy = event.touches[0].pageY - event.touches[1].pageY;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\nfunction getMouseButtons(event) {\r\n    if (typeof event === 'object') {\r\n        if ('buttons' in event) {\r\n            return event.buttons;\r\n        }\r\n        else if ('which' in event) {\r\n            const b = event.which;\r\n            if (b === 2) {\r\n                return 4;\r\n            }\r\n            else if (b === 3) {\r\n                return 2;\r\n            }\r\n            else if (b > 0) {\r\n                return 1 << (b - 1);\r\n            }\r\n        }\r\n        else if ('button' in event) {\r\n            const b = event.button;\r\n            if (b === 1) {\r\n                return 4;\r\n            }\r\n            else if (b === 2) {\r\n                return 2;\r\n            }\r\n            else if (b >= 0) {\r\n                return 1 << b;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Mouse observer\r\n *\r\n * @example\r\n * // listen to mouse moving (and touch-moving) events\r\n * mouseObserver.moved.moved.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to scrolling (and pinching) events\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @example\r\n * // listen to dragging (and touch-dragging) events\r\n * mouseObserver.signals.dragged.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to clicking (and tapping) events\r\n * mouseObserver.signals.clicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to double clicking (and double tapping) events\r\n * mouseObserver.signals.doubleClicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to hovering events\r\n * mouseObserver.signals.hovered.add( function(){ ... } );\r\n */\r\nclass MouseObserver {\r\n    /**\r\n     * @param  {Element} domElement - the dom element to observe mouse events in\r\n     * @param  {Object} params - parameters object\r\n     * @param  {Integer} params.hoverTimeout - timeout in ms until the {@link MouseSignals.hovered}\r\n     *                                         signal is fired, set to -1 to ignore hovering\r\n     * @param  {Boolean} params.handleScroll - whether or not to handle scroll events\r\n     * @param  {Integer} params.doubleClickSpeed - max time in ms to trigger double click\r\n     */\r\n    constructor(domElement, stage, params = {}) {\r\n        this.domElement = domElement;\r\n        this.signals = {\r\n            moved: new Signal(),\r\n            scrolled: new Signal(),\r\n            dragged: new Signal(),\r\n            dropped: new Signal(),\r\n            clicked: new Signal(),\r\n            hovered: new Signal(),\r\n            doubleClicked: new Signal()\r\n        };\r\n        this.position = new Vector2(); // Position on page\r\n        this.prevPosition = new Vector2(); // Previous position on page\r\n        this.down = new Vector2(); // Position on page when clicked\r\n        this.canvasPosition = new Vector2(); // Position on dom element\r\n        this.prevClickCP = new Vector2();\r\n        this.moving = false; // Flag indicating if the mouse is moving\r\n        this.hovering = true; // Flag indicating if the mouse is hovering\r\n        this.scrolled = false; // Flag indicating if there was a scolling event since the last mouse move\r\n        this.lastMoved = Infinity; // Timestamp of last mouse move\r\n        this.which = 0; // 0: No button; 1: Left button; 2: Middle button; 3: Right button\r\n        this.buttons = 0; // 0: No button; 1: Left button; 2: Right button; 4: Middle button\r\n        this.pressed = false; // Flag indicating if the mouse is pressed down\r\n        this.altKey = false; // Flag indicating if the alt key is pressed\r\n        this.ctrlKey = false; // Flag indicating if the ctrl key is pressed\r\n        this.metaKey = false; // Flag indicating if the meta key is pressed\r\n        this.shiftKey = false; // Flag indicating if the shift key is pressed\r\n        this.domElement.style.touchAction = 'none';\r\n        this.hoverTimeout = defaults(params.hoverTimeout, 50);\r\n        this.handleScroll = defaults(params.handleScroll, true);\r\n        this.doubleClickSpeed = defaults(params.doubleClickSpeed, 500);\r\n        this.stage = stage;\r\n        this._listen = this._listen.bind(this);\r\n        this._onMousewheel = this._onMousewheel.bind(this);\r\n        this._onMousemove = this._onMousemove.bind(this);\r\n        this._onMousedown = this._onMousedown.bind(this);\r\n        this._onMouseup = this._onMouseup.bind(this);\r\n        this._onContextmenu = this._onContextmenu.bind(this);\r\n        this._onTouchstart = this._onTouchstart.bind(this);\r\n        this._onTouchend = this._onTouchend.bind(this);\r\n        this._onTouchmove = this._onTouchmove.bind(this);\r\n        this._listen();\r\n        const opt = { passive: false }; // treat as 'passive' so preventDefault can be called\r\n        document.addEventListener('mousewheel', this._onMousewheel, opt);\r\n        document.addEventListener('wheel', this._onMousewheel, opt);\r\n        document.addEventListener('MozMousePixelScroll', this._onMousewheel, opt);\r\n        document.addEventListener('mousemove', this._onMousemove, opt);\r\n        document.addEventListener('mousedown', this._onMousedown, opt);\r\n        document.addEventListener('mouseup', this._onMouseup, opt);\r\n        document.addEventListener('contextmenu', this._onContextmenu, opt);\r\n        document.addEventListener('touchstart', this._onTouchstart, opt);\r\n        document.addEventListener('touchend', this._onTouchend, opt);\r\n        document.addEventListener('touchmove', this._onTouchmove, opt);\r\n    }\r\n    get key() {\r\n        let key = 0;\r\n        if (this.altKey)\r\n            key += 1;\r\n        if (this.ctrlKey)\r\n            key += 2;\r\n        if (this.metaKey)\r\n            key += 4;\r\n        if (this.shiftKey)\r\n            key += 8;\r\n        return key;\r\n    }\r\n    setParameters(params = {}) {\r\n        this.hoverTimeout = defaults(params.hoverTimeout, this.hoverTimeout);\r\n    }\r\n    /*\r\n    * Returns mouse position in normalized device coordinates\r\n    */\r\n    getNdcPosition() {\r\n        const ssPos = this.canvasPosition;\r\n        const canvasSize = new Vector2(this.stage.viewer.container.clientWidth, this.stage.viewer.container.clientHeight);\r\n        return ssPos.divide(canvasSize).multiplyScalar(2.0).subScalar(1.0);\r\n    }\r\n    /*\r\n    * Returns world coordinates corresponding to the current mouse position\r\n    */\r\n    getWorldPosition() {\r\n        const ndcPos = this.getNdcPosition();\r\n        const ndcToWorld = new Vector3(ndcPos.x, ndcPos.y, 0).unproject(this.stage.viewer.camera);\r\n        // Since the whole stage itself is also transformed, it is necessary to \r\n        // apply inverse transformations to the computed world position to get\r\n        // correct behavior\r\n        ndcToWorld\r\n            .applyQuaternion(this.stage.viewerControls.rotation.clone().conjugate())\r\n            .add(this.stage.viewerControls.position.clone().negate());\r\n        return ndcToWorld;\r\n    }\r\n    /**\r\n     * listen to mouse actions\r\n     * @emits {MouseSignals.clicked} when clicked\r\n     * @emits {MouseSignals.hovered} when hovered\r\n     * @return {undefined}\r\n     */\r\n    _listen() {\r\n        const now = window.performance.now();\r\n        const cp = this.canvasPosition;\r\n        if (this.doubleClickPending && now - this.lastClicked > this.doubleClickSpeed) {\r\n            this.doubleClickPending = false;\r\n        }\r\n        if (now - this.lastMoved > this.hoverTimeout) {\r\n            this.moving = false;\r\n        }\r\n        if (this.scrolled || (!this.moving && !this.hovering)) {\r\n            this.scrolled = false;\r\n            if (this.hoverTimeout !== -1 && this.overElement) {\r\n                this.hovering = true;\r\n                this.signals.hovered.dispatch(cp.x, cp.y);\r\n            }\r\n        }\r\n        window.requestAnimationFrame(this._listen);\r\n    }\r\n    /**\r\n     * handle mouse scroll\r\n     * @emits {MouseSignals.scrolled} when scrolled\r\n     * @param  {Event} event - mouse event\r\n     * @return {undefined}\r\n     */\r\n    _onMousewheel(event) {\r\n        if (event.target !== this.domElement || !this.handleScroll) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this._setKeys(event);\r\n        let delta = 0;\r\n        if ('deltaY' in event && 'deltaMode' in event) {\r\n            // all modern browsers, using WheelEvent; deltaY + down (toward user)\r\n            if (event.deltaMode === WheelEvent.DOM_DELTA_PIXEL)\r\n                // everything except Firefox: normally 100 per wheel click\r\n                delta = -event.deltaY * (2.5 / 100.0);\r\n            else if (event.deltaMode === WheelEvent.DOM_DELTA_LINE)\r\n                // Firefox in line mode, normally 3 per wheel click\r\n                delta = -event.deltaY * (2.5 / 3.0);\r\n            else // page mode: 1 per wheel click\r\n                delta = -event.deltaY * 2.5;\r\n        }\r\n        else if ('deltaY' in event && !('detail' in event)) {\r\n            // Old Firefox or IE 11: deltaY but no deltaMode; treat as pixels\r\n            delta = -event.deltaY * (2.5 / 100.0);\r\n        }\r\n        else if (event.wheelDelta !== undefined) {\r\n            delta = -event.wheelDelta * (2.5 / 100);\r\n        }\r\n        else if (event.wheelDeltaY !== undefined) {\r\n            delta = -event.wheelDeltaY * (2.5 / 100);\r\n        }\r\n        else {\r\n            // Old Firefox, MouseWheelEvent\r\n            delta = -event.detail / 3;\r\n        }\r\n        this.signals.scrolled.dispatch(delta);\r\n        setTimeout(() => {\r\n            this.scrolled = true;\r\n        }, this.hoverTimeout);\r\n    }\r\n    /**\r\n     * handle mouse move\r\n     * @emits {MouseSignals.moved} when moved\r\n     * @emits {MouseSignals.dragged} when dragged\r\n     * @param  {Event} event - mouse event\r\n     * @return {undefined}\r\n     */\r\n    _onMousemove(event) {\r\n        if (event.target === this.domElement) {\r\n            event.preventDefault();\r\n            this.overElement = true;\r\n        }\r\n        else {\r\n            this.overElement = false;\r\n        }\r\n        this._setKeys(event);\r\n        this.moving = true;\r\n        this.hovering = false;\r\n        this.lastMoved = window.performance.now();\r\n        this.prevPosition.copy(this.position);\r\n        this.position.set(event.clientX, event.clientY);\r\n        this._setCanvasPosition(event);\r\n        const dx = this.prevPosition.x - this.position.x;\r\n        const dy = this.prevPosition.y - this.position.y;\r\n        this.signals.moved.dispatch(dx, dy);\r\n        if (this.pressed) {\r\n            this.signals.dragged.dispatch(dx, dy);\r\n        }\r\n    }\r\n    _onMousedown(event) {\r\n        if (event.target !== this.domElement) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this._setKeys(event);\r\n        this.moving = false;\r\n        this.hovering = false;\r\n        this.down.set(event.clientX, event.clientY);\r\n        this.position.set(event.clientX, event.clientY);\r\n        this.which = event.which;\r\n        this.buttons = getMouseButtons(event);\r\n        this.pressed = true;\r\n        this._setCanvasPosition(event);\r\n    }\r\n    /**\r\n     * handle mouse up\r\n     * @emits {MouseSignals.doubleClicked} when double clicked\r\n     * @emits {MouseSignals.dropped} when dropped\r\n     * @param  {Event} event - mouse event\r\n     * @return {undefined}\r\n     */\r\n    _onMouseup(event) {\r\n        if (event.target === this.domElement) {\r\n            event.preventDefault();\r\n        }\r\n        this._setKeys(event);\r\n        const cp = this.canvasPosition;\r\n        if (this._distance() < 4) {\r\n            this.lastClicked = window.performance.now();\r\n            if (this.doubleClickPending && this.prevClickCP.distanceTo(cp) < 4) {\r\n                this.signals.doubleClicked.dispatch(cp.x, cp.y);\r\n                this.doubleClickPending = false;\r\n            }\r\n            this.signals.clicked.dispatch(cp.x, cp.y);\r\n            this.doubleClickPending = true;\r\n            this.prevClickCP.copy(cp);\r\n        }\r\n        this.which = undefined;\r\n        this.buttons = undefined;\r\n        this.pressed = undefined;\r\n        // if (this._distance() > 3 || event.which === RightMouseButton) {\r\n        //   this.signals.dropped.dispatch();\r\n        // }\r\n    }\r\n    _onContextmenu(event) {\r\n        if (event.target === this.domElement) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    _onTouchstart(event) {\r\n        if (event.target !== this.domElement) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        this.pressed = true;\r\n        switch (event.touches.length) {\r\n            case 1: {\r\n                this.moving = false;\r\n                this.hovering = false;\r\n                this.down.set(event.touches[0].pageX, event.touches[0].pageY);\r\n                this.position.set(event.touches[0].pageX, event.touches[0].pageY);\r\n                this._setCanvasPosition(event.touches[0]);\r\n                break;\r\n            }\r\n            case 2: {\r\n                this.down.set((event.touches[0].pageX + event.touches[1].pageX) / 2, (event.touches[0].pageY + event.touches[1].pageY) / 2);\r\n                this.position.set((event.touches[0].pageX + event.touches[1].pageX) / 2, (event.touches[0].pageY + event.touches[1].pageY) / 2);\r\n                this.lastTouchDistance = getTouchDistance(event);\r\n            }\r\n        }\r\n    }\r\n    _onTouchend(event) {\r\n        if (event.target === this.domElement) {\r\n            event.preventDefault();\r\n        }\r\n        this.which = undefined;\r\n        this.buttons = undefined;\r\n        this.pressed = undefined;\r\n    }\r\n    _onTouchmove(event) {\r\n        if (event.target === this.domElement) {\r\n            event.preventDefault();\r\n            this.overElement = true;\r\n        }\r\n        else {\r\n            this.overElement = false;\r\n        }\r\n        switch (event.touches.length) {\r\n            case 1: {\r\n                this._setKeys(event);\r\n                this.which = LeftMouseButton;\r\n                this.buttons = 1;\r\n                this.moving = true;\r\n                this.hovering = false;\r\n                this.lastMoved = window.performance.now();\r\n                this.prevPosition.copy(this.position);\r\n                this.position.set(event.touches[0].pageX, event.touches[0].pageY);\r\n                this._setCanvasPosition(event.touches[0]);\r\n                const dx = this.prevPosition.x - this.position.x;\r\n                const dy = this.prevPosition.y - this.position.y;\r\n                this.signals.moved.dispatch(dx, dy);\r\n                if (this.pressed) {\r\n                    this.signals.dragged.dispatch(dx, dy);\r\n                }\r\n                break;\r\n            }\r\n            case 2: {\r\n                const touchDistance = getTouchDistance(event);\r\n                const delta = touchDistance - this.lastTouchDistance;\r\n                this.lastTouchDistance = touchDistance;\r\n                this.prevPosition.copy(this.position);\r\n                this.position.set((event.touches[0].pageX + event.touches[1].pageX) / 2, (event.touches[0].pageY + event.touches[1].pageY) / 2);\r\n                if (Math.abs(delta) > 2 && this.handleScroll &&\r\n                    this.position.distanceTo(this.prevPosition) < 2) {\r\n                    this.which = 0;\r\n                    this.buttons = 0;\r\n                    this.signals.scrolled.dispatch(delta / 2);\r\n                }\r\n                else {\r\n                    this.which = RightMouseButton;\r\n                    this.buttons = 2;\r\n                    const dx = this.prevPosition.x - this.position.x;\r\n                    const dy = this.prevPosition.y - this.position.y;\r\n                    this.signals.moved.dispatch(dx, dy);\r\n                    if (this.pressed) {\r\n                        this.signals.dragged.dispatch(dx, dy);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _distance() {\r\n        return this.position.distanceTo(this.down);\r\n    }\r\n    _setCanvasPosition(event) {\r\n        const box = this.domElement.getBoundingClientRect();\r\n        let offsetX, offsetY;\r\n        if ('offsetX' in event && 'offsetY' in event) {\r\n            offsetX = event.offsetX;\r\n            offsetY = event.offsetY;\r\n        }\r\n        else {\r\n            offsetX = event.clientX - box.left;\r\n            offsetY = event.clientY - box.top;\r\n        }\r\n        this.canvasPosition.set(offsetX, box.height - offsetY);\r\n    }\r\n    _setKeys(event) {\r\n        this.altKey = event.altKey;\r\n        this.ctrlKey = event.ctrlKey;\r\n        this.metaKey = event.metaKey;\r\n        this.shiftKey = event.shiftKey;\r\n    }\r\n    dispose() {\r\n        document.removeEventListener('mousewheel', this._onMousewheel);\r\n        document.removeEventListener('wheel', this._onMousewheel);\r\n        document.removeEventListener('MozMousePixelScroll', this._onMousewheel);\r\n        document.removeEventListener('mousemove', this._onMousemove);\r\n        document.removeEventListener('mousedown', this._onMousedown);\r\n        document.removeEventListener('mouseup', this._onMouseup);\r\n        document.removeEventListener('contextmenu', this._onContextmenu);\r\n        document.removeEventListener('touchstart', this._onTouchstart);\r\n        document.removeEventListener('touchend', this._onTouchend);\r\n        document.removeEventListener('touchmove', this._onTouchmove);\r\n    }\r\n}\r\nexport default MouseObserver;\r\n//# sourceMappingURL=mouse-observer.js.map","/**\r\n * @file Trackball Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4, Quaternion } from 'three';\r\nimport { defaults } from '../utils';\r\nconst tmpRotateXMatrix = new Matrix4();\r\nconst tmpRotateYMatrix = new Matrix4();\r\nconst tmpRotateZMatrix = new Matrix4();\r\nconst tmpRotateMatrix = new Matrix4();\r\nconst tmpRotateCameraMatrix = new Matrix4();\r\nconst tmpRotateVector = new Vector3();\r\nconst tmpRotateQuaternion = new Quaternion();\r\nconst tmpRotateQuaternion2 = new Quaternion();\r\nconst tmpPanMatrix = new Matrix4();\r\nconst tmpPanVector = new Vector3();\r\nconst tmpAtomVector = new Vector3();\r\n/**\r\n * Trackball controls\r\n */\r\nclass TrackballControls {\r\n    constructor(stage, params = {}) {\r\n        this.stage = stage;\r\n        this.rotateSpeed = defaults(params.rotateSpeed, 2.0);\r\n        this.zoomSpeed = defaults(params.zoomSpeed, 1.2);\r\n        this.panSpeed = defaults(params.panSpeed, 1.0);\r\n        this.viewer = stage.viewer;\r\n        this.mouse = stage.mouseObserver;\r\n        this.controls = stage.viewerControls;\r\n    }\r\n    get component() {\r\n        return this.stage.transformComponent;\r\n    }\r\n    get atom() {\r\n        return this.stage.transformAtom;\r\n    }\r\n    _setPanVector(x, y, z = 0) {\r\n        const scaleFactor = this.controls.getCanvasScaleFactor(z);\r\n        tmpPanVector.set(x, y, 0);\r\n        tmpPanVector.multiplyScalar(this.panSpeed * scaleFactor);\r\n    }\r\n    _getRotateXY(x, y) {\r\n        return [\r\n            this.rotateSpeed * -x * 0.01,\r\n            this.rotateSpeed * y * 0.01\r\n        ];\r\n    }\r\n    _getCameraRotation(m) {\r\n        m.extractRotation(this.viewer.camera.matrixWorld);\r\n        m.multiply(tmpRotateYMatrix.makeRotationY(Math.PI));\r\n        return m;\r\n    }\r\n    _transformPanVector() {\r\n        if (!this.component)\r\n            return;\r\n        // Adjust for component and scene rotation\r\n        tmpPanMatrix.extractRotation(this.component.transform);\r\n        tmpPanMatrix.premultiply(this.viewer.rotationGroup.matrix);\r\n        tmpPanMatrix.getInverse(tmpPanMatrix);\r\n        // Adjust for camera rotation\r\n        tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix));\r\n        tmpPanVector.applyMatrix4(tmpPanMatrix);\r\n    }\r\n    zoom(delta) {\r\n        this.controls.zoom(this.zoomSpeed * delta * 0.02);\r\n    }\r\n    pan(x, y) {\r\n        this._setPanVector(x, y);\r\n        // Adjust for scene rotation\r\n        tmpPanMatrix.getInverse(this.viewer.rotationGroup.matrix);\r\n        // Adjust for camera rotation\r\n        tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix));\r\n        tmpPanVector.applyMatrix4(tmpPanMatrix);\r\n        this.controls.translate(tmpPanVector);\r\n    }\r\n    panComponent(x, y) {\r\n        if (!this.component)\r\n            return;\r\n        this._setPanVector(x, y);\r\n        this._transformPanVector();\r\n        this.component.position.add(tmpPanVector);\r\n        this.component.updateMatrix();\r\n    }\r\n    panAtom(x, y) {\r\n        if (!this.atom || !this.component)\r\n            return;\r\n        this.atom.positionToVector3(tmpAtomVector);\r\n        tmpAtomVector.add(this.viewer.translationGroup.position);\r\n        tmpAtomVector.applyMatrix4(this.viewer.rotationGroup.matrix);\r\n        this._setPanVector(x, y, tmpAtomVector.z);\r\n        this._transformPanVector();\r\n        this.atom.positionAdd(tmpPanVector);\r\n        this.component.updateRepresentations({ 'position': true });\r\n    }\r\n    rotate(x, y) {\r\n        const [dx, dy] = this._getRotateXY(x, y);\r\n        // rotate around screen X then screen Y\r\n        this._getCameraRotation(tmpRotateMatrix);\r\n        tmpRotateVector.set(1, 0, 0); // X axis\r\n        tmpRotateVector.applyMatrix4(tmpRotateMatrix); // screen X\r\n        tmpRotateQuaternion.setFromAxisAngle(tmpRotateVector, dy);\r\n        tmpRotateVector.set(0, 1, 0); // Y axis\r\n        tmpRotateVector.applyMatrix4(tmpRotateMatrix); // screen Y\r\n        tmpRotateQuaternion2.setFromAxisAngle(tmpRotateVector, dx);\r\n        tmpRotateQuaternion.multiply(tmpRotateQuaternion2);\r\n        tmpRotateMatrix.makeRotationFromQuaternion(tmpRotateQuaternion);\r\n        this.controls.applyMatrix(tmpRotateMatrix);\r\n    }\r\n    zRotate(x, y) {\r\n        const dz = this.rotateSpeed * ((-x + y) / -2) * 0.01;\r\n        tmpRotateZMatrix.makeRotationZ(dz);\r\n        this.controls.applyMatrix(tmpRotateZMatrix);\r\n    }\r\n    rotateComponent(x, y) {\r\n        if (!this.component)\r\n            return;\r\n        const [dx, dy] = this._getRotateXY(x, y);\r\n        this._getCameraRotation(tmpRotateCameraMatrix);\r\n        tmpRotateMatrix.extractRotation(this.component.transform);\r\n        tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix);\r\n        tmpRotateMatrix.getInverse(tmpRotateMatrix);\r\n        tmpRotateMatrix.premultiply(tmpRotateCameraMatrix);\r\n        tmpRotateVector.set(1, 0, 0);\r\n        tmpRotateVector.applyMatrix4(tmpRotateMatrix);\r\n        tmpRotateXMatrix.makeRotationAxis(tmpRotateVector, dy);\r\n        tmpRotateVector.set(0, 1, 0);\r\n        tmpRotateVector.applyMatrix4(tmpRotateMatrix);\r\n        tmpRotateYMatrix.makeRotationAxis(tmpRotateVector, dx);\r\n        tmpRotateXMatrix.multiply(tmpRotateYMatrix);\r\n        tmpRotateQuaternion.setFromRotationMatrix(tmpRotateXMatrix);\r\n        this.component.quaternion.premultiply(tmpRotateQuaternion);\r\n        this.component.quaternion.normalize();\r\n        this.component.updateMatrix();\r\n    }\r\n}\r\nexport default TrackballControls;\r\n//# sourceMappingURL=trackball-controls.js.map","/**\r\n * @file Picking Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nconst tmpVec = new Vector3();\r\nfunction closer(x, a, b) {\r\n    return x.distanceTo(a) < x.distanceTo(b);\r\n}\r\n/**\r\n * Picking proxy class.\r\n */\r\nclass PickingProxy {\r\n    /**\r\n     * Create picking proxy object\r\n     * @param  {PickingData} pickingData - picking data\r\n     * @param  {Stage} stage - stage object\r\n     */\r\n    constructor(pickingData, stage) {\r\n        this.stage = stage;\r\n        this.pid = pickingData.pid;\r\n        this.picker = pickingData.picker;\r\n        /**\r\n         * @type {Object}\r\n         */\r\n        this.instance = pickingData.instance;\r\n        /**\r\n         * @type {Stage}\r\n         */\r\n        this.stage = stage;\r\n        /**\r\n         * @type {ViewerControls}\r\n         */\r\n        this.controls = stage.viewerControls;\r\n        /**\r\n         * @type {MouseObserver}\r\n         */\r\n        this.mouse = stage.mouseObserver;\r\n    }\r\n    /**\r\n     * Kind of the picked data\r\n     * @type {String}\r\n     */\r\n    get type() { return this.picker.type; }\r\n    /**\r\n     * If the `alt` key was pressed\r\n     * @type {Boolean}\r\n     */\r\n    get altKey() { return this.mouse.altKey; }\r\n    /**\r\n     * If the `ctrl` key was pressed\r\n     * @type {Boolean}\r\n     */\r\n    get ctrlKey() { return this.mouse.ctrlKey; }\r\n    /**\r\n     * If the `meta` key was pressed\r\n     * @type {Boolean}\r\n     */\r\n    get metaKey() { return this.mouse.metaKey; }\r\n    /**\r\n     * If the `shift` key was pressed\r\n     * @type {Boolean}\r\n     */\r\n    get shiftKey() { return this.mouse.shiftKey; }\r\n    /**\r\n     * Position of the mouse on the canvas\r\n     * @type {Vector2}\r\n     */\r\n    get canvasPosition() { return this.mouse.canvasPosition; }\r\n    /**\r\n     * The component the picked data is part of\r\n     * @type {Component}\r\n     */\r\n    get component() {\r\n        return this.stage.getComponentsByObject(this.picker.data).list[0]; // TODO\r\n    }\r\n    /**\r\n     * The picked object data\r\n     * @type {Object}\r\n     */\r\n    get object() {\r\n        return this.picker.getObject(this.pid);\r\n    }\r\n    /**\r\n     * The 3d position in the scene of the picked object\r\n     * @type {Vector3}\r\n     */\r\n    get position() {\r\n        return this.picker.getPosition(this.pid, this.instance, this.component);\r\n    }\r\n    /**\r\n     * The atom of a picked bond that is closest to the mouse\r\n     * @type {AtomProxy}\r\n     */\r\n    get closestBondAtom() {\r\n        if (this.type !== 'bond' || !this.bond)\r\n            return undefined;\r\n        const bond = this.bond;\r\n        const controls = this.controls;\r\n        const cp = this.canvasPosition;\r\n        const v1 = bond.atom1.positionToVector3();\r\n        const v2 = bond.atom2.positionToVector3();\r\n        v1.applyMatrix4(this.component.matrix);\r\n        v2.applyMatrix4(this.component.matrix);\r\n        const acp1 = controls.getPositionOnCanvas(v1);\r\n        const acp2 = controls.getPositionOnCanvas(v2);\r\n        return closer(cp, acp1, acp2) ? bond.atom1 : bond.atom2;\r\n    }\r\n    /**\r\n     * Close-by atom\r\n     * @type {AtomProxy}\r\n     */\r\n    get closeAtom() {\r\n        const cp = this.canvasPosition;\r\n        const ca = this.closestBondAtom;\r\n        if (!ca)\r\n            return undefined;\r\n        const v = ca.positionToVector3().applyMatrix4(this.component.matrix);\r\n        const acp = this.controls.getPositionOnCanvas(v);\r\n        ca.positionToVector3(tmpVec);\r\n        if (this.instance)\r\n            tmpVec.applyMatrix4(this.instance.matrix);\r\n        tmpVec.applyMatrix4(this.component.matrix);\r\n        const viewer = this.controls.viewer;\r\n        tmpVec.add(viewer.translationGroup.position);\r\n        tmpVec.applyMatrix4(viewer.rotationGroup.matrix);\r\n        const scaleFactor = this.controls.getCanvasScaleFactor(tmpVec.z);\r\n        const sc = this.component;\r\n        const radius = sc.getMaxRepresentationRadius(ca.index);\r\n        //console.log(scaleFactor, cp.distanceTo(acp), radius/scaleFactor, radius)\r\n        if (cp.distanceTo(acp) <= radius / scaleFactor) {\r\n            return ca;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get arrow() { return this._objectIfType('arrow'); }\r\n    /**\r\n     * @type {AtomProxy}\r\n     */\r\n    get atom() { return this._objectIfType('atom'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get axes() { return this._objectIfType('axes'); }\r\n    /**\r\n     * @type {BondProxy}\r\n     */\r\n    get bond() { return this._objectIfType('bond'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get box() { return this._objectIfType('box'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get cone() { return this._objectIfType('cone'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get clash() { return this._objectIfType('clash'); }\r\n    /**\r\n     * @type {BondProxy}\r\n     */\r\n    get contact() { return this._objectIfType('contact'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get cylinder() { return this._objectIfType('cylinder'); }\r\n    /**\r\n     * @type {BondProxy}\r\n     */\r\n    get distance() { return this._objectIfType('distance'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get ellipsoid() { return this._objectIfType('ellipsoid'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get octahedron() { return this._objectIfType('octahedron'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get point() { return this._objectIfType('point'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get mesh() { return this._objectIfType('mesh'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get slice() { return this._objectIfType('slice'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get sphere() { return this._objectIfType('sphere'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get tetrahedron() { return this._objectIfType('tetrahedron'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get torus() { return this._objectIfType('torus'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get surface() { return this._objectIfType('surface'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get unitcell() { return this._objectIfType('unitcell'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get unknown() { return this._objectIfType('unknown'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get volume() { return this._objectIfType('volume'); }\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    get wideline() { return this._objectIfType('wideline'); }\r\n    _objectIfType(type) {\r\n        return this.type === type ? this.object : undefined;\r\n    }\r\n    getLabel() {\r\n        const atom = this.atom || this.closeAtom;\r\n        let msg = 'nothing';\r\n        if (this.arrow) {\r\n            msg = this.arrow.name;\r\n        }\r\n        else if (atom) {\r\n            msg = `atom: ${atom.qualifiedName()} (${atom.structure.name})`;\r\n        }\r\n        else if (this.axes) {\r\n            msg = 'axes';\r\n        }\r\n        else if (this.bond) {\r\n            msg = `bond: ${this.bond.atom1.qualifiedName()} - ${this.bond.atom2.qualifiedName()} (${this.bond.structure.name})`;\r\n        }\r\n        else if (this.box) {\r\n            msg = this.box.name;\r\n        }\r\n        else if (this.cone) {\r\n            msg = this.cone.name;\r\n        }\r\n        else if (this.clash) {\r\n            msg = `clash: ${this.clash.clash.sele1} - ${this.clash.clash.sele2}`;\r\n        }\r\n        else if (this.contact) {\r\n            msg = `${this.contact.type}: ${this.contact.atom1.qualifiedName()} - ${this.contact.atom2.qualifiedName()} (${this.contact.atom1.structure.name})`;\r\n        }\r\n        else if (this.cylinder) {\r\n            msg = this.cylinder.name;\r\n        }\r\n        else if (this.distance) {\r\n            msg = `distance: ${this.distance.atom1.qualifiedName()} - ${this.distance.atom2.qualifiedName()} (${this.distance.structure.name})`;\r\n        }\r\n        else if (this.ellipsoid) {\r\n            msg = this.ellipsoid.name;\r\n        }\r\n        else if (this.octahedron) {\r\n            msg = this.octahedron.name;\r\n        }\r\n        else if (this.point) {\r\n            msg = this.point.name;\r\n        }\r\n        else if (this.mesh) {\r\n            msg = `mesh: ${this.mesh.name || this.mesh.serial} (${this.mesh.shape.name})`;\r\n        }\r\n        else if (this.slice) {\r\n            msg = `slice: ${this.slice.value.toPrecision(3)} (${this.slice.volume.name})`;\r\n        }\r\n        else if (this.sphere) {\r\n            msg = this.sphere.name;\r\n        }\r\n        else if (this.surface) {\r\n            msg = `surface: ${this.surface.surface.name}`;\r\n        }\r\n        else if (this.tetrahedron) {\r\n            msg = this.tetrahedron.name;\r\n        }\r\n        else if (this.torus) {\r\n            msg = this.torus.name;\r\n        }\r\n        else if (this.unitcell) {\r\n            msg = `unitcell: ${this.unitcell.unitcell.spacegroup} (${this.unitcell.structure.name})`;\r\n        }\r\n        else if (this.unknown) {\r\n            msg = 'unknown';\r\n        }\r\n        else if (this.volume) {\r\n            msg = `volume: ${this.volume.value.toPrecision(3)} (${this.volume.volume.name})`;\r\n        }\r\n        else if (this.wideline) {\r\n            msg = this.wideline.name;\r\n        }\r\n        return msg;\r\n    }\r\n}\r\nexport default PickingProxy;\r\n//# sourceMappingURL=picking-proxy.js.map","/**\r\n * @file Picking Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport PickingProxy from './picking-proxy';\r\n/**\r\n * Picking controls\r\n */\r\nclass PickingControls {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.viewer = stage.viewer;\r\n    }\r\n    /**\r\n     * get picking data\r\n     * @param {Number} x - canvas x coordinate\r\n     * @param {Number} y - canvas y coordinate\r\n     * @return {PickingProxy|undefined} picking proxy\r\n     */\r\n    pick(x, y) {\r\n        const pickingData = this.viewer.pick(x, y);\r\n        if (pickingData.picker &&\r\n            pickingData.picker.type !== 'ignore' &&\r\n            pickingData.pid !== undefined) {\r\n            const pickerArray = pickingData.picker.array;\r\n            if (pickerArray && pickingData.pid >= pickerArray.length) {\r\n                console.error('pid >= picker.array.length');\r\n            }\r\n            else {\r\n                return new PickingProxy(pickingData, this.stage);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default PickingControls;\r\n//# sourceMappingURL=picking-controls.js.map","/**\r\n * @file Viewer Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4, Quaternion, OrthographicCamera } from 'three';\r\nimport * as signalsWrapper from 'signals';\r\nimport { ensureVector2, ensureVector3, ensureMatrix4, ensureQuaternion } from '../utils';\r\nimport { degToRad } from '../math/math-utils';\r\n/**\r\n * Orientation matrix, a 4x4 transformation matrix with rotation part\r\n * used for scene rotation, scale part for scene camera distance and\r\n * position part for scene translation\r\n * @typedef {Matrix4} OrientationMatrix - orientation matrix\r\n */\r\nconst tmpQ = new Quaternion();\r\nconst tmpP = new Vector3();\r\nconst tmpS = new Vector3();\r\nconst tmpCanvasVector = new Vector3();\r\nconst tmpScaleVector = new Vector3();\r\nconst tmpRotateMatrix = new Matrix4();\r\nconst tmpRotateVector = new Vector3();\r\nconst tmpAlignMatrix = new Matrix4();\r\n/**\r\n * Viewer controls\r\n */\r\nclass ViewerControls {\r\n    /**\r\n     * @param  {Stage} stage - the stage object\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.signals = {\r\n            changed: new signalsWrapper.Signal()\r\n        };\r\n        this.viewer = stage.viewer;\r\n    }\r\n    /**\r\n     * scene center position\r\n     * @type {Vector3}\r\n     */\r\n    get position() {\r\n        return this.viewer.translationGroup.position;\r\n    }\r\n    /**\r\n     * scene rotation\r\n     * @type {Quaternion}\r\n     */\r\n    get rotation() {\r\n        return this.viewer.rotationGroup.quaternion;\r\n    }\r\n    /**\r\n     * Trigger render and emit changed event\r\n     * @emits {ViewerControls.signals.changed}\r\n     * @return {undefined}\r\n     */\r\n    changed() {\r\n        this.viewer.requestRender();\r\n        this.signals.changed.dispatch();\r\n    }\r\n    getPositionOnCanvas(position, optionalTarget) {\r\n        const canvasPosition = ensureVector2(optionalTarget);\r\n        const viewer = this.viewer;\r\n        tmpCanvasVector.copy(position)\r\n            .add(viewer.translationGroup.position)\r\n            .applyMatrix4(viewer.rotationGroup.matrix)\r\n            .project(viewer.camera);\r\n        return canvasPosition.set((tmpCanvasVector.x + 1) * viewer.width / 2, (tmpCanvasVector.y + 1) * viewer.height / 2);\r\n    }\r\n    getCanvasScaleFactor(z = 0) {\r\n        const camera = this.viewer.camera;\r\n        if (camera instanceof OrthographicCamera) {\r\n            return 1 / camera.zoom;\r\n        }\r\n        else {\r\n            z = Math.abs(z);\r\n            z += this.getCameraDistance();\r\n            const fov = degToRad(camera.fov);\r\n            const unitHeight = 2.0 * z * Math.tan(fov / 2);\r\n            return unitHeight / this.viewer.height;\r\n        }\r\n    }\r\n    /**\r\n     * get scene orientation\r\n     * @param {Matrix4} optionalTarget - pre-allocated target matrix\r\n     * @return {OrientationMatrix} scene orientation\r\n     */\r\n    getOrientation(optionalTarget) {\r\n        const m = ensureMatrix4(optionalTarget);\r\n        m.copy(this.viewer.rotationGroup.matrix);\r\n        const z = this.getCameraDistance();\r\n        m.scale(tmpScaleVector.set(z, z, z));\r\n        m.setPosition(this.viewer.translationGroup.position);\r\n        return m;\r\n    }\r\n    /**\r\n     * set scene orientation\r\n     * @param {OrientationMatrix|Array} orientation - scene orientation\r\n     * @return {undefined}\r\n     */\r\n    orient(orientation) {\r\n        ensureMatrix4(orientation).decompose(tmpP, tmpQ, tmpS);\r\n        const v = this.viewer;\r\n        v.rotationGroup.setRotationFromQuaternion(tmpQ);\r\n        v.translationGroup.position.copy(tmpP);\r\n        v.cameraDistance = tmpS.z;\r\n        v.updateZoom();\r\n        this.changed();\r\n    }\r\n    /**\r\n     * translate scene\r\n     * @param  {Vector3|Array} vector - translation vector\r\n     * @return {undefined}\r\n     */\r\n    translate(vector) {\r\n        this.viewer.translationGroup.position\r\n            .add(ensureVector3(vector));\r\n        this.changed();\r\n    }\r\n    /**\r\n     * center scene\r\n     * @param  {Vector3|Array} position - center position\r\n     * @return {undefined}\r\n     */\r\n    center(position) {\r\n        this.viewer.translationGroup.position\r\n            .copy(ensureVector3(position)).negate();\r\n        this.changed();\r\n    }\r\n    /**\r\n     * \"zoom\" scene by moving camera closer to origin\r\n     * @param  {Number} delta - zoom change\r\n     * @return {undefined}\r\n     */\r\n    zoom(delta) {\r\n        this.distance(this.getCameraDistance() * (1 - delta));\r\n    }\r\n    /**\r\n     * get camera distance\r\n     */\r\n    getCameraDistance() {\r\n        return this.viewer.cameraDistance;\r\n    }\r\n    /**\r\n     * camera distance\r\n     * @param  {Number} z - distance\r\n     * @return {undefined}\r\n     */\r\n    distance(distance) {\r\n        // Math.abs because distance used to be \"z\", normally negative.\r\n        // Math.max to prevent us from getting _too_ close.\r\n        this.viewer.cameraDistance = Math.max(Math.abs(distance), 0.2);\r\n        this.viewer.updateZoom();\r\n        this.changed();\r\n    }\r\n    /**\r\n     * spin scene on axis\r\n     * @param  {Vector3|Array} axis - rotation axis\r\n     * @param  {Number} angle - amount to spin\r\n     * @return {undefined}\r\n     */\r\n    spin(axis, angle) {\r\n        tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix);\r\n        tmpRotateVector\r\n            .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix);\r\n        this.viewer.rotationGroup.rotateOnAxis(tmpRotateVector, angle);\r\n        this.changed();\r\n    }\r\n    /**\r\n     * rotate scene\r\n     * @param  {Quaternion|Array} quaternion - rotation quaternion\r\n     * @return {undefined}\r\n     */\r\n    rotate(quaternion) {\r\n        this.viewer.rotationGroup\r\n            .setRotationFromQuaternion(ensureQuaternion(quaternion));\r\n        this.changed();\r\n    }\r\n    /**\r\n     * align scene to basis matrix\r\n     * @param  {Matrix4|Array} basis - basis matrix\r\n     * @return {undefined}\r\n     */\r\n    align(basis) {\r\n        tmpAlignMatrix.getInverse(ensureMatrix4(basis));\r\n        this.viewer.rotationGroup.setRotationFromMatrix(tmpAlignMatrix);\r\n        this.changed();\r\n    }\r\n    /**\r\n     * apply rotation matrix to scene\r\n     * @param  {Matrix4|Array} matrix - rotation matrix\r\n     * @return {undefined}\r\n     */\r\n    applyMatrix(matrix) {\r\n        this.viewer.rotationGroup.applyMatrix4(ensureMatrix4(matrix));\r\n        this.changed();\r\n    }\r\n}\r\nexport default ViewerControls;\r\n//# sourceMappingURL=viewer-controls.js.map","/**\r\n * @file Animation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Quaternion } from 'three';\r\nimport { defaults, ensureVector3, ensureQuaternion } from '../utils';\r\nimport { lerp, smoothstep } from '../math/math-utils';\r\n/**\r\n * Animation. Base animation class.\r\n * @interface\r\n */\r\nclass Animation {\r\n    constructor(duration, controls, ...args) {\r\n        this.pausedTime = -1;\r\n        this.elapsedDuration = 0;\r\n        this.pausedDuration = 0;\r\n        this.ignoreGlobalToggle = false;\r\n        this._paused = false;\r\n        this._resolveList = [];\r\n        this.duration = defaults(duration, 1000);\r\n        this.controls = controls;\r\n        this.startTime = window.performance.now();\r\n        this._init(...args);\r\n    }\r\n    /**\r\n     * True when animation has finished\r\n     */\r\n    get done() {\r\n        return this.alpha === 1;\r\n    }\r\n    /**\r\n     * True when animation is paused\r\n     */\r\n    get paused() {\r\n        return this._paused;\r\n    }\r\n    tick(stats) {\r\n        if (this._paused)\r\n            return;\r\n        this.elapsedDuration = stats.currentTime - this.startTime - this.pausedDuration;\r\n        if (this.duration === 0) {\r\n            this.alpha = 1;\r\n        }\r\n        else {\r\n            this.alpha = smoothstep(0, 1, this.elapsedDuration / this.duration);\r\n        }\r\n        this._tick(stats);\r\n        if (this.done) {\r\n            this._resolveList.forEach(resolve => resolve());\r\n        }\r\n        return this.done;\r\n    }\r\n    /**\r\n     * Pause animation\r\n     * @param {boolean} [hold] - put animation on a hold which\r\n     *                           must be release before it can be resumed\r\n     */\r\n    pause(hold) {\r\n        if (hold)\r\n            this._hold = true;\r\n        if (this.pausedTime === -1) {\r\n            this.pausedTime = window.performance.now();\r\n        }\r\n        this._paused = true;\r\n    }\r\n    /**\r\n     * Resume animation\r\n     * @param {Boolean} [releaseHold] - release a hold on the animation\r\n     */\r\n    resume(releaseHold) {\r\n        if (!releaseHold && this._hold)\r\n            return;\r\n        this.pausedDuration += window.performance.now() - this.pausedTime;\r\n        this._paused = false;\r\n        this._hold = false;\r\n        this.pausedTime = -1;\r\n    }\r\n    /**\r\n     * Toggle animation\r\n     */\r\n    toggle() {\r\n        if (this._paused) {\r\n            this.resume();\r\n        }\r\n        else {\r\n            this.pause();\r\n        }\r\n    }\r\n    /**\r\n     * Promise-like interface\r\n     */\r\n    then(callback) {\r\n        let p;\r\n        if (this.done) {\r\n            p = Promise.resolve();\r\n        }\r\n        else {\r\n            p = new Promise(resolve => this._resolveList.push(resolve));\r\n        }\r\n        return p.then(callback);\r\n    }\r\n}\r\nexport default Animation;\r\n/**\r\n * Spin animation. Spin around an axis.\r\n */\r\nexport class SpinAnimation extends Animation {\r\n    constructor(duration, controls, ...args) {\r\n        super(defaults(duration, Infinity), controls, ...args);\r\n    }\r\n    _init(axis, angle) {\r\n        if (Array.isArray(axis)) {\r\n            this.axis = new Vector3().fromArray(axis);\r\n        }\r\n        else {\r\n            this.axis = defaults(axis, new Vector3(0, 1, 0));\r\n        }\r\n        this.angle = defaults(angle, 0.01);\r\n    }\r\n    _tick(stats) {\r\n        if (!this.axis || !this.angle)\r\n            return;\r\n        this.controls.spin(this.axis, this.angle * stats.lastDuration / 16);\r\n    }\r\n}\r\n/**\r\n * Rock animation. Rock around an axis.\r\n */\r\nexport class RockAnimation extends Animation {\r\n    constructor(duration, controls, ...args) {\r\n        super(defaults(duration, Infinity), controls, ...args);\r\n        this.angleSum = 0;\r\n        this.direction = 1;\r\n    }\r\n    _init(axis, angleStep, angleEnd) {\r\n        if (Array.isArray(axis)) {\r\n            this.axis = new Vector3().fromArray(axis);\r\n        }\r\n        else {\r\n            this.axis = defaults(axis, new Vector3(0, 1, 0));\r\n        }\r\n        this.angleStep = defaults(angleStep, 0.01);\r\n        this.angleEnd = defaults(angleEnd, 0.2);\r\n    }\r\n    _tick(stats) {\r\n        if (!this.axis || !this.angleStep || !this.angleEnd)\r\n            return;\r\n        const alpha = smoothstep(0, 1, Math.abs(this.angleSum) / this.angleEnd);\r\n        const angle = this.angleStep * this.direction * (1.1 - alpha);\r\n        this.controls.spin(this.axis, angle * stats.lastDuration / 16);\r\n        this.angleSum += this.angleStep;\r\n        if (this.angleSum >= this.angleEnd) {\r\n            this.direction *= -1;\r\n            this.angleSum = -this.angleEnd;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Move animation. Move from one position to another.\r\n */\r\nexport class MoveAnimation extends Animation {\r\n    _init(moveFrom, moveTo) {\r\n        this.moveFrom = ensureVector3(defaults(moveFrom, new Vector3()));\r\n        this.moveTo = ensureVector3(defaults(moveTo, new Vector3()));\r\n    }\r\n    _tick( /* stats */) {\r\n        this.controls.position.lerpVectors(this.moveFrom, this.moveTo, this.alpha).negate();\r\n        this.controls.changed();\r\n    }\r\n}\r\n/**\r\n * Zoom animation. Gradually change the zoom level.\r\n */\r\nexport class ZoomAnimation extends Animation {\r\n    _init(zoomFrom, zoomTo) {\r\n        this.zoomFrom = zoomFrom;\r\n        this.zoomTo = zoomTo;\r\n    }\r\n    _tick() {\r\n        this.controls.distance(lerp(this.zoomFrom, this.zoomTo, this.alpha));\r\n    }\r\n}\r\n/**\r\n * Rotate animation. Rotate from one orientation to another.\r\n */\r\nexport class RotateAnimation extends Animation {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._currentRotation = new Quaternion();\r\n    }\r\n    _init(rotateFrom, rotateTo) {\r\n        this.rotateFrom = ensureQuaternion(rotateFrom);\r\n        this.rotateTo = ensureQuaternion(rotateTo);\r\n        this._currentRotation = new Quaternion();\r\n    }\r\n    _tick() {\r\n        this._currentRotation\r\n            .copy(this.rotateFrom)\r\n            .slerp(this.rotateTo, this.alpha);\r\n        this.controls.rotate(this._currentRotation);\r\n    }\r\n}\r\n/**\r\n * Value animation. Call callback with interpolated value.\r\n */\r\nexport class ValueAnimation extends Animation {\r\n    _init(valueFrom, valueTo, callback) {\r\n        this.valueFrom = valueFrom;\r\n        this.valueTo = valueTo;\r\n        this.callback = callback;\r\n    }\r\n    _tick( /* stats */) {\r\n        this.callback(lerp(this.valueFrom, this.valueTo, this.alpha));\r\n    }\r\n}\r\n/**\r\n * Timeout animation. Call callback after duration.\r\n */\r\nexport class TimeoutAnimation extends Animation {\r\n    _init(callback) {\r\n        this.callback = callback;\r\n    }\r\n    _tick() {\r\n        if (this.alpha === 1)\r\n            this.callback();\r\n    }\r\n}\r\n/**\r\n * Animation list.\r\n */\r\nexport class AnimationList {\r\n    constructor(list = []) {\r\n        this._resolveList = [];\r\n        this._list = list;\r\n    }\r\n    /**\r\n     * True when all animations have finished\r\n     */\r\n    get done() {\r\n        return this._list.every(animation => {\r\n            return animation.done;\r\n        });\r\n    }\r\n    /**\r\n     * Promise-like interface\r\n     */\r\n    then(callback) {\r\n        let p;\r\n        if (this.done) {\r\n            p = Promise.resolve();\r\n        }\r\n        else {\r\n            p = new Promise(resolve => {\r\n                this._resolveList.push(resolve);\r\n                this._list.forEach(animation => {\r\n                    animation.then(() => {\r\n                        this._resolveList.forEach(callback => {\r\n                            callback();\r\n                        });\r\n                        this._resolveList.length = 0;\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        return p.then(callback);\r\n    }\r\n}\r\n//# sourceMappingURL=animation.js.map","/**\r\n * @file Animation Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Quaternion } from 'three';\r\nimport { ensureMatrix4 } from '../utils';\r\nimport { SpinAnimation, RockAnimation, MoveAnimation, ZoomAnimation, RotateAnimation, ValueAnimation, TimeoutAnimation, AnimationList } from '../animation/animation';\r\n/**\r\n * Animation controls\r\n */\r\nclass AnimationControls {\r\n    /**\r\n     * Create animation controls\r\n     * @param  {Stage} stage - the stage object\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.animationList = [];\r\n        this.finishedList = [];\r\n        this.viewer = stage.viewer;\r\n        this.controls = stage.viewerControls;\r\n    }\r\n    /**\r\n     * True when all animations are paused\r\n     * @type {Boolean}\r\n     */\r\n    get paused() {\r\n        return this.animationList.every((animation) => animation.paused);\r\n    }\r\n    /**\r\n     * Add an animation\r\n     */\r\n    add(animation) {\r\n        if (animation.duration === 0) {\r\n            animation.tick(this.viewer.stats);\r\n        }\r\n        else {\r\n            this.animationList.push(animation);\r\n        }\r\n        return animation;\r\n    }\r\n    /**\r\n     * Remove an animation\r\n     */\r\n    remove(animation) {\r\n        const list = this.animationList;\r\n        const index = list.indexOf(animation);\r\n        if (index > -1) {\r\n            list.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Run all animations\r\n     */\r\n    run(stats) {\r\n        const finishedList = this.finishedList;\r\n        const animationList = this.animationList;\r\n        const n = animationList.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const animation = animationList[i];\r\n            // tick returns true when finished\r\n            if (animation.tick(stats)) {\r\n                finishedList.push(animation);\r\n            }\r\n        }\r\n        const m = finishedList.length;\r\n        if (m) {\r\n            for (let j = 0; j < m; ++j) {\r\n                this.remove(finishedList[j]);\r\n            }\r\n            finishedList.length = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Add a spin animation\r\n     * @param  {Vector3} axis - axis to spin around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n    spin(axis, angle, duration) {\r\n        return this.add(new SpinAnimation(duration, this.controls, axis, angle));\r\n    }\r\n    /**\r\n     * Add a rock animation\r\n     * @param  {Vector3} axis - axis to rock around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} end - maximum extend of motion, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n    rock(axis, angle, end, duration) {\r\n        return this.add(new RockAnimation(duration, this.controls, axis, angle, end));\r\n    }\r\n    /**\r\n     * Add a rotate animation\r\n     * @param  {Quaternion} rotateTo - target rotation\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {RotateAnimation} the animation\r\n     */\r\n    rotate(rotateTo, duration) {\r\n        const rotateFrom = this.viewer.rotationGroup.quaternion.clone();\r\n        return this.add(new RotateAnimation(duration, this.controls, rotateFrom, rotateTo));\r\n    }\r\n    /**\r\n     * Add a move animation\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {MoveAnimation} the animation\r\n     */\r\n    move(moveTo, duration) {\r\n        const moveFrom = this.controls.position.clone().negate();\r\n        return this.add(new MoveAnimation(duration, this.controls, moveFrom, moveTo));\r\n    }\r\n    /**\r\n     * Add a zoom animation\r\n     * @param  {Number} zoomTo - target distance\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {ZoomAnimation} the animation\r\n     */\r\n    zoom(zoomTo, duration) {\r\n        const zoomFrom = this.viewer.camera.position.z;\r\n        return this.add(new ZoomAnimation(duration, this.controls, zoomFrom, zoomTo));\r\n    }\r\n    /**\r\n     * Add a zoom and a move animation\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} zoomTo - target distance\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {Array} the animations\r\n     */\r\n    zoomMove(moveTo, zoomTo, duration) {\r\n        return new AnimationList([\r\n            this.move(moveTo, duration),\r\n            this.zoom(zoomTo, duration)\r\n        ]);\r\n    }\r\n    /**\r\n     * Add an orient animation\r\n     * @param  {OrientationMatrix|Array} orientTo - target orientation\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {Array} the animations\r\n     */\r\n    orient(orientTo, duration) {\r\n        const p = new Vector3();\r\n        const q = new Quaternion();\r\n        const s = new Vector3();\r\n        ensureMatrix4(orientTo).decompose(p, q, s);\r\n        return new AnimationList([\r\n            this.move(p.negate(), duration),\r\n            this.rotate(q, duration),\r\n            this.zoom(-s.x, duration)\r\n        ]);\r\n    }\r\n    /**\r\n     * Add a value animation\r\n     * @param  {Number} valueFrom - start value\r\n     * @param  {Number} valueTo - target value\r\n     * @param  {Function} callback - called on every tick\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {ValueAnimation} the animation\r\n     */\r\n    value(valueFrom, valueTo, callback, duration) {\r\n        return this.add(new ValueAnimation(duration, this.controls, valueFrom, valueTo, callback));\r\n    }\r\n    /**\r\n     * Add a timeout animation\r\n     * @param  {Function} callback - called after duration\r\n     * @param  {Number} duration - timeout in milliseconds\r\n     * @return {TimeoutAnimation} the animation\r\n     */\r\n    timeout(callback, duration) {\r\n        return this.add(new TimeoutAnimation(duration, this.controls, callback));\r\n    }\r\n    /**\r\n     * Add a component spin animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} axis - axis to spin around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n    spinComponent(component, axis, angle, duration) {\r\n        return this.add(\r\n        // TODO\r\n        new SpinAnimation(duration, component.controls, axis, angle));\r\n    }\r\n    /**\r\n     * Add a component rock animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} axis - axis to rock around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} end - maximum extend of motion, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n    rockComponent(component, axis, angle, end, duration) {\r\n        return this.add(\r\n        // TODO\r\n        new RockAnimation(duration, component.controls, axis, angle, end));\r\n    }\r\n    /**\r\n     * Add a component move animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {MoveAnimation} the animation\r\n     */\r\n    moveComponent(component, moveTo, duration) {\r\n        const moveFrom = component.controls.position.clone().negate();\r\n        return this.add(\r\n        // TODO\r\n        new MoveAnimation(duration, component.controls, moveFrom, moveTo));\r\n    }\r\n    /**\r\n     * Pause all animations\r\n     * @return {undefined}\r\n     */\r\n    pause() {\r\n        this.animationList.forEach(animation => animation.pause());\r\n    }\r\n    /**\r\n     * Resume all animations\r\n     * @return {undefined}\r\n     */\r\n    resume() {\r\n        this.animationList.forEach(animation => animation.resume());\r\n    }\r\n    /**\r\n     * Toggle all animations\r\n     * @return {undefined}\r\n     */\r\n    toggle() {\r\n        if (this.paused) {\r\n            this.resume();\r\n        }\r\n        else {\r\n            this.pause();\r\n        }\r\n    }\r\n    /**\r\n     * Clear all animations\r\n     * @return {undefined}\r\n     */\r\n    clear() {\r\n        this.animationList.length = 0;\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n    }\r\n}\r\nexport default AnimationControls;\r\n//# sourceMappingURL=animation-controls.js.map","/**\r\n * @file Queue\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass Queue {\r\n    constructor(fn, argList) {\r\n        this.fn = fn;\r\n        this.queue = [];\r\n        this.pending = false;\r\n        this.next = this.next.bind(this);\r\n        if (argList) {\r\n            for (let i = 0, il = argList.length; i < il; ++i) {\r\n                this.queue.push(argList[i]);\r\n            }\r\n            this.next();\r\n        }\r\n    }\r\n    run(arg) {\r\n        this.fn(arg, this.next);\r\n    }\r\n    next() {\r\n        const arg = this.queue.shift();\r\n        if (arg !== undefined) {\r\n            this.pending = true;\r\n            setTimeout(() => this.run(arg));\r\n        }\r\n        else {\r\n            this.pending = false;\r\n        }\r\n    }\r\n    push(arg) {\r\n        this.queue.push(arg);\r\n        if (!this.pending)\r\n            this.next();\r\n    }\r\n    kill() {\r\n        this.queue.length = 0;\r\n    }\r\n    length() {\r\n        return this.queue.length;\r\n    }\r\n}\r\nexport default Queue;\r\n//# sourceMappingURL=queue.js.map","/**\r\n * @file Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color, Vector3, Matrix4 } from 'three';\r\nimport { Debug, Log, ColormakerRegistry, ExtensionFragDepth } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Queue from '../utils/queue.js';\r\nimport Counter from '../utils/counter.js';\r\n/**\r\n * Representation parameter object.\r\n * @typedef {Object} RepresentationParameters - representation parameters\r\n * @property {Boolean} [lazy] - only build & update the representation when visible\r\n *                            otherwise defer changes until set visible again\r\n * @property {Integer} [clipNear] - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Integer} [clipRadius] - radius of clipping sphere\r\n * @property {Vector3} [clipCenter] - position of for spherical clipping\r\n * @property {Boolean} [flatShaded] - render flat shaded\r\n * @property {Float} [opacity] - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Boolean} [depthWrite] - depth write\r\n * @property {String} [side] - which triangle sides to render, \"front\" front-side,\r\n *                            \"back\" back-side, \"double\" front- and back-side\r\n * @property {Boolean} [wireframe] - render as wireframe\r\n * @property {String} [colorScheme] - color scheme\r\n * @property {String} [colorScale] - color scale, either a string for a\r\n *                                 predefined scale or an array of\r\n *                                 colors to be used as the scale\r\n * @property {Boolean} [colorReverse] - reverse color scale\r\n * @property {Color} [colorValue] - color value\r\n * @property {Integer[]} [colorDomain] - scale value range\r\n * @property {Integer} colorDomain.0 - min value\r\n * @property {Integer} colorDomain.1 - max value\r\n * @property {String} [colorMode] - color mode, one of rgb, hsv, hsl, hsi, lab, hcl\r\n * @property {Float} [roughness] - how rough the material is, between 0 and 1\r\n * @property {Float} [metalness] - how metallic the material is, between 0 and 1\r\n * @property {Color} [diffuse] - diffuse color for lighting\r\n * @property {Boolean} [diffuseInterior] - diffuse interior, i.e. ignore normal\r\n * @property {Boolean} [useInteriorColor] - use interior color\r\n * @property {Color} [interiorColor] - interior color\r\n * @property {Float} [interiorDarkening] - interior darkening: 0 no darking, 1 fully darkened\r\n * @property {Boolean} [disablePicking] - disable picking\r\n */\r\n/**\r\n * Representation object\r\n * @interface\r\n * @param {Object} object - the object to be represented\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {RepresentationParameters} [params] - representation parameters\r\n */\r\nclass Representation {\r\n    constructor(object, viewer, params) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        // const p = params || {}\r\n        this.type = '';\r\n        this.parameters = {\r\n            lazy: {\r\n                type: 'boolean'\r\n            },\r\n            clipNear: {\r\n                type: 'range', step: 1, max: 100, min: 0, buffer: true\r\n            },\r\n            clipRadius: {\r\n                type: 'number', precision: 1, max: 1000, min: 0, buffer: true\r\n            },\r\n            clipCenter: {\r\n                type: 'vector3', precision: 1, buffer: true\r\n            },\r\n            flatShaded: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            opacity: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n            },\r\n            depthWrite: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            side: {\r\n                type: 'select',\r\n                buffer: true,\r\n                options: { front: 'front', back: 'back', double: 'double' }\r\n            },\r\n            wireframe: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            colorScheme: {\r\n                type: 'select',\r\n                update: 'color',\r\n                options: {}\r\n            },\r\n            colorScale: {\r\n                type: 'select',\r\n                update: 'color',\r\n                options: ColormakerRegistry.getScales()\r\n            },\r\n            colorReverse: {\r\n                type: 'boolean', update: 'color'\r\n            },\r\n            colorValue: {\r\n                type: 'color', update: 'color'\r\n            },\r\n            colorDomain: {\r\n                type: 'hidden', update: 'color'\r\n            },\r\n            colorMode: {\r\n                type: 'select',\r\n                update: 'color',\r\n                options: ColormakerRegistry.getModes()\r\n            },\r\n            roughness: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n            },\r\n            metalness: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n            },\r\n            diffuse: {\r\n                type: 'color', buffer: true\r\n            },\r\n            diffuseInterior: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            useInteriorColor: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            interiorColor: {\r\n                type: 'color', buffer: true\r\n            },\r\n            interiorDarkening: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n            },\r\n            matrix: {\r\n                type: 'hidden', buffer: true\r\n            },\r\n            disablePicking: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        };\r\n        /**\r\n         * @type {Viewer}\r\n         */\r\n        this.viewer = viewer;\r\n        /**\r\n         * Counter that keeps track of tasks related to the creation of\r\n         * the representation, including surface calculations.\r\n         * @type {Counter}\r\n         */\r\n        this.tasks = new Counter();\r\n        /**\r\n         * @type {Queue}\r\n         * @private\r\n         */\r\n        this.queue = new Queue(this.make.bind(this));\r\n        /**\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this.bufferList = [];\r\n        if (this.parameters.colorScheme) {\r\n            this.parameters.colorScheme.options = ColormakerRegistry.getSchemes();\r\n        }\r\n        this.toBePrepared = false;\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        this.clipNear = defaults(p.clipNear, 0);\r\n        this.clipRadius = defaults(p.clipRadius, 0);\r\n        this.clipCenter = defaults(p.clipCenter, new Vector3());\r\n        this.flatShaded = defaults(p.flatShaded, false);\r\n        this.side = defaults(p.side, 'double');\r\n        this.opacity = defaults(p.opacity, 1.0);\r\n        this.depthWrite = defaults(p.depthWrite, true);\r\n        this.wireframe = defaults(p.wireframe, false);\r\n        this.setColor(p.color, p);\r\n        this.colorScheme = defaults(p.colorScheme, 'uniform');\r\n        this.colorScale = defaults(p.colorScale, '');\r\n        this.colorReverse = defaults(p.colorReverse, false);\r\n        this.colorValue = defaults(p.colorValue, 0x909090);\r\n        this.colorDomain = defaults(p.colorDomain, undefined);\r\n        this.colorMode = defaults(p.colorMode, 'hcl');\r\n        this.visible = defaults(p.visible, true);\r\n        this.quality = defaults(p.quality, undefined);\r\n        this.roughness = defaults(p.roughness, 0.4);\r\n        this.metalness = defaults(p.metalness, 0.0);\r\n        this.diffuse = defaults(p.diffuse, 0xffffff);\r\n        this.diffuseInterior = defaults(p.diffuseInterior, false);\r\n        this.useInteriorColor = defaults(p.useInteriorColor, false);\r\n        this.interiorColor = defaults(p.interiorColor, 0x222222);\r\n        this.interiorDarkening = defaults(p.interiorDarkening, 0);\r\n        this.lazy = defaults(p.lazy, false);\r\n        this.lazyProps = {\r\n            build: false,\r\n            bufferParams: {},\r\n            what: {}\r\n        };\r\n        this.matrix = defaults(p.matrix, new Matrix4());\r\n        this.disablePicking = defaults(p.disablePicking, false);\r\n        // handle common parameters when applicable\r\n        const tp = this.parameters;\r\n        if (tp.sphereDetail === true) {\r\n            tp.sphereDetail = {\r\n                type: 'integer', max: 3, min: 0, rebuild: 'impostor'\r\n            };\r\n        }\r\n        if (tp.radialSegments === true) {\r\n            tp.radialSegments = {\r\n                type: 'integer', max: 25, min: 5, rebuild: 'impostor'\r\n            };\r\n        }\r\n        if (tp.openEnded === true) {\r\n            tp.openEnded = {\r\n                type: 'boolean', rebuild: 'impostor', buffer: true\r\n            };\r\n        }\r\n        if (tp.disableImpostor === true) {\r\n            tp.disableImpostor = {\r\n                type: 'boolean', rebuild: true\r\n            };\r\n        }\r\n        if (p.quality === 'low') {\r\n            if (tp.sphereDetail)\r\n                this.sphereDetail = 0;\r\n            if (tp.radialSegments)\r\n                this.radialSegments = 5;\r\n        }\r\n        else if (p.quality === 'medium') {\r\n            if (tp.sphereDetail)\r\n                this.sphereDetail = 1;\r\n            if (tp.radialSegments)\r\n                this.radialSegments = 10;\r\n        }\r\n        else if (p.quality === 'high') {\r\n            if (tp.sphereDetail)\r\n                this.sphereDetail = 2;\r\n            if (tp.radialSegments)\r\n                this.radialSegments = 20;\r\n        }\r\n        else {\r\n            if (tp.sphereDetail) {\r\n                this.sphereDetail = defaults(p.sphereDetail, 1);\r\n            }\r\n            if (tp.radialSegments) {\r\n                this.radialSegments = defaults(p.radialSegments, 10);\r\n            }\r\n        }\r\n        if (tp.openEnded) {\r\n            this.openEnded = defaults(p.openEnded, true);\r\n        }\r\n        if (tp.disableImpostor) {\r\n            this.disableImpostor = defaults(p.disableImpostor, false);\r\n        }\r\n    }\r\n    getColorParams(p) {\r\n        return Object.assign({\r\n            scheme: this.colorScheme,\r\n            scale: this.colorScale,\r\n            reverse: this.colorReverse,\r\n            value: this.colorValue,\r\n            domain: this.colorDomain,\r\n            mode: this.colorMode\r\n        }, p);\r\n    }\r\n    getBufferParams(p = {}) {\r\n        return Object.assign({\r\n            clipNear: this.clipNear,\r\n            clipRadius: this.clipRadius,\r\n            clipCenter: this.clipCenter,\r\n            flatShaded: this.flatShaded,\r\n            opacity: this.opacity,\r\n            depthWrite: this.depthWrite,\r\n            side: this.side,\r\n            wireframe: this.wireframe,\r\n            roughness: this.roughness,\r\n            metalness: this.metalness,\r\n            diffuse: this.diffuse,\r\n            diffuseInterior: this.diffuseInterior,\r\n            useInteriorColor: this.useInteriorColor,\r\n            interiorColor: this.interiorColor,\r\n            interiorDarkening: this.interiorDarkening,\r\n            matrix: this.matrix,\r\n            disablePicking: this.disablePicking\r\n        }, p);\r\n    }\r\n    setColor(value, p) {\r\n        const types = Object.keys(ColormakerRegistry.getSchemes());\r\n        if (typeof value === 'string' && types.includes(value.toLowerCase())) {\r\n            if (p) {\r\n                p.colorScheme = value;\r\n            }\r\n            else {\r\n                this.setParameters({ colorScheme: value });\r\n            }\r\n        }\r\n        else if (value !== undefined) {\r\n            let val = new Color(value).getHex(); //TODO\r\n            if (p) {\r\n                p.colorScheme = 'uniform';\r\n                p.colorValue = val;\r\n            }\r\n            else {\r\n                this.setParameters({\r\n                    colorScheme: 'uniform', colorValue: val\r\n                });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    // TODO\r\n    prepare(cb) {\r\n    }\r\n    create() {\r\n        // this.bufferList.length = 0;\r\n    }\r\n    update(what) {\r\n        this.build();\r\n    }\r\n    build(updateWhat) {\r\n        if (this.lazy && (!this.visible || !this.opacity)) {\r\n            this.lazyProps.build = true;\r\n            return;\r\n        }\r\n        if (!this.toBePrepared) {\r\n            this.tasks.increment();\r\n            this.make();\r\n            return;\r\n        }\r\n        // don't let tasks accumulate\r\n        if (this.queue.length() > 0) {\r\n            this.tasks.change(1 - this.queue.length());\r\n            this.queue.kill();\r\n        }\r\n        else {\r\n            this.tasks.increment();\r\n        }\r\n        this.queue.push(updateWhat || false);\r\n    }\r\n    make(updateWhat, callback) {\r\n        if (Debug)\r\n            Log.time('Representation.make ' + this.type);\r\n        const _make = () => {\r\n            if (updateWhat) {\r\n                this.update(updateWhat);\r\n                this.viewer.requestRender();\r\n                this.tasks.decrement();\r\n                if (callback)\r\n                    callback();\r\n            }\r\n            else {\r\n                this.clear();\r\n                this.create();\r\n                if (!this.manualAttach && !this.disposed) {\r\n                    if (Debug)\r\n                        Log.time('Representation.attach ' + this.type);\r\n                    this.attach(() => {\r\n                        if (Debug)\r\n                            Log.timeEnd('Representation.attach ' + this.type);\r\n                        this.tasks.decrement();\r\n                        if (callback)\r\n                            callback();\r\n                    });\r\n                }\r\n            }\r\n            if (Debug)\r\n                Log.timeEnd('Representation.make ' + this.type);\r\n        };\r\n        if (this.toBePrepared) {\r\n            this.prepare(_make);\r\n        }\r\n        else {\r\n            _make();\r\n        }\r\n    }\r\n    attach(callback) {\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n    /**\r\n     * Set the visibility of the representation\r\n     * @param {Boolean} value - visibility flag\r\n     * @param {Boolean} [noRenderRequest] - whether or not to request a re-render from the viewer\r\n     * @return {Representation} this object\r\n     */\r\n    setVisibility(value, noRenderRequest) {\r\n        this.visible = value;\r\n        if (this.visible && this.opacity) {\r\n            const lazyProps = this.lazyProps;\r\n            const bufferParams = lazyProps.bufferParams;\r\n            const what = lazyProps.what;\r\n            if (lazyProps.build) {\r\n                lazyProps.build = false;\r\n                this.build();\r\n                return this;\r\n            }\r\n            else if (Object.keys(bufferParams).length || Object.keys(what).length) {\r\n                lazyProps.bufferParams = {};\r\n                lazyProps.what = {};\r\n                this.updateParameters(bufferParams, what);\r\n            }\r\n        }\r\n        this.bufferList.forEach(function (buffer) {\r\n            buffer.setVisibility(value);\r\n        });\r\n        if (!noRenderRequest)\r\n            this.viewer.requestRender();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the visibility of the representation\r\n     * @param {RepresentationParameters} params - parameters object\r\n     * @param {Object} [what] - buffer data attributes to be updated,\r\n     *                        note that this needs to be implemented in the\r\n     *                        derived classes. Generally it allows more\r\n     *                        fine-grained control over updating than\r\n     *                        forcing a rebuild.\r\n     * @param {Boolean} what.position - update position data\r\n     * @param {Boolean} what.color - update color data\r\n     * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n     * @return {Representation} this object\r\n     */\r\n    setParameters(params, what = {}, rebuild = false) {\r\n        const p = params || {};\r\n        const tp = this.parameters;\r\n        const bufferParams = {};\r\n        if (!this.opacity && p.opacity !== undefined) {\r\n            if (this.lazyProps.build) {\r\n                this.lazyProps.build = false;\r\n                rebuild = true;\r\n            }\r\n            else {\r\n                Object.assign(bufferParams, this.lazyProps.bufferParams);\r\n                Object.assign(what, this.lazyProps.what);\r\n                this.lazyProps.bufferParams = {};\r\n                this.lazyProps.what = {};\r\n            }\r\n        }\r\n        this.setColor(p.color, p);\r\n        for (let name in p) {\r\n            if (p[name] === undefined)\r\n                continue;\r\n            if (tp[name] === undefined)\r\n                continue;\r\n            if (tp[name].int)\r\n                p[name] = parseInt(p[name]);\r\n            if (tp[name].float)\r\n                p[name] = parseFloat(p[name]);\r\n            // no value change\r\n            if (p[name] === this[name] && (!p[name].equals || p[name].equals(this[name])))\r\n                continue;\r\n            if (this[name] && this[name].copy && p[name].copy) {\r\n                this[name].copy(p[name]);\r\n            }\r\n            else if (this[name] && this[name].set) {\r\n                this[name].set(p[name]);\r\n            }\r\n            else {\r\n                this[name] = p[name];\r\n            }\r\n            // buffer param\r\n            if (tp[name].buffer) {\r\n                if (tp[name].buffer === true) {\r\n                    bufferParams[name] = p[name];\r\n                }\r\n                else {\r\n                    let key = tp[name].buffer;\r\n                    bufferParams[key] = p[name];\r\n                }\r\n            }\r\n            // mark for update\r\n            if (tp[name].update) {\r\n                what[tp[name].update] = true;\r\n            }\r\n            // mark for rebuild\r\n            if (tp[name].rebuild &&\r\n                !(tp[name].rebuild === 'impostor' &&\r\n                    ExtensionFragDepth && !this.disableImpostor)) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        //\r\n        if (rebuild) {\r\n            this.build();\r\n        }\r\n        else {\r\n            this.updateParameters(bufferParams, what);\r\n        }\r\n        return this;\r\n    }\r\n    updateParameters(bufferParams = {}, what) {\r\n        if (this.lazy && (!this.visible || !this.opacity) && bufferParams.hasOwnProperty('opacity') === false) {\r\n            Object.assign(this.lazyProps.bufferParams, bufferParams);\r\n            Object.assign(this.lazyProps.what, what);\r\n            return;\r\n        }\r\n        this.bufferList.forEach(function (buffer) {\r\n            buffer.setParameters(bufferParams);\r\n        });\r\n        if (Object.keys(what).length) {\r\n            this.update(what); // update buffer attribute\r\n        }\r\n        this.viewer.requestRender();\r\n    }\r\n    getParameters() {\r\n        const params = {\r\n            lazy: this.lazy,\r\n            visible: this.visible,\r\n            quality: this.quality\r\n        };\r\n        Object.keys(this.parameters).forEach(name => {\r\n            if (this.parameters[name] !== null) {\r\n                params[name] = this[name];\r\n            }\r\n        });\r\n        return params;\r\n    }\r\n    clear() {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.remove(buffer);\r\n            buffer.dispose();\r\n        });\r\n        this.bufferList.length = 0;\r\n        this.viewer.requestRender();\r\n    }\r\n    dispose() {\r\n        this.disposed = true;\r\n        this.queue.kill();\r\n        this.tasks.dispose();\r\n        this.clear();\r\n    }\r\n}\r\nexport default Representation;\r\n//# sourceMappingURL=representation.js.map","/**\r\n * @file Worker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log, Debug, WorkerRegistry } from '../globals';\r\nexport default class _Worker {\r\n    constructor(name) {\r\n        this.pending = 0;\r\n        this.postCount = 0;\r\n        this.onmessageDict = {};\r\n        this.onerrorDict = {};\r\n        this.name = name;\r\n        this.blobUrl = window.URL.createObjectURL(WorkerRegistry.get(name));\r\n        this.worker = new Worker(this.blobUrl);\r\n        WorkerRegistry.activeWorkerCount += 1;\r\n        this.worker.onmessage = (event) => {\r\n            this.pending -= 1;\r\n            const postId = event.data.__postId;\r\n            if (Debug)\r\n                Log.timeEnd('Worker.postMessage ' + name + ' #' + postId);\r\n            const onmessage = this.onmessageDict[postId];\r\n            if (onmessage) {\r\n                onmessage.call(this.worker, event);\r\n            }\r\n            else {\r\n                // Log.debug('No onmessage', postId, name)\r\n            }\r\n            delete this.onmessageDict[postId];\r\n            delete this.onerrorDict[postId];\r\n        };\r\n        this.worker.onerror = (event) => {\r\n            this.pending -= 1;\r\n            if (event.data) {\r\n                const postId = event.data.__postId;\r\n                const onerror = this.onerrorDict[postId];\r\n                if (onerror) {\r\n                    onerror.call(this.worker, event);\r\n                }\r\n                else {\r\n                    Log.error('Worker.onerror', postId, name, event);\r\n                }\r\n                delete this.onmessageDict[postId];\r\n                delete this.onerrorDict[postId];\r\n            }\r\n            else {\r\n                Log.error('Worker.onerror', name, event);\r\n            }\r\n        };\r\n    }\r\n    post(aMessage = {}, transferList, onmessage, onerror) {\r\n        this.onmessageDict[this.postCount] = onmessage;\r\n        this.onerrorDict[this.postCount] = onerror;\r\n        aMessage.__name = this.name;\r\n        aMessage.__postId = this.postCount;\r\n        aMessage.__debug = Debug;\r\n        if (Debug)\r\n            Log.time(`Worker.postMessage ${this.name} #${this.postCount}`);\r\n        try {\r\n            this.worker.postMessage(aMessage, transferList);\r\n        }\r\n        catch (error) {\r\n            Log.error('worker.post:', error);\r\n            this.worker.postMessage(aMessage);\r\n        }\r\n        this.pending += 1;\r\n        this.postCount += 1;\r\n        return this;\r\n    }\r\n    terminate() {\r\n        if (this.worker) {\r\n            this.worker.terminate();\r\n            window.URL.revokeObjectURL(this.blobUrl);\r\n            WorkerRegistry.activeWorkerCount -= 1;\r\n        }\r\n        else {\r\n            Log.log('no worker to terminate');\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=worker.js.map","/**\r\n * @file Worker Pool\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Worker from './worker.js';\r\nclass WorkerPool {\r\n    constructor(name, maxCount = 2) {\r\n        this.pool = [];\r\n        this.count = 0;\r\n        this.maxCount = Math.min(8, maxCount);\r\n        this.name = name;\r\n    }\r\n    post(aMessage = {}, transferList, onmessage, onerror) {\r\n        const worker = this.getNextWorker();\r\n        if (worker) {\r\n            worker.post(aMessage, transferList, onmessage, onerror);\r\n        }\r\n        else {\r\n            console.error('unable to get worker from pool');\r\n        }\r\n        return this;\r\n    }\r\n    terminate() {\r\n        this.pool.forEach(function (worker) {\r\n            worker.terminate();\r\n        });\r\n    }\r\n    getNextWorker() {\r\n        let nextWorker;\r\n        let minPending = Infinity;\r\n        for (let i = 0; i < this.maxCount; ++i) {\r\n            if (i >= this.count) {\r\n                nextWorker = new Worker(this.name);\r\n                this.pool.push(nextWorker);\r\n                this.count += 1;\r\n                break;\r\n            }\r\n            const worker = this.pool[i];\r\n            if (worker.pending === 0) {\r\n                nextWorker = worker;\r\n                break;\r\n            }\r\n            else if (worker.pending < minPending) {\r\n                minPending = worker.pending;\r\n                nextWorker = worker;\r\n            }\r\n        }\r\n        return nextWorker;\r\n    }\r\n}\r\nWorkerPool.prototype.constructor = WorkerPool;\r\nexport default WorkerPool;\r\n//# sourceMappingURL=worker-pool.js.map","/**\r\n * @file Vector Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { EPS } from './math-constants';\r\n/**\r\n * Calculate the two intersection points\r\n * Converted to JavaScript from\r\n * {@link http://paulbourke.net/geometry/pointlineplane/lineline.c}\r\n */\r\nexport function lineLineIntersect(p1, p2, p3, p4) {\r\n    const p13 = new Vector3();\r\n    const p43 = new Vector3();\r\n    const p21 = new Vector3();\r\n    let d1343, d4321, d1321, d4343, d2121;\r\n    let denom, numer;\r\n    p13.x = p1.x - p3.x;\r\n    p13.y = p1.y - p3.y;\r\n    p13.z = p1.z - p3.z;\r\n    p43.x = p4.x - p3.x;\r\n    p43.y = p4.y - p3.y;\r\n    p43.z = p4.z - p3.z;\r\n    if (Math.abs(p43.x) < EPS && Math.abs(p43.y) < EPS && Math.abs(p43.z) < EPS) {\r\n        return null;\r\n    }\r\n    p21.x = p2.x - p1.x;\r\n    p21.y = p2.y - p1.y;\r\n    p21.z = p2.z - p1.z;\r\n    if (Math.abs(p21.x) < EPS && Math.abs(p21.y) < EPS && Math.abs(p21.z) < EPS) {\r\n        return null;\r\n    }\r\n    d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z;\r\n    d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z;\r\n    d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z;\r\n    d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z;\r\n    d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z;\r\n    denom = d2121 * d4343 - d4321 * d4321;\r\n    if (Math.abs(denom) < EPS) {\r\n        return null;\r\n    }\r\n    numer = d1343 * d4321 - d1321 * d4343;\r\n    const mua = numer / denom;\r\n    const mub = (d1343 + d4321 * mua) / d4343;\r\n    const pa = new Vector3(p1.x + mua * p21.x, p1.y + mua * p21.y, p1.z + mua * p21.z);\r\n    const pb = new Vector3(p3.x + mub * p43.x, p3.y + mub * p43.y, p3.z + mub * p43.z);\r\n    return [pa, pb];\r\n}\r\nexport function calculateMeanVector3(array) {\r\n    const n = array.length;\r\n    const m = n / 3;\r\n    let x = 0;\r\n    let y = 0;\r\n    let z = 0;\r\n    for (let i = 0; i < n; i += 3) {\r\n        x += array[i + 0];\r\n        y += array[i + 1];\r\n        z += array[i + 2];\r\n    }\r\n    return new Vector3(x / m, y / m, z / m);\r\n}\r\nexport function isPointOnSegment(p, l1, l2) {\r\n    const len = l1.distanceTo(l2);\r\n    return p.distanceTo(l1) <= len && p.distanceTo(l2) <= len;\r\n}\r\nexport function projectPointOnVector(point, vector, origin) {\r\n    if (origin) {\r\n        point.sub(origin).projectOnVector(vector).add(origin);\r\n    }\r\n    else {\r\n        point.projectOnVector(vector);\r\n    }\r\n    return point;\r\n}\r\nexport function computeBoundingBox(array) {\r\n    let minX = +Infinity;\r\n    let minY = +Infinity;\r\n    let minZ = +Infinity;\r\n    let maxX = -Infinity;\r\n    let maxY = -Infinity;\r\n    let maxZ = -Infinity;\r\n    for (let i = 0, l = array.length; i < l; i += 3) {\r\n        const x = array[i];\r\n        const y = array[i + 1];\r\n        const z = array[i + 2];\r\n        if (x < minX)\r\n            minX = x;\r\n        if (y < minY)\r\n            minY = y;\r\n        if (z < minZ)\r\n            minZ = z;\r\n        if (x > maxX)\r\n            maxX = x;\r\n        if (y > maxY)\r\n            maxY = y;\r\n        if (z > maxZ)\r\n            maxZ = z;\r\n    }\r\n    return [\r\n        v3new([minX, minY, minZ]),\r\n        v3new([maxX, maxY, maxZ])\r\n    ];\r\n}\r\ncomputeBoundingBox.__deps = [v3new];\r\nexport function applyMatrix4toVector3array(m, a) {\r\n    for (let i = 0, il = a.length; i < il; i += 3) {\r\n        const x = a[i];\r\n        const y = a[i + 1];\r\n        const z = a[i + 2];\r\n        a[i] = m[0] * x + m[4] * y + m[8] * z + m[12];\r\n        a[i + 1] = m[1] * x + m[5] * y + m[9] * z + m[13];\r\n        a[i + 2] = m[2] * x + m[6] * y + m[10] * z + m[14];\r\n    }\r\n}\r\nexport function applyMatrix3toVector3array(m, a) {\r\n    for (let i = 0, il = a.length; i < il; i += 3) {\r\n        const x = a[i];\r\n        const y = a[i + 1];\r\n        const z = a[i + 2];\r\n        a[i] = m[0] * x + m[3] * y + m[6] * z;\r\n        a[i + 1] = m[1] * x + m[4] * y + m[7] * z;\r\n        a[i + 2] = m[2] * x + m[5] * y + m[8] * z;\r\n    }\r\n}\r\nexport function normalizeVector3array(a) {\r\n    for (let i = 0, il = a.length; i < il; i += 3) {\r\n        const x = a[i];\r\n        const y = a[i + 1];\r\n        const z = a[i + 2];\r\n        const len2 = x * x + y * y + z * z;\r\n        if (len2 > 0) { // avoid divide by zero\r\n            const s = 1 / Math.sqrt(len2);\r\n            a[i] = x * s;\r\n            a[i + 1] = y * s;\r\n            a[i + 2] = z * s;\r\n        }\r\n        // else leave as all zeros\r\n    }\r\n}\r\nexport function v3new(array) {\r\n    return new Float32Array(array || 3); // TODO\r\n}\r\nexport function v3cross(out, a, b) {\r\n    const ax = a[0];\r\n    const ay = a[1];\r\n    const az = a[2];\r\n    const bx = b[0];\r\n    const by = b[1];\r\n    const bz = b[2];\r\n    out[0] = ay * bz - az * by;\r\n    out[1] = az * bx - ax * bz;\r\n    out[2] = ax * by - ay * bx;\r\n}\r\nexport function v3dot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\nexport function v3sub(out, a, b) {\r\n    out[0] = a[0] - b[0];\r\n    out[1] = a[1] - b[1];\r\n    out[2] = a[2] - b[2];\r\n}\r\nexport function v3add(out, a, b) {\r\n    out[0] = a[0] + b[0];\r\n    out[1] = a[1] + b[1];\r\n    out[2] = a[2] + b[2];\r\n}\r\nexport function v3fromArray(out, array, offset = 0) {\r\n    out[0] = array[offset];\r\n    out[1] = array[offset + 1];\r\n    out[2] = array[offset + 2];\r\n}\r\nexport function v3toArray(input, array, offset = 0) {\r\n    array[offset] = input[0];\r\n    array[offset + 1] = input[1];\r\n    array[offset + 2] = input[2];\r\n}\r\nexport function v3forEach(array, fn, b) {\r\n    const a = v3new();\r\n    for (let i = 0, n = array.length; i < n; i += 3) {\r\n        v3fromArray(a, array, i);\r\n        fn(a, a, b);\r\n        v3toArray(a, array, i);\r\n    }\r\n}\r\nv3forEach.__deps = [v3new, v3fromArray, v3toArray];\r\nexport function v3length(a) {\r\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\r\n}\r\nexport function v3divide(out, a, b) {\r\n    out[0] = a[0] / b[0];\r\n    out[1] = a[1] / b[1];\r\n    out[2] = a[2] / b[2];\r\n}\r\nexport function v3multiply(out, a, b) {\r\n    out[0] = a[0] * b[0];\r\n    out[1] = a[1] * b[1];\r\n    out[2] = a[2] * b[2];\r\n}\r\nexport function v3divideScalar(out, a, s) {\r\n    v3multiplyScalar(out, a, 1 / s);\r\n}\r\nv3divideScalar.__deps = [v3multiplyScalar];\r\nexport function v3multiplyScalar(out, a, s) {\r\n    out[0] = a[0] * s;\r\n    out[1] = a[1] * s;\r\n    out[2] = a[2] * s;\r\n}\r\nexport function v3normalize(out, a) {\r\n    v3multiplyScalar(out, a, 1 / v3length(a));\r\n}\r\nv3normalize.__deps = [v3multiplyScalar, v3length];\r\nexport function v3subScalar(out, a, s) {\r\n    out[0] = a[0] - s;\r\n    out[1] = a[1] - s;\r\n    out[2] = a[2] - s;\r\n}\r\nexport function v3addScalar(out, a, s) {\r\n    out[0] = a[0] + s;\r\n    out[1] = a[1] + s;\r\n    out[2] = a[2] + s;\r\n}\r\nexport function v3floor(out, a) {\r\n    out[0] = Math.floor(a[0]);\r\n    out[1] = Math.floor(a[1]);\r\n    out[2] = Math.floor(a[2]);\r\n}\r\nexport function v3ceil(out, a) {\r\n    out[0] = Math.ceil(a[0]);\r\n    out[1] = Math.ceil(a[1]);\r\n    out[2] = Math.ceil(a[2]);\r\n}\r\nexport function v3round(out, a) {\r\n    out[0] = Math.round(a[0]);\r\n    out[1] = Math.round(a[1]);\r\n    out[2] = Math.round(a[2]);\r\n}\r\nexport function v3negate(out, a) {\r\n    out[0] = -a[0];\r\n    out[1] = -a[1];\r\n    out[2] = -a[2];\r\n}\r\nexport function v3angle(a, b) {\r\n    const ax = a[0];\r\n    const ay = a[1];\r\n    const az = a[2];\r\n    const bx = b[0];\r\n    const by = b[1];\r\n    const bz = b[2];\r\n    const cx = ay * bz - az * by;\r\n    const cy = az * bx - ax * bz;\r\n    const cz = ax * by - ay * bx;\r\n    const s = Math.sqrt(cx * cx + cy * cy + cz * cz);\r\n    const c = ax * bx + ay * by + az * bz;\r\n    return Math.atan2(s, c);\r\n}\r\n//# sourceMappingURL=vector-utils.js.map","/**\r\n * @file Dash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { calculateDirectionArray, calculateCenterArray, replicateArrayEntries, replicateArray3Entries } from '../math/array-utils';\r\nexport function getFixedCountDashData(data, segmentCount = 9) {\r\n    const s = Math.floor(segmentCount / 2);\r\n    const n = data.position1.length / 3;\r\n    const sn = s * n;\r\n    const sn3 = sn * 3;\r\n    const step = 1 / segmentCount;\r\n    const direction = calculateDirectionArray(data.position1, data.position2);\r\n    const position1 = new Float32Array(sn3);\r\n    const position2 = new Float32Array(sn3);\r\n    const v = new Vector3();\r\n    for (let i = 0; i < n; ++i) {\r\n        const i3 = i * 3;\r\n        v.set(direction[i3], direction[i3 + 1], direction[i3 + 2]);\r\n        const x = data.position1[i3];\r\n        const y = data.position1[i3 + 1];\r\n        const z = data.position1[i3 + 2];\r\n        for (let j = 0; j < s; ++j) {\r\n            const j3 = s * i3 + j * 3;\r\n            const f1 = step * (j * 2 + 1);\r\n            const f2 = step * (j * 2 + 2);\r\n            position1[j3] = x + v.x * f1;\r\n            position1[j3 + 1] = y + v.y * f1;\r\n            position1[j3 + 2] = z + v.z * f1;\r\n            position2[j3] = x + v.x * f2;\r\n            position2[j3 + 1] = y + v.y * f2;\r\n            position2[j3 + 2] = z + v.z * f2;\r\n        }\r\n    }\r\n    const position = calculateCenterArray(position1, position2);\r\n    const color = replicateArray3Entries(data.color, s); // TODO\r\n    const color2 = color;\r\n    const d = { position, position1, position2, color, color2 };\r\n    if (data.radius) { // TODO\r\n        d.radius = replicateArrayEntries(data.radius, s); // TODO\r\n    }\r\n    if (data.picking && data.picking.array) {\r\n        data.picking.array = replicateArrayEntries(data.picking.array, s);\r\n        d.picking = data.picking;\r\n    }\r\n    if (data.primitiveId) {\r\n        d.primitiveId = replicateArrayEntries(data.primitiveId, s);\r\n    }\r\n    return d;\r\n}\r\nexport function getFixedLengthDashData(data, segmentLength = 0.1) {\r\n    const direction = calculateDirectionArray(data.position1, data.position2);\r\n    const pos1 = [];\r\n    const pos2 = [];\r\n    const col = [];\r\n    const rad = data.radius ? [] : undefined;\r\n    const pick = data.picking ? [] : undefined;\r\n    const id = data.primitiveId ? [] : undefined;\r\n    const v = new Vector3();\r\n    const n = data.position1.length / 3;\r\n    let k = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n        const i3 = i * 3;\r\n        v.set(direction[i3], direction[i3 + 1], direction[i3 + 2]);\r\n        const vl = v.length();\r\n        const segmentCount = vl / segmentLength;\r\n        const s = Math.floor(segmentCount / 2);\r\n        const step = 1 / segmentCount;\r\n        const x = data.position1[i3];\r\n        const y = data.position1[i3 + 1];\r\n        const z = data.position1[i3 + 2];\r\n        for (let j = 0; j < s; ++j) {\r\n            const j3 = k * 3 + j * 3;\r\n            const f1 = step * (j * 2 + 1);\r\n            const f2 = step * (j * 2 + 2);\r\n            pos1[j3] = x + v.x * f1;\r\n            pos1[j3 + 1] = y + v.y * f1;\r\n            pos1[j3 + 2] = z + v.z * f1;\r\n            pos2[j3] = x + v.x * f2;\r\n            pos2[j3 + 1] = y + v.y * f2;\r\n            pos2[j3 + 2] = z + v.z * f2;\r\n            if (data.color) {\r\n                col[j3] = data.color[i3];\r\n                col[j3 + 1] = data.color[i3 + 1];\r\n                col[j3 + 2] = data.color[i3 + 2];\r\n            }\r\n            if (rad)\r\n                rad[k + j] = data.radius[i];\r\n            if (pick) {\r\n                if (data.picking.array) {\r\n                    pick[k + j] = data.picking.array[i];\r\n                }\r\n                else {\r\n                    pick[k + j] = i;\r\n                }\r\n            }\r\n            if (id)\r\n                id[k + j] = data.primitiveId[i];\r\n        }\r\n        k += s;\r\n    }\r\n    const position1 = new Float32Array(pos1);\r\n    const position2 = new Float32Array(pos2);\r\n    const position = calculateCenterArray(position1, position2);\r\n    const color = new Float32Array(col);\r\n    const color2 = color;\r\n    const d = { position, position1, position2, color, color2 };\r\n    if (rad)\r\n        d.radius = new Float32Array(rad);\r\n    if (pick && data.picking) {\r\n        data.picking.array = new Float32Array(pick);\r\n        d.picking = data.picking;\r\n    }\r\n    if (id)\r\n        d.primitiveId = new Float32Array(id);\r\n    return d;\r\n}\r\nexport function getFixedLengthWrappedDashData(data, segmentLength = 0.1) {\r\n    const direction = calculateDirectionArray(data.position1, data.position2);\r\n    const pos1 = [];\r\n    const pos2 = [];\r\n    const col = [];\r\n    const rad = data.radius ? [] : undefined;\r\n    const pick = data.picking ? [] : undefined;\r\n    const id = data.primitiveId ? [] : undefined;\r\n    const v = new Vector3();\r\n    const n = data.position1.length / 3;\r\n    let remaining = segmentLength;\r\n    let drawing = true;\r\n    let k = 0;\r\n    let k3 = 0;\r\n    let kprev = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n        const i3 = i * 3;\r\n        const x = data.position1[i3];\r\n        const y = data.position1[i3 + 1];\r\n        const z = data.position1[i3 + 2];\r\n        v.set(direction[i3], direction[i3 + 1], direction[i3 + 2]);\r\n        const vl = v.length();\r\n        if (drawing) {\r\n            pos1[k3] = x;\r\n            pos1[k3 + 1] = y;\r\n            pos1[k3 + 2] = z;\r\n        }\r\n        let dist = remaining;\r\n        const inv = 1 / vl;\r\n        while (dist < vl) {\r\n            const a = drawing ? pos2 : pos1;\r\n            a[k3] = x + v.x * dist * inv;\r\n            a[k3 + 1] = y + v.y * dist * inv;\r\n            a[k3 + 2] = z + v.z * dist * inv;\r\n            if (drawing) {\r\n                k++;\r\n                k3 = k * 3;\r\n            }\r\n            drawing = !drawing;\r\n            remaining = segmentLength;\r\n            dist += segmentLength;\r\n        }\r\n        if (drawing) {\r\n            pos2[k3] = data.position2[i3];\r\n            pos2[k3 + 1] = data.position2[i3 + 1];\r\n            pos2[k3 + 2] = data.position2[i3 + 2];\r\n            k++;\r\n            k3 = k * 3;\r\n        }\r\n        remaining = dist - vl;\r\n        for (let j = kprev; j < k; j++) {\r\n            if (data.color) {\r\n                const j3 = j * 3;\r\n                col[j3] = data.color[i3];\r\n                col[j3 + 1] = data.color[i3 + 1];\r\n                col[j3 + 2] = data.color[i3 + 2];\r\n            }\r\n            if (rad)\r\n                rad[j] = data.radius[i];\r\n            if (pick) {\r\n                if (data.picking.array) {\r\n                    pick[j] = data.picking.array[i];\r\n                }\r\n                else {\r\n                    pick[j] = i;\r\n                }\r\n            }\r\n            if (id)\r\n                id[j] = data.primitiveId[i];\r\n        }\r\n        kprev = k;\r\n    }\r\n    if (!drawing && n > 0) {\r\n        const k3 = k * 3;\r\n        pos2[k3] = data.position2[3 * n - 3];\r\n        pos2[k3 + 1] = data.position2[3 * n - 2];\r\n        pos2[k3 + 1] = data.position2[3 * n - 1];\r\n    }\r\n    const position1 = new Float32Array(pos1);\r\n    const position2 = new Float32Array(pos2);\r\n    const position = calculateCenterArray(position1, position2);\r\n    const color = new Float32Array(col);\r\n    const color2 = color;\r\n    const d = { position, position1, position2, color, color2 };\r\n    if (rad)\r\n        d.radius = new Float32Array(rad);\r\n    if (pick && data.picking) {\r\n        data.picking.array = new Float32Array(pick);\r\n        d.picking = data.picking;\r\n    }\r\n    if (id)\r\n        d.primitiveId = new Float32Array(id);\r\n    return d;\r\n}\r\n//# sourceMappingURL=dash.js.map","/**\r\n * @file Primitive\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Color } from 'three';\r\nimport { BufferRegistry, PickerRegistry } from '../globals';\r\nimport { getFixedLengthDashData } from './dash';\r\nfunction addElement(elm, array) {\r\n    if (elm.toArray !== undefined) {\r\n        elm = elm.toArray();\r\n    }\r\n    else if (elm.x !== undefined) {\r\n        elm = [elm.x, elm.y, elm.z];\r\n    }\r\n    else if (elm.r !== undefined) {\r\n        elm = [elm.r, elm.g, elm.b];\r\n    }\r\n    array.push.apply(array, elm);\r\n}\r\nconst tmpVec = new Vector3();\r\n/**\r\n * Base class for geometry primitives\r\n * @interface\r\n */\r\nexport class Primitive {\r\n    static get Picker() { return PickerRegistry.get(this.type); }\r\n    static get Buffer() { return BufferRegistry.get(this.type); }\r\n    static getShapeKey(name) {\r\n        return this.type + name[0].toUpperCase() + name.substr(1);\r\n    }\r\n    static expandBoundingBox(box, data) { }\r\n    static valueToShape(shape, name, value) {\r\n        const data = shape._primitiveData[this.getShapeKey(name)];\r\n        const type = this.fields[name];\r\n        switch (type) {\r\n            case 'v3':\r\n            case 'c':\r\n                addElement(value, data);\r\n                break;\r\n            default:\r\n                data.push(value);\r\n        }\r\n    }\r\n    static objectToShape(shape, data) {\r\n        Object.keys(this.fields).forEach(name => {\r\n            this.valueToShape(shape, name, data[name]);\r\n        });\r\n        this.valueToShape(shape, 'name', data.name);\r\n        this.expandBoundingBox(shape.boundingBox, data);\r\n    }\r\n    static valueFromShape(shape, pid, name) {\r\n        const data = shape._primitiveData[this.getShapeKey(name)];\r\n        const type = this.fields[name];\r\n        switch (type) {\r\n            case 'v3':\r\n                return new Vector3().fromArray(data, 3 * pid);\r\n            case 'c':\r\n                return new Color().fromArray(data, 3 * pid);\r\n            default:\r\n                return data[pid];\r\n        }\r\n    }\r\n    static objectFromShape(shape, pid) {\r\n        let name = this.valueFromShape(shape, pid, 'name');\r\n        if (name === undefined) {\r\n            name = `${this.type}: ${pid} (${shape.name})`;\r\n        }\r\n        const o = { shape, name };\r\n        Object.keys(this.fields).forEach(name => {\r\n            o[name] = this.valueFromShape(shape, pid, name);\r\n        });\r\n        return o;\r\n    }\r\n    static arrayFromShape(shape, name) {\r\n        const data = shape._primitiveData[this.getShapeKey(name)];\r\n        const type = this.fields[name];\r\n        switch (type) {\r\n            case 's':\r\n                return data;\r\n            default:\r\n                return new Float32Array(data);\r\n        }\r\n    }\r\n    static dataFromShape(shape) {\r\n        const data = {};\r\n        if (this.Picker) {\r\n            data.picking = new this.Picker(shape);\r\n        }\r\n        Object.keys(this.fields).forEach(name => {\r\n            data[name] = this.arrayFromShape(shape, name);\r\n        });\r\n        return data;\r\n    }\r\n    static bufferFromShape(shape, params) {\r\n        return new this.Buffer(this.dataFromShape(shape), params);\r\n    }\r\n}\r\nPrimitive.type = '';\r\nPrimitive.fields = {};\r\n/**\r\n * Sphere geometry primitive\r\n */\r\nexport class SpherePrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        return this.valueFromShape(shape, pid, 'position');\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position));\r\n    }\r\n}\r\nSpherePrimitive.type = 'sphere';\r\nSpherePrimitive.fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    radius: 'f'\r\n};\r\n/**\r\n * Box geometry primitive\r\n */\r\nexport class BoxPrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        return this.valueFromShape(shape, pid, 'position');\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position));\r\n    }\r\n}\r\nBoxPrimitive.type = 'box';\r\nBoxPrimitive.fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    size: 'f',\r\n    heightAxis: 'v3',\r\n    depthAxis: 'v3'\r\n};\r\n/**\r\n * Octahedron geometry primitive\r\n */\r\nexport class OctahedronPrimitive extends BoxPrimitive {\r\n}\r\nOctahedronPrimitive.type = 'octahedron';\r\n/**\r\n * Tetrahedron geometry primitive\r\n */\r\nexport class TetrahedronPrimitive extends BoxPrimitive {\r\n}\r\nTetrahedronPrimitive.type = 'tetrahedron';\r\n/**\r\n * Cylinder geometry primitive\r\n */\r\nexport class CylinderPrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        const p1 = this.valueFromShape(shape, pid, 'position1');\r\n        const p2 = this.valueFromShape(shape, pid, 'position2');\r\n        return p1.add(p2).multiplyScalar(0.5);\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position1));\r\n        box.expandByPoint(tmpVec.fromArray(data.position2));\r\n    }\r\n    static bufferFromShape(shape, params = {}) {\r\n        let data = this.dataFromShape(shape);\r\n        if (this.type === 'cylinder' && params.dashedCylinder) {\r\n            data = getFixedLengthDashData(data);\r\n        }\r\n        return new this.Buffer(data, params);\r\n    }\r\n}\r\nCylinderPrimitive.type = 'cylinder';\r\nCylinderPrimitive.fields = {\r\n    position1: 'v3',\r\n    position2: 'v3',\r\n    color: 'c',\r\n    radius: 'f'\r\n};\r\n/**\r\n * Arrow geometry primitive\r\n */\r\nexport class ArrowPrimitive extends CylinderPrimitive {\r\n}\r\nArrowPrimitive.type = 'arrow';\r\n/**\r\n * Cone geometry primitive\r\n */\r\nexport class ConePrimitive extends CylinderPrimitive {\r\n}\r\nConePrimitive.type = 'cone';\r\n/**\r\n * Ellipsoid geometry primitive\r\n */\r\nexport class EllipsoidPrimitive extends SpherePrimitive {\r\n}\r\nEllipsoidPrimitive.type = 'ellipsoid';\r\nEllipsoidPrimitive.fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    radius: 'f',\r\n    majorAxis: 'v3',\r\n    minorAxis: 'v3'\r\n};\r\n/**\r\n * Torus geometry primitive\r\n */\r\nexport class TorusPrimitive extends EllipsoidPrimitive {\r\n}\r\nTorusPrimitive.type = 'torus';\r\n/**\r\n * Text geometry primitive\r\n */\r\nexport class TextPrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        return this.valueFromShape(shape, pid, 'position');\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position));\r\n    }\r\n}\r\nTextPrimitive.type = 'text';\r\nTextPrimitive.fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    size: 'f',\r\n    text: 's'\r\n};\r\n/**\r\n * Point primitive\r\n */\r\nexport class PointPrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        return this.valueFromShape(shape, pid, 'position');\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position));\r\n    }\r\n}\r\nPointPrimitive.type = 'point';\r\nPointPrimitive.fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n};\r\n/**\r\n * Wideline geometry primitive\r\n */\r\nexport class WidelinePrimitive extends Primitive {\r\n    static positionFromShape(shape, pid) {\r\n        const p1 = this.valueFromShape(shape, pid, 'position1');\r\n        const p2 = this.valueFromShape(shape, pid, 'position2');\r\n        return p1.add(p2).multiplyScalar(0.5);\r\n    }\r\n    static expandBoundingBox(box, data) {\r\n        box.expandByPoint(tmpVec.fromArray(data.position1));\r\n        box.expandByPoint(tmpVec.fromArray(data.position2));\r\n    }\r\n}\r\nWidelinePrimitive.type = 'wideline';\r\nWidelinePrimitive.fields = {\r\n    position1: 'v3',\r\n    position2: 'v3',\r\n    color: 'c'\r\n};\r\n//# sourceMappingURL=primitive.js.map","/**\r\n * @file Spatial Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Box3 } from 'three';\r\nfunction createBoundingBox(positions) {\r\n    const { x, y, z } = positions;\r\n    const boundingBox = new Box3();\r\n    const count = x.length;\r\n    const { min, max } = boundingBox;\r\n    for (let i = 0; i < count; i++) {\r\n        min.x = Math.min(x[i], min.x);\r\n        min.y = Math.min(y[i], min.y);\r\n        min.z = Math.min(z[i], min.z);\r\n        max.x = Math.max(x[i], max.x);\r\n        max.y = Math.max(y[i], max.y);\r\n        max.z = Math.max(z[i], max.z);\r\n    }\r\n    return boundingBox;\r\n}\r\nexport default class SpatialHash {\r\n    constructor(positions, boundingBox) {\r\n        this.exp = 3;\r\n        const bb = boundingBox || createBoundingBox(positions);\r\n        this.minX = bb.min.x;\r\n        this.minY = bb.min.y;\r\n        this.minZ = bb.min.z;\r\n        this.boundX = ((bb.max.x - this.minX) >> this.exp) + 1;\r\n        this.boundY = ((bb.max.y - this.minY) >> this.exp) + 1;\r\n        this.boundZ = ((bb.max.z - this.minZ) >> this.exp) + 1;\r\n        const n = this.boundX * this.boundY * this.boundZ;\r\n        const an = (positions.count !== undefined) ? positions.count : positions.x.length;\r\n        const xArray = positions.x;\r\n        const yArray = positions.y;\r\n        const zArray = positions.z;\r\n        let count = 0;\r\n        const grid = new Uint32Array(n);\r\n        const bucketIndex = new Int32Array(an);\r\n        for (let i = 0; i < an; ++i) {\r\n            const x = (xArray[i] - this.minX) >> this.exp;\r\n            const y = (yArray[i] - this.minY) >> this.exp;\r\n            const z = (zArray[i] - this.minZ) >> this.exp;\r\n            const idx = (((x * this.boundY) + y) * this.boundZ) + z;\r\n            if ((grid[idx] += 1) === 1) {\r\n                count += 1;\r\n            }\r\n            bucketIndex[i] = idx;\r\n        }\r\n        const bucketCount = new Uint16Array(count);\r\n        for (let i = 0, j = 0; i < n; ++i) {\r\n            const c = grid[i];\r\n            if (c > 0) {\r\n                grid[i] = j + 1;\r\n                bucketCount[j] = c;\r\n                j += 1;\r\n            }\r\n        }\r\n        const bucketOffset = new Uint32Array(count);\r\n        for (let i = 1; i < count; ++i) {\r\n            bucketOffset[i] += bucketOffset[i - 1] + bucketCount[i - 1];\r\n        }\r\n        const bucketFill = new Uint16Array(count);\r\n        const bucketArray = new Int32Array(an);\r\n        for (let i = 0; i < an; ++i) {\r\n            const bucketIdx = grid[bucketIndex[i]];\r\n            if (bucketIdx > 0) {\r\n                const k = bucketIdx - 1;\r\n                bucketArray[bucketOffset[k] + bucketFill[k]] = i;\r\n                bucketFill[k] += 1;\r\n            }\r\n        }\r\n        this.grid = grid;\r\n        this.bucketCount = bucketCount;\r\n        this.bucketOffset = bucketOffset;\r\n        this.bucketArray = bucketArray;\r\n        this.xArray = xArray;\r\n        this.yArray = yArray;\r\n        this.zArray = zArray;\r\n    }\r\n    within(x, y, z, r) {\r\n        const result = [];\r\n        this.eachWithin(x, y, z, r, atomIndex => result.push(atomIndex));\r\n        return result;\r\n    }\r\n    eachWithin(x, y, z, r, callback) {\r\n        const rSq = r * r;\r\n        const loX = Math.max(0, (x - r - this.minX) >> this.exp);\r\n        const loY = Math.max(0, (y - r - this.minY) >> this.exp);\r\n        const loZ = Math.max(0, (z - r - this.minZ) >> this.exp);\r\n        const hiX = Math.min(this.boundX, ((x + r - this.minX) >> this.exp) + 1);\r\n        const hiY = Math.min(this.boundY, ((y + r - this.minY) >> this.exp) + 1);\r\n        const hiZ = Math.min(this.boundZ, ((z + r - this.minZ) >> this.exp) + 1);\r\n        for (let ix = loX; ix < hiX; ++ix) {\r\n            for (let iy = loY; iy < hiY; ++iy) {\r\n                for (let iz = loZ; iz < hiZ; ++iz) {\r\n                    const idx = (((ix * this.boundY) + iy) * this.boundZ) + iz;\r\n                    const bucketIdx = this.grid[idx];\r\n                    if (bucketIdx > 0) {\r\n                        const k = bucketIdx - 1;\r\n                        const offset = this.bucketOffset[k];\r\n                        const count = this.bucketCount[k];\r\n                        const end = offset + count;\r\n                        for (let i = offset; i < end; ++i) {\r\n                            const atomIndex = this.bucketArray[i];\r\n                            const dx = this.xArray[atomIndex] - x;\r\n                            const dy = this.yArray[atomIndex] - y;\r\n                            const dz = this.zArray[atomIndex] - z;\r\n                            const dSq = dx * dx + dy * dy + dz * dz;\r\n                            if (dSq <= rSq)\r\n                                callback(atomIndex, dSq);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=spatial-hash.js.map","/**\r\n * @file Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log } from '../globals';\r\nimport { getTypedArray } from '../utils';\r\n/**\r\n * Store base class\r\n * @interface\r\n */\r\nexport default class Store {\r\n    /**\r\n     * @param {Integer} [size] - initial size\r\n     */\r\n    constructor(size = 0) {\r\n        this._fields = this._defaultFields;\r\n        this._init(0);\r\n    }\r\n    /**\r\n     * Initialize the store\r\n     * @param  {Integer} size - size to initialize\r\n     * @return {undefined}\r\n     */\r\n    _init(size) {\r\n        this.length = size;\r\n        this.count = 0;\r\n        for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n            const [name, size, type] = this._fields[i];\r\n            this._initField(name, size, type);\r\n        }\r\n    }\r\n    /**\r\n     * Initialize a field\r\n     * @param  {String} name - field name\r\n     * @param  {Integer} size - element size\r\n     * @param  {String} type - data type, one of int8, int16, int32,\r\n     *                         uint8, uint16, uint32, float32\r\n     * @return {undefined}\r\n     */\r\n    _initField(name, size, type) {\r\n        this[name] = getTypedArray(type, this.length * size);\r\n    }\r\n    /**\r\n     * Add a field\r\n     * @param  {String} name - field name\r\n     * @param  {Integer} size - element size\r\n     * @param  {String} type - data type, one of int8, int16, int32,\r\n     *                         uint8, uint16, uint32, float32\r\n     * @return {undefined}\r\n     */\r\n    addField(name, size, type) {\r\n        this._fields.push([name, size, type]);\r\n        this._initField(name, size, type);\r\n    }\r\n    /**\r\n     * Resize the store to the new size\r\n     * @param  {Integer} size - new size\r\n     * @return {undefined}\r\n     */\r\n    resize(size) {\r\n        // Log.time( \"Store.resize\" );\r\n        this.length = Math.round(size || 0);\r\n        this.count = Math.min(this.count, this.length);\r\n        for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n            const name = this._fields[i][0];\r\n            const itemSize = this._fields[i][1];\r\n            const arraySize = this.length * itemSize;\r\n            const tmpArray = new this[name].constructor(arraySize);\r\n            if (this[name].length > arraySize) {\r\n                tmpArray.set(this[name].subarray(0, arraySize));\r\n            }\r\n            else {\r\n                tmpArray.set(this[name]);\r\n            }\r\n            this[name] = tmpArray;\r\n        }\r\n        // Log.timeEnd( \"Store.resize\" );\r\n    }\r\n    /**\r\n     * Resize the store to 1.5 times its current size if full\r\n     * @return {undefined}\r\n     */\r\n    growIfFull() {\r\n        if (this.count >= this.length) {\r\n            const size = Math.round(this.length * 1.5);\r\n            this.resize(Math.max(256, size));\r\n        }\r\n    }\r\n    /**\r\n     * Copy data from one store to another\r\n     * @param  {Store} other - store to copy from\r\n     * @param  {Integer} thisOffset - offset to start copying to\r\n     * @param  {Integer} otherOffset - offset to start copying from\r\n     * @param  {Integer} length - number of entries to copy\r\n     * @return {undefined}\r\n     */\r\n    copyFrom(other, thisOffset, otherOffset, length) {\r\n        for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n            const name = this._fields[i][0];\r\n            const itemSize = this._fields[i][1];\r\n            const thisField = this[name];\r\n            const otherField = other[name];\r\n            for (let j = 0; j < length; ++j) {\r\n                const thisIndex = itemSize * (thisOffset + j);\r\n                const otherIndex = itemSize * (otherOffset + j);\r\n                for (let k = 0; k < itemSize; ++k) {\r\n                    thisField[thisIndex + k] = otherField[otherIndex + k];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Copy data within this store\r\n     * @param  {Integer} thisOffset - offset to start copying to\r\n     * @param  {Integer} otherOffset - offset to start copying from\r\n     * @param  {Integer} length - number of entries to copy\r\n     * @return {undefined}\r\n     */\r\n    copyWithin(offsetTarget, offsetSource, length) {\r\n        for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n            const name = this._fields[i][0];\r\n            const itemSize = this._fields[i][1];\r\n            const thisField = this[name];\r\n            for (let j = 0; j < length; ++j) {\r\n                const targetIndex = itemSize * (offsetTarget + j);\r\n                const sourceIndex = itemSize * (offsetSource + j);\r\n                for (let k = 0; k < itemSize; ++k) {\r\n                    thisField[targetIndex + k] = thisField[sourceIndex + k];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sort entries in the store given the compare function\r\n     * @param  {[type]} compareFunction - function to sort by\r\n     * @return {undefined}\r\n     */\r\n    sort(compareFunction) {\r\n        Log.time('Store.sort');\r\n        const thisStore = this;\r\n        const tmpStore = new this.constructor(1);\r\n        function swap(index1, index2) {\r\n            if (index1 === index2)\r\n                return;\r\n            tmpStore.copyFrom(thisStore, 0, index1, 1);\r\n            thisStore.copyWithin(index1, index2, 1);\r\n            thisStore.copyFrom(tmpStore, index2, 0, 1);\r\n        }\r\n        function quicksort(left, right) {\r\n            if (left < right) {\r\n                let pivot = Math.floor((left + right) / 2);\r\n                let leftNew = left;\r\n                let rightNew = right;\r\n                do {\r\n                    while (compareFunction(leftNew, pivot) < 0) {\r\n                        leftNew += 1;\r\n                    }\r\n                    while (compareFunction(rightNew, pivot) > 0) {\r\n                        rightNew -= 1;\r\n                    }\r\n                    if (leftNew <= rightNew) {\r\n                        if (leftNew === pivot) {\r\n                            pivot = rightNew;\r\n                        }\r\n                        else if (rightNew === pivot) {\r\n                            pivot = leftNew;\r\n                        }\r\n                        swap(leftNew, rightNew);\r\n                        leftNew += 1;\r\n                        rightNew -= 1;\r\n                    }\r\n                } while (leftNew <= rightNew);\r\n                quicksort(left, rightNew);\r\n                quicksort(leftNew, right);\r\n            }\r\n        }\r\n        quicksort(0, this.count - 1);\r\n        Log.timeEnd('Store.sort');\r\n    }\r\n    /**\r\n     * Empty the store\r\n     * @return {undefined}\r\n     */\r\n    clear() {\r\n        this.count = 0;\r\n    }\r\n    /**\r\n     * Dispose of the store entries and fields\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        delete this.length;\r\n        delete this.count;\r\n        for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n            const name = this._fields[i][0];\r\n            delete this[name];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=store.js.map","/**\r\n * @file Contact Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store';\r\n/**\r\n * Bond store\r\n */\r\nexport default class ContactStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['index1', 1, 'int32'],\r\n            ['index2', 1, 'int32'],\r\n            ['type', 1, 'int8']\r\n        ];\r\n    }\r\n    addContact(index1, index2, type) {\r\n        this.growIfFull();\r\n        const i = this.count;\r\n        if (index1 < index2) {\r\n            this.index1[i] = index1;\r\n            this.index2[i] = index2;\r\n        }\r\n        else {\r\n            this.index2[i] = index1;\r\n            this.index1[i] = index2;\r\n        }\r\n        if (type)\r\n            this.type[i] = type;\r\n        this.count += 1;\r\n    }\r\n}\r\n//# sourceMappingURL=contact-store.js.map","/**\r\n * @file Bit array\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Paul Pillot <paulpillot@gmail.com>\r\n * @private\r\n */\r\n/**\r\n * Compute the Hamming weight of a 32-bit unsigned integer\r\n * @param  {Integer} v - a 32-bit unsigned integer\r\n * @return {Integer} the Hamming weight\r\n */\r\nfunction hammingWeight(v) {\r\n    // works with signed or unsigned shifts\r\n    v -= ((v >>> 1) & 0x55555555);\r\n    v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\r\n    return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\r\n}\r\n/**\r\n * Bit array\r\n *\r\n * Based heavily on https://github.com/lemire/FastBitSet.js\r\n * which is licensed under the Apache License, Version 2.0.\r\n */\r\nexport default class BitArray {\r\n    /**\r\n     * @param  {Integer} length - array length\r\n     * @param  {Boolean} [setAll] - initialize with true\r\n     */\r\n    constructor(length, setAll) {\r\n        this.length = length;\r\n        this._words = new Uint32Array((length + 32) >>> 5);\r\n        if (setAll === true) {\r\n            this.setAll();\r\n        }\r\n    }\r\n    /**\r\n     * Get value at index\r\n     * @param  {Integer} index - the index\r\n     * @return {Boolean} value\r\n     */\r\n    get(index) {\r\n        return (this._words[index >>> 5] & (1 << index)) !== 0;\r\n    }\r\n    /**\r\n     * Set value at index to true\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n    set(index) {\r\n        this._words[index >>> 5] |= 1 << index;\r\n    }\r\n    /**\r\n     * Set value at index to false\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n    clear(index) {\r\n        this._words[index >>> 5] &= ~(1 << index);\r\n    }\r\n    /**\r\n     * Flip value at index\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n    flip(index) {\r\n        this._words[index >>> 5] ^= 1 << index;\r\n    }\r\n    _assignRange(start, end, value) {\r\n        if (end < start)\r\n            return;\r\n        const words = this._words;\r\n        const wordValue = value === true ? 0xFFFFFFFF : 0;\r\n        const wordStart = start >>> 5;\r\n        const wordEnd = end >>> 5;\r\n        // set complete words when applicable\r\n        for (let k = wordStart; k < wordEnd; ++k) {\r\n            words[k] = wordValue;\r\n        }\r\n        // set parts of the range not spanning complete words\r\n        const startWord = wordStart << 5;\r\n        const endWord = wordEnd << 5;\r\n        if (value === true) {\r\n            if (end - start < 32) {\r\n                for (let i = start, n = end + 1; i < n; ++i) {\r\n                    words[i >>> 5] |= 1 << i;\r\n                }\r\n            }\r\n            else {\r\n                for (let i = start, n = startWord; i < n; ++i) {\r\n                    words[i >>> 5] |= 1 << i;\r\n                }\r\n                for (let i = endWord, n = end + 1; i < n; ++i) {\r\n                    words[i >>> 5] |= 1 << i;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (end - start < 32) {\r\n                for (let i = start, n = end + 1; i < n; ++i) {\r\n                    words[i >>> 5] &= ~(1 << i);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = start, n = startWord; i < n; ++i) {\r\n                    words[i >>> 5] &= ~(1 << i);\r\n                }\r\n                for (let i = endWord, n = end + 1; i < n; ++i) {\r\n                    words[i >>> 5] &= ~(1 << i);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set bits of the given range\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n    setRange(start, end) {\r\n        return this._assignRange(start, end, true);\r\n    }\r\n    /**\r\n     * Clear bits of the given range\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n    clearRange(start, end) {\r\n        return this._assignRange(start, end, false);\r\n    }\r\n    /**\r\n     * Set bits at all given indices\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} this object\r\n     */\r\n    setBits(...indices) {\r\n        const words = this._words;\r\n        const n = indices.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const index = indices[i];\r\n            words[index >>> 5] |= 1 << index;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Clear bits at all given indices\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} this object\r\n     */\r\n    clearBits(...indices) {\r\n        const words = this._words;\r\n        const n = indices.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const index = indices[i];\r\n            words[index >>> 5] &= ~(1 << index);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set all bits of the array\r\n     * @return {BitArray} this object\r\n     */\r\n    setAll() {\r\n        return this._assignRange(0, this.length - 1, true);\r\n    }\r\n    /**\r\n     * Clear all bits of the array\r\n     * @return {BitArray} this object\r\n     */\r\n    clearAll() {\r\n        return this._assignRange(0, this.length - 1, false);\r\n    }\r\n    /**\r\n     * Flip all the values in the array\r\n     * @return {BitArray} this object\r\n     */\r\n    flipAll() {\r\n        const count = this._words.length;\r\n        const words = this._words;\r\n        const bs = 32 - this.length % 32;\r\n        for (let k = 0; k < count - 1; ++k) {\r\n            words[k] = ~words[k];\r\n        }\r\n        words[count - 1] = (~(words[count - 1] << bs)) >>> bs;\r\n        return this;\r\n    }\r\n    _isRangeValue(start, end, value) {\r\n        if (end < start)\r\n            return;\r\n        const words = this._words;\r\n        const wordValue = value === true ? 0xFFFFFFFF : 0;\r\n        const wordStart = start >>> 5;\r\n        const wordEnd = end >>> 5;\r\n        // set complete words when applicable\r\n        for (let k = wordStart; k < wordEnd; ++k) {\r\n            if (words[k] !== wordValue)\r\n                return false;\r\n        }\r\n        // set parts of the range not spanning complete words\r\n        if (end - start < 32) {\r\n            for (let i = start, n = end + 1; i < n; ++i) {\r\n                if (!!(words[i >>> 5] & (1 << i)) !== value)\r\n                    return false;\r\n            }\r\n        }\r\n        else {\r\n            const startWord = wordStart << 5;\r\n            const endWord = wordEnd << 5;\r\n            for (let i = start, n = startWord << 5; i < n; ++i) {\r\n                if (!!(words[i >>> 5] & (1 << i)) !== value)\r\n                    return false;\r\n            }\r\n            for (let i = endWord, n = end + 1; i < n; ++i) {\r\n                if (!!(words[i >>> 5] & (1 << i)) !== value)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Test if bits in given range are set\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n    isRangeSet(start, end) {\r\n        return this._isRangeValue(start, end, true);\r\n    }\r\n    /**\r\n     * Test if bits in given range are clear\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n    isRangeClear(start, end) {\r\n        return this._isRangeValue(start, end, false);\r\n    }\r\n    /**\r\n     * Test if all bits in the array are set\r\n     * @return {Boolean} test result\r\n     */\r\n    isAllSet() {\r\n        return this._isRangeValue(0, this.length - 1, true);\r\n    }\r\n    /**\r\n     * Test if all bits in the array are clear\r\n     * @return {Boolean} test result\r\n     */\r\n    isAllClear() {\r\n        return this._isRangeValue(0, this.length - 1, false);\r\n    }\r\n    /**\r\n     * Test if bits at all given indices are set\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} test result\r\n     */\r\n    isSet(...indices) {\r\n        const words = this._words;\r\n        const n = indices.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const index = indices[i];\r\n            if ((words[index >>> 5] & (1 << index)) === 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Test if bits at all given indices are clear\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} test result\r\n     */\r\n    isClear(...indices) {\r\n        const words = this._words;\r\n        const n = indices.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const index = indices[i];\r\n            if ((words[index >>> 5] & (1 << index)) !== 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Test if two BitArrays are identical in all their values\r\n     * @param {BitArray} otherBitarray - the other BitArray\r\n     * @return {Boolean} test result\r\n     */\r\n    isEqualTo(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            if (words1[k] !== words2[k]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * How many set bits?\r\n     * @return {Integer} number of set bits\r\n     */\r\n    getSize() {\r\n        const count = this._words.length;\r\n        const words = this._words;\r\n        let size = 0;\r\n        for (let i = 0; i < count; ++i) {\r\n            size += hammingWeight(words[i]);\r\n        }\r\n        return size;\r\n    }\r\n    /**\r\n     * Calculate difference betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n    difference(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            words1[k] = words1[k] & ~words2[k];\r\n        }\r\n        for (let k = words1.length; k < count; ++k) {\r\n            words1[k] = 0;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculate union betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n    union(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            words1[k] |= words2[k];\r\n        }\r\n        for (let k = words1.length; k < count; ++k) {\r\n            words1[k] = 0;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculate intersection betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n    intersection(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            words1[k] &= words2[k];\r\n        }\r\n        for (let k = words1.length; k < count; ++k) {\r\n            words1[k] = 0;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Test if there is any intersection betwen this and another bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {Boolean} test result\r\n     */\r\n    intersects(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            if ((words1[k] & words2[k]) !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Calculate the number of bits in common betwen this and another bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {Integer} size\r\n     */\r\n    getIntersectionSize(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        let size = 0;\r\n        for (let k = 0; k < count; ++k) {\r\n            size += hammingWeight(words1[k] & words2[k]);\r\n        }\r\n        return size;\r\n    }\r\n    /**\r\n     * Calculate intersection betwen this and another bit array.\r\n     * Store result in a new bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} the new bit array\r\n     */\r\n    makeIntersection(otherBitarray) {\r\n        const words1 = this._words;\r\n        const words2 = otherBitarray._words;\r\n        const count = Math.min(words1.length, words2.length);\r\n        const wordsA = new Uint32Array(count);\r\n        const intersection = Object.create(BitArray.prototype);\r\n        intersection._words = wordsA;\r\n        intersection.length = Math.min(this.length, otherBitarray.length);\r\n        for (let k = 0; k < count; ++k) {\r\n            wordsA[k] = words1[k] & words2[k];\r\n        }\r\n        return intersection;\r\n    }\r\n    /**\r\n     * Iterate over all set bits in the array\r\n     * @param  {function( index: Integer, i: Integer )} callback - the callback\r\n     * @return {undefined}\r\n     */\r\n    forEach(callback) {\r\n        const count = this._words.length;\r\n        const words = this._words;\r\n        let i = 0;\r\n        for (let k = 0; k < count; ++k) {\r\n            let w = words[k];\r\n            while (w !== 0) {\r\n                const t = w & -w;\r\n                const index = (k << 5) + hammingWeight(t - 1);\r\n                callback(index, i);\r\n                w ^= t;\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Get an array with the set bits\r\n     * @return {Array} bit indices\r\n     */\r\n    toArray() {\r\n        const words = this._words;\r\n        const answer = new Array(this.getSize());\r\n        const count = this._words.length;\r\n        let pos = 0;\r\n        for (let k = 0; k < count; ++k) {\r\n            let w = words[k];\r\n            while (w !== 0) {\r\n                const t = w & -w;\r\n                answer[pos++] = (k << 5) + hammingWeight(t - 1);\r\n                w ^= t;\r\n            }\r\n        }\r\n        return answer;\r\n    }\r\n    toString() {\r\n        return '{' + this.toArray().join(',') + '}';\r\n    }\r\n    toSeleString() {\r\n        const sele = this.toArray().join(',');\r\n        return sele ? '@' + sele : 'NONE';\r\n    }\r\n    /**\r\n     * Clone this object\r\n     * @return {BitArray} the cloned object\r\n     */\r\n    clone() {\r\n        const clone = Object.create(BitArray.prototype);\r\n        clone.length = this.length;\r\n        clone._words = new Uint32Array(this._words);\r\n        return clone;\r\n    }\r\n}\r\n//# sourceMappingURL=bitarray.js.map","/**\r\n * @file Adjacency List\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport function createAdjacencyList(edges) {\r\n    const { edgeCount, nodeCount, nodeArray1, nodeArray2 } = edges;\r\n    const countArray = new Uint8Array(nodeCount);\r\n    const offsetArray = new Int32Array(nodeCount);\r\n    // count edges per node\r\n    for (let i = 0; i < edgeCount; ++i) {\r\n        countArray[nodeArray1[i]] += 1;\r\n        countArray[nodeArray2[i]] += 1;\r\n    }\r\n    // get offsets to node edges\r\n    for (let i = 1; i < nodeCount; ++i) {\r\n        offsetArray[i] += offsetArray[i - 1] + countArray[i - 1];\r\n    }\r\n    // prepare index array\r\n    const bondCount2 = edgeCount * 2;\r\n    const indexArray = new Int32Array(bondCount2);\r\n    for (let j = 0; j < bondCount2; ++j) {\r\n        indexArray[j] = -1;\r\n    }\r\n    // build index array\r\n    for (let i = 0; i < edgeCount; ++i) {\r\n        const idx1 = nodeArray1[i];\r\n        const idx2 = nodeArray2[i];\r\n        let j1 = offsetArray[idx1];\r\n        while (indexArray[j1] !== -1 && j1 < bondCount2) {\r\n            j1 += 1;\r\n        }\r\n        indexArray[j1] = i;\r\n        let j2 = offsetArray[idx2];\r\n        while (indexArray[j2] !== -1 && j2 < bondCount2) {\r\n            j2 += 1;\r\n        }\r\n        indexArray[j2] = i;\r\n    }\r\n    return { countArray, offsetArray, indexArray };\r\n}\r\n//# sourceMappingURL=adjacency-list.js.map","/**\r\n * @file Features\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport function createFeatures() {\r\n    return {\r\n        types: [],\r\n        groups: [],\r\n        centers: { x: [], y: [], z: [] },\r\n        atomSets: []\r\n    };\r\n}\r\nexport function createFeatureState(type = 0 /* Unknown */, group = 0 /* Unknown */) {\r\n    return { type, group, x: 0, y: 0, z: 0, atomSet: [] };\r\n}\r\nexport function addAtom(state, atom) {\r\n    state.x += atom.x;\r\n    state.y += atom.y;\r\n    state.z += atom.z;\r\n    state.atomSet.push(atom.index);\r\n}\r\nexport function addFeature(features, state) {\r\n    const n = state.atomSet.length;\r\n    if (n > 0) {\r\n        const { types, groups, centers, atomSets } = features;\r\n        types.push(state.type);\r\n        groups.push(state.group);\r\n        centers.x.push(state.x / n);\r\n        centers.y.push(state.y / n);\r\n        centers.z.push(state.z / n);\r\n        atomSets.push(state.atomSet);\r\n    }\r\n}\r\n//# sourceMappingURL=features.js.map","/**\r\n * @file Structure Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// entity types\r\nexport const UnknownEntity = 0;\r\nexport const PolymerEntity = 1;\r\nexport const NonPolymerEntity = 2;\r\nexport const MacrolideEntity = 3;\r\nexport const WaterEntity = 4;\r\n// molecule types\r\nexport const UnknownType = 0;\r\nexport const WaterType = 1;\r\nexport const IonType = 2;\r\nexport const ProteinType = 3;\r\nexport const RnaType = 4;\r\nexport const DnaType = 5;\r\nexport const SaccharideType = 6;\r\n// backbone types\r\nexport const UnknownBackboneType = 0;\r\nexport const ProteinBackboneType = 1;\r\nexport const RnaBackboneType = 2;\r\nexport const DnaBackboneType = 3;\r\nexport const CgProteinBackboneType = 4;\r\nexport const CgRnaBackboneType = 5;\r\nexport const CgDnaBackboneType = 6;\r\n// chemical component types\r\nexport const ChemCompProtein = [\r\n    'D-BETA-PEPTIDE, C-GAMMA LINKING', 'D-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n    'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE LINKING',\r\n    'L-BETA-PEPTIDE, C-GAMMA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n    'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE LINKING',\r\n    'PEPTIDE LINKING', 'PEPTIDE-LIKE'\r\n];\r\nexport const ChemCompRna = [\r\n    'RNA OH 3 PRIME TERMINUS', 'RNA OH 5 PRIME TERMINUS', 'RNA LINKING'\r\n];\r\nexport const ChemCompDna = [\r\n    'DNA OH 3 PRIME TERMINUS', 'DNA OH 5 PRIME TERMINUS', 'DNA LINKING',\r\n    'L-DNA LINKING', 'L-RNA LINKING'\r\n];\r\nexport const ChemCompSaccharide = [\r\n    'D-SACCHARIDE', 'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'D-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n    'L-SACCHARIDE', 'L-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n    'SACCHARIDE'\r\n];\r\nexport const ChemCompOther = [\r\n    'OTHER'\r\n];\r\nexport const ChemCompNonPolymer = [\r\n    'NON-POLYMER'\r\n];\r\nexport const ChemCompHetero = ChemCompNonPolymer.concat(ChemCompOther, ChemCompSaccharide);\r\n// secondary structure\r\nexport const SecStrucHelix = ['h', 'g', 'i'];\r\nexport const SecStrucSheet = ['e', 'b'];\r\nexport const SecStrucTurn = ['s', 't', 'l', ''];\r\nexport const AtomicNumbers = {\r\n    'H': 1, 'D': 1, 'T': 1, 'HE': 2, 'LI': 3, 'BE': 4, 'B': 5, 'C': 6, 'N': 7, 'O': 8, 'F': 9, 'NE': 10, 'NA': 11, 'MG': 12, 'AL': 13, 'SI': 14, 'P': 15, 'S': 16, 'CL': 17, 'AR': 18, 'K': 19, 'CA': 20, 'SC': 21, 'TI': 22, 'V': 23, 'CR': 24, 'MN': 25, 'FE': 26, 'CO': 27, 'NI': 28, 'CU': 29, 'ZN': 30, 'GA': 31, 'GE': 32, 'AS': 33, 'SE': 34, 'BR': 35, 'KR': 36, 'RB': 37, 'SR': 38, 'Y': 39, 'ZR': 40, 'NB': 41, 'MO': 42, 'TC': 43, 'RU': 44, 'RH': 45, 'PD': 46, 'AG': 47, 'CD': 48, 'IN': 49, 'SN': 50, 'SB': 51, 'TE': 52, 'I': 53, 'XE': 54, 'CS': 55, 'BA': 56, 'LA': 57, 'CE': 58, 'PR': 59, 'ND': 60, 'PM': 61, 'SM': 62, 'EU': 63, 'GD': 64, 'TB': 65, 'DY': 66, 'HO': 67, 'ER': 68, 'TM': 69, 'YB': 70, 'LU': 71, 'HF': 72, 'TA': 73, 'W': 74, 'RE': 75, 'OS': 76, 'IR': 77, 'PT': 78, 'AU': 79, 'HG': 80, 'TL': 81, 'PB': 82, 'BI': 83, 'PO': 84, 'AT': 85, 'RN': 86, 'FR': 87, 'RA': 88, 'AC': 89, 'TH': 90, 'PA': 91, 'U': 92, 'NP': 93, 'PU': 94, 'AM': 95, 'CM': 96, 'BK': 97, 'CF': 98, 'ES': 99, 'FM': 100, 'MD': 101, 'NO': 102, 'LR': 103, 'RF': 104, 'DB': 105, 'SG': 106, 'BH': 107, 'HS': 108, 'MT': 109, 'DS': 110, 'RG': 111, 'CN': 112, 'NH': 113, 'FL': 114, 'MC': 115, 'LV': 116, 'TS': 117, 'OG': 118\r\n};\r\nexport const DefaultAtomicNumber = 0;\r\n// https://doi.org/10.1515/pac-2015-0305 (table 2, 3, and 4)\r\nexport const AtomWeights = {\r\n    1: 1.008, 2: 4.0026, 3: 6.94, 4: 9.0122, 5: 10.81, 6: 10.81, 7: 14.007, 8: 15.999, 9: 18.998, 10: 20.180, 11: 22.990, 12: 24.305, 13: 26.982, 14: 28.085, 15: 30.974, 16: 32.06, 17: 35.45, 18: 39.948, 19: 39.098, 20: 40.078, 21: 44.956, 22: 47.867, 23: 50.942, 24: 51.996, 25: 54.938, 26: 55.845, 27: 58.933, 28: 58.693, 29: 63.546, 30: 65.38, 31: 69.723, 32: 72.630, 33: 74.922, 34: 78.971, 35: 79.904, 36: 83.798, 37: 85.468, 38: 87.62, 39: 88.906, 40: 91.224, 41: 92.906, 42: 95.95, 43: 96.906, 44: 101.07, 45: 102.91, 46: 106.42, 47: 107.87, 48: 112.41, 49: 114.82, 50: 118.71, 51: 121.76, 52: 127.60, 53: 127.60, 54: 131.29, 55: 132.91, 56: 137.33, 57: 138.91, 58: 140.12, 59: 140.91, 60: 144.24, 61: 144.912, 62: 150.36, 63: 151.96, 64: 157.25, 65: 158.93, 66: 162.50, 67: 164.93, 68: 167.26, 69: 168.93, 70: 173.05, 71: 174.97, 72: 178.49, 73: 180.95, 74: 183.84, 75: 186.21, 76: 190.23, 77: 192.22, 78: 195.08, 79: 196.97, 80: 200.59, 81: 204.38, 82: 207.2, 83: 208.98, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 232.04, 91: 231.04, 92: 238.03, 93: 237.048, 94: 244.064, 95: 243.061, 96: 247.070, 97: 247.070, 98: 251.079, 99: 252.083, 100: 257.095, 101: 258.098, 102: 259.101, 103: 262.110, 104: 267.122, 105: 270.131, 106: 271.134, 107: 270.133, 108: 270.134, 109: 278.156, 110: 281.165, 111: 281.166, 112: 285.177, 113: 286.182, 114: 289.190, 115: 289.194, 116: 293.204, 117: 293.208, 118: 294.214\r\n};\r\nexport const DefaultAtomWeight = 10.81; // C\r\n// http://dx.doi.org/10.1021/jp8111556 (or 2.0)\r\nexport const VdwRadii = {\r\n    1: 1.1, 2: 1.4, 3: 1.81, 4: 1.53, 5: 1.92, 6: 1.7, 7: 1.55, 8: 1.52, 9: 1.47, 10: 1.54, 11: 2.27, 12: 1.73, 13: 1.84, 14: 2.1, 15: 1.8, 16: 1.8, 17: 1.75, 18: 1.88, 19: 2.75, 20: 2.31, 21: 2.3, 22: 2.15, 23: 2.05, 24: 2.05, 25: 2.05, 26: 2.05, 27: 2.0, 28: 2.0, 29: 2.0, 30: 2.1, 31: 1.87, 32: 2.11, 33: 1.85, 34: 1.9, 35: 1.83, 36: 2.02, 37: 3.03, 38: 2.49, 39: 2.4, 40: 2.3, 41: 2.15, 42: 2.1, 43: 2.05, 44: 2.05, 45: 2.0, 46: 2.05, 47: 2.1, 48: 2.2, 49: 2.2, 50: 1.93, 51: 2.17, 52: 2.06, 53: 1.98, 54: 2.16, 55: 3.43, 56: 2.68, 57: 2.5, 58: 2.48, 59: 2.47, 60: 2.45, 61: 2.43, 62: 2.42, 63: 2.4, 64: 2.38, 65: 2.37, 66: 2.35, 67: 2.33, 68: 2.32, 69: 2.3, 70: 2.28, 71: 2.27, 72: 2.25, 73: 2.2, 74: 2.1, 75: 2.05, 76: 2.0, 77: 2.0, 78: 2.05, 79: 2.1, 80: 2.05, 81: 1.96, 82: 2.02, 83: 2.07, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 2.4, 91: 2.0, 92: 2.3, 93: 2.0, 94: 2.0, 95: 2.0, 96: 2.0, 97: 2.0, 98: 2.0, 99: 2.0, 100: 2.0, 101: 2.0, 102: 2.0, 103: 2.0, 104: 2.0, 105: 2.0, 106: 2.0, 107: 2.0, 108: 2.0, 109: 2.0, 110: 2.0, 111: 2.0, 112: 2.0, 113: 2.0, 114: 2.0, 115: 2.0, 116: 2.0, 117: 2.0, 118: 2.0\r\n};\r\nexport const DefaultVdwRadius = 2.0; // C\r\n// Peter Rose (peter.rose@rcsb.org), private communication, average accross PDB\r\nexport const ResidueRadii = {\r\n    '2QY': 6.58,\r\n    'CY0': 11.98,\r\n    '2QZ': 2.52,\r\n    'CY1': 6.59,\r\n    'HHK': 5.11,\r\n    'CXM': 4.69,\r\n    'HHI': 4.58,\r\n    'CY4': 4.57,\r\n    'S12': 18.57,\r\n    'CY3': 2.79,\r\n    'C5C': 5.35,\r\n    'PFX': 11.84,\r\n    '2R3': 6.94,\r\n    '2R1': 3.78,\r\n    'ILX': 4.99,\r\n    '32S': 5.68,\r\n    'BTK': 8.59,\r\n    '32T': 5.72,\r\n    'FAK': 9.8,\r\n    'B27': 2.78,\r\n    'ILM': 3.84,\r\n    'C4R': 5.63,\r\n    '32L': 6.75,\r\n    'SYS': 3.01,\r\n    '1MH': 5.04,\r\n    'ILE': 3.65,\r\n    'YNM': 6.39,\r\n    '2RX': 4.91,\r\n    'B3A': 2.48,\r\n    'GEE': 4.76,\r\n    '7MN': 7.34,\r\n    'B3E': 5.4,\r\n    'ARG': 6.33,\r\n    '200': 6.89,\r\n    'HIP': 5.47,\r\n    'HIA': 4.64,\r\n    'B3K': 5.89,\r\n    'HIC': 5.76,\r\n    'B3L': 4.96,\r\n    'B3M': 5.07,\r\n    'ARM': 6.86,\r\n    'ARO': 7.35,\r\n    'AR4': 8.42,\r\n    'PG1': 10.67,\r\n    'YOF': 6.44,\r\n    'IML': 3.74,\r\n    'SXE': 6.65,\r\n    'HIQ': 7.98,\r\n    'PFF': 6.31,\r\n    'HIS': 4.52,\r\n    '0TD': 3.62,\r\n    'C3Y': 5.24,\r\n    '1OP': 11.55,\r\n    '02Y': 4.77,\r\n    '02V': 4.83,\r\n    'ASB': 5.59,\r\n    '30V': 8.53,\r\n    'S2P': 4.81,\r\n    'ASP': 3.55,\r\n    'ASN': 3.54,\r\n    '2OR': 6.91,\r\n    'QMM': 6.13,\r\n    '2P0': 8.52,\r\n    'ASL': 5.36,\r\n    'HFA': 5.14,\r\n    '5PG': 5.69,\r\n    'B3X': 4.38,\r\n    'AS9': 4.1,\r\n    'ARV': 7.59,\r\n    'B3U': 6.06,\r\n    'S2C': 7.54,\r\n    'B3T': 3.34,\r\n    '175': 5.64,\r\n    'GFT': 8.18,\r\n    'HG7': 6.8,\r\n    'B3Q': 4.48,\r\n    'ASA': 3.64,\r\n    '02K': 2.94,\r\n    'B3Y': 7.45,\r\n    'PHD': 5.35,\r\n    'C6C': 6.42,\r\n    'BUC': 5.8,\r\n    'HGL': 8.07,\r\n    'PHE': 5.06,\r\n    '03Y': 2.6,\r\n    'PHA': 5.11,\r\n    'OCY': 5.0,\r\n    '4PH': 6.79,\r\n    '5OH': 4.7,\r\n    '31Q': 10.46,\r\n    'BTR': 7.98,\r\n    '3PX': 4.7,\r\n    '1PA': 8.07,\r\n    'ASX': 3.54,\r\n    'IOR': 7.23,\r\n    '03E': 3.38,\r\n    'PHL': 5.17,\r\n    'KWS': 5.09,\r\n    'PHI': 7.12,\r\n    'NAL': 7.22,\r\n    'S1H': 19.21,\r\n    '2ML': 3.86,\r\n    '2MR': 7.35,\r\n    'GHG': 4.83,\r\n    'TYY': 6.54,\r\n    '2MT': 3.67,\r\n    '56A': 13.01,\r\n    'SVA': 5.46,\r\n    'TYX': 8.31,\r\n    'TYS': 8.59,\r\n    'TYR': 6.38,\r\n    'TYQ': 6.43,\r\n    'HLU': 3.99,\r\n    'MYK': 19.47,\r\n    'TYO': 7.71,\r\n    'HLX': 4.98,\r\n    'TYN': 9.87,\r\n    'TYJ': 6.25,\r\n    'TYI': 6.49,\r\n    'LYH': 5.13,\r\n    'LYF': 12.19,\r\n    'SUN': 6.73,\r\n    'LYR': 18.28,\r\n    'TYB': 6.46,\r\n    '11W': 14.39,\r\n    'LYS': 5.54,\r\n    'LYN': 4.8,\r\n    '11Q': 4.85,\r\n    'LYO': 4.71,\r\n    'LYZ': 1.76,\r\n    'TXY': 6.44,\r\n    'MYN': 4.71,\r\n    'TY5': 10.6,\r\n    'HMR': 5.09,\r\n    '01W': 8.55,\r\n    'LYX': 13.36,\r\n    'TY8': 7.22,\r\n    'TY2': 6.49,\r\n    'KYN': 6.18,\r\n    'KYQ': 9.75,\r\n    'CZZ': 5.14,\r\n    'IIL': 3.81,\r\n    'HNC': 10.41,\r\n    'OIC': 4.62,\r\n    'LVN': 2.89,\r\n    'QIL': 3.84,\r\n    'JJL': 8.3,\r\n    'VAH': 3.88,\r\n    'JJJ': 7.5,\r\n    'JJK': 7.43,\r\n    'VAD': 2.56,\r\n    'CYW': 4.65,\r\n    '0QL': 5.72,\r\n    '143': 8.22,\r\n    'SVX': 7.04,\r\n    'CYJ': 11.64,\r\n    'SVY': 7.1,\r\n    'SVZ': 6.6,\r\n    'CYG': 8.03,\r\n    'CYF': 13.54,\r\n    'SVV': 5.09,\r\n    'GL3': 2.72,\r\n    '8SP': 14.26,\r\n    'CYS': 2.78,\r\n    '004': 4.33,\r\n    'CYR': 10.33,\r\n    'PLJ': 3.71,\r\n    'EXY': 7.37,\r\n    'HL2': 3.75,\r\n    'A5N': 5.21,\r\n    'CYQ': 5.67,\r\n    'CZ2': 5.16,\r\n    'LWY': 4.12,\r\n    'PM3': 8.78,\r\n    'OHS': 6.98,\r\n    'OHI': 5.35,\r\n    '3TY': 8.42,\r\n    'CYD': 8.55,\r\n    'DYS': 7.87,\r\n    'DAH': 6.47,\r\n    '4IK': 11.81,\r\n    '3EG': 3.66,\r\n    'AYA': 3.65,\r\n    '4IN': 6.31,\r\n    'DAB': 3.48,\r\n    '4HT': 6.03,\r\n    'RGL': 7.03,\r\n    'DAM': 2.49,\r\n    'NFA': 5.04,\r\n    'WFP': 6.07,\r\n    '2JC': 2.97,\r\n    'HAR': 7.55,\r\n    '2JG': 5.67,\r\n    'MH6': 1.72,\r\n    '2JF': 9.13,\r\n    '3FG': 4.96,\r\n    'MGN': 4.84,\r\n    'AZH': 5.36,\r\n    'AZK': 6.03,\r\n    'ZBZ': 7.79,\r\n    'TBG': 2.58,\r\n    'VAL': 2.51,\r\n    'MGG': 7.34,\r\n    'AZS': 5.61,\r\n    'FHL': 9.75,\r\n    '2JH': 4.56,\r\n    'IEL': 7.07,\r\n    'FHO': 6.75,\r\n    'DA2': 7.79,\r\n    'FH7': 6.99,\r\n    'ME0': 4.52,\r\n    '3GL': 4.84,\r\n    'MDO': 5.03,\r\n    'AZY': 7.37,\r\n    'A8E': 3.76,\r\n    'ZCL': 6.71,\r\n    'MDH': 2.58,\r\n    'LA2': 14.07,\r\n    '4FW': 6.1,\r\n    'YCM': 5.32,\r\n    'MDF': 4.95,\r\n    'YCP': 3.01,\r\n    'TEF': 8.63,\r\n    'FGP': 4.34,\r\n    'UF0': 19.72,\r\n    'XCN': 4.57,\r\n    'FGL': 2.56,\r\n    'MF3': 6.37,\r\n    'MEQ': 5.13,\r\n    'LAA': 3.23,\r\n    'IGL': 5.52,\r\n    'MET': 4.49,\r\n    'NIY': 6.81,\r\n    'QCS': 5.18,\r\n    'TCQ': 8.56,\r\n    'MEN': 4.33,\r\n    '4HL': 8.79,\r\n    'MEA': 4.95,\r\n    'EFC': 5.28,\r\n    'LAL': 2.41,\r\n    '2HF': 5.52,\r\n    'KBE': 5.64,\r\n    'OCS': 3.94,\r\n    'CAF': 5.46,\r\n    'NC1': 11.4,\r\n    'NBQ': 9.82,\r\n    'CAB': 4.19,\r\n    'MBQ': 9.55,\r\n    '193': 7.38,\r\n    '192': 2.44,\r\n    '0WZ': 7.61,\r\n    'CAS': 5.35,\r\n    'NB8': 11.98,\r\n    'OBS': 11.71,\r\n    '1AC': 2.42,\r\n    'PCA': 3.48,\r\n    'MCL': 9.73,\r\n    'LBY': 7.75,\r\n    'GAU': 4.67,\r\n    'PBF': 9.75,\r\n    'MCG': 6.46,\r\n    'DDE': 6.86,\r\n    '19W': 3.94,\r\n    'MD5': 9.33,\r\n    'MD6': 6.44,\r\n    'MD3': 8.41,\r\n    'MCS': 7.56,\r\n    'OBF': 3.64,\r\n    'UAL': 4.68,\r\n    'PAT': 6.05,\r\n    'IAM': 8.88,\r\n    'PAQ': 8.77,\r\n    'FDL': 9.49,\r\n    'NCB': 3.45,\r\n    'LCK': 9.81,\r\n    'DDZ': 2.52,\r\n    '2FM': 5.54,\r\n    'IAR': 6.77,\r\n    'OAS': 4.8,\r\n    'HBN': 8.8,\r\n    'TA4': 5.55,\r\n    '1C3': 7.43,\r\n    'ECX': 5.51,\r\n    'PF5': 6.28,\r\n    'RE3': 5.29,\r\n    'FCL': 6.25,\r\n    'ECC': 4.79,\r\n    'LDH': 7.06,\r\n    'NCY': 2.91,\r\n    'CCS': 4.58,\r\n    'PEC': 6.54,\r\n    '2CO': 4.45,\r\n    'LE1': 2.72,\r\n    'HCM': 5.53,\r\n    '07O': 8.05,\r\n    'HCL': 4.96,\r\n    'NEP': 6.94,\r\n    'PE1': 8.01,\r\n    'LEF': 4.37,\r\n    'FC0': 5.18,\r\n    'LED': 4.34,\r\n    'HCS': 4.09,\r\n    'DBU': 2.49,\r\n    'RE0': 5.53,\r\n    'LEN': 3.82,\r\n    '1E3': 8.71,\r\n    'BB9': 2.56,\r\n    'BB8': 5.14,\r\n    'PCS': 5.05,\r\n    'BB7': 4.56,\r\n    'BB6': 2.62,\r\n    'LEU': 3.83,\r\n    'DBZ': 7.08,\r\n    'LET': 11.29,\r\n    'DBY': 6.46,\r\n    'ICY': 7.76,\r\n    'MAA': 2.4,\r\n    'CGA': 7.91,\r\n    '5CS': 8.34,\r\n    'UGY': 3.7,\r\n    'LGY': 11.71,\r\n    'N10': 8.96,\r\n    'AAR': 6.39,\r\n    'FT6': 7.5,\r\n    'MOD': 12.62,\r\n    '5CW': 7.21,\r\n    'PVH': 4.58,\r\n    'BBC': 6.42,\r\n    'YYA': 7.3,\r\n    'O12': 14.08,\r\n    'NOT': 7.15,\r\n    'KGC': 9.88,\r\n    'MP4': 5.86,\r\n    '0CS': 4.07,\r\n    'MP8': 3.75,\r\n    'VLL': 2.54,\r\n    'VLM': 2.51,\r\n    'BCS': 8.03,\r\n    'MNL': 4.9,\r\n    'AA4': 4.47,\r\n    'SAC': 3.49,\r\n    'BCX': 2.99,\r\n    '3CF': 6.47,\r\n    'SAH': 11.7,\r\n    'NNH': 6.86,\r\n    'CGU': 4.71,\r\n    'SIB': 12.41,\r\n    'TLY': 8.78,\r\n    'SIC': 4.81,\r\n    'VMS': 8.82,\r\n    'TMD': 6.76,\r\n    'MMO': 6.53,\r\n    'PXU': 2.46,\r\n    '4AW': 6.22,\r\n    'OTH': 3.6,\r\n    'DLS': 6.84,\r\n    'MME': 4.99,\r\n    'DM0': 6.99,\r\n    '0FL': 2.76,\r\n    'SBL': 8.96,\r\n    'CDV': 3.72,\r\n    'OTY': 6.51,\r\n    'PYA': 7.75,\r\n    '2AS': 3.57,\r\n    'DMH': 4.92,\r\n    'ELY': 7.42,\r\n    'GVL': 9.6,\r\n    'FVA': 2.9,\r\n    'SAR': 2.48,\r\n    '4BF': 6.92,\r\n    'EME': 4.69,\r\n    'CDE': 2.51,\r\n    '3AR': 7.86,\r\n    '3AH': 9.11,\r\n    'AC5': 2.44,\r\n    'FTR': 6.08,\r\n    'MLL': 3.76,\r\n    'NPH': 11.66,\r\n    'NPI': 6.9,\r\n    'DMT': 6.67,\r\n    'PYX': 11.3,\r\n    'MLE': 3.87,\r\n    'PYL': 9.67,\r\n    'ZZU': 6.94,\r\n    'H5M': 3.61,\r\n    'SCH': 4.46,\r\n    'DMK': 3.52,\r\n    'FTY': 9.07,\r\n    '2AG': 3.7,\r\n    'ABA': 2.55,\r\n    'ZZJ': 2.44,\r\n    'MLZ': 6.8,\r\n    'MLY': 6.88,\r\n    'KCX': 7.28,\r\n    'ZZD': 8.16,\r\n    '3A5': 5.37,\r\n    'LHC': 7.75,\r\n    '9AT': 2.47,\r\n    'OZT': 3.4,\r\n    'THO': 2.62,\r\n    'THR': 2.5,\r\n    'DFI': 3.93,\r\n    'MKD': 6.42,\r\n    '4CY': 4.6,\r\n    'SDP': 6.07,\r\n    'DFO': 3.94,\r\n    '0A0': 3.45,\r\n    '4DB': 9.73,\r\n    'ML3': 6.26,\r\n    'BG1': 8.02,\r\n    'SD4': 4.57,\r\n    'THC': 3.8,\r\n    'SCS': 5.48,\r\n    'TH5': 4.65,\r\n    'BFD': 5.33,\r\n    'AEI': 6.34,\r\n    'TH6': 2.85,\r\n    'SCY': 4.53,\r\n    'TIS': 4.81,\r\n    'SEE': 4.53,\r\n    'BHD': 3.48,\r\n    'SEB': 8.18,\r\n    'SEC': 2.96,\r\n    'SEP': 4.8,\r\n    'CLH': 7.13,\r\n    'TIH': 5.02,\r\n    'CLG': 13.62,\r\n    'SEN': 6.43,\r\n    'XXA': 7.34,\r\n    'SEL': 2.46,\r\n    'SE7': 4.19,\r\n    '4CF': 7.72,\r\n    'G8M': 3.57,\r\n    'BH2': 3.51,\r\n    'UN2': 3.22,\r\n    'VR0': 10.51,\r\n    'MK8': 4.76,\r\n    'DHA': 2.32,\r\n    'LMQ': 4.69,\r\n    'SFE': 5.01,\r\n    'AHB': 3.47,\r\n    'OXX': 7.05,\r\n    'BIF': 9.63,\r\n    'IZO': 4.47,\r\n    'NMM': 8.25,\r\n    '0BN': 7.0,\r\n    'HZP': 3.12,\r\n    'NMC': 4.23,\r\n    'DHL': 2.69,\r\n    '9DS': 9.29,\r\n    'SER': 2.41,\r\n    'CHG': 4.2,\r\n    'MIR': 6.54,\r\n    'AGQ': 7.79,\r\n    'SET': 2.46,\r\n    'MIS': 6.32,\r\n    '4FB': 3.08,\r\n    '0AR': 8.46,\r\n    'LME': 3.99,\r\n    'FZN': 24.42,\r\n    'AGT': 9.04,\r\n    'IYR': 6.46,\r\n    '9DN': 9.31,\r\n    'CHP': 5.75,\r\n    'UNK': 1.64,\r\n    'XX1': 9.92,\r\n    'AGM': 6.57,\r\n    '0AH': 5.78,\r\n    'LLP': 10.22,\r\n    '0AF': 6.72,\r\n    '4DP': 9.28,\r\n    'HYP': 2.25,\r\n    'DIR': 5.8,\r\n    'LLY': 8.71,\r\n    '0AK': 6.11,\r\n    'NLE': 4.67,\r\n    'OYL': 6.42,\r\n    'WVL': 4.69,\r\n    '0A8': 8.1,\r\n    'NLY': 6.37,\r\n    'MHO': 4.89,\r\n    'VOL': 2.55,\r\n    '0A1': 7.1,\r\n    'MHL': 3.92,\r\n    'NLP': 4.81,\r\n    'NLQ': 4.65,\r\n    'MHW': 2.74,\r\n    'BIL': 4.7,\r\n    'NLO': 4.8,\r\n    'MHU': 7.51,\r\n    'XW1': 9.36,\r\n    'LLO': 10.13,\r\n    'SGB': 6.88,\r\n    'MHV': 3.6,\r\n    'MHS': 4.51,\r\n    '0A9': 5.17,\r\n    '0LF': 9.96,\r\n    'HT7': 6.82,\r\n    'X2W': 6.6,\r\n    'YPZ': 9.38,\r\n    'I58': 6.73,\r\n    'FLA': 2.4,\r\n    'M0H': 4.83,\r\n    'HSL': 2.46,\r\n    'FLE': 6.17,\r\n    'KOR': 10.1,\r\n    '1VR': 3.89,\r\n    'HSO': 4.56,\r\n    'TTS': 9.41,\r\n    'RVX': 7.01,\r\n    'TTQ': 7.71,\r\n    'H14': 5.27,\r\n    'HTI': 7.8,\r\n    'ONH': 6.14,\r\n    'LP6': 8.58,\r\n    'ONL': 4.83,\r\n    'AHH': 5.06,\r\n    'HS8': 7.4,\r\n    'HS9': 4.71,\r\n    'BL2': 5.82,\r\n    'AHP': 5.26,\r\n    '6HN': 7.34,\r\n    'HRP': 5.46,\r\n    'POM': 3.6,\r\n    'WPA': 5.11,\r\n    '2ZC': 4.29,\r\n    'CPC': 2.65,\r\n    'AIB': 2.4,\r\n    'XSN': 3.47,\r\n    'M2S': 5.28,\r\n    'GND': 6.67,\r\n    'GNC': 4.6,\r\n    'MVA': 2.56,\r\n    'OLZ': 5.32,\r\n    'M2L': 6.15,\r\n    'TRF': 6.69,\r\n    'NZH': 7.66,\r\n    'SRZ': 5.27,\r\n    'OLD': 10.47,\r\n    'CME': 5.86,\r\n    'CMH': 5.3,\r\n    'ALA': 2.38,\r\n    'TRQ': 7.36,\r\n    'PPN': 7.24,\r\n    'TRP': 6.07,\r\n    'TRO': 5.82,\r\n    'TRN': 5.95,\r\n    'NYS': 8.1,\r\n    'ALC': 5.26,\r\n    'U3X': 11.7,\r\n    'HVA': 2.58,\r\n    'TS9': 3.92,\r\n    'TRX': 7.27,\r\n    'TRW': 11.8,\r\n    'LPL': 7.51,\r\n    'GMA': 4.4,\r\n    'OMT': 5.07,\r\n    'CMT': 3.54,\r\n    'GME': 4.66,\r\n    'NYB': 6.07,\r\n    'PR3': 5.12,\r\n    'LPD': 2.48,\r\n    'GLU': 4.49,\r\n    '1X6': 6.84,\r\n    'LPG': 2.39,\r\n    'GLX': 4.52,\r\n    'PR4': 4.52,\r\n    'CML': 6.16,\r\n    'FME': 4.52,\r\n    'HTR': 6.48,\r\n    'PR7': 4.66,\r\n    'Z3E': 7.2,\r\n    'GLZ': 2.39,\r\n    'BMT': 6.37,\r\n    'WRP': 8.16,\r\n    'GLY': 2.37,\r\n    'OMY': 6.11,\r\n    'MTY': 5.46,\r\n    'OMX': 6.15,\r\n    'GLN': 4.46,\r\n    '2XA': 8.25,\r\n    '28X': 7.84,\r\n    '7JA': 9.46,\r\n    'FLT': 9.65,\r\n    'GLJ': 3.7,\r\n    'OMH': 5.26,\r\n    'TSY': 4.26,\r\n    'PRV': 4.28,\r\n    'CS4': 11.21,\r\n    'DOA': 12.33,\r\n    '23P': 5.42,\r\n    'CS3': 8.24,\r\n    '6CL': 6.47,\r\n    'PRR': 5.58,\r\n    'KST': 11.58,\r\n    'CS1': 7.23,\r\n    'PRS': 2.63,\r\n    'ZYJ': 11.4,\r\n    'IT1': 9.75,\r\n    'UU5': 4.98,\r\n    'ESB': 6.69,\r\n    'UU4': 2.49,\r\n    'ESC': 5.65,\r\n    'LSO': 10.58,\r\n    'ZYK': 11.45,\r\n    '9NV': 8.99,\r\n    '23F': 5.27,\r\n    'ORN': 4.25,\r\n    'HOX': 6.61,\r\n    'CSD': 3.95,\r\n    'FP9': 3.03,\r\n    'DO2': 4.44,\r\n    'SLL': 11.53,\r\n    'P3Q': 9.54,\r\n    'ORQ': 6.04,\r\n    'MSL': 5.21,\r\n    'DNP': 2.45,\r\n    'CSB': 3.51,\r\n    'WLU': 4.24,\r\n    'CSA': 5.7,\r\n    'MT2': 5.51,\r\n    'CSO': 3.53,\r\n    'TPO': 4.73,\r\n    'MSP': 13.11,\r\n    '23S': 6.09,\r\n    'MSO': 4.96,\r\n    'PRO': 2.41,\r\n    'TPL': 5.41,\r\n    'DNS': 8.79,\r\n    'CSK': 3.91,\r\n    'Z70': 7.4,\r\n    'CSJ': 7.51,\r\n    'DNW': 7.97,\r\n    'PRK': 9.15,\r\n    'GSU': 11.81,\r\n    'LTA': 6.57,\r\n    'HPE': 6.63,\r\n    'TPQ': 6.48,\r\n    'PRJ': 5.26,\r\n    'PSW': 4.65,\r\n    'L3O': 3.89,\r\n    'CSU': 4.89,\r\n    'ALY': 7.38,\r\n    'M3L': 7.12,\r\n    'CSW': 3.68,\r\n    'XPR': 7.68,\r\n    'D4P': 5.66,\r\n    'FOE': 8.17,\r\n    'SLZ': 5.69,\r\n    'CSP': 5.26,\r\n    'TQI': 7.68,\r\n    'ALT': 2.72,\r\n    'CSR': 5.42,\r\n    'CSS': 3.61,\r\n    'M3R': 7.18,\r\n    'ALO': 2.57,\r\n    'R4K': 4.67,\r\n    'SMF': 9.0,\r\n    'MSA': 2.73,\r\n    'SMC': 3.39,\r\n    'CSX': 3.47,\r\n    'SME': 4.8,\r\n    'ETA': 2.4,\r\n    'CSZ': 3.6,\r\n    '22G': 8.8,\r\n    'MSE': 4.62,\r\n    'ALN': 6.16,\r\n    'PSH': 7.26,\r\n    'CTE': 7.27,\r\n    'DON': 6.72,\r\n    'CTH': 3.45,\r\n    'U2X': 11.54,\r\n    '6CW': 7.56,\r\n    'TQZ': 6.97,\r\n    '3YM': 6.52,\r\n    'OSE': 4.49,\r\n    '2VA': 9.82,\r\n    'TQQ': 7.76,\r\n    'NRG': 8.35,\r\n    'BPE': 7.24,\r\n    'F2F': 6.25,\r\n    '1TQ': 8.58,\r\n    'I2M': 3.13,\r\n    'NVA': 3.76,\r\n    'R1A': 8.2,\r\n    'QPA': 6.95,\r\n    'C1X': 11.63,\r\n    'FRD': 5.05,\r\n    'HR7': 6.98,\r\n    'SNC': 3.93,\r\n    'QPH': 5.15,\r\n    '26B': 8.39,\r\n    'DPQ': 6.54,\r\n    'DPP': 2.51,\r\n    '2TY': 8.65,\r\n    'TNR': 6.88,\r\n    'PTH': 8.35,\r\n    'DPL': 3.58,\r\n    'APK': 8.79,\r\n    '1TY': 8.84,\r\n    'HRG': 7.36,\r\n    'PTM': 8.74,\r\n    '1U8': 3.62,\r\n    'PTR': 8.64,\r\n    'LVG': 3.01,\r\n    '6FL': 4.85,\r\n    'SOC': 4.05,\r\n    'KPI': 9.79,\r\n    'IPG': 2.91,\r\n    'P2Y': 2.51,\r\n    'N2C': 3.55,\r\n    'T0I': 7.34,\r\n    'MPH': 5.29,\r\n    'R2T': 4.71,\r\n    'TOX': 6.78,\r\n    'P2Q': 9.8,\r\n    'GPL': 10.77,\r\n    'MPJ': 5.07,\r\n    'F2Y': 6.2,\r\n    'T11': 8.58,\r\n    '9NR': 9.33,\r\n    'FPR': 8.85,\r\n    '9NF': 8.93,\r\n    'KPY': 10.17,\r\n    '9NE': 9.77,\r\n    'TOQ': 7.5,\r\n    'MPQ': 4.2,\r\n    'FPK': 3.08,\r\n    'HQA': 7.25,\r\n    'SOY': 10.94\r\n};\r\nexport const DefaultResidueRadius = 5.0;\r\n// http://dx.doi.org/10.1039/b801115j (or 1.6)\r\nexport const CovalentRadii = {\r\n    1: 0.31, 2: 0.28, 3: 1.28, 4: 0.96, 5: 0.84, 6: 0.76, 7: 0.71, 8: 0.66, 9: 0.57, 10: 0.58, 11: 1.66, 12: 1.41, 13: 1.21, 14: 1.11, 15: 1.07, 16: 1.05, 17: 1.02, 18: 1.06, 19: 2.03, 20: 1.76, 21: 1.7, 22: 1.6, 23: 1.53, 24: 1.39, 25: 1.39, 26: 1.32, 27: 1.26, 28: 1.24, 29: 1.32, 30: 1.22, 31: 1.22, 32: 1.2, 33: 1.19, 34: 1.2, 35: 1.2, 36: 1.16, 37: 2.2, 38: 1.95, 39: 1.9, 40: 1.75, 41: 1.64, 42: 1.54, 43: 1.47, 44: 1.46, 45: 1.42, 46: 1.39, 47: 1.45, 48: 1.44, 49: 1.42, 50: 1.39, 51: 1.39, 52: 1.38, 53: 1.39, 54: 1.4, 55: 2.44, 56: 2.15, 57: 2.07, 58: 2.04, 59: 2.03, 60: 2.01, 61: 1.99, 62: 1.98, 63: 1.98, 64: 1.96, 65: 1.94, 66: 1.92, 67: 1.92, 68: 1.89, 69: 1.9, 70: 1.87, 71: 1.87, 72: 1.75, 73: 1.7, 74: 1.62, 75: 1.51, 76: 1.44, 77: 1.41, 78: 1.36, 79: 1.36, 80: 1.32, 81: 1.45, 82: 1.46, 83: 1.48, 84: 1.4, 85: 1.5, 86: 1.5, 87: 2.6, 88: 2.21, 89: 2.15, 90: 2.06, 91: 2.0, 92: 1.96, 93: 1.9, 94: 1.87, 95: 1.8, 96: 1.69, 97: 1.6, 98: 1.6, 99: 1.6, 100: 1.6, 101: 1.6, 102: 1.6, 103: 1.6, 104: 1.6, 105: 1.6, 106: 1.6, 107: 1.6, 108: 1.6, 109: 1.6, 110: 1.6, 111: 1.6, 112: 1.6, 113: 1.6, 114: 1.6, 115: 1.6, 116: 1.6, 117: 1.6, 118: 1.6\r\n};\r\nexport const DefaultCovalentRadius = 1.6;\r\nexport const Valences = {\r\n    1: [1],\r\n    2: [0],\r\n    3: [1],\r\n    4: [2],\r\n    5: [3],\r\n    6: [4],\r\n    7: [3],\r\n    8: [2],\r\n    9: [1],\r\n    10: [0],\r\n    11: [1],\r\n    12: [2],\r\n    13: [6],\r\n    14: [6],\r\n    15: [3, 5, 7],\r\n    16: [2, 4, 6],\r\n    17: [1],\r\n    18: [0],\r\n    19: [1],\r\n    20: [2],\r\n    31: [3],\r\n    32: [4],\r\n    33: [3, 5],\r\n    34: [2, 4, 6],\r\n    35: [1],\r\n    36: [0],\r\n    37: [1],\r\n    38: [2],\r\n    49: [3],\r\n    50: [4],\r\n    51: [3, 5],\r\n    52: [2],\r\n    53: [1, 2, 5],\r\n    54: [0, 2],\r\n    55: [1],\r\n    56: [2],\r\n    81: [3],\r\n    82: [4],\r\n    83: [3],\r\n    84: [2],\r\n    85: [1],\r\n    86: [0],\r\n    87: [1],\r\n    88: [2]\r\n};\r\nexport const DefaultValence = -1;\r\nexport const OuterShellElectronCounts = {\r\n    1: 1, 2: 2, 3: 1, 4: 2, 5: 3, 6: 4, 7: 5, 8: 6, 9: 7, 10: 8, 11: 1, 12: 2, 13: 3, 14: 4, 15: 5, 16: 6, 17: 7, 18: 8, 19: 1, 20: 2, 21: 3, 22: 4, 23: 5, 24: 6, 25: 7, 26: 8, 27: 9, 28: 10, 29: 11, 30: 2, 31: 3, 32: 4, 33: 5, 34: 6, 35: 7, 36: 8, 37: 1, 38: 2, 39: 3, 40: 4, 41: 5, 42: 6, 43: 7, 44: 8, 45: 9, 46: 10, 47: 11, 48: 2, 49: 3, 50: 4, 51: 5, 52: 6, 53: 7, 54: 8, 55: 1, 56: 2, 57: 3, 58: 4, 59: 3, 60: 4, 61: 5, 62: 6, 63: 7, 64: 8, 65: 9, 66: 10, 67: 11, 68: 12, 69: 13, 70: 14, 71: 15, 72: 4, 73: 5, 74: 6, 75: 7, 76: 8, 77: 9, 78: 10, 79: 11, 80: 2, 81: 3, 82: 4, 83: 5, 84: 6, 85: 7, 86: 8, 87: 1, 88: 2, 89: 3, 90: 4, 91: 3, 92: 4, 93: 5, 94: 6, 95: 7, 96: 8, 97: 9, 98: 10, 99: 11, 100: 12, 101: 13, 102: 14, 103: 15, 104: 2, 105: 2, 106: 2, 107: 2, 108: 2, 109: 2, 110: 2, 111: 2, 112: 2, 113: 3, 114: 4, 115: 5, 116: 6, 117: 7, 118: 8\r\n};\r\nexport const DefaultOuterShellElectronCount = 2;\r\n// http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\r\n// https://www.nature.com/articles/nsb1096-842\r\nexport const ResidueHydrophobicity = {\r\n    // AA  DGwif   DGwoct  Oct-IF\r\n    'ALA': [0.17, 0.50, 0.33],\r\n    'ARG': [0.81, 1.81, 1.00],\r\n    'ASN': [0.42, 0.85, 0.43],\r\n    'ASP': [1.23, 3.64, 2.41],\r\n    'ASH': [-0.07, 0.43, 0.50],\r\n    'CYS': [-0.24, -0.02, 0.22],\r\n    'GLN': [0.58, 0.77, 0.19],\r\n    'GLU': [2.02, 3.63, 1.61],\r\n    'GLH': [-0.01, 0.11, 0.12],\r\n    'GLY': [0.01, 1.15, 1.14],\r\n    // \"His+\": [  0.96,  2.33,  1.37 ],\r\n    'HIS': [0.17, 0.11, -0.06],\r\n    'ILE': [-0.31, -1.12, -0.81],\r\n    'LEU': [-0.56, -1.25, -0.69],\r\n    'LYS': [0.99, 2.80, 1.81],\r\n    'MET': [-0.23, -0.67, -0.44],\r\n    'PHE': [-1.13, -1.71, -0.58],\r\n    'PRO': [0.45, 0.14, -0.31],\r\n    'SER': [0.13, 0.46, 0.33],\r\n    'THR': [0.14, 0.25, 0.11],\r\n    'TRP': [-1.85, -2.09, -0.24],\r\n    'TYR': [-0.94, -0.71, 0.23],\r\n    'VAL': [0.07, -0.46, -0.53]\r\n};\r\nexport const DefaultResidueHydrophobicity = [0.00, 0.00, 0.00];\r\nexport const AA1 = {\r\n    'HIS': 'H',\r\n    'ARG': 'R',\r\n    'LYS': 'K',\r\n    'ILE': 'I',\r\n    'PHE': 'F',\r\n    'LEU': 'L',\r\n    'TRP': 'W',\r\n    'ALA': 'A',\r\n    'MET': 'M',\r\n    'PRO': 'P',\r\n    'CYS': 'C',\r\n    'ASN': 'N',\r\n    'VAL': 'V',\r\n    'GLY': 'G',\r\n    'SER': 'S',\r\n    'GLN': 'Q',\r\n    'TYR': 'Y',\r\n    'ASP': 'D',\r\n    'GLU': 'E',\r\n    'THR': 'T',\r\n    'SEC': 'U',\r\n    'PYL': 'O',\r\n};\r\nexport const AA3 = Object.keys(AA1);\r\nexport const RnaBases = ['A', 'C', 'T', 'G', 'U', 'I'];\r\nexport const DnaBases = ['DA', 'DC', 'DT', 'DG', 'DU', 'DI'];\r\nexport const PurinBases = ['A', 'G', 'I', 'DA', 'DG', 'DI'];\r\nexport const Bases = RnaBases.concat(DnaBases);\r\nexport const WaterNames = [\r\n    'SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP3', 'TIP4', 'SPC'\r\n];\r\n// all chemical components with the word \"ion\" in their name, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// SELECT GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id) as c, id_\r\n//     FROM pdb.chem_comp WHERE name LIKE \"% ION%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nexport const IonNames = [\r\n    '118', '119', '1AL', '1CU', '2FK', '2HP', '2OF', '3CO',\r\n    '3MT', '3NI', '3OF', '3P8', '4MO', '4PU', '543', '6MO', 'ACT', 'AG', 'AL',\r\n    'ALF', 'AM', 'ATH', 'AU', 'AU3', 'AUC', 'AZI', 'BA', 'BCT', 'BEF', 'BF4', 'BO4',\r\n    'BR', 'BS3', 'BSY', 'CA', 'CAC', 'CD', 'CD1', 'CD3', 'CD5', 'CE', 'CHT', 'CL',\r\n    'CO', 'CO3', 'CO5', 'CON', 'CR', 'CS', 'CSB', 'CU', 'CU1', 'CU3', 'CUA', 'CUZ',\r\n    'CYN', 'DME', 'DMI', 'DSC', 'DTI', 'DY', 'E4N', 'EDR', 'EMC', 'ER3', 'EU',\r\n    'EU3', 'F', 'FE', 'FE2', 'FPO', 'GA', 'GD3', 'GEP', 'HAI', 'HG', 'HGC', 'IN',\r\n    'IOD', 'IR', 'IR3', 'IRI', 'IUM', 'K', 'KO4', 'LA', 'LCO', 'LCP', 'LI', 'LU',\r\n    'MAC', 'MG', 'MH2', 'MH3', 'MLI', 'MLT', 'MMC', 'MN', 'MN3', 'MN5', 'MN6',\r\n    'MO1', 'MO2', 'MO3', 'MO4', 'MO5', 'MO6', 'MOO', 'MOS', 'MOW', 'MW1', 'MW2',\r\n    'MW3', 'NA', 'NA2', 'NA5', 'NA6', 'NAO', 'NAW', 'NCO', 'NET', 'NH4', 'NI',\r\n    'NI1', 'NI2', 'NI3', 'NO2', 'NO3', 'NRU', 'O4M', 'OAA', 'OC1', 'OC2', 'OC3',\r\n    'OC4', 'OC5', 'OC6', 'OC7', 'OC8', 'OCL', 'OCM', 'OCN', 'OCO', 'OF1', 'OF2',\r\n    'OF3', 'OH', 'OS', 'OS4', 'OXL', 'PB', 'PBM', 'PD', 'PDV', 'PER', 'PI', 'PO3',\r\n    'PO4', 'PR', 'PT', 'PT4', 'PTN', 'RB', 'RH3', 'RHD', 'RU', 'SB', 'SCN', 'SE4',\r\n    'SEK', 'SM', 'SMO', 'SO3', 'SO4', 'SR', 'T1A', 'TB', 'TBA', 'TCN', 'TEA', 'TH',\r\n    'THE', 'TL', 'TMA', 'TRA', 'UNX', 'V', 'VN3', 'VO4', 'W', 'WO5', 'Y1', 'YB',\r\n    'YB2', 'YH', 'YT3', 'ZCM', 'ZN', 'ZN2', 'ZN3', 'ZNO', 'ZO3',\r\n    // additional ion names\r\n    'OHX'\r\n];\r\n// all chemical components with the word \"%saccharide%\" in their type, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// select GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id), id_\r\n//     FROM pdb.chem_comp WHERE type like \"%SACCHARIDE%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nexport const SaccharideNames = [\r\n    '045', '0AT', '0BD', '0MK', '0NZ', '0TS', '0V4', '0XY', '0YT', '10M',\r\n    '147', '149', '14T', '15L', '16G', '18T', '18Y', '1AR', '1BW', '1GL', '1GN',\r\n    '1JB', '1LL', '1NA', '1S3', '26M', '26Q', '26R', '26V', '26W', '26Y', '27C',\r\n    '289', '291', '293', '2DG', '2F8', '2FG', '2FL', '2FP', '2GL', '2M4', '2M5',\r\n    '32O', '34V', '3CM', '3DO', '3DY', '3FM', '3LR', '3MF', '3MG', '3SA', '3ZW',\r\n    '46D', '46M', '46Z', '48Z', '4CQ', '4GC', '4NN', '50A', '5DI', '5GF', '5MM',\r\n    '5RP', '5SA', '5SP', '64K', '6PG', '6SA', '7JZ', '7SA', 'A1Q', 'A2G', 'AAB',\r\n    'AAL', 'AAO', 'ABC', 'ABD', 'ABE', 'ABF', 'ABL', 'ACG', 'ACI', 'ACR', 'ACX',\r\n    'ADA', 'ADG', 'ADR', 'AF1', 'AFD', 'AFL', 'AFO', 'AFP', 'AFR', 'AGC', 'AGH',\r\n    'AGL', 'AHR', 'AIG', 'ALL', 'ALX', 'AMU', 'AOG', 'AOS', 'ARA', 'ARB', 'ARE',\r\n    'ARI', 'ASG', 'ASO', 'AXP', 'AXR', 'B0D', 'B16', 'B2G', 'B4G', 'B6D', 'B8D',\r\n    'B9D', 'BBK', 'BCD', 'BDG', 'BDP', 'BDR', 'BEM', 'BFP', 'BGC', 'BGL', 'BGP',\r\n    'BGS', 'BHG', 'BMA', 'BMX', 'BNG', 'BNX', 'BOG', 'BRI', 'BXF', 'BXP', 'BXX',\r\n    'BXY', 'C3X', 'C4X', 'C5X', 'CAP', 'CBI', 'CBK', 'CBS', 'CDR', 'CEG', 'CGF',\r\n    'CHO', 'CR1', 'CR6', 'CRA', 'CT3', 'CTO', 'CTR', 'CTT', 'D6G', 'DAF', 'DAG',\r\n    'DDA', 'DDB', 'DDL', 'DEL', 'DFR', 'DFX', 'DG0', 'DGC', 'DGD', 'DGM', 'DGS',\r\n    'DIG', 'DLF', 'DLG', 'DMU', 'DNO', 'DOM', 'DP5', 'DQQ', 'DQR', 'DR2', 'DR3',\r\n    'DR4', 'DRI', 'DSR', 'DT6', 'DVC', 'E4P', 'E5G', 'EAG', 'EBG', 'EBQ', 'EGA',\r\n    'EJT', 'EPG', 'ERE', 'ERI', 'F1P', 'F1X', 'F6P', 'FBP', 'FCA', 'FCB', 'FCT',\r\n    'FDP', 'FDQ', 'FFC', 'FIX', 'FMO', 'FRU', 'FSI', 'FU4', 'FUB', 'FUC', 'FUD',\r\n    'FUL', 'FXP', 'G16', 'G1P', 'G2F', 'G3I', 'G4D', 'G4S', 'G6D', 'G6P', 'G6S',\r\n    'GAC', 'GAD', 'GAL', 'GC1', 'GC4', 'GCD', 'GCN', 'GCO', 'GCS', 'GCT', 'GCU',\r\n    'GCV', 'GCW', 'GCX', 'GE1', 'GFG', 'GFP', 'GIV', 'GL0', 'GL2', 'GL5', 'GL6',\r\n    'GL7', 'GL9', 'GLA', 'GLB', 'GLC', 'GLD', 'GLF', 'GLG', 'GLO', 'GLP', 'GLS',\r\n    'GLT', 'GLW', 'GMH', 'GN1', 'GNX', 'GP1', 'GP4', 'GPH', 'GPM', 'GQ1', 'GQ2',\r\n    'GQ4', 'GS1', 'GS4', 'GSA', 'GSD', 'GTE', 'GTH', 'GTK', 'GTR', 'GTZ', 'GU0',\r\n    'GU1', 'GU2', 'GU3', 'GU4', 'GU5', 'GU6', 'GU8', 'GU9', 'GUF', 'GUP', 'GUZ',\r\n    'GYP', 'GYV', 'H2P', 'HDL', 'HMS', 'HS2', 'HSD', 'HSG', 'HSH', 'HSJ', 'HSQ',\r\n    'HSR', 'HSU', 'HSX', 'HSY', 'HSZ', 'IAB', 'IDG', 'IDR', 'IDS', 'IDT', 'IDU',\r\n    'IDX', 'IDY', 'IMK', 'IN1', 'IPT', 'ISL', 'KBG', 'KD2', 'KDA', 'KDM', 'KDO',\r\n    'KFN', 'KO1', 'KO2', 'KTU', 'L6S', 'LAG', 'LAI', 'LAK', 'LAO', 'LAT', 'LB2',\r\n    'LBT', 'LCN', 'LDY', 'LGC', 'LGU', 'LM2', 'LMT', 'LMU', 'LOG', 'LOX', 'LPK',\r\n    'LSM', 'LTM', 'LVZ', 'LXB', 'LXZ', 'M1F', 'M3M', 'M6P', 'M8C', 'MA1', 'MA2',\r\n    'MA3', 'MAB', 'MAG', 'MAL', 'MAN', 'MAT', 'MAV', 'MAW', 'MBG', 'MCU', 'MDA',\r\n    'MDM', 'MDP', 'MFA', 'MFB', 'MFU', 'MG5', 'MGA', 'MGL', 'MLB', 'MMA', 'MMN',\r\n    'MN0', 'MRP', 'MTT', 'MUG', 'MVP', 'MXY', 'N1L', 'N9S', 'NAA', 'NAG', 'NBG',\r\n    'NDG', 'NED', 'NG1', 'NG6', 'NGA', 'NGB', 'NGC', 'NGE', 'NGF', 'NGL', 'NGS',\r\n    'NGY', 'NHF', 'NM6', 'NM9', 'NTF', 'NTO', 'NTP', 'NXD', 'NYT', 'OPG', 'OPM',\r\n    'ORP', 'OX2', 'P3M', 'P53', 'P6P', 'PA5', 'PNA', 'PNG', 'PNW', 'PRP', 'PSJ',\r\n    'PSV', 'PTQ', 'QDK', 'QPS', 'QV4', 'R1P', 'R1X', 'R2B', 'R5P', 'RAA', 'RAE',\r\n    'RAF', 'RAM', 'RAO', 'RAT', 'RB5', 'RBL', 'RCD', 'RDP', 'REL', 'RER', 'RF5',\r\n    'RG1', 'RGG', 'RHA', 'RIB', 'RIP', 'RNS', 'RNT', 'ROB', 'ROR', 'RPA', 'RST',\r\n    'RUB', 'RUU', 'RZM', 'S6P', 'S7P', 'SA0', 'SCR', 'SDD', 'SF6', 'SF9', 'SG4',\r\n    'SG5', 'SG6', 'SG7', 'SGA', 'SGC', 'SGD', 'SGN', 'SGS', 'SHB', 'SHG', 'SI3',\r\n    'SIO', 'SOE', 'SOL', 'SSG', 'SUC', 'SUP', 'SUS', 'T6P', 'T6T', 'TAG', 'TCB',\r\n    'TDG', 'TGK', 'TGY', 'TH1', 'TIA', 'TM5', 'TM6', 'TM9', 'TMR', 'TMX', 'TOA',\r\n    'TOC', 'TRE', 'TYV', 'UCD', 'UDC', 'VG1', 'X0X', 'X1X', 'X2F', 'X4S', 'X5S',\r\n    'X6X', 'XBP', 'XDN', 'XDP', 'XIF', 'XIM', 'XLF', 'XLS', 'XMM', 'XUL', 'XXR',\r\n    'XYP', 'XYS', 'YO5', 'Z3Q', 'Z6J', 'Z9M', 'ZDC', 'ZDM'\r\n];\r\nexport const ProteinBackboneAtoms = [\r\n    'CA', 'C', 'N', 'O',\r\n    'O1', 'O2', 'OC1', 'OC2', 'OX1', 'OXT', 'OT1', 'OT2',\r\n    'H', 'H1', 'H2', 'H3', 'HA', 'HN',\r\n    'BB'\r\n];\r\nexport const NucleicBackboneAtoms = [\r\n    'P', 'OP1', 'OP2', 'HOP2', 'HOP3',\r\n    \"O2'\", \"O3'\", \"O4'\", \"O5'\", \"C1'\", \"C2'\", \"C3'\", \"C4'\", \"C5'\",\r\n    \"H1'\", \"H2'\", \"H2''\", \"HO2'\", \"H3'\", \"H4'\", \"H5'\", \"H5''\", \"HO3'\", \"HO5'\",\r\n    'O2*', 'O3*', 'O4*', 'O5*', 'C1*', 'C2*', 'C3*', 'C4*', 'C5*'\r\n];\r\nexport const ResidueTypeAtoms = {};\r\nResidueTypeAtoms[ProteinBackboneType] = {\r\n    trace: 'CA',\r\n    direction1: 'C',\r\n    direction2: ['O', 'OC1', 'O1', 'OX1', 'OXT', 'OT1', 'OT2'],\r\n    backboneStart: 'N',\r\n    backboneEnd: 'C'\r\n};\r\nResidueTypeAtoms[RnaBackboneType] = {\r\n    trace: [\"C4'\", 'C4*'],\r\n    direction1: [\"C1'\", 'C1*'],\r\n    direction2: [\"C3'\", 'C3*'],\r\n    backboneStart: 'P',\r\n    backboneEnd: [\"O3'\", 'O3*']\r\n};\r\nResidueTypeAtoms[DnaBackboneType] = {\r\n    trace: [\"C3'\", 'C3*'],\r\n    direction1: [\"C2'\", 'C2*'],\r\n    direction2: [\"O4'\", 'O4*'],\r\n    backboneStart: 'P',\r\n    backboneEnd: [\"O3'\", 'O3*']\r\n};\r\nResidueTypeAtoms[CgProteinBackboneType] = {\r\n    trace: ['CA', 'BB'],\r\n    backboneStart: ['CA', 'BB'],\r\n    backboneEnd: ['CA', 'BB']\r\n};\r\nResidueTypeAtoms[CgRnaBackboneType] = {\r\n    trace: [\"C4'\", 'C4*', 'P'],\r\n    backboneStart: [\"C4'\", 'C4*', 'P'],\r\n    backboneEnd: [\"C4'\", 'C4*', 'P']\r\n};\r\nResidueTypeAtoms[CgDnaBackboneType] = {\r\n    trace: [\"C3'\", 'C3*', \"C2'\", 'P'],\r\n    backboneStart: [\"C3'\", 'C3*', \"C2'\", 'P'],\r\n    backboneEnd: [\"C3'\", 'C3*', \"C2'\", 'P']\r\n};\r\nResidueTypeAtoms[UnknownBackboneType] = {};\r\n//# sourceMappingURL=structure-constants.js.map","/**\r\n * @file Geometry\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { degToRad } from '../math/math-utils';\r\nexport function assignGeometry(totalCoordination) {\r\n    switch (totalCoordination) {\r\n        case 0:\r\n            return 0 /* Spherical */;\r\n        case 1:\r\n            return 1 /* Terminal */;\r\n        case 2:\r\n            return 2 /* Linear */;\r\n        case 3:\r\n            return 3 /* Trigonal */;\r\n        case 4:\r\n            return 4 /* Tetrahedral */;\r\n        default:\r\n            return 8 /* Unknown */;\r\n    }\r\n}\r\nexport const Angles = new Map([\r\n    [2 /* Linear */, degToRad(180)],\r\n    [3 /* Trigonal */, degToRad(120)],\r\n    [4 /* Tetrahedral */, degToRad(109.4721)],\r\n    [6 /* Octahedral */, degToRad(90)]\r\n]);\r\n/**\r\n * Calculate the angles x-1-2 for all x where x is a heavy atom bonded to ap1.\r\n * @param  {AtomProxy} ap1 First atom (angle centre)\r\n * @param  {AtomProxy} ap2 Second atom\r\n * @return {number[]}        Angles in radians\r\n */\r\nexport function calcAngles(ap1, ap2) {\r\n    let angles = [];\r\n    const d1 = new Vector3();\r\n    const d2 = new Vector3();\r\n    d1.subVectors(ap2, ap1);\r\n    ap1.eachBondedAtom(x => {\r\n        if (x.number !== 1 /* H */) {\r\n            d2.subVectors(x, ap1);\r\n            angles.push(d1.angleTo(d2));\r\n        }\r\n    });\r\n    return angles;\r\n}\r\n/**\r\n * Find two neighbours of ap1 to define a plane (if possible) and\r\n * measure angle out of plane to ap2\r\n * @param  {AtomProxy} ap1 First atom (angle centre)\r\n * @param  {AtomProxy} ap2 Second atom (out-of-plane)\r\n * @return {number}        Angle from plane to second atom\r\n */\r\nexport function calcPlaneAngle(ap1, ap2) {\r\n    const x1 = ap1.clone();\r\n    const v12 = new Vector3();\r\n    v12.subVectors(ap2, ap1);\r\n    const neighbours = [new Vector3(), new Vector3()];\r\n    let ni = 0;\r\n    ap1.eachBondedAtom(x => {\r\n        if (ni > 1) {\r\n            return;\r\n        }\r\n        if (x.number !== 1 /* H */) {\r\n            x1.index = x.index;\r\n            neighbours[ni++].subVectors(x, ap1);\r\n        }\r\n    });\r\n    if (ni === 1) {\r\n        x1.eachBondedAtom(x => {\r\n            if (ni > 1) {\r\n                return;\r\n            }\r\n            if (x.number !== 1 /* H */ && x.index !== ap1.index) {\r\n                neighbours[ni++].subVectors(x, ap1);\r\n            }\r\n        });\r\n    }\r\n    if (ni !== 2) {\r\n        return;\r\n    }\r\n    const cp = neighbours[0].cross(neighbours[1]);\r\n    return Math.abs((Math.PI / 2) - cp.angleTo(v12));\r\n}\r\n//# sourceMappingURL=geometry.js.map","/**\r\n * @file Valence Model\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { assignGeometry } from './geometry';\r\n/**\r\n * Are we involved in some kind of pi system. Either explicitly forming\r\n * double bond or N, O next to a double bond, except:\r\n *\r\n *   N,O with degree 4 cannot be conjugated.\r\n *   N,O adjacent to P=O or S=O do not qualify (keeps sulfonamide N sp3 geom)\r\n */\r\nfunction isConjugated(a) {\r\n    const _bp = a.structure.getBondProxy();\r\n    const atomicNumber = a.number;\r\n    const hetero = atomicNumber === 8 /* O */ || atomicNumber === 7 /* N */;\r\n    if (hetero && a.bondCount === 4) {\r\n        return false;\r\n    }\r\n    let flag = false;\r\n    a.eachBond(b => {\r\n        if (b.bondOrder > 1) {\r\n            flag = true;\r\n            return;\r\n        }\r\n        if (hetero) {\r\n            const a2 = b.getOtherAtom(a);\r\n            a2.eachBond(b2 => {\r\n                if (b2.bondOrder > 1) {\r\n                    const atomicNumber2 = a2.number;\r\n                    if ((atomicNumber2 === 15 /* P */ || atomicNumber2 === 16 /* S */) &&\r\n                        b2.getOtherAtom(a2).number === 8 /* O */) {\r\n                        return;\r\n                    }\r\n                    flag = true;\r\n                }\r\n            }, _bp); // Avoid reuse of structure._bp\r\n        }\r\n    });\r\n    return flag;\r\n}\r\n/* function hasExplicitCharge(r: ResidueProxy) {\r\n  let flag = false\r\n  r.eachAtom(a => {\r\n    if (a.formalCharge != null && a.formalCharge !== 0) flag = true\r\n  })\r\n  return flag\r\n}\r\n\r\nfunction hasExplicitHydrogen(r: ResidueProxy) {\r\n  let flag = false\r\n  r.eachAtom(a => {\r\n    if (a.number === Elements.H) flag = true\r\n  })\r\n  return flag\r\n} */\r\nexport function explicitValence(a) {\r\n    let v = 0;\r\n    a.eachBond(b => v += b.bondOrder);\r\n    return v;\r\n}\r\n/**\r\n * Attempts to produce a consistent charge and implicit\r\n * H-count for an atom.\r\n *\r\n * If both params.assignCharge and params.assignH, this\r\n * approximately followsthe rules described in\r\n * https://docs.eyesopen.com/toolkits/python/oechemtk/valence.html#openeye-hydrogen-count-model\r\n *\r\n * If only charge or hydrogens are to be assigned it takes\r\n * a much simpler view and deduces one from the other\r\n *\r\n * @param {AtomProxy}           a      Atom to analyze\r\n * @param {assignChargeHParams} params What to assign\r\n */\r\nexport function calculateHydrogensCharge(a, params) {\r\n    const hydrogenCount = a.bondToElementCount(1 /* H */);\r\n    let charge = a.formalCharge || 0;\r\n    const assignCharge = (params.assignCharge === 'always' ||\r\n        (params.assignCharge === 'auto' && charge === 0));\r\n    const assignH = (params.assignH === 'always' ||\r\n        (params.assignH === 'auto' && hydrogenCount === 0));\r\n    const degree = a.bondCount;\r\n    const valence = explicitValence(a);\r\n    const conjugated = isConjugated(a);\r\n    const multiBond = (valence - degree > 0);\r\n    let implicitHCount = 0;\r\n    let geom = 8 /* Unknown */;\r\n    switch (a.number) {\r\n        case 1 /* H */:\r\n            if (assignCharge) {\r\n                if (degree === 0) {\r\n                    charge = 1;\r\n                    geom = 0 /* Spherical */;\r\n                }\r\n                else if (degree === 1) {\r\n                    charge = 0;\r\n                    geom = 1 /* Terminal */;\r\n                }\r\n            }\r\n            break;\r\n        case 6 /* C */:\r\n            // TODO: Isocyanide?\r\n            if (assignCharge) {\r\n                charge = 0; // Assume carbon always neutral\r\n            }\r\n            if (assignH) {\r\n                // Carbocation/carbanion are 3-valent\r\n                implicitHCount = Math.max(0, 4 - valence - Math.abs(charge));\r\n            }\r\n            // Carbocation is planar, carbanion is tetrahedral\r\n            geom = assignGeometry(degree + implicitHCount + Math.max(0, -charge));\r\n            break;\r\n        case 7 /* N */:\r\n            if (assignCharge) {\r\n                if (!assignH) { // Trust input H explicitly:\r\n                    charge = valence - 3;\r\n                }\r\n                else if (conjugated && valence < 4) {\r\n                    // Neutral unless amidine/guanidine double-bonded N:\r\n                    if (degree - hydrogenCount === 1 && valence - hydrogenCount === 2) {\r\n                        charge = 1;\r\n                    }\r\n                    else {\r\n                        charge = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // Sulfonamide nitrogen and classed as sp3 in conjugation model but\r\n                    // they won't be charged\r\n                    // Don't assign charge to nitrogens bound to metals\r\n                    let flag = false;\r\n                    a.eachBondedAtom(ba => {\r\n                        if (ba.number === 16 /* S */ || ba.isMetal())\r\n                            flag = true;\r\n                    });\r\n                    if (flag)\r\n                        charge = 0;\r\n                    else\r\n                        charge = 1;\r\n                    // TODO: Planarity sanity check?\r\n                }\r\n            }\r\n            if (assignH) {\r\n                // NH4+ -> 4, 1' amide -> 2, nitro N/N+ depiction -> 0\r\n                implicitHCount = Math.max(0, 3 - valence + charge);\r\n            }\r\n            if (conjugated && !multiBond) {\r\n                // Amide, anilinic N etc. cannot consider lone-pair for geometry purposes\r\n                // Anilinic N geometry is depenent on ring electronics, for our purposes we\r\n                // assume it's trigonal!\r\n                geom = assignGeometry(degree + implicitHCount - charge);\r\n            }\r\n            else {\r\n                // Everything else, pyridine, amine, nitrile, lp plays normal role:\r\n                geom = assignGeometry(degree + implicitHCount + 1 - charge);\r\n            }\r\n            break;\r\n        case 8 /* O */:\r\n            if (assignCharge) {\r\n                if (!assignH) {\r\n                    charge = valence - 2; //\r\n                }\r\n                if (valence === 1) {\r\n                    a.eachBondedAtom(ba => {\r\n                        ba.eachBond(b => {\r\n                            const oa = b.getOtherAtom(ba);\r\n                            if (oa.index !== a.index && oa.number === 8 /* O */ && b.bondOrder === 2) {\r\n                                charge = -1;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            if (assignH) {\r\n                // ethanol -> 1, carboxylate -> -1\r\n                implicitHCount = Math.max(0, 2 - valence + charge);\r\n            }\r\n            if (conjugated && !multiBond) {\r\n                // carboxylate OH, phenol OH, one lone-pair taken up with conjugation\r\n                geom = assignGeometry(degree + implicitHCount - charge + 1);\r\n            }\r\n            else {\r\n                // Carbonyl (trigonal)\r\n                geom = assignGeometry(degree + implicitHCount - charge + 2);\r\n            }\r\n            break;\r\n        // Only handles thiols/thiolates/thioether/sulfonium. Sulfoxides and higher\r\n        // oxidiation states are assumed neutral S (charge carried on O if required)\r\n        case 16 /* S */:\r\n            if (assignCharge) {\r\n                if (!assignH) {\r\n                    if (valence <= 3 && !a.bondToElementCount(8 /* O */)) {\r\n                        charge = valence - 2; // e.g. explicitly deprotonated thiol\r\n                    }\r\n                    else {\r\n                        charge = 0;\r\n                    }\r\n                }\r\n            }\r\n            if (assignH) {\r\n                if (valence < 2) {\r\n                    implicitHCount = Math.max(0, 2 - valence + charge);\r\n                }\r\n            }\r\n            if (valence <= 3) {\r\n                // Thiol, thiolate, tioether -> tetrahedral\r\n                geom = assignGeometry(degree + implicitHCount - charge + 2);\r\n            }\r\n            break;\r\n        case 9 /* F */:\r\n        case 17 /* CL */:\r\n        case 35 /* BR */:\r\n        case 53 /* I */:\r\n        case 85 /* AT */:\r\n            // Never implicitly protonate halides\r\n            if (assignCharge) {\r\n                charge = valence - 1;\r\n            }\r\n            break;\r\n        case 3 /* LI */:\r\n        case 11 /* NA */:\r\n        case 19 /* K */:\r\n        case 37 /* RB */:\r\n        case 55 /* CS */:\r\n        case 87 /* FR */:\r\n            if (assignCharge) {\r\n                charge = 1 - valence;\r\n            }\r\n            break;\r\n        case 4 /* BE */:\r\n        case 12 /* MG */:\r\n        case 20 /* CA */:\r\n        case 38 /* SR */:\r\n        case 56 /* BA */:\r\n        case 88 /* RA */:\r\n            if (assignCharge) {\r\n                charge = 2 - valence;\r\n            }\r\n            break;\r\n        default:\r\n            console.warn('Requested charge, protonation for an unhandled element', a.element);\r\n    }\r\n    return [charge, implicitHCount, implicitHCount + hydrogenCount, geom];\r\n}\r\nexport function ValenceModel(data, params) {\r\n    const structure = data.structure;\r\n    const n = structure.atomCount;\r\n    const charge = new Int8Array(n);\r\n    const implicitH = new Int8Array(n);\r\n    const totalH = new Int8Array(n);\r\n    const idealGeometry = new Int8Array(n);\r\n    structure.eachAtom(a => {\r\n        const i = a.index;\r\n        const [chg, implH, totH, geom] = calculateHydrogensCharge(a, params);\r\n        charge[i] = chg;\r\n        implicitH[i] = implH;\r\n        totalH[i] = totH;\r\n        idealGeometry[i] = geom;\r\n    });\r\n    return { charge, implicitH, totalH, idealGeometry };\r\n}\r\n//# sourceMappingURL=valence-model.js.map","import SpatialHash from '../geometry/spatial-hash';\r\nimport { ValenceModel } from '../chemistry/valence-model';\r\nexport function createData(structure) {\r\n    return {\r\n        structure,\r\n        '@spatialLookup': undefined,\r\n        '@valenceModel': undefined\r\n    };\r\n}\r\nexport function spatialLookup(data) {\r\n    if (data['@spatialLookup'])\r\n        return data['@spatialLookup'];\r\n    const lookup = new SpatialHash(data.structure.atomStore, data.structure.boundingBox);\r\n    data['@spatialLookup'] = lookup;\r\n    return lookup;\r\n}\r\nexport function valenceModel(data) {\r\n    if (data['@valenceModel'])\r\n        return data['@valenceModel'];\r\n    const valenceModel = ValenceModel(data, { assignCharge: 'auto', assignH: 'auto' });\r\n    data['@valenceModel'] = valenceModel;\r\n    return valenceModel;\r\n}\r\n//# sourceMappingURL=data.js.map","/**\r\n * @file Functional Groups\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n/**\r\n * Nitrogen in a quaternary amine\r\n */\r\nexport function isQuaternaryAmine(a) {\r\n    return (a.number === 7 &&\r\n        a.bondCount === 4 &&\r\n        a.bondToElementCount(1 /* H */) === 0);\r\n}\r\n/**\r\n * Nitrogen in a tertiary amine\r\n */\r\nexport function isTertiaryAmine(a, idealValence) {\r\n    return (a.number === 7 &&\r\n        a.bondCount >= 3 &&\r\n        idealValence === 3);\r\n}\r\n/**\r\n * Nitrogen in an imide\r\n */\r\nexport function isImide(a) {\r\n    let flag = false;\r\n    if (a.number === 7 /* N */ && (a.bondCount - a.bondToElementCount(1 /* H */)) === 2) {\r\n        let carbonylCount = 0;\r\n        a.eachBondedAtom(ba => {\r\n            if (isCarbonyl(ba))\r\n                ++carbonylCount;\r\n        });\r\n        flag = carbonylCount === 2;\r\n    }\r\n    return flag;\r\n}\r\n/**\r\n * Nitrogen in an amide\r\n */\r\nexport function isAmide(a) {\r\n    let flag = false;\r\n    if (a.number === 7 /* N */ && (a.bondCount - a.bondToElementCount(1 /* H */)) === 2) {\r\n        let carbonylCount = 0;\r\n        a.eachBondedAtom(ba => {\r\n            if (isCarbonyl(ba))\r\n                ++carbonylCount;\r\n        });\r\n        flag = carbonylCount === 1;\r\n    }\r\n    return flag;\r\n}\r\n/**\r\n * Sulfur in a sulfonium group\r\n */\r\nexport function isSulfonium(a) {\r\n    return (a.number === 16 &&\r\n        a.bondCount === 3 &&\r\n        a.bondToElementCount(1 /* H */) === 0);\r\n}\r\n/**\r\n * Sulfur in a sulfonic acid or sulfonate group\r\n */\r\nexport function isSulfonicAcid(a) {\r\n    return (a.number === 16 &&\r\n        a.bondToElementCount(8 /* O */) === 3);\r\n}\r\n/**\r\n * Sulfur in a sulfate group\r\n */\r\nexport function isSulfate(a) {\r\n    return (a.number === 16 &&\r\n        a.bondToElementCount(8 /* O */) === 4);\r\n}\r\n/**\r\n * Phosphor in a phosphate group\r\n */\r\nexport function isPhosphate(a) {\r\n    return (a.number === 15 &&\r\n        a.bondToElementCount(8 /* O */) === a.bondCount);\r\n}\r\n/**\r\n * Halogen with one bond to a carbon\r\n */\r\nexport function isHalocarbon(a) {\r\n    return (a.isHalogen() &&\r\n        a.bondCount === 1 &&\r\n        a.bondToElementCount(6 /* C */) === 1);\r\n}\r\n/**\r\n * Carbon in a carbonyl/acyl group\r\n */\r\nexport function isCarbonyl(a) {\r\n    let flag = false;\r\n    if (a.number === 6 /* C */) {\r\n        a.eachBond(b => {\r\n            if (b.bondOrder === 2 && b.getOtherAtom(a).number === 8 /* O */) {\r\n                flag = true;\r\n            }\r\n        });\r\n    }\r\n    return flag;\r\n}\r\n/**\r\n * Carbon in a carboxylate group\r\n */\r\nexport function isCarboxylate(a) {\r\n    let terminalOxygenCount = 0;\r\n    if (a.number === 6 &&\r\n        a.bondToElementCount(8 /* O */) === 2 &&\r\n        a.bondToElementCount(6 /* C */) === 1) {\r\n        a.eachBondedAtom(ba => {\r\n            if (ba.number === 8 && ba.bondCount - ba.bondToElementCount(1 /* H */) === 1) {\r\n                ++terminalOxygenCount;\r\n            }\r\n        });\r\n    }\r\n    return terminalOxygenCount === 2;\r\n}\r\n/**\r\n * Carbon in a guanidine group\r\n */\r\nexport function isGuanidine(a) {\r\n    let terminalNitrogenCount = 0;\r\n    if (a.number === 6 &&\r\n        a.bondCount === 3 &&\r\n        a.bondToElementCount(7 /* N */) === 3) {\r\n        a.eachBondedAtom(ba => {\r\n            if (ba.bondCount - ba.bondToElementCount(1 /* H */) === 1) {\r\n                ++terminalNitrogenCount;\r\n            }\r\n        });\r\n    }\r\n    return terminalNitrogenCount === 2;\r\n}\r\n/**\r\n * Carbon in a acetamidine group\r\n */\r\nexport function isAcetamidine(a) {\r\n    let terminalNitrogenCount = 0;\r\n    if (a.number === 6 &&\r\n        a.bondCount === 3 &&\r\n        a.bondToElementCount(7 /* N */) === 2 &&\r\n        a.bondToElementCount(6 /* C */) === 1) {\r\n        a.eachBondedAtom(ba => {\r\n            if (ba.bondCount - ba.bondToElementCount(1 /* H */) === 1) {\r\n                ++terminalNitrogenCount;\r\n            }\r\n        });\r\n    }\r\n    return terminalNitrogenCount === 2;\r\n}\r\nconst PolarElements = [\r\n    7 /* N */, 8 /* O */, 16 /* S */,\r\n    9 /* F */, 17 /* CL */, 35 /* BR */, 53 /* I */\r\n];\r\nexport function isPolar(a) {\r\n    return PolarElements.includes(a.number);\r\n}\r\nexport function hasPolarNeighbour(a) {\r\n    let flag = false;\r\n    a.eachBondedAtom(ba => {\r\n        if (isPolar(ba))\r\n            flag = true;\r\n    });\r\n    return flag;\r\n}\r\nexport function hasAromaticNeighbour(a) {\r\n    let flag = false;\r\n    a.eachBondedAtom(function (bap) {\r\n        if (bap.aromatic)\r\n            flag = true;\r\n    });\r\n    return flag;\r\n}\r\n//# sourceMappingURL=functional-groups.js.map","/**\r\n * @file Charged\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { defaults } from '../../utils';\r\nimport { radToDeg } from '../../math/math-utils';\r\nimport { AA3, Bases } from '../../structure/structure-constants';\r\nimport { valenceModel } from '../../structure/data';\r\nimport { isGuanidine, isAcetamidine, isSulfonicAcid, isPhosphate, isSulfate, isCarboxylate } from '../functional-groups';\r\nimport { addAtom, addFeature, createFeatureState, } from './features';\r\nimport { ContactDefaultParams, invalidAtomContact } from './contact';\r\nconst PositvelyCharged = ['ARG', 'HIS', 'LYS'];\r\nconst NegativelyCharged = ['GLU', 'ASP'];\r\nexport function addPositiveCharges(structure, features) {\r\n    const { charge } = valenceModel(structure.data);\r\n    const atomInGroupDict = {};\r\n    structure.eachResidue(r => {\r\n        if (PositvelyCharged.includes(r.resname)) {\r\n            const state = createFeatureState(1 /* PositiveCharge */);\r\n            r.eachAtom(a => {\r\n                if (a.number === 7 /* N */ && a.isSidechain()) {\r\n                    addAtom(state, a);\r\n                }\r\n            });\r\n            addFeature(features, state);\r\n        }\r\n        else if (!AA3.includes(r.resname) && !r.isNucleic()) {\r\n            r.eachAtom(a => {\r\n                let addGroup = false;\r\n                const state = createFeatureState(1 /* PositiveCharge */);\r\n                if (isGuanidine(a)) {\r\n                    state.group = 8 /* Guanidine */;\r\n                    addGroup = true;\r\n                }\r\n                else if (isAcetamidine(a)) {\r\n                    state.group = 9 /* Acetamidine */;\r\n                    addGroup = true;\r\n                }\r\n                if (addGroup) {\r\n                    a.eachBondedAtom(a => {\r\n                        if (a.number === 7 /* N */) {\r\n                            atomInGroupDict[a.index] = true;\r\n                            addAtom(state, a);\r\n                        }\r\n                    });\r\n                    addFeature(features, state);\r\n                }\r\n            });\r\n            r.eachAtom(a => {\r\n                const state = createFeatureState(1 /* PositiveCharge */);\r\n                if (charge[a.index] > 0) {\r\n                    if (!atomInGroupDict[a.index]) {\r\n                        addAtom(state, a);\r\n                        addFeature(features, state);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nexport function addNegativeCharges(structure, features) {\r\n    const { charge } = valenceModel(structure.data);\r\n    const atomInGroupDict = {};\r\n    structure.eachResidue(r => {\r\n        if (NegativelyCharged.includes(r.resname)) {\r\n            const state = createFeatureState(2 /* NegativeCharge */);\r\n            r.eachAtom(a => {\r\n                if (a.number === 8 /* O */ && a.isSidechain()) {\r\n                    addAtom(state, a);\r\n                }\r\n            });\r\n            addFeature(features, state);\r\n        }\r\n        else if (Bases.includes(r.resname)) {\r\n            const state = createFeatureState(2 /* NegativeCharge */);\r\n            r.eachAtom(a => {\r\n                if (isPhosphate(a)) {\r\n                    state.group = 6 /* Phosphate */;\r\n                    a.eachBondedAtom(a => {\r\n                        if (a.number === 8 /* O */)\r\n                            addAtom(state, a);\r\n                    });\r\n                    addFeature(features, state);\r\n                }\r\n            });\r\n        }\r\n        else if (!AA3.includes(r.resname) && !Bases.includes(r.resname)) {\r\n            r.eachAtom(a => {\r\n                let addGroup = false;\r\n                const state = createFeatureState(2 /* NegativeCharge */);\r\n                if (isSulfonicAcid(a)) {\r\n                    state.group = 4 /* SulfonicAcid */;\r\n                    addGroup = true;\r\n                }\r\n                else if (isPhosphate(a)) {\r\n                    state.group = 6 /* Phosphate */;\r\n                    addGroup = true;\r\n                }\r\n                else if (isSulfate(a)) {\r\n                    state.group = 5 /* Sulfate */;\r\n                    addGroup = true;\r\n                }\r\n                else if (isCarboxylate(a)) {\r\n                    state.group = 10 /* Carboxylate */;\r\n                    addGroup = true;\r\n                }\r\n                if (addGroup) {\r\n                    a.eachBondedAtom(a => {\r\n                        if (a.number === 8 /* O */) {\r\n                            atomInGroupDict[a.index] = true;\r\n                            addAtom(state, a);\r\n                        }\r\n                    });\r\n                    addFeature(features, state);\r\n                }\r\n            });\r\n            r.eachAtom(a => {\r\n                const state = createFeatureState(2 /* NegativeCharge */);\r\n                if (charge[a.index] < 0) {\r\n                    if (!atomInGroupDict[a.index]) {\r\n                        addAtom(state, a);\r\n                        addFeature(features, state);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\nexport function addAromaticRings(structure, features) {\r\n    const a = structure.getAtomProxy();\r\n    structure.eachResidue(r => {\r\n        const rings = r.getAromaticRings();\r\n        if (rings) {\r\n            const offset = r.atomOffset;\r\n            rings.forEach(ring => {\r\n                const state = createFeatureState(3 /* AromaticRing */);\r\n                ring.forEach(i => {\r\n                    a.index = i + offset;\r\n                    addAtom(state, a);\r\n                });\r\n                addFeature(features, state);\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction isIonicInteraction(ti, tj) {\r\n    return ((ti === 2 /* NegativeCharge */ && tj === 1 /* PositiveCharge */) ||\r\n        (ti === 1 /* PositiveCharge */ && tj === 2 /* NegativeCharge */));\r\n}\r\nfunction isPiStacking(ti, tj) {\r\n    return ti === 3 /* AromaticRing */ && tj === 3 /* AromaticRing */;\r\n}\r\nfunction isCationPi(ti, tj) {\r\n    return ((ti === 3 /* AromaticRing */ && tj === 1 /* PositiveCharge */) ||\r\n        (ti === 1 /* PositiveCharge */ && tj === 3 /* AromaticRing */));\r\n}\r\nexport function addChargedContacts(structure, contacts, params = {}) {\r\n    const maxIonicDist = defaults(params.maxIonicDist, ContactDefaultParams.maxIonicDist);\r\n    const maxPiStackingDist = defaults(params.maxPiStackingDist, ContactDefaultParams.maxPiStackingDist);\r\n    const maxPiStackingOffset = defaults(params.maxPiStackingOffset, ContactDefaultParams.maxPiStackingOffset);\r\n    const maxPiStackingAngle = defaults(params.maxPiStackingAngle, ContactDefaultParams.maxPiStackingAngle);\r\n    const maxCationPiDist = defaults(params.maxCationPiDist, ContactDefaultParams.maxCationPiDist);\r\n    const maxCationPiOffset = defaults(params.maxCationPiOffset, ContactDefaultParams.maxCationPiOffset);\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const maxDistance = Math.max(maxIonicDist + 2, maxPiStackingDist, maxCationPiDist);\r\n    // const maxSaltBridgeDistSq = maxSaltBridgeDist * maxSaltBridgeDist\r\n    const maxPiStackingDistSq = maxPiStackingDist * maxPiStackingDist;\r\n    const maxCationPiDistSq = maxCationPiDist * maxCationPiDist;\r\n    const { features, spatialHash, contactStore, featureSet } = contacts;\r\n    const { types, centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const n = types.length;\r\n    const ax = structure.atomStore.x;\r\n    const ay = structure.atomStore.y;\r\n    const az = structure.atomStore.z;\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    const areAtomSetsWithinDist = function (atomSet1, atomSet2, maxDist) {\r\n        const sn = atomSet1.length;\r\n        const sm = atomSet2.length;\r\n        for (let si = 0; si < sn; ++si) {\r\n            ap1.index = atomSet1[si];\r\n            for (let sj = 0; sj < sm; ++sj) {\r\n                ap2.index = atomSet2[sj];\r\n                if (ap1.distanceTo(ap2) <= maxDist) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    const v1 = new Vector3();\r\n    const v2 = new Vector3();\r\n    const v3 = new Vector3();\r\n    const d1 = new Vector3();\r\n    const d2 = new Vector3();\r\n    const n1 = new Vector3();\r\n    const n2 = new Vector3();\r\n    const getNormal = function (atoms, normal) {\r\n        v1.set(ax[atoms[0]], ay[atoms[0]], az[atoms[0]]);\r\n        v2.set(ax[atoms[1]], ay[atoms[1]], az[atoms[1]]);\r\n        v3.set(ax[atoms[2]], ay[atoms[2]], az[atoms[2]]);\r\n        d1.subVectors(v1, v2);\r\n        d2.subVectors(v1, v3);\r\n        normal.crossVectors(d1, d2);\r\n    };\r\n    const getOffset = function (i, j, normal) {\r\n        v1.set(x[i], y[i], z[i]);\r\n        v2.set(x[j], y[j], z[j]);\r\n        return v1.sub(v2).projectOnPlane(normal).add(v2).distanceTo(v2);\r\n    };\r\n    const add = function (i, j, ct) {\r\n        featureSet.setBits(i, j);\r\n        contactStore.addContact(i, j, ct);\r\n    };\r\n    for (let i = 0; i < n; ++i) {\r\n        spatialHash.eachWithin(x[i], y[i], z[i], maxDistance, (j, dSq) => {\r\n            if (j <= i)\r\n                return;\r\n            ap1.index = atomSets[i][0];\r\n            ap2.index = atomSets[j][0];\r\n            if (invalidAtomContact(ap1, ap2, masterIdx))\r\n                return;\r\n            const ti = types[i];\r\n            const tj = types[j];\r\n            if (isIonicInteraction(ti, tj)) {\r\n                if (areAtomSetsWithinDist(atomSets[i], atomSets[j], maxIonicDist)) {\r\n                    add(i, j, 1 /* IonicInteraction */);\r\n                }\r\n            }\r\n            else if (isPiStacking(ti, tj)) {\r\n                if (dSq <= maxPiStackingDistSq) {\r\n                    getNormal(atomSets[i], n1);\r\n                    getNormal(atomSets[j], n2);\r\n                    const angle = radToDeg(n1.angleTo(n2));\r\n                    const offset = Math.min(getOffset(i, j, n2), getOffset(j, i, n1));\r\n                    if (offset <= maxPiStackingOffset) {\r\n                        if (angle <= maxPiStackingAngle || angle >= 180 - maxPiStackingAngle) {\r\n                            add(i, j, 3 /* PiStacking */); // parallel\r\n                        }\r\n                        else if (angle <= maxPiStackingAngle + 90 && angle >= 90 - maxPiStackingAngle) {\r\n                            add(i, j, 3 /* PiStacking */); // t-shaped\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (isCationPi(ti, tj)) {\r\n                if (dSq <= maxCationPiDistSq) {\r\n                    const [l, k] = ti === 3 /* AromaticRing */ ? [i, j] : [j, i];\r\n                    getNormal(atomSets[l], n1);\r\n                    const offset = getOffset(k, l, n1);\r\n                    if (offset <= maxCationPiOffset) {\r\n                        add(l, k, 2 /* CationPi */);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=charged.js.map","/**\r\n * @file Hydrogen Bonds\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\nimport { defaults } from '../../utils';\r\nimport { degToRad } from '../../math/math-utils';\r\nimport { valenceModel } from '../../structure/data';\r\nimport { Angles, calcAngles, calcPlaneAngle } from '../geometry';\r\nimport { addAtom, addFeature, createFeatureState, } from './features';\r\nimport { ContactDefaultParams, invalidAtomContact } from './contact';\r\n// Geometric characteristics of hydrogen bonds involving sulfur atoms in proteins\r\n// https://doi.org/10.1002/prot.22327\r\n// Satisfying Hydrogen Bonding Potential in Proteins (HBPLUS)\r\n// https://doi.org/10.1006/jmbi.1994.1334\r\n// http://www.csb.yale.edu/userguides/datamanip/hbplus/hbplus_descrip.html\r\n/**\r\n * Potential hydrogen donor\r\n */\r\nexport function addHydrogenDonors(structure, features) {\r\n    const { totalH } = valenceModel(structure.data);\r\n    structure.eachAtom(a => {\r\n        const state = createFeatureState(4 /* HydrogenDonor */);\r\n        const an = a.number;\r\n        if (isHistidineNitrogen(a)) {\r\n            // include both nitrogen atoms in histidine due to\r\n            // their often ambiguous protonation assignment\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n        else if (totalH[a.index] > 0 &&\r\n            (an === 7 /* N */ || an === 8 /* O */ || an === 16 /* S */)) {\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Weak hydrogen donor.\r\n */\r\nexport function addWeakHydrogenDonors(structure, features) {\r\n    const { totalH } = valenceModel(structure.data);\r\n    structure.eachAtom(a => {\r\n        if (a.number === 6 /* C */ &&\r\n            totalH[a.index] > 0 &&\r\n            (a.bondToElementCount(7 /* N */) > 0 ||\r\n                a.bondToElementCount(8 /* O */) > 0 ||\r\n                inAromaticRingWithElectronNegativeElement(a))) {\r\n            const state = createFeatureState(9 /* WeakHydrogenDonor */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\nfunction inAromaticRingWithElectronNegativeElement(a) {\r\n    if (!a.isAromatic())\r\n        return false;\r\n    const ringData = a.residueType.getRings();\r\n    if (!ringData)\r\n        return false;\r\n    let hasElement = false;\r\n    const rings = ringData.rings;\r\n    rings.forEach(ring => {\r\n        if (hasElement)\r\n            return; // already found one\r\n        if (ring.some(idx => (a.index - a.residueAtomOffset) === idx)) { // in ring\r\n            hasElement = ring.some(idx => {\r\n                const atomTypeId = a.residueType.atomTypeIdList[idx];\r\n                const number = a.atomMap.get(atomTypeId).number;\r\n                return number === 7 /* N */ || number === 8 /* O */;\r\n            });\r\n        }\r\n    });\r\n    return hasElement;\r\n}\r\n/**\r\n * Potential hydrogen acceptor\r\n */\r\nexport function addHydrogenAcceptors(structure, features) {\r\n    const { charge, implicitH, idealGeometry } = valenceModel(structure.data);\r\n    structure.eachAtom(a => {\r\n        const state = createFeatureState(5 /* HydrogenAcceptor */);\r\n        const an = a.number;\r\n        if (an === 8 /* O */) {\r\n            // Basically assume all oxygen atoms are acceptors!\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n        else if (an === 7 /* N */) {\r\n            if (isHistidineNitrogen(a)) {\r\n                // include both nitrogen atoms in histidine due to\r\n                // their often ambiguous protonation assignment\r\n                addAtom(state, a);\r\n                addFeature(features, state);\r\n            }\r\n            else if (charge[a.index] < 1) {\r\n                // Neutral nitrogen might be an acceptor\r\n                // It must have at least one lone pair not conjugated\r\n                const totalBonds = a.bondCount + implicitH[a.index];\r\n                const ig = idealGeometry[a.index];\r\n                if ((ig === 4 /* Tetrahedral */ && totalBonds < 4) ||\r\n                    (ig === 3 /* Trigonal */ && totalBonds < 3) ||\r\n                    (ig === 2 /* Linear */ && totalBonds < 2)) {\r\n                    addAtom(state, a);\r\n                    addFeature(features, state);\r\n                }\r\n            }\r\n        }\r\n        else if (an === 16) { // S\r\n            if (a.resname === 'CYS' || a.resname === 'MET' || a.formalCharge === -1) {\r\n                addAtom(state, a);\r\n                addFeature(features, state);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Atom that is only bound to carbon or hydrogen\r\n */\r\n// function isHydrocarbon (atom: AtomProxy) {\r\n//   let flag = true\r\n//   atom.eachBondedAtom(ap => {\r\n//     const e = ap.element\r\n//     if (e !== 'C' && e !== 'H') flag = false\r\n//   })\r\n//   return flag\r\n// }\r\nfunction isHistidineNitrogen(ap) {\r\n    return ap.resname === 'HIS' && ap.number == 7 /* N */ && ap.isRing();\r\n}\r\nfunction isBackboneHydrogenBond(ap1, ap2) {\r\n    return ap1.isBackbone() && ap2.isBackbone();\r\n}\r\nfunction isWaterHydrogenBond(ap1, ap2) {\r\n    return ap1.isWater() && ap2.isWater();\r\n}\r\nfunction isHydrogenBond(ti, tj) {\r\n    return ((ti === 5 /* HydrogenAcceptor */ && tj === 4 /* HydrogenDonor */) ||\r\n        (ti === 4 /* HydrogenDonor */ && tj === 5 /* HydrogenAcceptor */));\r\n}\r\nfunction isWeakHydrogenBond(ti, tj) {\r\n    return ((ti === 9 /* WeakHydrogenDonor */ && tj === 5 /* HydrogenAcceptor */) ||\r\n        (ti === 5 /* HydrogenAcceptor */ && tj === 9 /* WeakHydrogenDonor */));\r\n}\r\nfunction getHydrogenBondType(ap1, ap2) {\r\n    if (isWaterHydrogenBond(ap1, ap2)) {\r\n        return 9 /* WaterHydrogenBond */;\r\n    }\r\n    else if (isBackboneHydrogenBond(ap1, ap2)) {\r\n        return 10 /* BackboneHydrogenBond */;\r\n    }\r\n    else {\r\n        return 4 /* HydrogenBond */;\r\n    }\r\n}\r\n/**\r\n * All pairs of hydrogen donor and acceptor atoms\r\n */\r\nexport function addHydrogenBonds(structure, contacts, params = {}) {\r\n    const maxHbondDist = defaults(params.maxHbondDist, ContactDefaultParams.maxHbondDist);\r\n    const maxHbondSulfurDist = defaults(params.maxHbondSulfurDist, ContactDefaultParams.maxHbondSulfurDist);\r\n    const maxHbondAccAngle = degToRad(defaults(params.maxHbondAccAngle, ContactDefaultParams.maxHbondAccAngle));\r\n    const maxHbondDonAngle = degToRad(defaults(params.maxHbondDonAngle, ContactDefaultParams.maxHbondDonAngle));\r\n    const maxHbondAccPlaneAngle = degToRad(defaults(params.maxHbondAccPlaneAngle, ContactDefaultParams.maxHbondAccPlaneAngle));\r\n    const maxHbondDonPlaneAngle = degToRad(defaults(params.maxHbondDonPlaneAngle, ContactDefaultParams.maxHbondDonPlaneAngle));\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const maxDist = Math.max(maxHbondDist, maxHbondSulfurDist);\r\n    const maxHbondDistSq = maxHbondDist * maxHbondDist;\r\n    const { features, spatialHash, contactStore, featureSet } = contacts;\r\n    const { types, centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const n = types.length;\r\n    const { idealGeometry } = valenceModel(structure.data);\r\n    const donor = structure.getAtomProxy();\r\n    const acceptor = structure.getAtomProxy();\r\n    for (let i = 0; i < n; ++i) {\r\n        spatialHash.eachWithin(x[i], y[i], z[i], maxDist, (j, dSq) => {\r\n            if (j <= i)\r\n                return;\r\n            const ti = types[i];\r\n            const tj = types[j];\r\n            const isWeak = isWeakHydrogenBond(ti, tj);\r\n            if (!isWeak && !isHydrogenBond(ti, tj))\r\n                return;\r\n            const [l, k] = tj === 5 /* HydrogenAcceptor */ ? [i, j] : [j, i];\r\n            donor.index = atomSets[l][0];\r\n            acceptor.index = atomSets[k][0];\r\n            if (acceptor.index === donor.index)\r\n                return; // DA to self\r\n            if (invalidAtomContact(donor, acceptor, masterIdx))\r\n                return;\r\n            if (donor.number !== 16 /* S */ && acceptor.number !== 16 /* S */ && dSq > maxHbondDistSq)\r\n                return;\r\n            if (donor.connectedTo(acceptor))\r\n                return;\r\n            const donorAngles = calcAngles(donor, acceptor);\r\n            const idealDonorAngle = Angles.get(idealGeometry[donor.index]) || degToRad(120);\r\n            if (donorAngles.some(donorAngle => {\r\n                return Math.abs(idealDonorAngle - donorAngle) > maxHbondDonAngle;\r\n            }))\r\n                return;\r\n            if (idealGeometry[donor.index] === 3 /* Trigonal */) {\r\n                const outOfPlane = calcPlaneAngle(donor, acceptor);\r\n                if (outOfPlane !== undefined && outOfPlane > maxHbondDonPlaneAngle)\r\n                    return;\r\n            }\r\n            const acceptorAngles = calcAngles(acceptor, donor);\r\n            const idealAcceptorAngle = Angles.get(idealGeometry[acceptor.index]) || degToRad(120);\r\n            if (acceptorAngles.some(acceptorAngle => {\r\n                // Do not limit large acceptor angles\r\n                return idealAcceptorAngle - acceptorAngle > maxHbondAccAngle;\r\n            }))\r\n                return;\r\n            if (idealGeometry[acceptor.index] === 3 /* Trigonal */) {\r\n                const outOfPlane = calcPlaneAngle(acceptor, donor);\r\n                if (outOfPlane !== undefined && outOfPlane > maxHbondAccPlaneAngle)\r\n                    return;\r\n            }\r\n            featureSet.setBits(l, k);\r\n            const bondType = isWeak ? 8 /* WeakHydrogenBond */ : getHydrogenBondType(donor, acceptor);\r\n            contactStore.addContact(l, k, bondType);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=hydrogen-bonds.js.map","/**\r\n * @file Metal Binding\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { defaults } from '../../utils';\r\n// import { valenceModel } from '../../structure/data'\r\nimport { AA3, Bases } from '../../structure/structure-constants';\r\n// import { hasAromaticNeighbour } from '../functional-groups'\r\nimport { addAtom, addFeature, createFeatureState, } from './features';\r\nimport { ContactDefaultParams, invalidAtomContact } from './contact';\r\nconst IonicTypeMetals = [\r\n    3 /* LI */, 11 /* NA */, 19 /* K */, 37 /* RB */, 55 /* CS */,\r\n    12 /* MG */, 20 /* CA */, 38 /* SR */, 56 /* BA */, 13 /* AL */,\r\n    31 /* GA */, 49 /* IN */, 81 /* TL */, 21 /* SC */, 50 /* SN */,\r\n    82 /* PB */, 83 /* BI */, 51 /* SB */, 80 /* HG */\r\n];\r\n/**\r\n * Metal binding partners (dative bond or ionic-type interaction)\r\n */\r\nexport function addMetalBinding(structure, features) {\r\n    structure.eachAtom(a => {\r\n        let dative = false;\r\n        let ionic = false;\r\n        const isStandardAminoacid = AA3.includes(a.resname);\r\n        const isStandardBase = Bases.includes(a.resname);\r\n        if (!isStandardAminoacid && !isStandardBase) {\r\n            if (a.isHalogen() || a.number === 8 /* O */ || a.number === 16 /* S */) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (a.number === 7 /* N */) {\r\n                dative = true;\r\n            }\r\n        }\r\n        else if (isStandardAminoacid) {\r\n            // main chain oxygen atom or oxygen, nitrogen and sulfur from specific amino acids\r\n            if (a.number === 8 /* O */) {\r\n                if (['ASP', 'GLU', 'SER', 'THR', 'TYR', 'ASN', 'GLN'].includes(a.resname) && a.isSidechain()) {\r\n                    dative = true;\r\n                    ionic = true;\r\n                }\r\n                else if (a.isBackbone()) {\r\n                    dative = true;\r\n                    ionic = true;\r\n                }\r\n            }\r\n            else if (a.number === 16 /* S */ && 'CYS' === a.resname) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (a.number === 7 /* N */) {\r\n                if (a.resname === 'HIS' && a.isSidechain()) {\r\n                    dative = true;\r\n                }\r\n            }\r\n        }\r\n        else if (isStandardBase) {\r\n            // http://pubs.acs.org/doi/pdf/10.1021/acs.accounts.6b00253\r\n            // http://onlinelibrary.wiley.com/doi/10.1002/anie.200900399/full\r\n            if (a.number === 8 /* O */ && a.isBackbone()) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (['N3', 'N4', 'N7'].includes(a.atomname)) {\r\n                dative = true;\r\n            }\r\n            else if (['O2', 'O4', 'O6'].includes(a.atomname)) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n        }\r\n        if (dative) {\r\n            const state = createFeatureState(11 /* DativeBondPartner */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n        if (ionic) {\r\n            const state = createFeatureState(10 /* IonicTypePartner */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Metal Pi complexation partner\r\n */\r\n// export function addMetalPiPartners (structure: Structure, features: Features) {\r\n//   const { charge } = valenceModel(structure.data)\r\n//   structure.eachAtom(a => {\r\n//     const state = createFeatureState(FeatureType.MetalPiPartner)\r\n//     const resname = a.resname\r\n//     const element = a.element\r\n//     const atomname = a.atomname\r\n//     if (!a.isPolymer()) {\r\n//       // water oxygen, as well as oxygen from carboxylate, phosphoryl, phenolate, alcohol;\r\n//       // nitrogen from imidazole; sulfur from thiolate\r\n//       if (element === 'O') {\r\n//         // Water oxygen\r\n//         if (a.bondCount === 0 || a.isWater()) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Oxygen in alcohol (R-[O]-H)\r\n//         if (a.bondCount === 2 && charge[ a.index ] || a.hasBondToElement('H')) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Phenolate oxygen\r\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Carboxylic acid oxygen\r\n//         if (a.bondToElementCount('C') === 1) {\r\n//           let flag = false\r\n//           a.eachBondedAtom(ba => {\r\n//             if (ba.element === 'C' && ba.bondToElementCount('O') === 2 && ba.bondToElementCount('C') === 1) {\r\n//               flag = true\r\n//             }\r\n//           })\r\n//           if (flag) {\r\n//             addAtom(state, a)\r\n//             addFeature(features, state)\r\n//             return\r\n//           }\r\n//         }\r\n//         // Phosphoryl oxygen\r\n//         if (a.bondToElementCount('P') === 1) {\r\n//           let flag = false\r\n//           a.eachBondedAtom(ba => {\r\n//             if (ba.element === 'P' && ba.bondToElementCount('O') >= 3) {\r\n//               flag = true\r\n//             }\r\n//           })\r\n//           if (flag) {\r\n//             addAtom(state, a)\r\n//             addFeature(features, state)\r\n//             return\r\n//           }\r\n//         }\r\n//       } else if (element === 'N') {\r\n//         // Imidazole/pyrrole or similar\r\n//         if (a.bondToElementCount('C') === 2) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//       } else if (element === 'S') {\r\n//         // Thiolate\r\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Sulfur in Iron sulfur cluster\r\n//         const ironCount = a.bondToElementCount('FE')\r\n//         if (ironCount > 0 && ironCount === a.bondCount) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\nexport function addMetals(structure, features) {\r\n    structure.eachAtom(a => {\r\n        if (a.isTransitionMetal() || a.number === 30 /* ZN */ || a.number === 48 /* CD */) {\r\n            const state = createFeatureState(12 /* TransitionMetal */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n        else if (IonicTypeMetals.includes(a.number)) {\r\n            const state = createFeatureState(13 /* IonicTypeMetal */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\nfunction isMetalComplex(ti, tj) {\r\n    if (ti === 12 /* TransitionMetal */) {\r\n        return (tj === 11 /* DativeBondPartner */ ||\r\n            tj === 12 /* TransitionMetal */);\r\n    }\r\n    else if (ti === 13 /* IonicTypeMetal */) {\r\n        return (tj === 10 /* IonicTypePartner */);\r\n    }\r\n}\r\n/**\r\n * Metal complexes of metals and appropriate groups in protein and ligand, including water\r\n */\r\nexport function addMetalComplexation(structure, contacts, params = {}) {\r\n    const maxMetalDist = defaults(params.maxMetalDist, ContactDefaultParams.maxMetalDist);\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const { features, spatialHash, contactStore, featureSet } = contacts;\r\n    const { types, centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const n = types.length;\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    for (let i = 0; i < n; ++i) {\r\n        spatialHash.eachWithin(x[i], y[i], z[i], maxMetalDist, (j, dSq) => {\r\n            if (j <= i)\r\n                return;\r\n            ap1.index = atomSets[i][0];\r\n            ap2.index = atomSets[j][0];\r\n            if (invalidAtomContact(ap1, ap2, masterIdx))\r\n                return;\r\n            const m1 = ap1.isMetal();\r\n            const m2 = ap2.isMetal();\r\n            if (!m1 && !m2)\r\n                return;\r\n            const [ti, tj] = m1 ? [types[i], types[j]] : [types[j], types[i]];\r\n            if (isMetalComplex(ti, tj)) {\r\n                featureSet.setBits(i, j);\r\n                contactStore.addContact(i, j, 7 /* MetalCoordination */);\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=metal-binding.js.map","/**\r\n * @file Hydrophobic\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { defaults } from '../../utils';\r\nimport { addAtom, addFeature, createFeatureState, } from './features';\r\nimport { ContactDefaultParams, invalidAtomContact } from './contact';\r\n/**\r\n * Hydrophobic carbon (only bonded to carbon or hydrogen); fluorine\r\n */\r\nexport function addHydrophobic(structure, features) {\r\n    structure.eachAtom(a => {\r\n        const state = createFeatureState(8 /* Hydrophobic */);\r\n        let flag = false;\r\n        if (a.number === 6 /* C */) {\r\n            flag = true;\r\n            a.eachBondedAtom(ap => {\r\n                const an = ap.number;\r\n                if (an !== 6 /* C */ && an !== 1 /* H */)\r\n                    flag = false;\r\n            });\r\n        }\r\n        else if (a.number === 9 /* F */) {\r\n            flag = true;\r\n        }\r\n        if (flag) {\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\nfunction isHydrophobicContact(ti, tj) {\r\n    return ti === 8 /* Hydrophobic */ && tj === 8 /* Hydrophobic */;\r\n}\r\n/**\r\n * All hydrophobic contacts\r\n */\r\nexport function addHydrophobicContacts(structure, contacts, params = {}) {\r\n    const maxHydrophobicDist = defaults(params.maxHydrophobicDist, ContactDefaultParams.maxHydrophobicDist);\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const { features, spatialHash, contactStore, featureSet } = contacts;\r\n    const { types, centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const n = types.length;\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    for (let i = 0; i < n; ++i) {\r\n        spatialHash.eachWithin(x[i], y[i], z[i], maxHydrophobicDist, (j, dSq) => {\r\n            if (j <= i)\r\n                return;\r\n            ap1.index = atomSets[i][0];\r\n            ap2.index = atomSets[j][0];\r\n            if (invalidAtomContact(ap1, ap2, masterIdx))\r\n                return;\r\n            if (ap1.number === 9 /* F */ && ap2.number === 9 /* F */)\r\n                return;\r\n            if (ap1.connectedTo(ap2))\r\n                return;\r\n            if (isHydrophobicContact(types[i], types[j])) {\r\n                featureSet.setBits(i, j);\r\n                contactStore.addContact(i, j, 6 /* Hydrophobic */);\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=hydrophobic.js.map","/**\r\n * @file Halogen Bonds\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\nimport { defaults } from '../../utils';\r\nimport { degToRad } from '../../math/math-utils';\r\nimport { addAtom, addFeature, createFeatureState, } from './features';\r\nimport { ContactDefaultParams, invalidAtomContact } from './contact';\r\nimport { calcAngles } from '../geometry';\r\nconst halBondElements = [17, 35, 53, 85];\r\n/**\r\n * Halogen bond donors (X-C, with X one of Cl, Br, I or At) not F!\r\n */\r\nexport function addHalogenDonors(structure, features) {\r\n    structure.eachAtom(a => {\r\n        if (halBondElements.includes(a.number) && a.bondToElementCount(6 /* C */) === 1) {\r\n            const state = createFeatureState(6 /* HalogenDonor */);\r\n            addAtom(state, a);\r\n            addFeature(features, state);\r\n        }\r\n    });\r\n}\r\nconst X = [7 /* N */, 8 /* O */, 16 /* S */];\r\nconst Y = [6 /* C */, 7 /* N */, 15 /* P */, 16 /* S */];\r\n/**\r\n * Halogen bond acceptors (Y-{O|N|S}, with Y=C,P,N,S)\r\n */\r\nexport function addHalogenAcceptors(structure, features) {\r\n    structure.eachAtom(a => {\r\n        if (X.includes(a.number)) {\r\n            let flag = false;\r\n            a.eachBondedAtom(ba => {\r\n                if (Y.includes(ba.number)) {\r\n                    flag = true;\r\n                }\r\n            });\r\n            if (flag) {\r\n                const state = createFeatureState(7 /* HalogenAcceptor */);\r\n                addAtom(state, a);\r\n                addFeature(features, state);\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction isHalogenBond(ti, tj) {\r\n    return ((ti === 7 /* HalogenAcceptor */ && tj === 6 /* HalogenDonor */) ||\r\n        (ti === 6 /* HalogenDonor */ && tj === 7 /* HalogenAcceptor */));\r\n}\r\n// http://www.pnas.org/content/101/48/16789.full\r\nconst OptimalHalogenAngle = degToRad(180); // adjusted from 165 to account for spherical statistics\r\nconst OptimalAcceptorAngle = degToRad(120);\r\n/**\r\n * All pairs of halogen donor and acceptor atoms\r\n */\r\nexport function addHalogenBonds(structure, contacts, params = {}) {\r\n    const maxHalogenBondDist = defaults(params.maxHalogenBondDist, ContactDefaultParams.maxHalogenBondDist);\r\n    const maxHalogenBondAngle = degToRad(defaults(params.maxHalogenBondAngle, ContactDefaultParams.maxHalogenBondAngle));\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const { features, spatialHash, contactStore, featureSet } = contacts;\r\n    const { types, centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const n = types.length;\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    for (let i = 0; i < n; ++i) {\r\n        spatialHash.eachWithin(x[i], y[i], z[i], maxHalogenBondDist, (j, dSq) => {\r\n            if (j <= i)\r\n                return;\r\n            ap1.index = atomSets[i][0];\r\n            ap2.index = atomSets[j][0];\r\n            if (invalidAtomContact(ap1, ap2, masterIdx))\r\n                return;\r\n            if (!isHalogenBond(types[i], types[j]))\r\n                return;\r\n            const [halogen, acceptor] = types[i] === 6 /* HalogenDonor */ ? [ap1, ap2] : [ap2, ap1];\r\n            const halogenAngles = calcAngles(halogen, acceptor);\r\n            // Singly bonded halogen only (not bromide ion for example)\r\n            if (halogenAngles.length !== 1)\r\n                return;\r\n            if (OptimalHalogenAngle - halogenAngles[0] > maxHalogenBondAngle)\r\n                return;\r\n            const acceptorAngles = calcAngles(acceptor, halogen);\r\n            // Angle must be defined. Excludes water as acceptor. Debatable\r\n            if (acceptorAngles.length === 0)\r\n                return;\r\n            if (acceptorAngles.some(acceptorAngle => {\r\n                return (OptimalAcceptorAngle - acceptorAngle > maxHalogenBondAngle);\r\n            }))\r\n                return;\r\n            featureSet.setBits(i, j);\r\n            contactStore.addContact(i, j, 5 /* HalogenBond */);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=halogen-bonds.js.map","/**\r\n * @file Refine Contacts\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { Debug, Log } from '../../globals';\r\nimport { defaults } from '../../utils';\r\nimport { ContactDefaultParams, isMasterContact } from './contact';\r\n// also allows intra-residue contacts\r\nexport function invalidAtomContact(ap1, ap2, masterIdx) {\r\n    return !isMasterContact(ap1, ap2, masterIdx) && (ap1.modelIndex !== ap2.modelIndex ||\r\n        (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc));\r\n}\r\nexport function refineLineOfSight(structure, contacts, params = {}) {\r\n    if (Debug)\r\n        Log.time('refineLineOfSight');\r\n    const lineOfSightDistFactor = defaults(params.lineOfSightDistFactor, ContactDefaultParams.lineOfSightDistFactor);\r\n    const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex);\r\n    const spatialHash = structure.spatialHash;\r\n    const { contactSet, contactStore, features } = contacts;\r\n    const { index1, index2 } = contactStore;\r\n    const { centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const ac1 = structure.getAtomProxy();\r\n    const ac2 = structure.getAtomProxy();\r\n    const aw = structure.getAtomProxy();\r\n    const c1 = new Vector3();\r\n    const c2 = new Vector3();\r\n    const lineOfSightDist = 3 * lineOfSightDistFactor;\r\n    const lineOfSightDistFactorSq = lineOfSightDistFactor * lineOfSightDistFactor;\r\n    contactSet.forEach(i => {\r\n        c1.set(x[index1[i]], y[index1[i]], z[index1[i]]);\r\n        c2.set(x[index2[i]], y[index2[i]], z[index2[i]]);\r\n        const cx = (c1.x + c2.x) / 2;\r\n        const cy = (c1.y + c2.y) / 2;\r\n        const cz = (c1.z + c2.z) / 2;\r\n        const as1 = atomSets[index1[i]];\r\n        const as2 = atomSets[index2[i]];\r\n        ac1.index = as1[0];\r\n        ac2.index = as2[0];\r\n        spatialHash.eachWithin(cx, cy, cz, lineOfSightDist, (j, dSq) => {\r\n            aw.index = j;\r\n            if (aw.number !== 1 /* H */ &&\r\n                (aw.vdw * aw.vdw * lineOfSightDistFactorSq) > dSq &&\r\n                !invalidAtomContact(ac1, aw, masterIdx) &&\r\n                !invalidAtomContact(ac2, aw, masterIdx) &&\r\n                !as1.includes(j) &&\r\n                !as2.includes(j) &&\r\n                // to ignore atoms in the center of functional groups\r\n                c1.distanceToSquared(aw) > 1 &&\r\n                c2.distanceToSquared(aw) > 1) {\r\n                contactSet.clear(i);\r\n                if (Debug)\r\n                    Log.log('removing', ac1.qualifiedName(), ac2.qualifiedName(), 'because', aw.qualifiedName());\r\n            }\r\n        });\r\n    });\r\n    if (Debug)\r\n        Log.timeEnd('refineLineOfSight');\r\n}\r\n/**\r\n * For atoms interacting with several atoms in the same residue\r\n * only the one with the closest distance is kept.\r\n */\r\nexport function refineHydrophobicContacts(structure, contacts) {\r\n    const { contactSet, contactStore, features } = contacts;\r\n    const { type, index1, index2 } = contactStore;\r\n    const { atomSets } = features;\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    const residueContactDict = {};\r\n    /* keep only closest contact between residues */\r\n    const handleResidueContact = function (dist, i, key) {\r\n        const [minDist, minIndex] = residueContactDict[key] || [Infinity, -1];\r\n        if (dist < minDist) {\r\n            if (minIndex !== -1)\r\n                contactSet.clear(minIndex);\r\n            residueContactDict[key] = [dist, i];\r\n        }\r\n        else {\r\n            contactSet.clear(i);\r\n        }\r\n    };\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 6 /* Hydrophobic */)\r\n            return;\r\n        ap1.index = atomSets[index1[i]][0];\r\n        ap2.index = atomSets[index2[i]][0];\r\n        const dist = ap1.distanceTo(ap2);\r\n        handleResidueContact(dist, i, `${ap1.index}|${ap2.residueIndex}`);\r\n        handleResidueContact(dist, i, `${ap2.index}|${ap1.residueIndex}`);\r\n    });\r\n}\r\nfunction isHydrogenBondType(type) {\r\n    return (type === 4 /* HydrogenBond */ ||\r\n        type === 9 /* WaterHydrogenBond */ ||\r\n        type === 10 /* BackboneHydrogenBond */);\r\n}\r\n/**\r\n * Remove weak hydrogen bonds when the acceptor is involved in\r\n * a normal/strong hydrogen bond\r\n */\r\nexport function refineWeakHydrogenBonds(structure, contacts) {\r\n    const { contactSet, contactStore, features, adjacencyList } = contacts;\r\n    const { type, index1, index2 } = contactStore;\r\n    const { types } = features;\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 8 /* WeakHydrogenBond */)\r\n            return;\r\n        let accFeat;\r\n        if (types[index1[i]] === 9 /* WeakHydrogenDonor */) {\r\n            accFeat = index2[i];\r\n        }\r\n        else {\r\n            accFeat = index1[i];\r\n        }\r\n        const n = adjacencyList.countArray[accFeat];\r\n        const offset = adjacencyList.offsetArray[accFeat];\r\n        for (let j = 0; j < n; ++j) {\r\n            const ci = adjacencyList.indexArray[offset + j];\r\n            if (isHydrogenBondType(type[ci])) {\r\n                contactSet.clear(i);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Remove hydrogen bonds between groups that also form\r\n * a salt bridge between each other\r\n */\r\nexport function refineSaltBridges(structure, contacts) {\r\n    const { contactSet, contactStore, features } = contacts;\r\n    const { type, index1, index2 } = contactStore;\r\n    const { atomSets } = features;\r\n    const ionicInteractionDict = {};\r\n    const add = function (idx, i) {\r\n        if (!ionicInteractionDict[idx])\r\n            ionicInteractionDict[idx] = [];\r\n        ionicInteractionDict[idx].push(i);\r\n    };\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 1 /* IonicInteraction */)\r\n            return;\r\n        atomSets[index1[i]].forEach(idx => add(idx, i));\r\n        atomSets[index2[i]].forEach(idx => add(idx, i));\r\n    });\r\n    contactSet.forEach(i => {\r\n        if (!isHydrogenBondType(type[i]))\r\n            return;\r\n        const iil1 = ionicInteractionDict[atomSets[index1[i]][0]];\r\n        const iil2 = ionicInteractionDict[atomSets[index2[i]][0]];\r\n        if (!iil1 || !iil2)\r\n            return;\r\n        const n = iil1.length;\r\n        for (let j = 0; j < n; ++j) {\r\n            if (iil2.includes(iil1[j])) {\r\n                contactSet.clear(i);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Remove hydrophobic and cation-pi interactions between groups that also form\r\n * a pi-stacking interaction between each other\r\n */\r\nexport function refinePiStacking(structure, contacts) {\r\n    const { contactSet, contactStore, features } = contacts;\r\n    const { type, index1, index2 } = contactStore;\r\n    const { atomSets } = features;\r\n    const piStackingDict = {};\r\n    const add = function (idx, i) {\r\n        if (!piStackingDict[idx])\r\n            piStackingDict[idx] = [];\r\n        piStackingDict[idx].push(i);\r\n    };\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 3 /* PiStacking */)\r\n            return;\r\n        atomSets[index1[i]].forEach(idx => add(idx, i));\r\n        atomSets[index2[i]].forEach(idx => add(idx, i));\r\n    });\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 6 /* Hydrophobic */ &&\r\n            type[i] !== 2 /* CationPi */)\r\n            return;\r\n        const pil1 = piStackingDict[atomSets[index1[i]][0]];\r\n        const pil2 = piStackingDict[atomSets[index2[i]][0]];\r\n        if (!pil1 || !pil2)\r\n            return;\r\n        const n = pil1.length;\r\n        for (let j = 0; j < n; ++j) {\r\n            if (pil2.includes(pil1[j])) {\r\n                contactSet.clear(i);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Remove ionic interactions between groups that also form\r\n * a metal coordination between each other\r\n */\r\nexport function refineMetalCoordination(structure, contacts) {\r\n    const { contactSet, contactStore, features } = contacts;\r\n    const { type, index1, index2 } = contactStore;\r\n    const { atomSets } = features;\r\n    const ionicInteractionDict = {};\r\n    const add = function (idx, i) {\r\n        if (!ionicInteractionDict[idx])\r\n            ionicInteractionDict[idx] = [];\r\n        ionicInteractionDict[idx].push(i);\r\n    };\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 1 /* IonicInteraction */)\r\n            return;\r\n        atomSets[index1[i]].forEach(idx => add(idx, i));\r\n        atomSets[index2[i]].forEach(idx => add(idx, i));\r\n    });\r\n    contactSet.forEach(i => {\r\n        if (type[i] !== 7 /* MetalCoordination */)\r\n            return;\r\n        const iil1 = ionicInteractionDict[atomSets[index1[i]][0]];\r\n        const iil2 = ionicInteractionDict[atomSets[index2[i]][0]];\r\n        if (!iil1 || !iil2)\r\n            return;\r\n        const n = iil1.length;\r\n        for (let j = 0; j < n; ++j) {\r\n            if (iil2.includes(iil1[j])) {\r\n                contactSet.clear(iil1[j]);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n// TODO: refactor refineSaltBridges, refinePiStacking and refineMetalCoordination to be DRY\r\n//# sourceMappingURL=refine-contacts.js.map","/**\r\n * @file Contact\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Color } from 'three';\r\nimport { Debug, Log } from '../../globals';\r\nimport { createParams } from '../../utils';\r\nimport SpatialHash from '../../geometry/spatial-hash';\r\nimport { calculateCenterArray, calculateDirectionArray, uniformArray } from '../../math/array-utils';\r\nimport ContactStore from '../../store/contact-store';\r\nimport BitArray from '../../utils/bitarray';\r\nimport Selection from '../../selection/selection';\r\nimport { ContactPicker } from '../../utils/picker';\r\nimport { createAdjacencyList } from '../../utils/adjacency-list';\r\nimport { createFeatures } from './features';\r\nimport { addAromaticRings, addNegativeCharges, addPositiveCharges, addChargedContacts } from './charged';\r\nimport { addHydrogenAcceptors, addHydrogenDonors, addHydrogenBonds, addWeakHydrogenDonors } from './hydrogen-bonds';\r\nimport { addMetalBinding, addMetals, addMetalComplexation } from './metal-binding';\r\nimport { addHydrophobic, addHydrophobicContacts } from './hydrophobic';\r\nimport { addHalogenAcceptors, addHalogenDonors, addHalogenBonds } from './halogen-bonds';\r\nimport { refineLineOfSight, refineHydrophobicContacts, refineSaltBridges, refinePiStacking, refineMetalCoordination } from './refine-contacts';\r\nexport const ContactDefaultParams = {\r\n    maxHydrophobicDist: 4.0,\r\n    maxHbondDist: 3.5,\r\n    maxHbondSulfurDist: 4.1,\r\n    maxHbondAccAngle: 45,\r\n    maxHbondDonAngle: 45,\r\n    maxHbondAccPlaneAngle: 90,\r\n    maxHbondDonPlaneAngle: 30,\r\n    maxPiStackingDist: 5.5,\r\n    maxPiStackingOffset: 2.0,\r\n    maxPiStackingAngle: 30,\r\n    maxCationPiDist: 6.0,\r\n    maxCationPiOffset: 2.0,\r\n    maxIonicDist: 5.0,\r\n    maxHalogenBondDist: 4.0,\r\n    maxHalogenBondAngle: 30,\r\n    maxMetalDist: 3.0,\r\n    refineSaltBridges: true,\r\n    masterModelIndex: -1,\r\n    lineOfSightDistFactor: 1.0\r\n};\r\nexport function isMasterContact(ap1, ap2, masterIdx) {\r\n    return ((ap1.modelIndex === masterIdx && ap2.modelIndex !== masterIdx) ||\r\n        (ap2.modelIndex === masterIdx && ap1.modelIndex !== masterIdx));\r\n}\r\nexport function invalidAtomContact(ap1, ap2, masterIdx) {\r\n    return !isMasterContact(ap1, ap2, masterIdx) && (ap1.modelIndex !== ap2.modelIndex ||\r\n        ap1.residueIndex === ap2.residueIndex ||\r\n        (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc));\r\n}\r\nexport function createContacts(features) {\r\n    const { types, centers } = features;\r\n    const spatialHash = new SpatialHash(centers);\r\n    const contactStore = new ContactStore();\r\n    const featureSet = new BitArray(types.length, false);\r\n    return { features, spatialHash, contactStore, featureSet };\r\n}\r\nexport function createFrozenContacts(contacts) {\r\n    const { index1, index2, count } = contacts.contactStore;\r\n    const adjacencyList = createAdjacencyList({\r\n        nodeArray1: index1,\r\n        nodeArray2: index2,\r\n        edgeCount: count,\r\n        nodeCount: contacts.featureSet.length\r\n    });\r\n    const contactSet = new BitArray(contacts.contactStore.count, true);\r\n    return Object.assign({ adjacencyList, contactSet }, contacts);\r\n}\r\nfunction calculateFeatures(structure) {\r\n    const features = createFeatures();\r\n    if (Debug)\r\n        Log.time('calculateFeatures');\r\n    addPositiveCharges(structure, features);\r\n    addNegativeCharges(structure, features);\r\n    addAromaticRings(structure, features);\r\n    addHydrogenAcceptors(structure, features);\r\n    addHydrogenDonors(structure, features);\r\n    addWeakHydrogenDonors(structure, features);\r\n    addMetalBinding(structure, features);\r\n    addMetals(structure, features);\r\n    addHydrophobic(structure, features);\r\n    addHalogenAcceptors(structure, features);\r\n    addHalogenDonors(structure, features);\r\n    if (Debug)\r\n        Log.timeEnd('calculateFeatures');\r\n    return features;\r\n}\r\nexport function calculateContacts(structure, params = ContactDefaultParams) {\r\n    const features = calculateFeatures(structure);\r\n    const contacts = createContacts(features);\r\n    if (Debug)\r\n        Log.time('calculateContacts');\r\n    addChargedContacts(structure, contacts, params);\r\n    addHydrogenBonds(structure, contacts, params);\r\n    addMetalComplexation(structure, contacts, params);\r\n    addHydrophobicContacts(structure, contacts, params);\r\n    addHalogenBonds(structure, contacts, params);\r\n    const frozenContacts = createFrozenContacts(contacts);\r\n    refineLineOfSight(structure, frozenContacts, params);\r\n    refineHydrophobicContacts(structure, frozenContacts);\r\n    if (params.refineSaltBridges)\r\n        refineSaltBridges(structure, frozenContacts);\r\n    refinePiStacking(structure, frozenContacts);\r\n    refineMetalCoordination(structure, frozenContacts);\r\n    if (Debug)\r\n        Log.timeEnd('calculateContacts');\r\n    return frozenContacts;\r\n}\r\nexport function contactTypeName(type) {\r\n    switch (type) {\r\n        case 4 /* HydrogenBond */:\r\n        case 9 /* WaterHydrogenBond */:\r\n        case 10 /* BackboneHydrogenBond */:\r\n            return 'hydrogen bond';\r\n        case 6 /* Hydrophobic */:\r\n            return 'hydrophobic contact';\r\n        case 5 /* HalogenBond */:\r\n            return 'halogen bond';\r\n        case 1 /* IonicInteraction */:\r\n            return 'ionic interaction';\r\n        case 7 /* MetalCoordination */:\r\n            return 'metal coordination';\r\n        case 2 /* CationPi */:\r\n            return 'cation-pi interaction';\r\n        case 3 /* PiStacking */:\r\n            return 'pi-pi stacking';\r\n        case 8 /* WeakHydrogenBond */:\r\n            return 'weak hydrogen bond';\r\n        default:\r\n            return 'unknown contact';\r\n    }\r\n}\r\nexport const ContactDataDefaultParams = {\r\n    hydrogenBond: true,\r\n    hydrophobic: true,\r\n    halogenBond: true,\r\n    ionicInteraction: true,\r\n    metalCoordination: true,\r\n    cationPi: true,\r\n    piStacking: true,\r\n    weakHydrogenBond: true,\r\n    waterHydrogenBond: true,\r\n    backboneHydrogenBond: true,\r\n    radius: 1,\r\n    filterSele: ''\r\n};\r\nexport const ContactLabelDefaultParams = {\r\n    unit: '',\r\n    size: 2.0\r\n};\r\nconst tmpColor = new Color();\r\nfunction contactColor(type) {\r\n    switch (type) {\r\n        case 4 /* HydrogenBond */:\r\n        case 9 /* WaterHydrogenBond */:\r\n        case 10 /* BackboneHydrogenBond */:\r\n            return tmpColor.setHex(0x2B83BA).toArray();\r\n        case 6 /* Hydrophobic */:\r\n            return tmpColor.setHex(0x808080).toArray();\r\n        case 5 /* HalogenBond */:\r\n            return tmpColor.setHex(0x40FFBF).toArray();\r\n        case 1 /* IonicInteraction */:\r\n            return tmpColor.setHex(0xF0C814).toArray();\r\n        case 7 /* MetalCoordination */:\r\n            return tmpColor.setHex(0x8C4099).toArray();\r\n        case 2 /* CationPi */:\r\n            return tmpColor.setHex(0xFF8000).toArray();\r\n        case 3 /* PiStacking */:\r\n            return tmpColor.setHex(0x8CB366).toArray();\r\n        case 8 /* WeakHydrogenBond */:\r\n            return tmpColor.setHex(0xC5DDEC).toArray();\r\n        default:\r\n            return tmpColor.setHex(0xCCCCCC).toArray();\r\n    }\r\n}\r\nexport function getContactData(contacts, structure, params) {\r\n    const p = createParams(params, ContactDataDefaultParams);\r\n    const types = [];\r\n    if (p.hydrogenBond)\r\n        types.push(4 /* HydrogenBond */);\r\n    if (p.hydrophobic)\r\n        types.push(6 /* Hydrophobic */);\r\n    if (p.halogenBond)\r\n        types.push(5 /* HalogenBond */);\r\n    if (p.ionicInteraction)\r\n        types.push(1 /* IonicInteraction */);\r\n    if (p.metalCoordination)\r\n        types.push(7 /* MetalCoordination */);\r\n    if (p.cationPi)\r\n        types.push(2 /* CationPi */);\r\n    if (p.piStacking)\r\n        types.push(3 /* PiStacking */);\r\n    if (p.weakHydrogenBond)\r\n        types.push(8 /* WeakHydrogenBond */);\r\n    if (p.waterHydrogenBond)\r\n        types.push(9 /* WaterHydrogenBond */);\r\n    if (p.backboneHydrogenBond)\r\n        types.push(10 /* BackboneHydrogenBond */);\r\n    const { features, contactSet, contactStore } = contacts;\r\n    const { centers, atomSets } = features;\r\n    const { x, y, z } = centers;\r\n    const { index1, index2, type } = contactStore;\r\n    const position1 = [];\r\n    const position2 = [];\r\n    const color = [];\r\n    const radius = [];\r\n    const picking = [];\r\n    let filterSet;\r\n    if (p.filterSele) {\r\n        if (Array.isArray(p.filterSele)) {\r\n            filterSet = p.filterSele.map(sele => {\r\n                return structure.getAtomSet(new Selection(sele));\r\n            });\r\n        }\r\n        else {\r\n            filterSet = structure.getAtomSet(new Selection(p.filterSele));\r\n        }\r\n    }\r\n    contactSet.forEach(i => {\r\n        const ti = type[i];\r\n        if (!types.includes(ti))\r\n            return;\r\n        if (filterSet) {\r\n            const idx1 = atomSets[index1[i]][0];\r\n            const idx2 = atomSets[index2[i]][0];\r\n            if (Array.isArray(filterSet)) {\r\n                if (!(filterSet[0].isSet(idx1) && filterSet[1].isSet(idx2) || (filterSet[1].isSet(idx1) && filterSet[0].isSet(idx2))))\r\n                    return;\r\n            }\r\n            else {\r\n                if (!filterSet.isSet(idx1) && !filterSet.isSet(idx2))\r\n                    return;\r\n            }\r\n        }\r\n        const k = index1[i];\r\n        const l = index2[i];\r\n        position1.push(x[k], y[k], z[k]);\r\n        position2.push(x[l], y[l], z[l]);\r\n        color.push(...contactColor(ti));\r\n        radius.push(p.radius);\r\n        picking.push(i);\r\n    });\r\n    return {\r\n        position1: new Float32Array(position1),\r\n        position2: new Float32Array(position2),\r\n        color: new Float32Array(color),\r\n        color2: new Float32Array(color),\r\n        radius: new Float32Array(radius),\r\n        picking: new ContactPicker(picking, contacts, structure)\r\n    };\r\n}\r\nexport function getLabelData(contactData, params) {\r\n    const position = calculateCenterArray(contactData.position1, contactData.position2);\r\n    const text = [];\r\n    const direction = calculateDirectionArray(contactData.position1, contactData.position2);\r\n    const n = direction.length / 3;\r\n    for (let i = 0; i < n; i++) {\r\n        const j = 3 * i;\r\n        const d = Math.sqrt(Math.pow(direction[j], 2) + Math.pow(direction[j + 1], 2) + Math.pow(direction[j + 2], 2));\r\n        switch (params.unit) {\r\n            case 'angstrom':\r\n                text[i] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B);\r\n                break;\r\n            case 'nm':\r\n                text[i] = (d / 10).toFixed(2) + ' nm';\r\n                break;\r\n            default:\r\n                text[i] = d.toFixed(2);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        position,\r\n        size: uniformArray(position.length / 3, params.size),\r\n        color: contactData.color,\r\n        text\r\n    };\r\n}\r\n//# sourceMappingURL=contact.js.map","/**\r\n * @file Picker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { PickerRegistry } from '../globals';\r\nimport { calculateMeanVector3 } from '../math/vector-utils';\r\nimport Selection from '../selection/selection';\r\nimport { ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive, EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive } from '../geometry/primitive';\r\nimport { contactTypeName } from '../chemistry/interactions/contact';\r\n/**\r\n * Picker class\r\n * @interface\r\n */\r\nclass Picker {\r\n    /**\r\n     * @param  {Array|TypedArray} [array] - mapping\r\n     */\r\n    constructor(array) {\r\n        this.array = array;\r\n    }\r\n    get type() { return ''; }\r\n    get data() { return {}; }\r\n    /**\r\n     * Get the index for the given picking id\r\n     * @param  {Integer} pid - the picking id\r\n     * @return {Integer} the index\r\n     */\r\n    getIndex(pid) {\r\n        return this.array ? this.array[pid] : pid;\r\n    }\r\n    /**\r\n     * Get object data\r\n     * @abstract\r\n     * @param  {Integer} pid - the picking id\r\n     * @return {Object} the object data\r\n     */\r\n    getObject(pid) {\r\n        return {};\r\n    }\r\n    _applyTransformations(vector, instance, component) {\r\n        if (instance) {\r\n            vector.applyMatrix4(instance.matrix);\r\n        }\r\n        if (component) {\r\n            vector.applyMatrix4(component.matrix);\r\n        }\r\n        return vector;\r\n    }\r\n    /**\r\n     * Get object position\r\n     * @abstract\r\n     * @param  {Integer} pid - the picking id\r\n     * @return {Vector3} the object position\r\n     */\r\n    _getPosition(pid) {\r\n        return new Vector3();\r\n    }\r\n    /**\r\n     * Get position for the given picking id\r\n     * @param  {Integer} pid - the picking id\r\n     * @param  {Object} instance - the instance that should be applied\r\n     * @param  {Component} component - the component of the picked object\r\n     * @return {Vector3} the position\r\n     */\r\n    getPosition(pid, instance, component) {\r\n        return this._applyTransformations(this._getPosition(pid), instance, component);\r\n    }\r\n}\r\n/**\r\n * Shape picker class\r\n * @interface\r\n */\r\nclass ShapePicker extends Picker {\r\n    /**\r\n     * @param  {Shape} shape - shape object\r\n     */\r\n    constructor(shape) {\r\n        super();\r\n        this.shape = shape;\r\n    }\r\n    get primitive() { return; }\r\n    get data() { return this.shape; }\r\n    get type() { return this.primitive.type; }\r\n    getObject(pid) {\r\n        return this.primitive.objectFromShape(this.shape, this.getIndex(pid));\r\n    }\r\n    _getPosition(pid) {\r\n        return this.primitive.positionFromShape(this.shape, this.getIndex(pid));\r\n    }\r\n}\r\n//\r\nclass CylinderPicker extends ShapePicker {\r\n    get primitive() { return CylinderPrimitive; }\r\n}\r\nclass ArrowPicker extends ShapePicker {\r\n    get primitive() { return ArrowPrimitive; }\r\n}\r\nclass AtomPicker extends Picker {\r\n    constructor(array, structure) {\r\n        super(array);\r\n        this.structure = structure;\r\n    }\r\n    get type() { return 'atom'; }\r\n    get data() { return this.structure; }\r\n    getObject(pid) {\r\n        return this.structure.getAtomProxy(this.getIndex(pid));\r\n    }\r\n    _getPosition(pid) {\r\n        return new Vector3().copy(this.getObject(pid));\r\n    }\r\n}\r\nclass AxesPicker extends Picker {\r\n    constructor(axes) {\r\n        super();\r\n        this.axes = axes;\r\n    }\r\n    get type() { return 'axes'; }\r\n    get data() { return this.axes; }\r\n    getObject( /* pid */) {\r\n        return {\r\n            axes: this.axes\r\n        };\r\n    }\r\n    _getPosition( /* pid */) {\r\n        return this.axes.center.clone();\r\n    }\r\n}\r\nclass BondPicker extends Picker {\r\n    constructor(array, structure, bondStore) {\r\n        super(array);\r\n        this.structure = structure;\r\n        this.bondStore = bondStore || structure.bondStore;\r\n    }\r\n    get type() { return 'bond'; }\r\n    get data() { return this.structure; }\r\n    getObject(pid) {\r\n        const bp = this.structure.getBondProxy(this.getIndex(pid));\r\n        bp.bondStore = this.bondStore;\r\n        return bp;\r\n    }\r\n    _getPosition(pid) {\r\n        const b = this.getObject(pid);\r\n        return new Vector3()\r\n            .copy(b.atom1)\r\n            .add(b.atom2)\r\n            .multiplyScalar(0.5);\r\n    }\r\n}\r\nclass ContactPicker extends Picker {\r\n    constructor(array, contacts, structure) {\r\n        super(array);\r\n        this.contacts = contacts;\r\n        this.structure = structure;\r\n    }\r\n    get type() { return 'contact'; }\r\n    get data() { return this.contacts; }\r\n    getObject(pid) {\r\n        const idx = this.getIndex(pid);\r\n        const { features, contactStore } = this.contacts;\r\n        const { centers, atomSets } = features;\r\n        const { x, y, z } = centers;\r\n        const { index1, index2, type } = contactStore;\r\n        const k = index1[idx];\r\n        const l = index2[idx];\r\n        return {\r\n            center1: new Vector3(x[k], y[k], z[k]),\r\n            center2: new Vector3(x[l], y[l], z[l]),\r\n            atom1: this.structure.getAtomProxy(atomSets[k][0]),\r\n            atom2: this.structure.getAtomProxy(atomSets[l][0]),\r\n            type: contactTypeName(type[idx])\r\n        };\r\n    }\r\n    _getPosition(pid) {\r\n        const { center1, center2 } = this.getObject(pid);\r\n        return new Vector3().addVectors(center1, center2).multiplyScalar(0.5);\r\n    }\r\n}\r\nclass ConePicker extends ShapePicker {\r\n    get primitive() { return ConePrimitive; }\r\n}\r\nclass ClashPicker extends Picker {\r\n    constructor(array, validation, structure) {\r\n        super(array);\r\n        this.validation = validation;\r\n        this.structure = structure;\r\n    }\r\n    get type() { return 'clash'; }\r\n    get data() { return this.validation; }\r\n    getObject(pid) {\r\n        const val = this.validation;\r\n        const idx = this.getIndex(pid);\r\n        return {\r\n            validation: val,\r\n            index: idx,\r\n            clash: val.clashArray[idx]\r\n        };\r\n    }\r\n    _getAtomProxyFromSele(sele) {\r\n        const selection = new Selection(sele);\r\n        const idx = this.structure.getAtomIndices(selection)[0];\r\n        return this.structure.getAtomProxy(idx);\r\n    }\r\n    _getPosition(pid) {\r\n        const clash = this.getObject(pid).clash;\r\n        const ap1 = this._getAtomProxyFromSele(clash.sele1);\r\n        const ap2 = this._getAtomProxyFromSele(clash.sele2);\r\n        return new Vector3().copy(ap1).add(ap2).multiplyScalar(0.5);\r\n    }\r\n}\r\nclass DistancePicker extends BondPicker {\r\n    get type() { return 'distance'; }\r\n}\r\nclass EllipsoidPicker extends ShapePicker {\r\n    get primitive() { return EllipsoidPrimitive; }\r\n}\r\nclass OctahedronPicker extends ShapePicker {\r\n    get primitive() { return OctahedronPrimitive; }\r\n}\r\nclass BoxPicker extends ShapePicker {\r\n    get primitive() { return BoxPrimitive; }\r\n}\r\nclass IgnorePicker extends Picker {\r\n    get type() { return 'ignore'; }\r\n}\r\nclass MeshPicker extends ShapePicker {\r\n    constructor(shape, mesh) {\r\n        super(shape);\r\n        this.mesh = mesh;\r\n    }\r\n    get type() { return 'mesh'; }\r\n    getObject( /* pid */) {\r\n        const m = this.mesh;\r\n        return {\r\n            shape: this.shape,\r\n            name: m.name,\r\n            serial: m.serial\r\n        };\r\n    }\r\n    _getPosition( /* pid */) {\r\n        if (!this.__position) {\r\n            this.__position = calculateMeanVector3(this.mesh.position);\r\n        }\r\n        return this.__position;\r\n    }\r\n}\r\nclass SpherePicker extends ShapePicker {\r\n    get primitive() { return SpherePrimitive; }\r\n}\r\nclass SurfacePicker extends Picker {\r\n    constructor(array, surface) {\r\n        super(array);\r\n        this.surface = surface;\r\n    }\r\n    get type() { return 'surface'; }\r\n    get data() { return this.surface; }\r\n    getObject(pid) {\r\n        return {\r\n            surface: this.surface,\r\n            index: this.getIndex(pid)\r\n        };\r\n    }\r\n    _getPosition( /* pid */) {\r\n        return this.surface.center.clone();\r\n    }\r\n}\r\nclass TetrahedronPicker extends ShapePicker {\r\n    get primitive() { return TetrahedronPrimitive; }\r\n}\r\nclass TorusPicker extends ShapePicker {\r\n    get primitive() { return TorusPrimitive; }\r\n}\r\nclass UnitcellPicker extends Picker {\r\n    constructor(unitcell, structure) {\r\n        super();\r\n        this.unitcell = unitcell;\r\n        this.structure = structure;\r\n    }\r\n    get type() { return 'unitcell'; }\r\n    get data() { return this.unitcell; }\r\n    getObject( /* pid */) {\r\n        return {\r\n            unitcell: this.unitcell,\r\n            structure: this.structure\r\n        };\r\n    }\r\n    _getPosition( /* pid */) {\r\n        return this.unitcell.getCenter(this.structure);\r\n    }\r\n}\r\nclass UnknownPicker extends Picker {\r\n    get type() { return 'unknown'; }\r\n}\r\nclass VolumePicker extends Picker {\r\n    constructor(array, volume) {\r\n        super(array);\r\n        this.volume = volume;\r\n    }\r\n    get type() { return 'volume'; }\r\n    get data() { return this.volume; }\r\n    getObject(pid) {\r\n        const vol = this.volume;\r\n        const idx = this.getIndex(pid);\r\n        return {\r\n            volume: vol,\r\n            index: idx,\r\n            value: vol.data[idx]\r\n        };\r\n    }\r\n    _getPosition(pid) {\r\n        const dp = this.volume.position;\r\n        const idx = this.getIndex(pid);\r\n        return new Vector3(dp[idx * 3], dp[idx * 3 + 1], dp[idx * 3 + 2]);\r\n    }\r\n}\r\nclass SlicePicker extends VolumePicker {\r\n    get type() { return 'slice'; }\r\n}\r\nclass PointPicker extends ShapePicker {\r\n    get primitive() { return PointPrimitive; }\r\n}\r\nclass WidelinePicker extends ShapePicker {\r\n    get primitive() { return WidelinePrimitive; }\r\n}\r\nPickerRegistry.add('arrow', ArrowPicker);\r\nPickerRegistry.add('box', BoxPicker);\r\nPickerRegistry.add('cone', ConePicker);\r\nPickerRegistry.add('cylinder', CylinderPicker);\r\nPickerRegistry.add('ellipsoid', EllipsoidPicker);\r\nPickerRegistry.add('octahedron', OctahedronPicker);\r\nPickerRegistry.add('sphere', SpherePicker);\r\nPickerRegistry.add('tetrahedron', TetrahedronPicker);\r\nPickerRegistry.add('torus', TorusPicker);\r\nPickerRegistry.add('point', PointPicker);\r\nPickerRegistry.add('wideline', WidelinePicker);\r\nexport { Picker, ShapePicker, ArrowPicker, AtomPicker, AxesPicker, BondPicker, BoxPicker, ConePicker, ContactPicker, CylinderPicker, ClashPicker, DistancePicker, EllipsoidPicker, IgnorePicker, OctahedronPicker, MeshPicker, SlicePicker, SpherePicker, SurfacePicker, TetrahedronPicker, TorusPicker, UnitcellPicker, UnknownPicker, VolumePicker, PointPicker, WidelinePicker };\r\n//# sourceMappingURL=picker.js.map","/**\r\n * @file Marching Cubes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { getUintArray } from '../utils';\r\nfunction getEdgeTable() {\r\n    return new Uint32Array([\r\n        0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\r\n        0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\r\n        0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\r\n        0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\r\n        0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\r\n        0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\r\n        0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\r\n        0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\r\n        0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\r\n        0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\r\n        0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n        0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\r\n        0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\r\n        0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\r\n        0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\r\n        0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\r\n        0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\r\n        0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\r\n        0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\r\n        0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\r\n        0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\r\n        0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n        0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\r\n        0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\r\n        0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\r\n        0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\r\n        0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\r\n        0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\r\n        0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\r\n        0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\r\n        0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\r\n        0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\r\n    ]);\r\n}\r\nfunction getTriTable() {\r\n    return new Int32Array([\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n        8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\r\n        3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\r\n        4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n        4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\r\n        9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\r\n        10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\r\n        5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n        5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\r\n        8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\r\n        2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n        2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\r\n        11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\r\n        5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\r\n        11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\r\n        11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\r\n        2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\r\n        6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n        3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\r\n        6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n        6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\r\n        8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\r\n        7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\r\n        3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n        0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n        9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n        8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n        5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\r\n        0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\r\n        6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\r\n        10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n        1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\r\n        0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\r\n        3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n        6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\r\n        9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n        8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\r\n        3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\r\n        10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\r\n        10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n        2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\r\n        7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n        2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\r\n        1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\r\n        11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\r\n        8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\r\n        0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\r\n        7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\r\n        7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\r\n        10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\r\n        0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\r\n        7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n        6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\r\n        4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\r\n        10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\r\n        8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\r\n        1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\r\n        10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\r\n        10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\r\n        9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\r\n        7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\r\n        3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\r\n        7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\r\n        3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\r\n        6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\r\n        9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\r\n        1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\r\n        4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\r\n        7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\r\n        6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n        0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\r\n        6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\r\n        0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\r\n        11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\r\n        6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\r\n        5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\r\n        9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\r\n        1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\r\n        10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\r\n        0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\r\n        11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\r\n        9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\r\n        7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\r\n        2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n        9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\r\n        9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\r\n        1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\r\n        0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\r\n        10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\r\n        2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\r\n        0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\r\n        0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\r\n        9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\r\n        5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\r\n        5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\r\n        8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\r\n        9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n        1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\r\n        3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\r\n        4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\r\n        9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\r\n        11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n        11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\r\n        2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\r\n        9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\r\n        3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\r\n        1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\r\n        4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\r\n        0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n        9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\r\n        1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\r\n    ]);\r\n}\r\n// Triangles are constructed between points on cube edges.\r\n// allowedContours[edge1][edge1] indicates which lines from a given\r\n// triangle should be shown in line mode.\r\n// Values are bitmasks:\r\n// In loop over cubes we keep another bitmask indicating whether our current\r\n// cell is the first x-value (1),\r\n// first y-value (2) or first z-value (4) of the current loop.\r\n// We draw all lines on leading faces but only draw trailing face lines the first\r\n// time through the loop\r\n// A value of 8 below means the edge is always drawn (leading face)\r\n// E.g. the first row, lines between edge0 and other edges in the bottom\r\n// x-y plane are only drawn for the first value of z, edges in the\r\n// x-z plane are only drawn for the first value of y. No other lines\r\n// are drawn as they're redundant\r\n// The line between edge 1 and 5 is always drawn as it's on the leading edge\r\nfunction getAllowedContours() {\r\n    return [\r\n        [0, 4, 4, 4, 2, 0, 0, 0, 2, 2, 0, 0],\r\n        [4, 0, 4, 4, 0, 8, 0, 0, 0, 8, 8, 0],\r\n        [4, 4, 0, 4, 0, 0, 8, 0, 0, 0, 8, 8],\r\n        [4, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 1],\r\n        [2, 0, 0, 0, 0, 8, 8, 8, 2, 2, 0, 0],\r\n        [0, 8, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0],\r\n        [0, 0, 8, 0, 8, 8, 0, 8, 0, 0, 8, 8],\r\n        [0, 0, 0, 1, 8, 8, 8, 0, 1, 0, 0, 1],\r\n        [2, 0, 0, 1, 2, 0, 0, 1, 0, 2, 0, 1],\r\n        [2, 8, 0, 0, 2, 8, 0, 0, 2, 0, 8, 0],\r\n        [0, 8, 8, 0, 0, 8, 8, 0, 0, 8, 0, 8],\r\n        [0, 0, 8, 1, 0, 0, 8, 1, 1, 0, 8, 0]\r\n    ];\r\n}\r\nfunction MarchingCubes(field, nx, ny, nz, atomindex) {\r\n    // Based on alteredq / http://alteredqualia.com/\r\n    // port of greggman's ThreeD version of marching cubes to Three.js\r\n    // http://webglsamples.googlecode.com/hg/blob/blob.html\r\n    //\r\n    // Adapted for NGL by Alexander Rose\r\n    var isolevel = 0;\r\n    var noNormals = false;\r\n    var contour = false;\r\n    var wrap = false;\r\n    var n = nx * ny * nz;\r\n    // deltas\r\n    var yd = nx;\r\n    var zd = nx * ny;\r\n    var normalCache, vertexIndex;\r\n    var count, icount;\r\n    var ilist = new Int32Array(12);\r\n    var positionArray = [];\r\n    var normalArray = [];\r\n    var indexArray = [];\r\n    var atomindexArray = [];\r\n    var edgeTable = getEdgeTable();\r\n    var triTable = getTriTable();\r\n    var allowedContours = getAllowedContours();\r\n    var mx, my, mz;\r\n    //\r\n    this.triangulate = function (_isolevel, _noNormals, _box, _contour, _wrap) {\r\n        isolevel = _isolevel;\r\n        contour = _contour;\r\n        wrap = _wrap;\r\n        // Normals currently disabled in contour mode for performance (unused)\r\n        noNormals = _noNormals || contour;\r\n        if (!noNormals && !normalCache) {\r\n            normalCache = new Float32Array(n * 3);\r\n        }\r\n        var vIndexLength = n * 3;\r\n        if (!vertexIndex || vertexIndex.length !== vIndexLength) {\r\n            vertexIndex = new Int32Array(vIndexLength);\r\n        }\r\n        count = 0;\r\n        icount = 0;\r\n        if (_box !== undefined) {\r\n            var min = _box[0].map(Math.round);\r\n            var max = _box[1].map(Math.round);\r\n            mx = nx * Math.ceil(Math.abs(min[0]) / nx);\r\n            my = ny * Math.ceil(Math.abs(min[1]) / ny);\r\n            mz = nz * Math.ceil(Math.abs(min[2]) / nz);\r\n            triangulate(min[0], min[1], min[2], max[0], max[1], max[2]);\r\n        }\r\n        else {\r\n            mx = my = mz = 0;\r\n            triangulate();\r\n        }\r\n        positionArray.length = count * 3;\r\n        if (!noNormals)\r\n            normalArray.length = count * 3;\r\n        indexArray.length = icount;\r\n        if (atomindex)\r\n            atomindexArray.length = count;\r\n        return {\r\n            position: new Float32Array(positionArray),\r\n            normal: noNormals ? undefined : new Float32Array(normalArray),\r\n            index: getUintArray(indexArray, positionArray.length / 3),\r\n            atomindex: atomindex ? new Int32Array(atomindexArray) : undefined,\r\n            contour: contour\r\n        };\r\n    };\r\n    // polygonization\r\n    function lerp(a, b, t) { return a + (b - a) * t; }\r\n    function index(x, y, z) {\r\n        x = (x + mx) % nx;\r\n        y = (y + my) % ny;\r\n        z = (z + mz) % nz;\r\n        return ((zd * z) + yd * y) + x;\r\n    }\r\n    function VIntX(q, offset, x, y, z, valp1, valp2) {\r\n        var _q = 3 * q;\r\n        if (vertexIndex[_q] < 0) {\r\n            var mu = (isolevel - valp1) / (valp2 - valp1);\r\n            var nc = normalCache;\r\n            var c = count * 3;\r\n            positionArray[c + 0] = x + mu;\r\n            positionArray[c + 1] = y;\r\n            positionArray[c + 2] = z;\r\n            if (!noNormals) {\r\n                var q3 = q * 3;\r\n                normalArray[c] = -lerp(nc[q3], nc[q3 + 3], mu);\r\n                normalArray[c + 1] = -lerp(nc[q3 + 1], nc[q3 + 4], mu);\r\n                normalArray[c + 2] = -lerp(nc[q3 + 2], nc[q3 + 5], mu);\r\n            }\r\n            if (atomindex)\r\n                atomindexArray[count] = atomindex[q + Math.round(mu)];\r\n            vertexIndex[_q] = count;\r\n            ilist[offset] = count;\r\n            count += 1;\r\n        }\r\n        else {\r\n            ilist[offset] = vertexIndex[_q];\r\n        }\r\n    }\r\n    function VIntY(q, offset, x, y, z, valp1, valp2) {\r\n        var _q = 3 * q + 1;\r\n        if (vertexIndex[_q] < 0) {\r\n            var mu = (isolevel - valp1) / (valp2 - valp1);\r\n            var nc = normalCache;\r\n            var c = count * 3;\r\n            positionArray[c] = x;\r\n            positionArray[c + 1] = y + mu;\r\n            positionArray[c + 2] = z;\r\n            if (!noNormals) {\r\n                var q3 = q * 3;\r\n                var q6 = q3 + yd * 3;\r\n                normalArray[c] = -lerp(nc[q3], nc[q6], mu);\r\n                normalArray[c + 1] = -lerp(nc[q3 + 1], nc[q6 + 1], mu);\r\n                normalArray[c + 2] = -lerp(nc[q3 + 2], nc[q6 + 2], mu);\r\n            }\r\n            if (atomindex)\r\n                atomindexArray[count] = atomindex[q + Math.round(mu) * yd];\r\n            vertexIndex[_q] = count;\r\n            ilist[offset] = count;\r\n            count += 1;\r\n        }\r\n        else {\r\n            ilist[offset] = vertexIndex[_q];\r\n        }\r\n    }\r\n    function VIntZ(q, offset, x, y, z, valp1, valp2) {\r\n        var _q = 3 * q + 2;\r\n        if (vertexIndex[_q] < 0) {\r\n            var mu = (isolevel - valp1) / (valp2 - valp1);\r\n            var nc = normalCache;\r\n            var c = count * 3;\r\n            positionArray[c] = x;\r\n            positionArray[c + 1] = y;\r\n            positionArray[c + 2] = z + mu;\r\n            if (!noNormals) {\r\n                var q3 = q * 3;\r\n                var q6 = q3 + zd * 3;\r\n                normalArray[c] = -lerp(nc[q3], nc[q6], mu);\r\n                normalArray[c + 1] = -lerp(nc[q3 + 1], nc[q6 + 1], mu);\r\n                normalArray[c + 2] = -lerp(nc[q3 + 2], nc[q6 + 2], mu);\r\n            }\r\n            if (atomindex)\r\n                atomindexArray[count] = atomindex[q + Math.round(mu) * zd];\r\n            vertexIndex[_q] = count;\r\n            ilist[offset] = count;\r\n            count += 1;\r\n        }\r\n        else {\r\n            ilist[offset] = vertexIndex[_q];\r\n        }\r\n    }\r\n    function compNorm(q) {\r\n        var q3 = q * 3;\r\n        if (normalCache[q3] === 0.0) {\r\n            normalCache[q3] = field[(q - 1 + n) % n] - field[(q + 1) % n];\r\n            normalCache[q3 + 1] = field[(q - yd + n) % n] - field[(q + yd) % n];\r\n            normalCache[q3 + 2] = field[(q - zd + n) % n] - field[(q + zd) % n];\r\n        }\r\n    }\r\n    function polygonize(fx, fy, fz, q, edgeFilter) {\r\n        // cache indices\r\n        var q1;\r\n        var qy;\r\n        var qz;\r\n        var q1y;\r\n        var q1z;\r\n        var qyz;\r\n        var q1yz;\r\n        if (wrap) {\r\n            q = index(fx, fy, fz);\r\n            q1 = index(fx + 1, fy, fz);\r\n            qy = index(fx, fy + 1, fz);\r\n            qz = index(fx, fy, fz + 1);\r\n            q1y = index(fx + 1, fy + 1, fz);\r\n            q1z = index(fx + 1, fy, fz + 1);\r\n            qyz = index(fx, fy + 1, fz + 1);\r\n            q1yz = index(fx + 1, fy + 1, fz + 1);\r\n        }\r\n        else {\r\n            q1 = q + 1;\r\n            qy = q + yd;\r\n            qz = q + zd;\r\n            q1y = qy + 1;\r\n            q1z = qz + 1;\r\n            qyz = qy + zd;\r\n            q1yz = qyz + 1;\r\n        }\r\n        var cubeindex = 0;\r\n        var field0 = field[q];\r\n        var field1 = field[q1];\r\n        var field2 = field[qy];\r\n        var field3 = field[q1y];\r\n        var field4 = field[qz];\r\n        var field5 = field[q1z];\r\n        var field6 = field[qyz];\r\n        var field7 = field[q1yz];\r\n        if (field0 < isolevel)\r\n            cubeindex |= 1;\r\n        if (field1 < isolevel)\r\n            cubeindex |= 2;\r\n        if (field2 < isolevel)\r\n            cubeindex |= 8;\r\n        if (field3 < isolevel)\r\n            cubeindex |= 4;\r\n        if (field4 < isolevel)\r\n            cubeindex |= 16;\r\n        if (field5 < isolevel)\r\n            cubeindex |= 32;\r\n        if (field6 < isolevel)\r\n            cubeindex |= 128;\r\n        if (field7 < isolevel)\r\n            cubeindex |= 64;\r\n        // if cube is entirely in/out of the surface - bail, nothing to draw\r\n        var bits = edgeTable[cubeindex];\r\n        if (bits === 0)\r\n            return 0;\r\n        var fx2 = fx + 1;\r\n        var fy2 = fy + 1;\r\n        var fz2 = fz + 1;\r\n        // top of the cube\r\n        if (bits & 1) {\r\n            if (!noNormals) {\r\n                compNorm(q);\r\n                compNorm(q1);\r\n            }\r\n            VIntX(q, 0, fx, fy, fz, field0, field1);\r\n        }\r\n        if (bits & 2) {\r\n            if (!noNormals) {\r\n                compNorm(q1);\r\n                compNorm(q1y);\r\n            }\r\n            VIntY(q1, 1, fx2, fy, fz, field1, field3);\r\n        }\r\n        if (bits & 4) {\r\n            if (!noNormals) {\r\n                compNorm(qy);\r\n                compNorm(q1y);\r\n            }\r\n            VIntX(qy, 2, fx, fy2, fz, field2, field3);\r\n        }\r\n        if (bits & 8) {\r\n            if (!noNormals) {\r\n                compNorm(q);\r\n                compNorm(qy);\r\n            }\r\n            VIntY(q, 3, fx, fy, fz, field0, field2);\r\n        }\r\n        // bottom of the cube\r\n        if (bits & 16) {\r\n            if (!noNormals) {\r\n                compNorm(qz);\r\n                compNorm(q1z);\r\n            }\r\n            VIntX(qz, 4, fx, fy, fz2, field4, field5);\r\n        }\r\n        if (bits & 32) {\r\n            if (!noNormals) {\r\n                compNorm(q1z);\r\n                compNorm(q1yz);\r\n            }\r\n            VIntY(q1z, 5, fx2, fy, fz2, field5, field7);\r\n        }\r\n        if (bits & 64) {\r\n            if (!noNormals) {\r\n                compNorm(qyz);\r\n                compNorm(q1yz);\r\n            }\r\n            VIntX(qyz, 6, fx, fy2, fz2, field6, field7);\r\n        }\r\n        if (bits & 128) {\r\n            if (!noNormals) {\r\n                compNorm(qz);\r\n                compNorm(qyz);\r\n            }\r\n            VIntY(qz, 7, fx, fy, fz2, field4, field6);\r\n        }\r\n        // vertical lines of the cube\r\n        if (bits & 256) {\r\n            if (!noNormals) {\r\n                compNorm(q);\r\n                compNorm(qz);\r\n            }\r\n            VIntZ(q, 8, fx, fy, fz, field0, field4);\r\n        }\r\n        if (bits & 512) {\r\n            if (!noNormals) {\r\n                compNorm(q1);\r\n                compNorm(q1z);\r\n            }\r\n            VIntZ(q1, 9, fx2, fy, fz, field1, field5);\r\n        }\r\n        if (bits & 1024) {\r\n            if (!noNormals) {\r\n                compNorm(q1y);\r\n                compNorm(q1yz);\r\n            }\r\n            VIntZ(q1y, 10, fx2, fy2, fz, field3, field7);\r\n        }\r\n        if (bits & 2048) {\r\n            if (!noNormals) {\r\n                compNorm(qy);\r\n                compNorm(qyz);\r\n            }\r\n            VIntZ(qy, 11, fx, fy2, fz, field2, field6);\r\n        }\r\n        var triIndex = cubeindex << 4; // re-purpose cubeindex into an offset into triTable\r\n        var e1;\r\n        var e2;\r\n        var e3;\r\n        var i = 0;\r\n        // here is where triangles are created\r\n        while (triTable[triIndex + i] !== -1) {\r\n            e1 = triTable[triIndex + i];\r\n            e2 = triTable[triIndex + i + 1];\r\n            e3 = triTable[triIndex + i + 2];\r\n            if (contour) {\r\n                if (allowedContours[e1][e2] & edgeFilter) {\r\n                    indexArray[icount++] = ilist[e1];\r\n                    indexArray[icount++] = ilist[e2];\r\n                }\r\n                if (allowedContours[e2][e3] & edgeFilter) {\r\n                    indexArray[icount++] = ilist[e2];\r\n                    indexArray[icount++] = ilist[e3];\r\n                }\r\n                if (allowedContours[e1][e3] & edgeFilter) {\r\n                    indexArray[icount++] = ilist[e1];\r\n                    indexArray[icount++] = ilist[e3];\r\n                }\r\n            }\r\n            else {\r\n                // FIXME normals flipping (see above) and vertex order reversal\r\n                indexArray[icount++] = ilist[e2];\r\n                indexArray[icount++] = ilist[e1];\r\n                indexArray[icount++] = ilist[e3];\r\n            }\r\n            i += 3;\r\n        }\r\n    }\r\n    function triangulate(xBeg, yBeg, zBeg, xEnd, yEnd, zEnd) {\r\n        let q;\r\n        let q3;\r\n        let x;\r\n        let y;\r\n        let z;\r\n        let yOffset;\r\n        let zOffset;\r\n        xBeg = xBeg !== undefined ? xBeg : 0;\r\n        yBeg = yBeg !== undefined ? yBeg : 0;\r\n        zBeg = zBeg !== undefined ? zBeg : 0;\r\n        xEnd = xEnd !== undefined ? xEnd : nx - 1;\r\n        yEnd = yEnd !== undefined ? yEnd : ny - 1;\r\n        zEnd = zEnd !== undefined ? zEnd : nz - 1;\r\n        if (!wrap) {\r\n            if (noNormals) {\r\n                xBeg = Math.max(0, xBeg);\r\n                yBeg = Math.max(0, yBeg);\r\n                zBeg = Math.max(0, zBeg);\r\n                xEnd = Math.min(nx - 1, xEnd);\r\n                yEnd = Math.min(ny - 1, yEnd);\r\n                zEnd = Math.min(nz - 1, zEnd);\r\n            }\r\n            else {\r\n                xBeg = Math.max(1, xBeg);\r\n                yBeg = Math.max(1, yBeg);\r\n                zBeg = Math.max(1, zBeg);\r\n                xEnd = Math.min(nx - 2, xEnd);\r\n                yEnd = Math.min(ny - 2, yEnd);\r\n                zEnd = Math.min(nz - 2, zEnd);\r\n            }\r\n        }\r\n        let xBeg2, yBeg2, zBeg2, xEnd2, yEnd2, zEnd2;\r\n        if (!wrap) {\r\n            // init part of the vertexIndex\r\n            // (takes a significant amount of time to do for all)\r\n            xBeg2 = Math.max(0, xBeg - 2);\r\n            yBeg2 = Math.max(0, yBeg - 2);\r\n            zBeg2 = Math.max(0, zBeg - 2);\r\n            xEnd2 = Math.min(nx, xEnd + 2);\r\n            yEnd2 = Math.min(ny, yEnd + 2);\r\n            zEnd2 = Math.min(nz, zEnd + 2);\r\n            for (z = zBeg2; z < zEnd2; ++z) {\r\n                zOffset = zd * z;\r\n                for (y = yBeg2; y < yEnd2; ++y) {\r\n                    yOffset = zOffset + yd * y;\r\n                    for (x = xBeg2; x < xEnd2; ++x) {\r\n                        q = 3 * (yOffset + x);\r\n                        vertexIndex[q] = -1;\r\n                        vertexIndex[q + 1] = -1;\r\n                        vertexIndex[q + 2] = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            xBeg2 = xBeg - 2;\r\n            yBeg2 = yBeg - 2;\r\n            zBeg2 = zBeg - 2;\r\n            xEnd2 = xEnd + 2;\r\n            yEnd2 = yEnd + 2;\r\n            zEnd2 = zEnd + 2;\r\n            for (z = zBeg2; z < zEnd2; ++z) {\r\n                for (y = yBeg2; y < yEnd2; ++y) {\r\n                    for (x = xBeg2; x < xEnd2; ++x) {\r\n                        q3 = index(x, y, z) * 3;\r\n                        vertexIndex[q3] = -1;\r\n                        vertexIndex[q3 + 1] = -1;\r\n                        vertexIndex[q3 + 2] = -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!wrap) {\r\n            // clip space where the isovalue is too low\r\n            var __break;\r\n            var __xBeg = xBeg;\r\n            var __yBeg = yBeg;\r\n            var __zBeg = zBeg;\r\n            var __xEnd = xEnd;\r\n            var __yEnd = yEnd;\r\n            var __zEnd = zEnd;\r\n            __break = false;\r\n            for (z = zBeg; z < zEnd; ++z) {\r\n                for (y = yBeg; y < yEnd; ++y) {\r\n                    for (x = xBeg; x < xEnd; ++x) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __zBeg = z;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            __break = false;\r\n            for (y = yBeg; y < yEnd; ++y) {\r\n                for (z = __zBeg; z < zEnd; ++z) {\r\n                    for (x = xBeg; x < xEnd; ++x) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __yBeg = y;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            __break = false;\r\n            for (x = xBeg; x < xEnd; ++x) {\r\n                for (y = __yBeg; y < yEnd; ++y) {\r\n                    for (z = __zBeg; z < zEnd; ++z) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __xBeg = x;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            __break = false;\r\n            for (z = zEnd; z >= zBeg; --z) {\r\n                for (y = yEnd; y >= yBeg; --y) {\r\n                    for (x = xEnd; x >= xBeg; --x) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __zEnd = z;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            __break = false;\r\n            for (y = yEnd; y >= yBeg; --y) {\r\n                for (z = __zEnd; z >= zBeg; --z) {\r\n                    for (x = xEnd; x >= xBeg; --x) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __yEnd = y;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            __break = false;\r\n            for (x = xEnd; x >= xBeg; --x) {\r\n                for (y = __yEnd; y >= yBeg; --y) {\r\n                    for (z = __zEnd; z >= zBeg; --z) {\r\n                        q = ((nx * ny) * z) + (nx * y) + x;\r\n                        if (field[q] >= isolevel) {\r\n                            __xEnd = x;\r\n                            __break = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (__break)\r\n                        break;\r\n                }\r\n                if (__break)\r\n                    break;\r\n            }\r\n            //\r\n            if (noNormals) {\r\n                xBeg = Math.max(0, __xBeg - 1);\r\n                yBeg = Math.max(0, __yBeg - 1);\r\n                zBeg = Math.max(0, __zBeg - 1);\r\n                xEnd = Math.min(nx - 1, __xEnd + 1);\r\n                yEnd = Math.min(ny - 1, __yEnd + 1);\r\n                zEnd = Math.min(nz - 1, __zEnd + 1);\r\n            }\r\n            else {\r\n                xBeg = Math.max(1, __xBeg - 1);\r\n                yBeg = Math.max(1, __yBeg - 1);\r\n                zBeg = Math.max(1, __zBeg - 1);\r\n                xEnd = Math.min(nx - 2, __xEnd + 1);\r\n                yEnd = Math.min(ny - 2, __yEnd + 1);\r\n                zEnd = Math.min(nz - 2, __zEnd + 1);\r\n            }\r\n        }\r\n        // polygonize part of the grid\r\n        var edgeFilter = 15;\r\n        for (z = zBeg; z < zEnd; ++z, edgeFilter &= ~4) {\r\n            zOffset = zd * z;\r\n            edgeFilter |= 2;\r\n            for (y = yBeg; y < yEnd; ++y, edgeFilter &= ~2) {\r\n                yOffset = zOffset + yd * y;\r\n                edgeFilter |= 1;\r\n                for (x = xBeg; x < xEnd; ++x, edgeFilter &= ~1) {\r\n                    q = yOffset + x;\r\n                    polygonize(x, y, z, q, edgeFilter);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.assign(MarchingCubes, { __deps: [getEdgeTable, getTriTable, getAllowedContours, getUintArray] });\r\nexport default MarchingCubes;\r\n//# sourceMappingURL=marching-cubes.js.map","/**\r\n * @file Matrix Utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * svd methods from Eugene Zatepyakin / http://inspirit.github.io/jsfeat/\r\n */\r\nimport { v3new, v3cross } from './vector-utils';\r\nexport class Matrix {\r\n    constructor(cols, rows) {\r\n        this.cols = cols;\r\n        this.rows = rows;\r\n        this.size = this.cols * this.rows;\r\n        this.data = new Float32Array(this.size);\r\n    }\r\n    copyTo(matrix) {\r\n        matrix.data.set(this.data);\r\n    }\r\n}\r\nexport function transpose(At, A) {\r\n    let i = 0;\r\n    let j = 0;\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    let Ai = 0;\r\n    let Ati = 0;\r\n    let pAt = 0;\r\n    const ad = A.data;\r\n    const atd = At.data;\r\n    for (; i < nrows; Ati += 1, Ai += ncols, i++) {\r\n        pAt = Ati;\r\n        for (j = 0; j < ncols; pAt += nrows, j++)\r\n            atd[pAt] = ad[Ai + j];\r\n    }\r\n}\r\n// C = A * B\r\nexport function multiply(C, A, B) {\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let Ap = 0;\r\n    let pA = 0;\r\n    let pB = 0;\r\n    let _pB = 0;\r\n    let Cp = 0;\r\n    const ncols = A.cols;\r\n    const nrows = A.rows;\r\n    const mcols = B.cols;\r\n    const ad = A.data;\r\n    const bd = B.data;\r\n    const cd = C.data;\r\n    let sum = 0.0;\r\n    for (; i < nrows; Ap += ncols, i++) {\r\n        for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n            pB = _pB;\r\n            pA = Ap;\r\n            sum = 0.0;\r\n            for (k = 0; k < ncols; pA++, pB += mcols, k++) {\r\n                sum += ad[pA] * bd[pB];\r\n            }\r\n            cd[Cp] = sum;\r\n        }\r\n    }\r\n}\r\n// C = A * B'\r\nexport function multiplyABt(C, A, B) {\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let Ap = 0;\r\n    let pA = 0;\r\n    let pB = 0;\r\n    let Cp = 0;\r\n    const ncols = A.cols;\r\n    const nrows = A.rows;\r\n    const mrows = B.rows;\r\n    const ad = A.data;\r\n    const bd = B.data;\r\n    const cd = C.data;\r\n    let sum = 0.0;\r\n    for (; i < nrows; Ap += ncols, i++) {\r\n        for (pB = 0, j = 0; j < mrows; Cp++, j++) {\r\n            pA = Ap;\r\n            sum = 0.0;\r\n            for (k = 0; k < ncols; pA++, pB++, k++) {\r\n                sum += ad[pA] * bd[pB];\r\n            }\r\n            cd[Cp] = sum;\r\n        }\r\n    }\r\n}\r\n// C = A' * B\r\nexport function multiplyAtB(C, A, B) {\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let Ap = 0;\r\n    let pA = 0;\r\n    let pB = 0;\r\n    let _pB = 0;\r\n    let Cp = 0;\r\n    const ncols = A.cols;\r\n    const nrows = A.rows;\r\n    const mcols = B.cols;\r\n    const ad = A.data;\r\n    const bd = B.data;\r\n    const cd = C.data;\r\n    let sum = 0.0;\r\n    for (; i < ncols; Ap++, i++) {\r\n        for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n            pB = _pB;\r\n            pA = Ap;\r\n            sum = 0.0;\r\n            for (k = 0; k < nrows; pA += ncols, pB += mcols, k++) {\r\n                sum += ad[pA] * bd[pB];\r\n            }\r\n            cd[Cp] = sum;\r\n        }\r\n    }\r\n}\r\nexport function invert3x3(from, to) {\r\n    const A = from.data;\r\n    const invA = to.data;\r\n    const t1 = A[4];\r\n    const t2 = A[8];\r\n    const t4 = A[5];\r\n    const t5 = A[7];\r\n    const t8 = A[0];\r\n    const t9 = t8 * t1;\r\n    const t11 = t8 * t4;\r\n    const t13 = A[3];\r\n    const t14 = A[1];\r\n    const t15 = t13 * t14;\r\n    const t17 = A[2];\r\n    const t18 = t13 * t17;\r\n    const t20 = A[6];\r\n    const t21 = t20 * t14;\r\n    const t23 = t20 * t17;\r\n    const t26 = 1.0 / (t9 * t2 - t11 * t5 - t15 * t2 + t18 * t5 + t21 * t4 - t23 * t1);\r\n    invA[0] = (t1 * t2 - t4 * t5) * t26;\r\n    invA[1] = -(t14 * t2 - t17 * t5) * t26;\r\n    invA[2] = -(-t14 * t4 + t17 * t1) * t26;\r\n    invA[3] = -(t13 * t2 - t4 * t20) * t26;\r\n    invA[4] = (t8 * t2 - t23) * t26;\r\n    invA[5] = -(t11 - t18) * t26;\r\n    invA[6] = -(-t13 * t5 + t1 * t20) * t26;\r\n    invA[7] = -(t8 * t5 - t21) * t26;\r\n    invA[8] = (t9 - t15) * t26;\r\n}\r\nexport function mat3x3determinant(M) {\r\n    const md = M.data;\r\n    return md[0] * md[4] * md[8] -\r\n        md[0] * md[5] * md[7] -\r\n        md[3] * md[1] * md[8] +\r\n        md[3] * md[2] * md[7] +\r\n        md[6] * md[1] * md[5] -\r\n        md[6] * md[2] * md[4];\r\n}\r\n// C = A * B\r\nexport function multiply3x3(C, A, B) {\r\n    const Cd = C.data;\r\n    const Ad = A.data;\r\n    const Bd = B.data;\r\n    const m10 = Ad[0];\r\n    const m11 = Ad[1];\r\n    const m12 = Ad[2];\r\n    const m13 = Ad[3];\r\n    const m14 = Ad[4];\r\n    const m15 = Ad[5];\r\n    const m16 = Ad[6];\r\n    const m17 = Ad[7];\r\n    const m18 = Ad[8];\r\n    const m20 = Bd[0];\r\n    const m21 = Bd[1];\r\n    const m22 = Bd[2];\r\n    const m23 = Bd[3];\r\n    const m24 = Bd[4];\r\n    const m25 = Bd[5];\r\n    const m26 = Bd[6];\r\n    const m27 = Bd[7];\r\n    const m28 = Bd[8];\r\n    Cd[0] = m10 * m20 + m11 * m23 + m12 * m26;\r\n    Cd[1] = m10 * m21 + m11 * m24 + m12 * m27;\r\n    Cd[2] = m10 * m22 + m11 * m25 + m12 * m28;\r\n    Cd[3] = m13 * m20 + m14 * m23 + m15 * m26;\r\n    Cd[4] = m13 * m21 + m14 * m24 + m15 * m27;\r\n    Cd[5] = m13 * m22 + m14 * m25 + m15 * m28;\r\n    Cd[6] = m16 * m20 + m17 * m23 + m18 * m26;\r\n    Cd[7] = m16 * m21 + m17 * m24 + m18 * m27;\r\n    Cd[8] = m16 * m22 + m17 * m25 + m18 * m28;\r\n}\r\nexport function meanRows(A) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    const mean = new Array(ncols);\r\n    for (let j = 0; j < ncols; ++j) {\r\n        mean[j] = 0.0;\r\n    }\r\n    for (let i = 0, p = 0; i < nrows; ++i) {\r\n        for (let j = 0; j < ncols; ++j, ++p) {\r\n            mean[j] += Ad[p];\r\n        }\r\n    }\r\n    for (let j = 0; j < ncols; ++j) {\r\n        mean[j] /= nrows;\r\n    }\r\n    return mean;\r\n}\r\nexport function meanCols(A) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    const mean = new Array(nrows);\r\n    for (let j = 0; j < nrows; ++j) {\r\n        mean[j] = 0.0;\r\n    }\r\n    for (let i = 0, p = 0; i < ncols; ++i) {\r\n        for (let j = 0; j < nrows; ++j, ++p) {\r\n            mean[j] += Ad[p];\r\n        }\r\n    }\r\n    for (let j = 0; j < nrows; ++j) {\r\n        mean[j] /= ncols;\r\n    }\r\n    return mean;\r\n}\r\nexport function subRows(A, row) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    for (let i = 0, p = 0; i < nrows; ++i) {\r\n        for (let j = 0; j < ncols; ++j, ++p) {\r\n            Ad[p] -= row[j];\r\n        }\r\n    }\r\n}\r\nexport function subCols(A, col) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    for (let i = 0, p = 0; i < ncols; ++i) {\r\n        for (let j = 0; j < nrows; ++j, ++p) {\r\n            Ad[p] -= col[j];\r\n        }\r\n    }\r\n}\r\nexport function addRows(A, row) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    for (let i = 0, p = 0; i < nrows; ++i) {\r\n        for (let j = 0; j < ncols; ++j, ++p) {\r\n            Ad[p] += row[j];\r\n        }\r\n    }\r\n}\r\nexport function addCols(A, col) {\r\n    const nrows = A.rows;\r\n    const ncols = A.cols;\r\n    const Ad = A.data;\r\n    for (let i = 0, p = 0; i < ncols; ++i) {\r\n        for (let j = 0; j < nrows; ++j, ++p) {\r\n            Ad[p] += col[j];\r\n        }\r\n    }\r\n}\r\nexport function swap(A, i0, i1, t) {\r\n    t = A[i0];\r\n    A[i0] = A[i1];\r\n    A[i1] = t;\r\n}\r\nexport function hypot(a, b) {\r\n    a = Math.abs(a);\r\n    b = Math.abs(b);\r\n    if (a > b) {\r\n        b /= a;\r\n        return a * Math.sqrt(1.0 + b * b);\r\n    }\r\n    if (b > 0) {\r\n        a /= b;\r\n        return b * Math.sqrt(1.0 + a * a);\r\n    }\r\n    return 0.0;\r\n}\r\nconst EPSILON = 0.0000001192092896;\r\nconst FLT_MIN = 1E-37;\r\nexport function JacobiSVDImpl(At, astep, _W, Vt, vstep, m, n, n1) {\r\n    const eps = EPSILON * 2.0;\r\n    const minval = FLT_MIN;\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    let iter = 0;\r\n    const maxIter = Math.max(m, 30);\r\n    let Ai = 0;\r\n    let Aj = 0;\r\n    let Vi = 0;\r\n    let Vj = 0;\r\n    let changed = 0;\r\n    let c = 0.0;\r\n    let s = 0.0;\r\n    let t = 0.0;\r\n    let t0 = 0.0;\r\n    let t1 = 0.0;\r\n    let sd = 0.0;\r\n    let beta = 0.0;\r\n    let gamma = 0.0;\r\n    let delta = 0.0;\r\n    let a = 0.0;\r\n    let p = 0.0;\r\n    let b = 0.0;\r\n    let seed = 0x1234;\r\n    let val = 0.0;\r\n    let val0 = 0.0;\r\n    let asum = 0.0;\r\n    const W = new Float64Array(n << 3);\r\n    for (; i < n; i++) {\r\n        for (k = 0, sd = 0; k < m; k++) {\r\n            t = At[i * astep + k];\r\n            sd += t * t;\r\n        }\r\n        W[i] = sd;\r\n        if (Vt) {\r\n            for (k = 0; k < n; k++) {\r\n                Vt[i * vstep + k] = 0;\r\n            }\r\n            Vt[i * vstep + i] = 1;\r\n        }\r\n    }\r\n    for (; iter < maxIter; iter++) {\r\n        changed = 0;\r\n        for (i = 0; i < n - 1; i++) {\r\n            for (j = i + 1; j < n; j++) {\r\n                Ai = (i * astep) | 0;\r\n                Aj = (j * astep) | 0;\r\n                a = W[i];\r\n                p = 0;\r\n                b = W[j];\r\n                k = 2;\r\n                p += At[Ai] * At[Aj];\r\n                p += At[Ai + 1] * At[Aj + 1];\r\n                for (; k < m; k++) {\r\n                    p += At[Ai + k] * At[Aj + k];\r\n                }\r\n                if (Math.abs(p) <= eps * Math.sqrt(a * b))\r\n                    continue;\r\n                p *= 2.0;\r\n                beta = a - b;\r\n                gamma = hypot(p, beta);\r\n                if (beta < 0) {\r\n                    delta = (gamma - beta) * 0.5;\r\n                    s = Math.sqrt(delta / gamma);\r\n                    c = (p / (gamma * s * 2.0));\r\n                }\r\n                else {\r\n                    c = Math.sqrt((gamma + beta) / (gamma * 2.0));\r\n                    s = (p / (gamma * c * 2.0));\r\n                }\r\n                a = 0.0;\r\n                b = 0.0;\r\n                k = 2; // unroll\r\n                t0 = c * At[Ai] + s * At[Aj];\r\n                t1 = -s * At[Ai] + c * At[Aj];\r\n                At[Ai] = t0;\r\n                At[Aj] = t1;\r\n                a += t0 * t0;\r\n                b += t1 * t1;\r\n                t0 = c * At[Ai + 1] + s * At[Aj + 1];\r\n                t1 = -s * At[Ai + 1] + c * At[Aj + 1];\r\n                At[Ai + 1] = t0;\r\n                At[Aj + 1] = t1;\r\n                a += t0 * t0;\r\n                b += t1 * t1;\r\n                for (; k < m; k++) {\r\n                    t0 = c * At[Ai + k] + s * At[Aj + k];\r\n                    t1 = -s * At[Ai + k] + c * At[Aj + k];\r\n                    At[Ai + k] = t0;\r\n                    At[Aj + k] = t1;\r\n                    a += t0 * t0;\r\n                    b += t1 * t1;\r\n                }\r\n                W[i] = a;\r\n                W[j] = b;\r\n                changed = 1;\r\n                if (Vt) {\r\n                    Vi = (i * vstep) | 0;\r\n                    Vj = (j * vstep) | 0;\r\n                    k = 2;\r\n                    t0 = c * Vt[Vi] + s * Vt[Vj];\r\n                    t1 = -s * Vt[Vi] + c * Vt[Vj];\r\n                    Vt[Vi] = t0;\r\n                    Vt[Vj] = t1;\r\n                    t0 = c * Vt[Vi + 1] + s * Vt[Vj + 1];\r\n                    t1 = -s * Vt[Vi + 1] + c * Vt[Vj + 1];\r\n                    Vt[Vi + 1] = t0;\r\n                    Vt[Vj + 1] = t1;\r\n                    for (; k < n; k++) {\r\n                        t0 = c * Vt[Vi + k] + s * Vt[Vj + k];\r\n                        t1 = -s * Vt[Vi + k] + c * Vt[Vj + k];\r\n                        Vt[Vi + k] = t0;\r\n                        Vt[Vj + k] = t1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (changed === 0)\r\n            break;\r\n    }\r\n    for (i = 0; i < n; i++) {\r\n        for (k = 0, sd = 0; k < m; k++) {\r\n            t = At[i * astep + k];\r\n            sd += t * t;\r\n        }\r\n        W[i] = Math.sqrt(sd);\r\n    }\r\n    for (i = 0; i < n - 1; i++) {\r\n        j = i;\r\n        for (k = i + 1; k < n; k++) {\r\n            if (W[j] < W[k]) {\r\n                j = k;\r\n            }\r\n        }\r\n        if (i !== j) {\r\n            swap(W, i, j, sd);\r\n            if (Vt) {\r\n                for (k = 0; k < m; k++) {\r\n                    swap(At, i * astep + k, j * astep + k, t);\r\n                }\r\n                for (k = 0; k < n; k++) {\r\n                    swap(Vt, i * vstep + k, j * vstep + k, t);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < n; i++) {\r\n        _W[i] = W[i];\r\n    }\r\n    if (!Vt) {\r\n        return;\r\n    }\r\n    for (i = 0; i < n1; i++) {\r\n        sd = i < n ? W[i] : 0;\r\n        while (sd <= minval) {\r\n            // if we got a zero singular value, then in order to get the corresponding left singular vector\r\n            // we generate a random vector, project it to the previously computed left singular vectors,\r\n            // subtract the projection and normalize the difference.\r\n            val0 = (1.0 / m);\r\n            for (k = 0; k < m; k++) {\r\n                seed = (seed * 214013 + 2531011);\r\n                val = (((seed >> 16) & 0x7fff) & 256) !== 0 ? val0 : -val0;\r\n                At[i * astep + k] = val;\r\n            }\r\n            for (iter = 0; iter < 2; iter++) {\r\n                for (j = 0; j < i; j++) {\r\n                    sd = 0;\r\n                    for (k = 0; k < m; k++) {\r\n                        sd += At[i * astep + k] * At[j * astep + k];\r\n                    }\r\n                    asum = 0.0;\r\n                    for (k = 0; k < m; k++) {\r\n                        t = (At[i * astep + k] - sd * At[j * astep + k]);\r\n                        At[i * astep + k] = t;\r\n                        asum += Math.abs(t);\r\n                    }\r\n                    asum = asum ? 1.0 / asum : 0;\r\n                    for (k = 0; k < m; k++) {\r\n                        At[i * astep + k] *= asum;\r\n                    }\r\n                }\r\n            }\r\n            sd = 0;\r\n            for (k = 0; k < m; k++) {\r\n                t = At[i * astep + k];\r\n                sd += t * t;\r\n            }\r\n            sd = Math.sqrt(sd);\r\n        }\r\n        s = (1.0 / sd);\r\n        for (k = 0; k < m; k++) {\r\n            At[i * astep + k] *= s;\r\n        }\r\n    }\r\n}\r\nexport function svd(A, W, U, V) {\r\n    let at = 0;\r\n    let i = 0;\r\n    const _m = A.rows;\r\n    const _n = A.cols;\r\n    let m = _m;\r\n    let n = _n;\r\n    if (m < n) {\r\n        at = 1;\r\n        i = m;\r\n        m = n;\r\n        n = i;\r\n    }\r\n    const amt = new Matrix(m, m);\r\n    const wmt = new Matrix(1, n);\r\n    const vmt = new Matrix(n, n);\r\n    if (at === 0) {\r\n        transpose(amt, A);\r\n    }\r\n    else {\r\n        for (i = 0; i < _n * _m; i++) {\r\n            amt.data[i] = A.data[i];\r\n        }\r\n        for (; i < n * m; i++) {\r\n            amt.data[i] = 0;\r\n        }\r\n    }\r\n    JacobiSVDImpl(amt.data, m, wmt.data, vmt.data, n, m, n, m);\r\n    if (W) {\r\n        for (i = 0; i < n; i++) {\r\n            W.data[i] = wmt.data[i];\r\n        }\r\n        for (; i < _n; i++) {\r\n            W.data[i] = 0;\r\n        }\r\n    }\r\n    if (at === 0) {\r\n        if (U)\r\n            transpose(U, amt);\r\n        if (V)\r\n            transpose(V, vmt);\r\n    }\r\n    else {\r\n        if (U)\r\n            transpose(U, vmt);\r\n        if (V)\r\n            transpose(V, amt);\r\n    }\r\n}\r\n//\r\nexport function m4new() {\r\n    return new Float32Array([\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1\r\n    ]);\r\n}\r\nexport function m4set(out, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n    out[0] = n11;\r\n    out[4] = n12;\r\n    out[8] = n13;\r\n    out[12] = n14;\r\n    out[1] = n21;\r\n    out[5] = n22;\r\n    out[9] = n23;\r\n    out[13] = n24;\r\n    out[2] = n31;\r\n    out[6] = n32;\r\n    out[10] = n33;\r\n    out[14] = n34;\r\n    out[3] = n41;\r\n    out[7] = n42;\r\n    out[11] = n43;\r\n    out[15] = n44;\r\n}\r\nexport function m4identity(out) {\r\n    m4set(out, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n}\r\nm4identity.__deps = [m4set];\r\nexport function m4multiply(out, a, b) {\r\n    const a11 = a[0];\r\n    const a12 = a[4];\r\n    const a13 = a[8];\r\n    const a14 = a[12];\r\n    const a21 = a[1];\r\n    const a22 = a[5];\r\n    const a23 = a[9];\r\n    const a24 = a[13];\r\n    const a31 = a[2];\r\n    const a32 = a[6];\r\n    const a33 = a[10];\r\n    const a34 = a[14];\r\n    const a41 = a[3];\r\n    const a42 = a[7];\r\n    const a43 = a[11];\r\n    const a44 = a[15];\r\n    const b11 = b[0];\r\n    const b12 = b[4];\r\n    const b13 = b[8];\r\n    const b14 = b[12];\r\n    const b21 = b[1];\r\n    const b22 = b[5];\r\n    const b23 = b[9];\r\n    const b24 = b[13];\r\n    const b31 = b[2];\r\n    const b32 = b[6];\r\n    const b33 = b[10];\r\n    const b34 = b[14];\r\n    const b41 = b[3];\r\n    const b42 = b[7];\r\n    const b43 = b[11];\r\n    const b44 = b[15];\r\n    out[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    out[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    out[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    out[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n    out[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    out[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    out[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    out[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n    out[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    out[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    out[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    out[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n    out[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    out[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    out[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    out[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n}\r\nexport function m4makeScale(out, x, y, z) {\r\n    m4set(out, x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\r\n}\r\nm4makeScale.__deps = [m4set];\r\nexport function m4makeTranslation(out, x, y, z) {\r\n    m4set(out, 1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\r\n}\r\nm4makeTranslation.__deps = [m4set];\r\nexport function m4makeRotationY(out, theta) {\r\n    const c = Math.cos(theta);\r\n    const s = Math.sin(theta);\r\n    m4set(out, c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\r\n}\r\nm4makeRotationY.__deps = [m4set];\r\n//\r\nexport function m3new() {\r\n    return new Float32Array([\r\n        1, 0, 0,\r\n        0, 1, 0,\r\n        0, 0, 1\r\n    ]);\r\n}\r\nexport function m3makeNormal(out, m4) {\r\n    const r0 = v3new([m4[0], m4[1], m4[2]]);\r\n    const r1 = v3new([m4[4], m4[5], m4[6]]);\r\n    const r2 = v3new([m4[8], m4[9], m4[10]]);\r\n    const cp = v3new();\r\n    //        [ r0 ]       [ r1 x r2 ]\r\n    // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n    //        [ r2 ]       [ r0 x r1 ]\r\n    v3cross(cp, r1, r2);\r\n    out[0] = cp[0];\r\n    out[1] = cp[1];\r\n    out[2] = cp[2];\r\n    v3cross(cp, r2, r0);\r\n    out[3] = cp[0];\r\n    out[4] = cp[1];\r\n    out[5] = cp[2];\r\n    v3cross(cp, r0, r1);\r\n    out[6] = cp[0];\r\n    out[7] = cp[1];\r\n    out[8] = cp[2];\r\n}\r\nm3makeNormal.__deps = [v3new, v3cross];\r\n//# sourceMappingURL=matrix-utils.js.map","/**\r\n * @file Surface Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { degToRad } from '../math/math-utils';\r\nimport { m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY } from '../math/matrix-utils.js';\r\nimport { v3addScalar, v3subScalar, v3divideScalar, v3multiplyScalar, v3floor, v3ceil, v3sub, v3negate, v3cross, v3fromArray, normalizeVector3array } from '../math/vector-utils.js';\r\nfunction laplacianSmooth(verts, faces, numiter, inflate) {\r\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n    //\r\n    // Permission to use, copy, modify, and distribute this program for\r\n    // any purpose, with or without fee, is hereby granted, provided that\r\n    // the notices on the head, the reference information, and this\r\n    // copyright notice appear in all copies or substantial portions of\r\n    // the Software. It is provided \"as is\" without express or implied\r\n    // warranty.\r\n    //\r\n    // ported to JavaScript and adapted to NGL by Alexander Rose\r\n    numiter = numiter || 1;\r\n    inflate = inflate || true;\r\n    const nv = verts.length / 3;\r\n    const nf = faces.length / 3;\r\n    let norms = undefined;\r\n    if (inflate) {\r\n        norms = new Float32Array(nv * 3);\r\n    }\r\n    const tps = new Float32Array(nv * 3);\r\n    let i;\r\n    const ndeg = 20;\r\n    const vertdeg = new Array(ndeg);\r\n    for (i = 0; i < ndeg; ++i) {\r\n        vertdeg[i] = new Uint32Array(nv);\r\n    }\r\n    for (i = 0; i < nv; ++i) {\r\n        vertdeg[0][i] = 0;\r\n    }\r\n    let j, jl;\r\n    let flagvert;\r\n    // for each face\r\n    for (i = 0; i < nf; ++i) {\r\n        var ao = i * 3;\r\n        var bo = i * 3 + 1;\r\n        var co = i * 3 + 2;\r\n        // vertex a\r\n        flagvert = true;\r\n        for (j = 0, jl = vertdeg[0][faces[ao]]; j < jl; ++j) {\r\n            if (faces[bo] === vertdeg[j + 1][faces[ao]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[ao]]++;\r\n            vertdeg[vertdeg[0][faces[ao]]][faces[ao]] = faces[bo];\r\n        }\r\n        flagvert = true;\r\n        for (j = 0, jl = vertdeg[0][faces[ao]]; j < jl; ++j) {\r\n            if (faces[co] === vertdeg[j + 1][faces[ao]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[ao]]++;\r\n            vertdeg[vertdeg[0][faces[ao]]][faces[ao]] = faces[co];\r\n        }\r\n        // vertex b\r\n        flagvert = true;\r\n        for (j = 0, jl = vertdeg[0][faces[bo]]; j < jl; ++j) {\r\n            if (faces[ao] === vertdeg[j + 1][faces[bo]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[bo]]++;\r\n            vertdeg[vertdeg[0][faces[bo]]][faces[bo]] = faces[ao];\r\n        }\r\n        flagvert = true;\r\n        for (j = 0, jl = vertdeg[0][faces[bo]]; j < jl; ++j) {\r\n            if (faces[co] === vertdeg[j + 1][faces[bo]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[bo]]++;\r\n            vertdeg[vertdeg[0][faces[bo]]][faces[bo]] = faces[co];\r\n        }\r\n        // vertex c\r\n        flagvert = true;\r\n        for (j = 0; j < vertdeg[0][faces[co]]; ++j) {\r\n            if (faces[ao] === vertdeg[j + 1][faces[co]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[co]]++;\r\n            vertdeg[vertdeg[0][faces[co]]][faces[co]] = faces[ao];\r\n        }\r\n        flagvert = true;\r\n        for (j = 0, jl = vertdeg[0][faces[co]]; j < jl; ++j) {\r\n            if (faces[bo] === vertdeg[j + 1][faces[co]]) {\r\n                flagvert = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flagvert) {\r\n            vertdeg[0][faces[co]]++;\r\n            vertdeg[vertdeg[0][faces[co]]][faces[co]] = faces[bo];\r\n        }\r\n    }\r\n    var wt = 1.0;\r\n    var wt2 = 0.5;\r\n    var i3, vi3, vdi, wtvi, wt2vi;\r\n    var ssign = -1;\r\n    var scaleFactor = 1;\r\n    var outwt = 0.75 / (scaleFactor + 3.5); // area-preserving\r\n    // smoothing iterations\r\n    for (var k = 0; k < numiter; ++k) {\r\n        // for each vertex\r\n        for (i = 0; i < nv; ++i) {\r\n            i3 = i * 3;\r\n            vdi = vertdeg[0][i];\r\n            if (vdi < 3) {\r\n                tps[i3] = verts[i3];\r\n                tps[i3 + 1] = verts[i3 + 1];\r\n                tps[i3 + 2] = verts[i3 + 2];\r\n            }\r\n            else if (vdi === 3 || vdi === 4) {\r\n                tps[i3] = 0;\r\n                tps[i3 + 1] = 0;\r\n                tps[i3 + 2] = 0;\r\n                for (j = 0; j < vdi; ++j) {\r\n                    vi3 = vertdeg[j + 1][i] * 3;\r\n                    tps[i3] += verts[vi3];\r\n                    tps[i3 + 1] += verts[vi3 + 1];\r\n                    tps[i3 + 2] += verts[vi3 + 2];\r\n                }\r\n                tps[i3] += wt2 * verts[i3];\r\n                tps[i3 + 1] += wt2 * verts[i3 + 1];\r\n                tps[i3 + 2] += wt2 * verts[i3 + 2];\r\n                wt2vi = wt2 + vdi;\r\n                tps[i3] /= wt2vi;\r\n                tps[i3 + 1] /= wt2vi;\r\n                tps[i3 + 2] /= wt2vi;\r\n            }\r\n            else {\r\n                tps[i3] = 0;\r\n                tps[i3 + 1] = 0;\r\n                tps[i3 + 2] = 0;\r\n                for (j = 0; j < vdi; ++j) {\r\n                    vi3 = vertdeg[j + 1][i] * 3;\r\n                    tps[i3] += verts[vi3];\r\n                    tps[i3 + 1] += verts[vi3 + 1];\r\n                    tps[i3 + 2] += verts[vi3 + 2];\r\n                }\r\n                tps[i3] += wt * verts[i3];\r\n                tps[i3 + 1] += wt * verts[i3 + 1];\r\n                tps[i3 + 2] += wt * verts[i3 + 2];\r\n                wtvi = wt + vdi;\r\n                tps[i3] /= wtvi;\r\n                tps[i3 + 1] /= wtvi;\r\n                tps[i3 + 2] /= wtvi;\r\n            }\r\n        }\r\n        verts.set(tps); // copy smoothed positions\r\n        if (inflate) {\r\n            computeVertexNormals(verts, faces, norms);\r\n            var nv3 = nv * 3;\r\n            for (i3 = 0; i3 < nv3; i3 += 3) {\r\n                // if(verts[i].inout) ssign=1;\r\n                // else ssign=-1;\r\n                verts[i3] += ssign * outwt * norms[i3];\r\n                verts[i3 + 1] += ssign * outwt * norms[i3 + 1];\r\n                verts[i3 + 2] += ssign * outwt * norms[i3 + 2];\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.assign(laplacianSmooth, { __deps: [computeVertexNormals] });\r\nfunction computeVertexNormals(position, index, normal) {\r\n    var i, il;\r\n    if (normal === undefined) {\r\n        normal = new Float32Array(position.length);\r\n    }\r\n    else {\r\n        // reset existing normals to zero\r\n        for (i = 0, il = normal.length; i < il; i++) {\r\n            normal[i] = 0;\r\n        }\r\n    }\r\n    var a = new Float32Array(3);\r\n    var b = new Float32Array(3);\r\n    var c = new Float32Array(3);\r\n    var cb = new Float32Array(3);\r\n    var ab = new Float32Array(3);\r\n    if (index) {\r\n        // indexed elements\r\n        for (i = 0, il = index.length; i < il; i += 3) {\r\n            var ai = index[i] * 3;\r\n            var bi = index[i + 1] * 3;\r\n            var ci = index[i + 2] * 3;\r\n            v3fromArray(a, position, ai);\r\n            v3fromArray(b, position, bi);\r\n            v3fromArray(c, position, ci);\r\n            v3sub(cb, c, b);\r\n            v3sub(ab, a, b);\r\n            v3cross(cb, cb, ab);\r\n            normal[ai] += cb[0];\r\n            normal[ai + 1] += cb[1];\r\n            normal[ai + 2] += cb[2];\r\n            normal[bi] += cb[0];\r\n            normal[bi + 1] += cb[1];\r\n            normal[bi + 2] += cb[2];\r\n            normal[ci] += cb[0];\r\n            normal[ci + 1] += cb[1];\r\n            normal[ci + 2] += cb[2];\r\n        }\r\n    }\r\n    else {\r\n        // non-indexed elements (unconnected triangle soup)\r\n        for (i = 0, il = position.length; i < il; i += 9) {\r\n            v3fromArray(a, position, i);\r\n            v3fromArray(b, position, i + 3);\r\n            v3fromArray(c, position, i + 6);\r\n            v3sub(cb, c, b);\r\n            v3sub(ab, a, b);\r\n            v3cross(cb, cb, ab);\r\n            normal[i] = cb[0];\r\n            normal[i + 1] = cb[1];\r\n            normal[i + 2] = cb[2];\r\n            normal[i + 3] = cb[0];\r\n            normal[i + 4] = cb[1];\r\n            normal[i + 5] = cb[2];\r\n            normal[i + 6] = cb[0];\r\n            normal[i + 7] = cb[1];\r\n            normal[i + 8] = cb[2];\r\n        }\r\n    }\r\n    normalizeVector3array(normal);\r\n    return normal;\r\n}\r\nObject.assign(computeVertexNormals, { __deps: [\r\n        v3sub, v3cross, v3fromArray, normalizeVector3array\r\n    ] });\r\nfunction getRadiusDict(radiusList) {\r\n    var radiusDict = {};\r\n    for (var i = 0, il = radiusList.length; i < il; ++i) {\r\n        radiusDict[radiusList[i]] = true;\r\n    }\r\n    return radiusDict;\r\n}\r\nfunction getSurfaceGrid(min, max, maxRadius, scaleFactor, extraMargin) {\r\n    // need margin to avoid boundary/round off effects\r\n    var margin = (1 / scaleFactor) * 3;\r\n    margin += maxRadius;\r\n    v3subScalar(min, min, extraMargin + margin);\r\n    v3addScalar(max, max, extraMargin + margin);\r\n    v3multiplyScalar(min, min, scaleFactor);\r\n    v3floor(min, min);\r\n    v3divideScalar(min, min, scaleFactor);\r\n    v3multiplyScalar(max, max, scaleFactor);\r\n    v3ceil(max, max);\r\n    v3divideScalar(max, max, scaleFactor);\r\n    var dim = new Float32Array(3);\r\n    v3sub(dim, max, min);\r\n    v3multiplyScalar(dim, dim, scaleFactor);\r\n    v3ceil(dim, dim);\r\n    v3addScalar(dim, dim, 1);\r\n    var maxSize = Math.pow(10, 6) * 256;\r\n    var tmpSize = dim[0] * dim[1] * dim[2] * 3;\r\n    if (maxSize <= tmpSize) {\r\n        scaleFactor *= Math.pow(maxSize / tmpSize, 1 / 3);\r\n        v3multiplyScalar(min, min, scaleFactor);\r\n        v3floor(min, min);\r\n        v3divideScalar(min, min, scaleFactor);\r\n        v3multiplyScalar(max, max, scaleFactor);\r\n        v3ceil(max, max);\r\n        v3divideScalar(max, max, scaleFactor);\r\n        v3sub(dim, max, min);\r\n        v3multiplyScalar(dim, dim, scaleFactor);\r\n        v3ceil(dim, dim);\r\n        v3addScalar(dim, dim, 1);\r\n    }\r\n    var tran = new Float32Array(min);\r\n    v3negate(tran, tran);\r\n    // coordinate transformation matrix\r\n    var matrix = m4new();\r\n    var mroty = m4new();\r\n    m4makeRotationY(mroty, degToRad(90));\r\n    m4multiply(matrix, matrix, mroty);\r\n    var mscale = m4new();\r\n    m4makeScale(mscale, -1 / scaleFactor, 1 / scaleFactor, 1 / scaleFactor);\r\n    m4multiply(matrix, matrix, mscale);\r\n    var mtrans = m4new();\r\n    m4makeTranslation(mtrans, -scaleFactor * tran[2], -scaleFactor * tran[1], -scaleFactor * tran[0]);\r\n    m4multiply(matrix, matrix, mtrans);\r\n    return {\r\n        dim: dim,\r\n        tran: tran,\r\n        matrix: matrix,\r\n        scaleFactor: scaleFactor\r\n    };\r\n}\r\nObject.assign(getSurfaceGrid, { '__deps': [\r\n        degToRad,\r\n        v3subScalar, v3addScalar, v3divideScalar, v3multiplyScalar,\r\n        v3floor, v3ceil, v3sub, v3negate,\r\n        m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\r\n    ] });\r\nexport { laplacianSmooth, computeVertexNormals, getRadiusDict, getSurfaceGrid };\r\n//# sourceMappingURL=surface-utils.js.map","/**\r\n * @file Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Box3, Geometry, BufferGeometry, Group, Color } from 'three';\r\nimport { Debug, Log, ColormakerRegistry } from '../globals';\r\nimport { getUintArray } from '../utils';\r\nimport { AtomPicker, SurfacePicker } from '../utils/picker.js';\r\nimport { uniformArray, uniformArray3, serialArray } from '../math/array-utils.js';\r\nimport Selection from '../selection/selection.js';\r\n/**\r\n * Surface\r\n */\r\nclass Surface {\r\n    /**\r\n     * @param {String} name - surface name\r\n     * @param {String} path - source path\r\n     * @param {Object} data - surface data\r\n     * @param {Float32Array} data.position - surface positions\r\n     * @param {Int32Array} data.index - surface indices\r\n     * @param {Float32Array} data.normal - surface normals\r\n     * @param {Float32Array} data.color - surface colors\r\n     * @param {Int32Array} data.atomindex - atom indices\r\n     * @param {boolean} data.contour - contour mode flag\r\n     */\r\n    constructor(name, path, data) {\r\n        this.name = name || '';\r\n        this.path = path || '';\r\n        this.info = {};\r\n        this.center = new Vector3();\r\n        this.boundingBox = new Box3();\r\n        if (data instanceof Geometry ||\r\n            data instanceof BufferGeometry ||\r\n            data instanceof Group) {\r\n            // to be removed\r\n            this.fromGeometry(data);\r\n        }\r\n        else if (data) {\r\n            this.set(data.position, data.index, data.normal, data.color, data.atomindex, data.contour);\r\n            this.boundingBox.setFromArray(data.position);\r\n            this.boundingBox.getCenter(this.center);\r\n        }\r\n    }\r\n    get type() { return 'Surface'; }\r\n    /**\r\n     * set surface data\r\n     * @param {Float32Array} position - surface positions\r\n     * @param {Int32Array} index - surface indices\r\n     * @param {Float32Array} normal - surface normals\r\n     * @param {Float32Array} color - surface colors\r\n     * @param {Int32Array} atomindex - atom indices\r\n     * @param {boolean} contour - contour mode flag\r\n     * @return {undefined}\r\n     */\r\n    set(position, index, normal, color, atomindex, contour = false) {\r\n        /**\r\n         * @type {Float32Array}\r\n         */\r\n        this.position = position;\r\n        /**\r\n         * @type {Uint32Array|Uint16Array|undefined}\r\n         */\r\n        this.index = index;\r\n        /**\r\n         * @type {Float32Array|undefined}\r\n         */\r\n        this.normal = normal;\r\n        /**\r\n         * @type {Float32Array|undefined}\r\n         */\r\n        this.color = color;\r\n        /**\r\n         * @type {Int32Array|undefined}\r\n         */\r\n        this.atomindex = atomindex;\r\n        this.size = position.length / 3;\r\n        this.contour = contour;\r\n    }\r\n    fromGeometry(geometry) {\r\n        if (Debug)\r\n            Log.time('GeometrySurface.fromGeometry');\r\n        let geo;\r\n        if (geometry instanceof Geometry) {\r\n            geometry.computeVertexNormals(true);\r\n            geo = new BufferGeometry().fromGeometry(geometry);\r\n        }\r\n        else if (geometry instanceof BufferGeometry) {\r\n            geo = geometry;\r\n        }\r\n        else {\r\n            geo = geometry[0];\r\n        }\r\n        if (!geo.boundingBox)\r\n            geo.computeBoundingBox();\r\n        this.boundingBox.copy(geo.boundingBox);\r\n        this.boundingBox.getCenter(this.center);\r\n        let position, color, index, normal;\r\n        if (geo instanceof BufferGeometry) {\r\n            const attr = geo.attributes;\r\n            const an = attr.normal ? attr.normal.array : false;\r\n            // assume there are no normals if the first is zero\r\n            if (!an || (an[0] === 0 && an[1] === 0 && an[2] === 0)) {\r\n                geo.computeVertexNormals();\r\n            }\r\n            position = attr.position.array;\r\n            index = attr.index ? attr.index.array : null;\r\n            normal = attr.normal.array;\r\n        }\r\n        this.set(position, index, normal, color, undefined);\r\n        if (Debug)\r\n            Log.timeEnd('GeometrySurface.setGeometry');\r\n    }\r\n    getPosition() {\r\n        return this.position;\r\n    }\r\n    getColor(params) {\r\n        const p = params || {};\r\n        p.surface = this;\r\n        const n = this.size;\r\n        const array = new Float32Array(n * 3);\r\n        const colormaker = ColormakerRegistry.getScheme(p);\r\n        if (colormaker.volumeColor || p.scheme === 'random') {\r\n            for (let i = 0; i < n; ++i) {\r\n                colormaker.volumeColorToArray(i, array, i * 3);\r\n            }\r\n        }\r\n        else if (colormaker.positionColor) {\r\n            const v = new Vector3();\r\n            const pos = this.position;\r\n            for (let i = 0; i < n; ++i) {\r\n                var i3 = i * 3;\r\n                v.set(pos[i3], pos[i3 + 1], pos[i3 + 2]);\r\n                colormaker.positionColorToArray(v, array, i3);\r\n            }\r\n        }\r\n        else if (colormaker.atomColor && this.atomindex) {\r\n            const atomProxy = p.structure.getAtomProxy();\r\n            const atomindex = this.atomindex;\r\n            for (let i = 0; i < n; ++i) {\r\n                atomProxy.index = atomindex[i];\r\n                colormaker.atomColorToArray(atomProxy, array, i * 3);\r\n            }\r\n        }\r\n        else {\r\n            const tc = new Color(p.value);\r\n            uniformArray3(n, tc.r, tc.g, tc.b, array);\r\n        }\r\n        return array;\r\n    }\r\n    getPicking(structure) {\r\n        if (this.atomindex && structure) {\r\n            return new AtomPicker(this.atomindex, structure);\r\n        }\r\n        else {\r\n            return new SurfacePicker(serialArray(this.size), this);\r\n        }\r\n    }\r\n    getNormal() {\r\n        return this.normal;\r\n    }\r\n    getSize(size, scale) {\r\n        return uniformArray(this.size, size * scale);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    getFilteredIndex(sele, structure) {\r\n        if (sele && this.atomindex) {\r\n            const selection = new Selection(sele);\r\n            const atomSet = structure.getAtomSet(selection);\r\n            const filteredIndex = [];\r\n            const atomindex = this.atomindex;\r\n            const index = this.index;\r\n            const n = index.length;\r\n            const elementSize = this.contour ? 2 : 3;\r\n            let j = 0;\r\n            for (let i = 0; i < n; i += elementSize) {\r\n                let include = true;\r\n                for (let a = 0; a < elementSize; a++) {\r\n                    const idx = index[i + a];\r\n                    const ai = atomindex[idx];\r\n                    if (!atomSet.get(ai)) {\r\n                        include = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!include) {\r\n                    continue;\r\n                }\r\n                for (let a = 0; a < elementSize; a++, j++) {\r\n                    filteredIndex[j] = index[i + a];\r\n                }\r\n            }\r\n            return getUintArray(filteredIndex, this.position.length / 3);\r\n        }\r\n        else {\r\n            return this.index;\r\n        }\r\n    }\r\n    getAtomindex() {\r\n        return this.atomindex;\r\n    }\r\n    dispose() {\r\n        //\r\n    }\r\n}\r\nexport default Surface;\r\n//# sourceMappingURL=surface.js.map","/**\r\n * @file Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Box3, Matrix3, Matrix4 } from 'three';\r\nimport { WorkerRegistry, ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport WorkerPool from '../worker/worker-pool.js';\r\nimport { VolumePicker } from '../utils/picker.js';\r\nimport { uniformArray, serialArray, arrayMin, arrayMax, arraySum, arrayMean, arrayRms } from '../math/array-utils';\r\nimport MarchingCubes from './marching-cubes.js';\r\nimport { laplacianSmooth, computeVertexNormals } from './surface-utils.js';\r\nimport { applyMatrix4toVector3array, applyMatrix3toVector3array } from '../math/vector-utils.js';\r\nimport { m3new, m3makeNormal } from '../math/matrix-utils.js';\r\nimport Surface from './surface.js';\r\nexport function VolumeSurface(data, nx, ny, nz, atomindex) {\r\n    var mc = new MarchingCubes(data, nx, ny, nz, atomindex);\r\n    function getSurface(isolevel, smooth, box, matrix, contour, wrap = false) {\r\n        const sd = mc.triangulate(isolevel, smooth, box, contour, wrap);\r\n        if (smooth && !contour) {\r\n            laplacianSmooth(sd.position, sd.index, smooth, true);\r\n            sd.normal = computeVertexNormals(sd.position, sd.index);\r\n        }\r\n        if (matrix) {\r\n            applyMatrix4toVector3array(matrix, sd.position);\r\n            if (sd.normal) {\r\n                const normalMatrix = m3new();\r\n                m3makeNormal(normalMatrix, matrix);\r\n                applyMatrix3toVector3array(normalMatrix, sd.normal);\r\n            }\r\n        }\r\n        return sd;\r\n    }\r\n    this.getSurface = getSurface;\r\n}\r\nObject.assign(VolumeSurface, { __deps: [\r\n        laplacianSmooth, computeVertexNormals, MarchingCubes,\r\n        applyMatrix4toVector3array, applyMatrix3toVector3array,\r\n        m3new, m3makeNormal\r\n    ] });\r\nWorkerRegistry.add('surf', function func(e, callback) {\r\n    const a = e.data.args;\r\n    const p = e.data.params;\r\n    if (a) {\r\n        /* global self */\r\n        self.volsurf = new VolumeSurface(a[0], a[1], a[2], a[3], a[4]);\r\n    }\r\n    if (p) {\r\n        const sd = self.volsurf.getSurface(p.isolevel, p.smooth, p.box, p.matrix, p.contour, p.wrap);\r\n        const transferList = [sd.position.buffer, sd.index.buffer];\r\n        if (sd.normal)\r\n            transferList.push(sd.normal.buffer);\r\n        if (sd.atomindex)\r\n            transferList.push(sd.atomindex.buffer);\r\n        const data = {\r\n            sd: sd,\r\n            p: p\r\n        };\r\n        callback(data, transferList);\r\n    }\r\n}, [VolumeSurface]);\r\n/**\r\n * Volume\r\n */\r\nclass Volume {\r\n    /**\r\n     * Make Volume instance\r\n     * @param {String} name - volume name\r\n     * @param {String} path - source path\r\n     * @param {Float32array} data - volume 3d grid\r\n     * @param {Integer} nx - x dimension of the 3d volume\r\n     * @param {Integer} ny - y dimension of the 3d volume\r\n     * @param {Integer} nz - z dimension of the 3d volume\r\n     * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n     */\r\n    constructor(name, path, data, nx, ny, nz, atomindex) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.matrix = new Matrix4();\r\n        this.normalMatrix = new Matrix3();\r\n        this.inverseMatrix = new Matrix4();\r\n        this.center = new Vector3();\r\n        this.boundingBox = new Box3();\r\n        this.setData(data, nx, ny, nz, atomindex);\r\n    }\r\n    get type() { return 'Volume'; }\r\n    /**\r\n     * set volume data\r\n     * @param {Float32array} data - volume 3d grid\r\n     * @param {Integer} nx - x dimension of the 3d volume\r\n     * @param {Integer} ny - y dimension of the 3d volume\r\n     * @param {Integer} nz - z dimension of the 3d volume\r\n     * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n     * @return {undefined}\r\n     */\r\n    setData(data, nx, ny, nz, atomindex) {\r\n        this.nx = nx || 1;\r\n        this.ny = ny || 1;\r\n        this.nz = nz || 1;\r\n        this.data = data || new Float32Array(1);\r\n        this.setAtomindex(atomindex);\r\n        delete this._position;\r\n        delete this._min;\r\n        delete this._max;\r\n        delete this._mean;\r\n        delete this._rms;\r\n        if (this.worker)\r\n            this.worker.terminate();\r\n    }\r\n    /**\r\n     * Set statistics, which can be different from the data in this volume,\r\n     * if this volume is a slice of a bigger volume\r\n     * @param {Number|undefined} min - minimum value of the whole data set\r\n     * @param {Number|undefined} max - maximum value of the whole data set\r\n     * @param {Number|undefined} mean - average value of the whole data set\r\n     * @param {Number|undefined} rms - sigma value of the whole data set\r\n     */\r\n    setStats(min, max, mean, rms) {\r\n        this._min = min;\r\n        this._max = max;\r\n        this._mean = mean;\r\n        this._rms = rms;\r\n    }\r\n    /**\r\n     * set transformation matrix\r\n     * @param {Matrix4} matrix - 4x4 transformation matrix\r\n     * @return {undefined}\r\n     */\r\n    setMatrix(matrix) {\r\n        this.matrix.copy(matrix);\r\n        const bb = this.boundingBox;\r\n        const v = this.center; // temporary re-purposing\r\n        const x = this.nx - 1;\r\n        const y = this.ny - 1;\r\n        const z = this.nz - 1;\r\n        bb.makeEmpty();\r\n        bb.expandByPoint(v.set(x, y, z));\r\n        bb.expandByPoint(v.set(x, y, 0));\r\n        bb.expandByPoint(v.set(x, 0, z));\r\n        bb.expandByPoint(v.set(x, 0, 0));\r\n        bb.expandByPoint(v.set(0, y, z));\r\n        bb.expandByPoint(v.set(0, 0, z));\r\n        bb.expandByPoint(v.set(0, y, 0));\r\n        bb.expandByPoint(v.set(0, 0, 0));\r\n        bb.applyMatrix4(this.matrix);\r\n        bb.getCenter(this.center);\r\n        // make normal matrix\r\n        const me = this.matrix.elements;\r\n        const r0 = new Vector3(me[0], me[1], me[2]);\r\n        const r1 = new Vector3(me[4], me[5], me[6]);\r\n        const r2 = new Vector3(me[8], me[9], me[10]);\r\n        const cp = new Vector3();\r\n        //        [ r0 ]       [ r1 x r2 ]\r\n        // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n        //        [ r2 ]       [ r0 x r1 ]\r\n        const ne = this.normalMatrix.elements;\r\n        cp.crossVectors(r1, r2);\r\n        ne[0] = cp.x;\r\n        ne[1] = cp.y;\r\n        ne[2] = cp.z;\r\n        cp.crossVectors(r2, r0);\r\n        ne[3] = cp.x;\r\n        ne[4] = cp.y;\r\n        ne[5] = cp.z;\r\n        cp.crossVectors(r0, r1);\r\n        ne[6] = cp.x;\r\n        ne[7] = cp.y;\r\n        ne[8] = cp.z;\r\n        this.inverseMatrix.getInverse(this.matrix);\r\n    }\r\n    /**\r\n     * set atom indices\r\n     * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n     * @return {undefined}\r\n       */\r\n    setAtomindex(atomindex) {\r\n        this.atomindex = atomindex;\r\n    }\r\n    getBox(center, size, target) {\r\n        if (!target)\r\n            target = new Box3();\r\n        target.set(center, center);\r\n        target.expandByScalar(size);\r\n        target.applyMatrix4(this.inverseMatrix);\r\n        target.min.round();\r\n        target.max.round();\r\n        return target;\r\n    }\r\n    _getBox(center, size) {\r\n        if (!center || !size)\r\n            return;\r\n        if (!this.__box)\r\n            this.__box = new Box3();\r\n        const box = this.getBox(center, size, this.__box);\r\n        return [box.min.toArray(), box.max.toArray()];\r\n    }\r\n    _makeSurface(sd, isolevel, smooth) {\r\n        const name = this.name + '@' + isolevel.toPrecision(2);\r\n        const surface = new Surface(name, '', sd);\r\n        surface.info.isolevel = isolevel;\r\n        surface.info.smooth = smooth;\r\n        surface.info.volume = this;\r\n        return surface;\r\n    }\r\n    getSurface(isolevel, smooth, center, size, contour, wrap = false) {\r\n        isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel;\r\n        smooth = defaults(smooth, 0);\r\n        //\r\n        if (this.volsurf === undefined) {\r\n            this.volsurf = new VolumeSurface(this.data, this.nx, this.ny, this.nz, this.atomindex);\r\n        }\r\n        const box = this._getBox(center, size);\r\n        const sd = this.volsurf.getSurface(isolevel, smooth, box, this.matrix.elements, contour, wrap);\r\n        return this._makeSurface(sd, isolevel, smooth);\r\n    }\r\n    getSurfaceWorker(isolevel, smooth, center, size, contour, wrap, callback) {\r\n        isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel;\r\n        smooth = smooth || 0;\r\n        //\r\n        if (window.hasOwnProperty('Worker')) {\r\n            if (this.workerPool === undefined) {\r\n                this.workerPool = new WorkerPool('surf', 2);\r\n            }\r\n            const msg = {};\r\n            const worker = this.workerPool.getNextWorker();\r\n            if (worker.postCount === 0) {\r\n                Object.assign(msg, {\r\n                    args: [\r\n                        this.data, this.nx, this.ny, this.nz, this.atomindex\r\n                    ]\r\n                });\r\n            }\r\n            Object.assign(msg, {\r\n                params: {\r\n                    isolevel: isolevel,\r\n                    smooth: smooth,\r\n                    box: this._getBox(center, size),\r\n                    matrix: this.matrix.elements,\r\n                    contour: contour,\r\n                    wrap: wrap\r\n                }\r\n            });\r\n            worker.post(msg, undefined, (e) => {\r\n                const sd = e.data.sd;\r\n                const p = e.data.p;\r\n                callback(this._makeSurface(sd, p.isolevel, p.smooth));\r\n            }, (e) => {\r\n                console.warn('Volume.getSurfaceWorker error - trying without worker', e);\r\n                const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap);\r\n                callback(surface);\r\n            });\r\n        }\r\n        else {\r\n            const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap);\r\n            callback(surface);\r\n        }\r\n    }\r\n    getValueForSigma(sigma) {\r\n        return this.mean + defaults(sigma, 2) * this.rms;\r\n    }\r\n    getSigmaForValue(value) {\r\n        return (defaults(value, 0) - this.mean) / this.rms;\r\n    }\r\n    get position() {\r\n        if (!this._position) {\r\n            const nz = this.nz;\r\n            const ny = this.ny;\r\n            const nx = this.nx;\r\n            const position = new Float32Array(nx * ny * nz * 3);\r\n            let p = 0;\r\n            for (let z = 0; z < nz; ++z) {\r\n                for (let y = 0; y < ny; ++y) {\r\n                    for (let x = 0; x < nx; ++x) {\r\n                        position[p + 0] = x;\r\n                        position[p + 1] = y;\r\n                        position[p + 2] = z;\r\n                        p += 3;\r\n                    }\r\n                }\r\n            }\r\n            applyMatrix4toVector3array(this.matrix.elements, position);\r\n            this._position = position;\r\n        }\r\n        return this._position;\r\n    }\r\n    getDataAtomindex() {\r\n        return this.atomindex;\r\n    }\r\n    getDataPosition() {\r\n        return this.position;\r\n    }\r\n    getDataColor(params) {\r\n        const p = params || {};\r\n        p.volume = this;\r\n        p.scale = p.scale || 'Spectral';\r\n        p.domain = p.domain || [this.min, this.max];\r\n        const colormaker = ColormakerRegistry.getScheme(p);\r\n        const n = this.position.length / 3;\r\n        const array = new Float32Array(n * 3);\r\n        // var atoms = p.structure.atoms;\r\n        // var atomindex = this.atomindex;\r\n        for (let i = 0; i < n; ++i) {\r\n            colormaker.volumeColorToArray(i, array, i * 3);\r\n            // a = atoms[ atomindex[ i ] ];\r\n            // if( a ) colormaker.atomColorToArray( a, array, i * 3 );\r\n        }\r\n        return array;\r\n    }\r\n    getDataPicking() {\r\n        const picking = serialArray(this.position.length / 3);\r\n        return new VolumePicker(picking, this);\r\n    }\r\n    getDataSize(size, scale) {\r\n        const data = this.data;\r\n        const n = this.position.length / 3;\r\n        let array;\r\n        switch (size) {\r\n            case 'value':\r\n                array = new Float32Array(data);\r\n                break;\r\n            case 'abs-value':\r\n                array = new Float32Array(data);\r\n                for (let i = 0; i < n; ++i) {\r\n                    array[i] = Math.abs(array[i]);\r\n                }\r\n                break;\r\n            case 'value-min': {\r\n                array = new Float32Array(data);\r\n                const min = this.min;\r\n                for (let i = 0; i < n; ++i) {\r\n                    array[i] -= min;\r\n                }\r\n                break;\r\n            }\r\n            case 'deviation':\r\n                array = new Float32Array(data);\r\n                break;\r\n            default:\r\n                array = uniformArray(n, size);\r\n                break;\r\n        }\r\n        if (scale !== 1.0) {\r\n            for (let i = 0; i < n; ++i) {\r\n                array[i] *= scale;\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    get min() {\r\n        if (this._min === undefined) {\r\n            this._min = arrayMin(this.data);\r\n        }\r\n        return this._min;\r\n    }\r\n    get max() {\r\n        if (this._max === undefined) {\r\n            this._max = arrayMax(this.data);\r\n        }\r\n        return this._max;\r\n    }\r\n    get sum() {\r\n        if (this._sum === undefined) {\r\n            this._sum = arraySum(this.data);\r\n        }\r\n        return this._sum;\r\n    }\r\n    get mean() {\r\n        if (this._mean === undefined) {\r\n            this._mean = arrayMean(this.data);\r\n        }\r\n        return this._mean;\r\n    }\r\n    get rms() {\r\n        if (this._rms === undefined) {\r\n            this._rms = arrayRms(this.data);\r\n        }\r\n        return this._rms;\r\n    }\r\n    clone() {\r\n        const vol = new Volume(this.name, this.path, this.data, this.nx, this.ny, this.nz, this.atomindex);\r\n        vol.matrix.copy(this.matrix);\r\n        vol.header = Object.assign({}, this.header);\r\n        return vol;\r\n    }\r\n    dispose() {\r\n        if (this.workerPool)\r\n            this.workerPool.terminate();\r\n    }\r\n}\r\nexport default Volume;\r\n//# sourceMappingURL=volume.js.map","/**\r\n * @file Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color, Vector3, Matrix4, FrontSide, BackSide, DoubleSide, \r\n// VertexColors,\r\nNoBlending, BufferGeometry, BufferAttribute, UniformsUtils, UniformsLib, Group, LineSegments, Points, Mesh, ShaderMaterial } from 'three';\r\nimport { Log } from '../globals';\r\nimport { createParams, getTypedArray, getUintArray } from '../utils';\r\nimport { getShader } from '../shader/shader-utils.js';\r\nimport { serialArray } from '../math/array-utils';\r\nfunction getThreeSide(side) {\r\n    if (side === 'front') {\r\n        return FrontSide;\r\n    }\r\n    else if (side === 'back') {\r\n        return BackSide;\r\n    }\r\n    else if (side === 'double') {\r\n        return DoubleSide;\r\n    }\r\n    else {\r\n        return DoubleSide;\r\n    }\r\n}\r\nconst itemSize = {\r\n    'f': 1, 'v2': 2, 'v3': 3, 'c': 3\r\n};\r\nfunction setObjectMatrix(object, matrix) {\r\n    object.matrix.copy(matrix);\r\n    object.matrix.decompose(object.position, object.quaternion, object.scale);\r\n    object.matrixWorldNeedsUpdate = true;\r\n}\r\nexport const BufferDefaultParameters = {\r\n    opaqueBack: false,\r\n    side: 'double',\r\n    opacity: 1.0,\r\n    depthWrite: true,\r\n    clipNear: 0,\r\n    clipRadius: 0,\r\n    clipCenter: new Vector3(),\r\n    flatShaded: false,\r\n    wireframe: false,\r\n    roughness: 0.4,\r\n    metalness: 0.0,\r\n    diffuse: 0xffffff,\r\n    diffuseInterior: false,\r\n    useInteriorColor: false,\r\n    interiorColor: 0xdddddd,\r\n    interiorDarkening: 0,\r\n    forceTransparent: false,\r\n    matrix: new Matrix4(),\r\n    disablePicking: false,\r\n    sortParticles: false,\r\n    background: false\r\n};\r\nexport const BufferParameterTypes = {\r\n    opaqueBack: { updateShader: true },\r\n    side: { updateShader: true, property: true },\r\n    opacity: { uniform: true },\r\n    depthWrite: { property: true },\r\n    clipNear: { updateShader: true, property: true },\r\n    clipRadius: { updateShader: true, uniform: true },\r\n    clipCenter: { uniform: true },\r\n    flatShaded: { updateShader: true },\r\n    background: { updateShader: true },\r\n    wireframe: { updateVisibility: true },\r\n    roughness: { uniform: true },\r\n    metalness: { uniform: true },\r\n    diffuse: { uniform: true },\r\n    diffuseInterior: { updateShader: true },\r\n    useInteriorColor: { updateShader: true },\r\n    interiorColor: { uniform: true },\r\n    interiorDarkening: { uniform: true },\r\n    matrix: {}\r\n};\r\n/**\r\n * Buffer class. Base class for buffers.\r\n * @interface\r\n */\r\nclass Buffer {\r\n    /**\r\n     * @param {Object} data - attribute object\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Uint32Array|Uint16Array} data.index - triangle indices\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} params - parameters object\r\n     */\r\n    constructor(data, params = {}) {\r\n        this.parameterTypes = BufferParameterTypes;\r\n        this.geometry = new BufferGeometry();\r\n        this.indexVersion = 0;\r\n        this.wireframeIndexVersion = -1;\r\n        this.group = new Group();\r\n        this.wireframeGroup = new Group();\r\n        this.pickingGroup = new Group();\r\n        this.vertexShader = '';\r\n        this.fragmentShader = '';\r\n        this.isImpostor = false;\r\n        this.isText = false;\r\n        this.isSurface = false;\r\n        this.isPoint = false;\r\n        this.isLine = false;\r\n        this.dynamic = true;\r\n        this.visible = true;\r\n        this.wireframeIndexCount = 0;\r\n        this.parameters = createParams(params, this.defaultParameters);\r\n        this.uniforms = UniformsUtils.merge([\r\n            UniformsLib.common,\r\n            {\r\n                fogColor: { value: new Color(0x000000) },\r\n                fogNear: { value: 0.0 },\r\n                fogFar: { value: 0.0 },\r\n                opacity: { value: this.parameters.opacity },\r\n                clipNear: { value: 0.0 },\r\n                clipRadius: { value: this.parameters.clipRadius },\r\n                clipCenter: { value: this.parameters.clipCenter }\r\n            },\r\n            {\r\n                emissive: { value: new Color(0x000000) },\r\n                roughness: { value: this.parameters.roughness },\r\n                metalness: { value: this.parameters.metalness },\r\n                interiorColor: { value: new Color(this.parameters.interiorColor) },\r\n                interiorDarkening: { value: this.parameters.interiorDarkening },\r\n            },\r\n            UniformsLib.lights\r\n        ]);\r\n        this.uniforms.diffuse.value.set(this.parameters.diffuse);\r\n        this.pickingUniforms = {\r\n            clipNear: { value: 0.0 },\r\n            objectId: { value: 0 },\r\n            opacity: { value: this.parameters.opacity }\r\n        };\r\n        //\r\n        const position = data.position || data.position1;\r\n        this._positionDataSize = position ? position.length / 3 : 0;\r\n        if (!data.primitiveId) {\r\n            data.primitiveId = serialArray(this._positionDataSize);\r\n        }\r\n        this.addAttributes({\r\n            position: { type: 'v3', value: data.position },\r\n            color: { type: 'c', value: data.color },\r\n            primitiveId: { type: 'f', value: data.primitiveId }\r\n        });\r\n        if (params.matrix) {\r\n            this.matrix = params.matrix;\r\n        }\r\n        if (data.index) {\r\n            this.initIndex(data.index);\r\n        }\r\n        this.picking = data.picking;\r\n        this.makeWireframeGeometry();\r\n    }\r\n    get defaultParameters() { return BufferDefaultParameters; }\r\n    set matrix(m) {\r\n        this.setMatrix(m);\r\n    }\r\n    get matrix() {\r\n        return this.group.matrix.clone();\r\n    }\r\n    get transparent() {\r\n        return this.parameters.opacity < 1 || this.parameters.forceTransparent;\r\n    }\r\n    get size() {\r\n        return this._positionDataSize;\r\n    }\r\n    get attributeSize() {\r\n        return this.size;\r\n    }\r\n    get pickable() {\r\n        return !!this.picking && !this.parameters.disablePicking;\r\n    }\r\n    setMatrix(m) {\r\n        setObjectMatrix(this.group, m);\r\n        setObjectMatrix(this.wireframeGroup, m);\r\n        setObjectMatrix(this.pickingGroup, m);\r\n    }\r\n    initIndex(index) {\r\n        this.geometry.setIndex(new BufferAttribute(index, 1));\r\n        const nindex = this.geometry.getIndex();\r\n        if (!nindex) {\r\n            Log.error('Index is null');\r\n            return;\r\n        }\r\n        nindex.setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0);\r\n    }\r\n    makeMaterial() {\r\n        const side = getThreeSide(this.parameters.side);\r\n        const m = new ShaderMaterial({\r\n            uniforms: this.uniforms,\r\n            vertexShader: '',\r\n            fragmentShader: '',\r\n            depthTest: true,\r\n            transparent: this.transparent,\r\n            depthWrite: this.parameters.depthWrite,\r\n            lights: true,\r\n            fog: true,\r\n            side: side\r\n        });\r\n        m.vertexColors = true;\r\n        m.extensions.derivatives = true;\r\n        m.extensions.fragDepth = this.isImpostor;\r\n        const wm = new ShaderMaterial({\r\n            uniforms: this.uniforms,\r\n            vertexShader: '',\r\n            fragmentShader: '',\r\n            depthTest: true,\r\n            transparent: this.transparent,\r\n            depthWrite: this.parameters.depthWrite,\r\n            lights: false,\r\n            fog: true,\r\n            side: side\r\n        });\r\n        wm.vertexColors = true;\r\n        const pm = new ShaderMaterial({\r\n            uniforms: this.pickingUniforms,\r\n            vertexShader: '',\r\n            fragmentShader: '',\r\n            depthTest: true,\r\n            transparent: false,\r\n            depthWrite: this.parameters.depthWrite,\r\n            lights: false,\r\n            fog: false,\r\n            side: side,\r\n            blending: NoBlending\r\n        });\r\n        pm.vertexColors = true;\r\n        pm.extensions.fragDepth = this.isImpostor;\r\n        m.clipNear = this.parameters.clipNear;\r\n        wm.clipNear = this.parameters.clipNear;\r\n        pm.clipNear = this.parameters.clipNear;\r\n        this.material = m;\r\n        this.wireframeMaterial = wm;\r\n        this.pickingMaterial = pm;\r\n        // also sets vertexShader/fragmentShader\r\n        this.updateShader();\r\n    }\r\n    makeWireframeGeometry() {\r\n        this.makeWireframeIndex();\r\n        const geometry = this.geometry;\r\n        const wireframeIndex = this.wireframeIndex;\r\n        const wireframeGeometry = new BufferGeometry();\r\n        wireframeGeometry.attributes = geometry.attributes;\r\n        if (wireframeIndex) {\r\n            wireframeGeometry.setIndex(new BufferAttribute(wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0));\r\n            wireframeGeometry.setDrawRange(0, this.wireframeIndexCount);\r\n        }\r\n        this.wireframeGeometry = wireframeGeometry;\r\n    }\r\n    makeWireframeIndex() {\r\n        const edges = [];\r\n        function checkEdge(a, b) {\r\n            if (a > b) {\r\n                const tmp = a;\r\n                a = b;\r\n                b = tmp;\r\n            }\r\n            const list = edges[a];\r\n            if (list === undefined) {\r\n                edges[a] = [b];\r\n                return true;\r\n            }\r\n            else if (!list.includes(b)) {\r\n                list.push(b);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        const geometry = this.geometry;\r\n        const index = geometry.index;\r\n        if (!this.parameters.wireframe) {\r\n            this.wireframeIndex = new Uint16Array(0);\r\n            this.wireframeIndexCount = 0;\r\n        }\r\n        else if (index) {\r\n            const array = index.array;\r\n            let n = array.length;\r\n            if (geometry.drawRange.count !== Infinity) {\r\n                n = geometry.drawRange.count;\r\n            }\r\n            let wireframeIndex;\r\n            if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n                wireframeIndex = this.wireframeIndex;\r\n            }\r\n            else {\r\n                const count = geometry.attributes.position.count; // TODO\r\n                wireframeIndex = getUintArray(n * 2, count);\r\n            }\r\n            let j = 0;\r\n            edges.length = 0;\r\n            for (let i = 0; i < n; i += 3) {\r\n                const a = array[i + 0];\r\n                const b = array[i + 1];\r\n                const c = array[i + 2];\r\n                if (checkEdge(a, b)) {\r\n                    wireframeIndex[j + 0] = a;\r\n                    wireframeIndex[j + 1] = b;\r\n                    j += 2;\r\n                }\r\n                if (checkEdge(b, c)) {\r\n                    wireframeIndex[j + 0] = b;\r\n                    wireframeIndex[j + 1] = c;\r\n                    j += 2;\r\n                }\r\n                if (checkEdge(c, a)) {\r\n                    wireframeIndex[j + 0] = c;\r\n                    wireframeIndex[j + 1] = a;\r\n                    j += 2;\r\n                }\r\n            }\r\n            this.wireframeIndex = wireframeIndex;\r\n            this.wireframeIndexCount = j;\r\n            this.wireframeIndexVersion = this.indexVersion;\r\n        }\r\n        else {\r\n            const n = geometry.attributes.position.count; // TODO\r\n            let wireframeIndex;\r\n            if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n                wireframeIndex = this.wireframeIndex;\r\n            }\r\n            else {\r\n                wireframeIndex = getUintArray(n * 2, n);\r\n            }\r\n            for (let i = 0, j = 0; i < n; i += 3) {\r\n                wireframeIndex[j + 0] = i;\r\n                wireframeIndex[j + 1] = i + 1;\r\n                wireframeIndex[j + 2] = i + 1;\r\n                wireframeIndex[j + 3] = i + 2;\r\n                wireframeIndex[j + 4] = i + 2;\r\n                wireframeIndex[j + 5] = i;\r\n                j += 6;\r\n            }\r\n            this.wireframeIndex = wireframeIndex;\r\n            this.wireframeIndexCount = n * 2;\r\n            this.wireframeIndexVersion = this.indexVersion;\r\n        }\r\n    }\r\n    updateWireframeIndex() {\r\n        if (!this.wireframeGeometry || !this.wireframeIndex)\r\n            return;\r\n        this.wireframeGeometry.setDrawRange(0, Infinity);\r\n        if (this.wireframeIndexVersion < this.indexVersion)\r\n            this.makeWireframeIndex();\r\n        if (this.wireframeGeometry.index &&\r\n            this.wireframeIndex.length > this.wireframeGeometry.index.array.length) {\r\n            this.wireframeGeometry.setIndex(new BufferAttribute(this.wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0));\r\n        }\r\n        else {\r\n            const index = this.wireframeGeometry.getIndex();\r\n            if (!index) {\r\n                Log.error('Index is null');\r\n                return;\r\n            }\r\n            index.set(this.wireframeIndex);\r\n            index.needsUpdate = this.wireframeIndexCount > 0;\r\n            index.updateRange.count = this.wireframeIndexCount;\r\n        }\r\n        this.wireframeGeometry.setDrawRange(0, this.wireframeIndexCount);\r\n    }\r\n    getRenderOrder() {\r\n        let renderOrder = 0;\r\n        if (this.isText) {\r\n            renderOrder = 1;\r\n        }\r\n        else if (this.transparent) {\r\n            if (this.isSurface) {\r\n                renderOrder = 3;\r\n            }\r\n            else {\r\n                renderOrder = 2;\r\n            }\r\n        }\r\n        return renderOrder;\r\n    }\r\n    _getMesh(materialName) {\r\n        if (!this.material)\r\n            this.makeMaterial();\r\n        const g = this.geometry;\r\n        const m = this[materialName];\r\n        let mesh;\r\n        if (this.isLine) {\r\n            mesh = new LineSegments(g, m);\r\n        }\r\n        else if (this.isPoint) {\r\n            mesh = new Points(g, m);\r\n        }\r\n        else {\r\n            mesh = new Mesh(g, m);\r\n        }\r\n        mesh.frustumCulled = false;\r\n        mesh.renderOrder = this.getRenderOrder();\r\n        return mesh;\r\n    }\r\n    getMesh() {\r\n        return this._getMesh('material');\r\n    }\r\n    getWireframeMesh() {\r\n        let mesh;\r\n        if (!this.material)\r\n            this.makeMaterial();\r\n        if (!this.wireframeGeometry)\r\n            this.makeWireframeGeometry();\r\n        mesh = new LineSegments(this.wireframeGeometry, this.wireframeMaterial);\r\n        mesh.frustumCulled = false;\r\n        mesh.renderOrder = this.getRenderOrder();\r\n        return mesh;\r\n    }\r\n    getPickingMesh() {\r\n        return this._getMesh('pickingMaterial');\r\n    }\r\n    getShader(name, type) {\r\n        return getShader(name, this.getDefines(type));\r\n    }\r\n    getVertexShader(type) {\r\n        return this.getShader(this.vertexShader, type);\r\n    }\r\n    getFragmentShader(type) {\r\n        return this.getShader(this.fragmentShader, type);\r\n    }\r\n    getDefines(type) {\r\n        const defines = {};\r\n        if (this.parameters.clipNear) {\r\n            defines.NEAR_CLIP = 1;\r\n        }\r\n        if (this.parameters.clipRadius) {\r\n            defines.RADIUS_CLIP = 1;\r\n        }\r\n        if (type === 'picking') {\r\n            defines.PICKING = 1;\r\n        }\r\n        else {\r\n            if (type === 'background' || this.parameters.background) {\r\n                defines.NOLIGHT = 1;\r\n            }\r\n            if (this.parameters.flatShaded) {\r\n                defines.FLAT_SHADED = 1;\r\n            }\r\n            if (this.parameters.opaqueBack) {\r\n                defines.OPAQUE_BACK = 1;\r\n            }\r\n            if (this.parameters.diffuseInterior) {\r\n                defines.DIFFUSE_INTERIOR = 1;\r\n            }\r\n            if (this.parameters.useInteriorColor) {\r\n                defines.USE_INTERIOR_COLOR = 1;\r\n            }\r\n        }\r\n        return defines;\r\n    }\r\n    getParameters() {\r\n        return this.parameters;\r\n    }\r\n    addUniforms(uniforms) {\r\n        this.uniforms = UniformsUtils.merge([this.uniforms, uniforms]);\r\n        this.pickingUniforms = UniformsUtils.merge([this.pickingUniforms, uniforms]);\r\n    }\r\n    addAttributes(attributes) {\r\n        for (let name in attributes) {\r\n            let buf;\r\n            const a = attributes[name];\r\n            const arraySize = this.attributeSize * itemSize[a.type];\r\n            if (a.value) {\r\n                if (arraySize !== a.value.length) {\r\n                    Log.error('attribute value has wrong length', name);\r\n                }\r\n                buf = a.value;\r\n            }\r\n            else {\r\n                buf = getTypedArray('float32', arraySize);\r\n            }\r\n            this.geometry.setAttribute(name, new BufferAttribute(buf, itemSize[a.type]).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0));\r\n        }\r\n    }\r\n    updateRenderOrder() {\r\n        const renderOrder = this.getRenderOrder();\r\n        function setRenderOrder(mesh) {\r\n            mesh.renderOrder = renderOrder;\r\n        }\r\n        this.group.children.forEach(setRenderOrder);\r\n        if (this.pickingGroup) {\r\n            this.pickingGroup.children.forEach(setRenderOrder);\r\n        }\r\n    }\r\n    updateShader() {\r\n        const m = this.material;\r\n        const wm = this.wireframeMaterial;\r\n        const pm = this.pickingMaterial;\r\n        m.vertexShader = this.getVertexShader();\r\n        m.fragmentShader = this.getFragmentShader();\r\n        m.needsUpdate = true;\r\n        wm.vertexShader = this.getShader('Line.vert');\r\n        wm.fragmentShader = this.getShader('Line.frag');\r\n        wm.needsUpdate = true;\r\n        pm.vertexShader = this.getVertexShader('picking');\r\n        pm.fragmentShader = this.getFragmentShader('picking');\r\n        pm.needsUpdate = true;\r\n    }\r\n    /**\r\n     * Set buffer parameters\r\n     * @param {BufferParameters} params - buffer parameters object\r\n     * @return {undefined}\r\n     */\r\n    setParameters(params) {\r\n        const p = params;\r\n        const pt = this.parameterTypes;\r\n        const pv = this.parameters;\r\n        const propertyData = {};\r\n        const uniformData = {};\r\n        let doShaderUpdate = false;\r\n        let doVisibilityUpdate = false;\r\n        for (const name in p) {\r\n            const value = p[name];\r\n            if (value === undefined)\r\n                continue;\r\n            pv[name] = value;\r\n            if (pt[name] === undefined)\r\n                continue;\r\n            if (pt[name].property) {\r\n                if (pt[name].property !== true) {\r\n                    propertyData[pt[name].property] = value;\r\n                }\r\n                else {\r\n                    propertyData[name] = value;\r\n                }\r\n            }\r\n            if (pt[name].uniform) {\r\n                if (pt[name].uniform !== true) {\r\n                    uniformData[pt[name].uniform] = value;\r\n                }\r\n                else {\r\n                    uniformData[name] = value;\r\n                }\r\n            }\r\n            if (pt[name].updateShader) {\r\n                doShaderUpdate = true;\r\n            }\r\n            if (pt[name].updateVisibility) {\r\n                doVisibilityUpdate = true;\r\n            }\r\n            if (this.dynamic && name === 'wireframe' && value === true) {\r\n                this.updateWireframeIndex();\r\n            }\r\n            if (name === 'forceTransparent') {\r\n                propertyData.transparent = this.transparent;\r\n            }\r\n            if (name === 'matrix') {\r\n                this.matrix = value;\r\n            }\r\n        }\r\n        this.setProperties(propertyData);\r\n        this.setUniforms(uniformData);\r\n        if (doShaderUpdate)\r\n            this.updateShader();\r\n        if (doVisibilityUpdate)\r\n            this.setVisibility(this.visible);\r\n    }\r\n    /**\r\n     * Sets buffer attributes\r\n     * @param {Object} data - An object where the keys are the attribute names\r\n     *      and the values are the attribute data.\r\n     * @example\r\n     * var buffer = new Buffer();\r\n     * buffer.setAttributes({ attrName: attrData });\r\n     */\r\n    setAttributes(data) {\r\n        const geometry = this.geometry;\r\n        const attributes = geometry.attributes; // TODO\r\n        for (const name in data) {\r\n            if (name === 'picking')\r\n                continue;\r\n            const array = data[name];\r\n            const length = array.length;\r\n            if (name === 'index') {\r\n                const index = geometry.getIndex();\r\n                if (!index) {\r\n                    Log.error('Index is null');\r\n                    continue;\r\n                }\r\n                geometry.setDrawRange(0, Infinity);\r\n                if (length > index.array.length) {\r\n                    geometry.setIndex(new BufferAttribute(array, 1)\r\n                        .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0));\r\n                }\r\n                else {\r\n                    index.set(array);\r\n                    index.needsUpdate = length > 0;\r\n                    index.updateRange.count = length;\r\n                    geometry.setDrawRange(0, length);\r\n                }\r\n                this.indexVersion++;\r\n                if (this.parameters.wireframe)\r\n                    this.updateWireframeIndex();\r\n            }\r\n            else {\r\n                const attribute = attributes[name];\r\n                if (length > attribute.array.length) {\r\n                    geometry.setAttribute(name, new BufferAttribute(array, attribute.itemSize)\r\n                        .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0));\r\n                }\r\n                else {\r\n                    attributes[name].set(array);\r\n                    attributes[name].needsUpdate = length > 0;\r\n                    attributes[name].updateRange.count = length;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setUniforms(data) {\r\n        if (!data)\r\n            return;\r\n        const u = this.material.uniforms;\r\n        const wu = this.wireframeMaterial.uniforms;\r\n        const pu = this.pickingMaterial.uniforms;\r\n        for (let name in data) {\r\n            if (name === 'opacity') {\r\n                this.setProperties({ transparent: this.transparent });\r\n            }\r\n            if (u[name] !== undefined) {\r\n                if (u[name].value.isVector3) {\r\n                    u[name].value.copy(data[name]);\r\n                }\r\n                else if (u[name].value.set) {\r\n                    u[name].value.set(data[name]);\r\n                }\r\n                else {\r\n                    u[name].value = data[name];\r\n                }\r\n            }\r\n            if (wu[name] !== undefined) {\r\n                if (wu[name].value.isVector3) {\r\n                    wu[name].value.copy(data[name]);\r\n                }\r\n                else if (wu[name].value.set) {\r\n                    wu[name].value.set(data[name]);\r\n                }\r\n                else {\r\n                    wu[name].value = data[name];\r\n                }\r\n            }\r\n            if (pu[name] !== undefined) {\r\n                if (pu[name].value.isVector3) {\r\n                    pu[name].value.copy(data[name]);\r\n                }\r\n                else if (pu[name].value.set) {\r\n                    pu[name].value.set(data[name]);\r\n                }\r\n                else {\r\n                    pu[name].value = data[name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setProperties(data) {\r\n        if (!data)\r\n            return;\r\n        const m = this.material;\r\n        const wm = this.wireframeMaterial;\r\n        const pm = this.pickingMaterial;\r\n        for (const _name in data) {\r\n            const name = _name; // TODO\r\n            let value = data[name];\r\n            if (name === 'transparent') {\r\n                this.updateRenderOrder();\r\n            }\r\n            else if (name === 'side') {\r\n                value = getThreeSide(value);\r\n            }\r\n            m[name] = value;\r\n            wm[name] = value;\r\n            pm[name] = value;\r\n        }\r\n        m.needsUpdate = true;\r\n        wm.needsUpdate = true;\r\n        pm.needsUpdate = true;\r\n    }\r\n    /**\r\n     * Set buffer visibility\r\n     * @param {Boolean} value - visibility value\r\n     * @return {undefined}\r\n     */\r\n    setVisibility(value) {\r\n        this.visible = value;\r\n        if (this.parameters.wireframe) {\r\n            this.group.visible = false;\r\n            this.wireframeGroup.visible = value;\r\n            if (this.pickable) {\r\n                this.pickingGroup.visible = false;\r\n            }\r\n        }\r\n        else {\r\n            this.group.visible = value;\r\n            this.wireframeGroup.visible = false;\r\n            if (this.pickable) {\r\n                this.pickingGroup.visible = value;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Free buffer resources\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        if (this.material)\r\n            this.material.dispose();\r\n        if (this.wireframeMaterial)\r\n            this.wireframeMaterial.dispose();\r\n        if (this.pickingMaterial)\r\n            this.pickingMaterial.dispose();\r\n        this.geometry.dispose();\r\n        if (this.wireframeGeometry)\r\n            this.wireframeGeometry.dispose();\r\n    }\r\n    /**\r\n     * Customize JSON serialization to avoid circular references\r\n     */\r\n    toJSON() {\r\n        var result = {};\r\n        for (var x in this) {\r\n            if (x !== \"group\" && x !== \"wireframeGroup\" && x != \"pickingGroup\"\r\n                && x !== \"picking\") {\r\n                result[x] = this[x];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default Buffer;\r\n//# sourceMappingURL=buffer.js.map","/**\r\n * @file Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport '../shader/Mesh.vert';\r\nimport '../shader/Mesh.frag';\r\nimport Buffer from './buffer';\r\n/**\r\n * Mesh buffer. Draws a triangle mesh.\r\n *\r\n * @example\r\n * var meshBuffer = new MeshBuffer({\r\n *   position: new Float32Array(\r\n *     [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ]\r\n *   ),\r\n *   color: new Float32Array(\r\n *     [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n *   )\r\n * });\r\n */\r\nclass MeshBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} [data.index] - triangle indices\r\n     * @param  {Float32Array} [data.normal] - radii\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.vertexShader = 'Mesh.vert';\r\n        this.fragmentShader = 'Mesh.frag';\r\n        this.addAttributes({\r\n            'normal': { type: 'v3', value: data.normal }\r\n        });\r\n        if (data.normal === undefined) {\r\n            this.geometry.computeVertexNormals();\r\n        }\r\n    }\r\n}\r\nexport default MeshBuffer;\r\n//# sourceMappingURL=mesh-buffer.js.map","/**\r\n * @file Surface Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport MeshBuffer from './mesh-buffer';\r\n/**\r\n * Surface buffer. Like a {@link MeshBuffer}, but with `.isSurface` set to `true`.\r\n */\r\nclass SurfaceBuffer extends MeshBuffer {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isSurface = true;\r\n    }\r\n}\r\nexport default SurfaceBuffer;\r\n//# sourceMappingURL=surface-buffer.js.map","/**\r\n * @file Double Sided Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Group } from 'three';\r\nimport Buffer from './buffer';\r\nfunction setVisibilityTrue(m) { m.visible = true; }\r\nfunction setVisibilityFalse(m) { m.visible = false; }\r\n/**\r\n * A double-sided mesh buffer. Takes a buffer and renders the front and\r\n * the back as seperate objects to avoid some artifacts when rendering\r\n * transparent meshes. Also allows to render the back of a mesh opaque\r\n * while the front is transparent.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n * var doubleSidedBuffer = new DoubleSidedBuffer(sphereGeometryBuffer);\r\n */\r\nclass DoubleSidedBuffer {\r\n    /**\r\n     * Create a double sided buffer\r\n     * @param  {Buffer} buffer - the buffer to be rendered double-sided\r\n     */\r\n    constructor(buffer) {\r\n        this.group = new Group();\r\n        this.wireframeGroup = new Group();\r\n        this.pickingGroup = new Group();\r\n        this.frontMeshes = [];\r\n        this.backMeshes = [];\r\n        this.size = buffer.size;\r\n        this.side = buffer.parameters.side;\r\n        this.visible = buffer.visible;\r\n        this.geometry = buffer.geometry;\r\n        this.picking = buffer.picking;\r\n        this.group = new Group();\r\n        this.wireframeGroup = new Group();\r\n        this.pickingGroup = new Group();\r\n        // requires Group objects to be present\r\n        this.matrix = buffer.matrix;\r\n        const frontBuffer = buffer;\r\n        const backBuffer = new buffer.constructor({\r\n            position: new Float32Array(0)\r\n        });\r\n        frontBuffer.makeMaterial();\r\n        backBuffer.makeMaterial();\r\n        backBuffer.picking = buffer.picking;\r\n        backBuffer.geometry = buffer.geometry;\r\n        backBuffer.wireframeGeometry = buffer.wireframeGeometry;\r\n        backBuffer.setParameters(buffer.getParameters());\r\n        backBuffer.updateShader();\r\n        frontBuffer.setParameters({\r\n            side: 'front'\r\n        });\r\n        backBuffer.setParameters({\r\n            side: 'back',\r\n            opacity: backBuffer.parameters.opacity\r\n        });\r\n        this.buffer = buffer;\r\n        this.frontBuffer = frontBuffer;\r\n        this.backBuffer = backBuffer;\r\n    }\r\n    set matrix(m) {\r\n        Buffer.prototype.setMatrix.call(this, m);\r\n    }\r\n    get matrix() {\r\n        return this.group.matrix.clone();\r\n    }\r\n    get pickable() {\r\n        return !!this.picking && !this.parameters.disablePicking;\r\n    }\r\n    get parameters() {\r\n        return this.buffer.parameters;\r\n    }\r\n    getParameters() {\r\n        const p = Object.assign({}, this.buffer.parameters);\r\n        p.side = this.side;\r\n        return p;\r\n    }\r\n    getMesh(picking) {\r\n        let front, back;\r\n        if (picking) {\r\n            back = this.backBuffer.getPickingMesh();\r\n            front = this.frontBuffer.getPickingMesh();\r\n        }\r\n        else {\r\n            back = this.backBuffer.getMesh();\r\n            front = this.frontBuffer.getMesh();\r\n        }\r\n        this.frontMeshes.push(front);\r\n        this.backMeshes.push(back);\r\n        this.setParameters({ side: this.side });\r\n        return new Group().add(back, front);\r\n    }\r\n    getWireframeMesh() {\r\n        return this.buffer.getWireframeMesh();\r\n    }\r\n    getPickingMesh() {\r\n        return this.getMesh(true);\r\n    }\r\n    setAttributes(data) {\r\n        this.buffer.setAttributes(data);\r\n    }\r\n    setParameters(data) {\r\n        data = Object.assign({}, data);\r\n        if (data.side === 'front') {\r\n            this.frontMeshes.forEach(setVisibilityTrue);\r\n            this.backMeshes.forEach(setVisibilityFalse);\r\n        }\r\n        else if (data.side === 'back') {\r\n            this.frontMeshes.forEach(setVisibilityFalse);\r\n            this.backMeshes.forEach(setVisibilityTrue);\r\n        }\r\n        else if (data.side === 'double') {\r\n            this.frontMeshes.forEach(setVisibilityTrue);\r\n            this.backMeshes.forEach(setVisibilityTrue);\r\n        }\r\n        if (data.side !== undefined) {\r\n            this.side = data.side;\r\n        }\r\n        delete data.side;\r\n        if (data.matrix !== undefined) {\r\n            this.matrix = data.matrix;\r\n        }\r\n        delete data.matrix;\r\n        this.frontBuffer.setParameters(data);\r\n        if (data.wireframe !== undefined) {\r\n            this.wireframe = data.wireframe;\r\n            this.setVisibility(this.visible);\r\n        }\r\n        delete data.wireframe;\r\n        this.backBuffer.setParameters(data);\r\n    }\r\n    setVisibility(value) {\r\n        this.visible = value;\r\n        if (this.parameters.wireframe) {\r\n            this.group.visible = false;\r\n            this.wireframeGroup.visible = value;\r\n            if (this.pickable) {\r\n                this.pickingGroup.visible = false;\r\n            }\r\n        }\r\n        else {\r\n            this.group.visible = value;\r\n            this.wireframeGroup.visible = false;\r\n            if (this.pickable) {\r\n                this.pickingGroup.visible = value;\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        this.frontBuffer.dispose();\r\n        this.backBuffer.dispose();\r\n    }\r\n    /**\r\n     * Customize JSON serialization to avoid circular references.\r\n     * Only export simple params which could be useful.\r\n     */\r\n    toJSON() {\r\n        var result = {};\r\n        for (var x in this) {\r\n            if (['side', 'size', 'visible', 'matrix', 'parameters'].includes(x)) {\r\n                result[x] = this[x];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default DoubleSidedBuffer;\r\n//# sourceMappingURL=doublesided-buffer.js.map","/**\r\n * @file Contour Buffer\r\n * @author Fred ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport '../shader/Line.vert';\r\nimport '../shader/Line.frag';\r\nimport Buffer from './buffer';\r\n/**\r\n * Contour buffer. A buffer that draws lines (instead of triangle meshes).\r\n */\r\nclass ContourBuffer extends Buffer {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isLine = true;\r\n        this.vertexShader = 'Line.vert';\r\n        this.fragmentShader = 'Line.frag';\r\n    }\r\n}\r\nexport default ContourBuffer;\r\n//# sourceMappingURL=contour-buffer.js.map","/**\r\n * @file Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Vector3, Box3 } from 'three';\r\nimport { defaults } from '../utils';\r\nimport Representation from './representation.js';\r\nimport Volume from '../surface/volume.js';\r\nimport SurfaceBuffer from '../buffer/surface-buffer.js';\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer';\r\nimport ContourBuffer from '../buffer/contour-buffer.js';\r\n/**\r\n * Surface representation\r\n */\r\n/**\r\n   * Create Surface representation object\r\n   * @param {Surface|Volume} surface - the surface or volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {SurfaceRepresentationParameters} params - surface representation parameters\r\n   */\r\nclass SurfaceRepresentation extends Representation {\r\n    constructor(surface, viewer, params) {\r\n        super(surface, viewer, params);\r\n        this.type = 'surface';\r\n        this.parameters = Object.assign({\r\n            isolevelType: {\r\n                type: 'select',\r\n                options: {\r\n                    'value': 'value', 'sigma': 'sigma'\r\n                }\r\n            },\r\n            isolevel: {\r\n                type: 'number', precision: 2, max: 1000, min: -1000\r\n            },\r\n            negateIsolevel: {\r\n                type: 'boolean'\r\n            },\r\n            isolevelScroll: {\r\n                type: 'boolean'\r\n            },\r\n            smooth: {\r\n                type: 'integer', precision: 1, max: 10, min: 0\r\n            },\r\n            background: {\r\n                type: 'boolean', rebuild: true // FIXME\r\n            },\r\n            opaqueBack: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            boxSize: {\r\n                type: 'integer', precision: 1, max: 100, min: 0\r\n            },\r\n            colorVolume: {\r\n                type: 'hidden'\r\n            },\r\n            contour: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            useWorker: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            wrap: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters);\r\n        if (surface instanceof Volume) {\r\n            this.surface = undefined;\r\n            this.volume = surface;\r\n        }\r\n        else {\r\n            this.surface = surface;\r\n            this.volume = undefined;\r\n        }\r\n        this.boxCenter = new Vector3();\r\n        this.__boxCenter = new Vector3();\r\n        this.box = new Box3();\r\n        this.__box = new Box3();\r\n        this._position = new Vector3();\r\n        this.inverseMatrix = new Matrix4();\r\n        this.setBox = function setBox() {\r\n            this._position.copy(viewer.translationGroup.position).negate();\r\n            this._position.applyMatrix4(this.inverseMatrix);\r\n            if (!this._position.equals(this.boxCenter)) {\r\n                this.setParameters({ 'boxCenter': this._position });\r\n            }\r\n        };\r\n        this.toBePrepared = true;\r\n        this.viewer.signals.ticked.add(this.setBox, this);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'uniform');\r\n        p.colorValue = defaults(p.colorValue, 0xDDDDDD);\r\n        this.isolevelType = defaults(p.isolevelType, 'sigma');\r\n        this.isolevel = defaults(p.isolevel, 2.0);\r\n        this.negateIsolevel = defaults(p.negateIsolevel, false);\r\n        this.isolevelScroll = defaults(p.isolevelScroll, false);\r\n        this.smooth = defaults(p.smooth, 0);\r\n        this.background = defaults(p.background, false);\r\n        this.opaqueBack = defaults(p.opaqueBack, true);\r\n        this.boxSize = defaults(p.boxSize, 0);\r\n        this.colorVolume = defaults(p.colorVolume, undefined);\r\n        this.contour = defaults(p.contour, false);\r\n        this.useWorker = defaults(p.useWorker, true);\r\n        this.wrap = defaults(p.wrap, false);\r\n        super.init(p);\r\n        this.inverseMatrix.getInverse(this.matrix);\r\n        this.build();\r\n    }\r\n    attach(callback) {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.add(buffer);\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n    prepare(callback) {\r\n        if (this.volume) {\r\n            let isolevel;\r\n            if (this.isolevelType === 'sigma') {\r\n                isolevel = this.volume.getValueForSigma(this.isolevel);\r\n            }\r\n            else {\r\n                isolevel = this.isolevel;\r\n            }\r\n            if (this.negateIsolevel)\r\n                isolevel *= -1;\r\n            if (!this.surface ||\r\n                this.__isolevel !== isolevel ||\r\n                this.__smooth !== this.smooth ||\r\n                this.__contour !== this.contour ||\r\n                this.__wrap !== this.wrap ||\r\n                this.__boxSize !== this.boxSize ||\r\n                (this.boxSize > 0 &&\r\n                    !this.__boxCenter.equals(this.boxCenter))) {\r\n                this.__isolevel = isolevel;\r\n                this.__smooth = this.smooth;\r\n                this.__contour = this.contour;\r\n                this.__wrap = this.wrap;\r\n                this.__boxSize = this.boxSize;\r\n                this.__boxCenter.copy(this.boxCenter);\r\n                this.__box.copy(this.box);\r\n                const onSurfaceFinish = (surface) => {\r\n                    this.surface = surface;\r\n                    callback();\r\n                };\r\n                if (this.useWorker) {\r\n                    this.volume.getSurfaceWorker(isolevel, this.smooth, this.boxCenter, this.boxSize, this.contour, this.wrap, onSurfaceFinish);\r\n                }\r\n                else {\r\n                    onSurfaceFinish(this.volume.getSurface(isolevel, this.smooth, this.boxCenter, this.boxSize, this.contour, this.wrap));\r\n                }\r\n            }\r\n            else {\r\n                callback();\r\n            }\r\n        }\r\n        else {\r\n            callback();\r\n        }\r\n    }\r\n    create() {\r\n        const sd = {\r\n            position: this.surface.getPosition(),\r\n            color: this.surface.getColor(this.getColorParams()),\r\n            index: this.surface.getIndex()\r\n        };\r\n        let buffer;\r\n        if (this.contour) {\r\n            buffer = new ContourBuffer(sd, this.getBufferParams({ wireframe: false }));\r\n        }\r\n        else {\r\n            Object.assign(sd, {\r\n                normal: this.surface.getNormal(),\r\n                picking: this.surface.getPicking()\r\n            });\r\n            const surfaceBuffer = new SurfaceBuffer(sd, this.getBufferParams({\r\n                background: this.background,\r\n                opaqueBack: this.opaqueBack,\r\n                dullInterior: false\r\n            }));\r\n            buffer = new DoubleSidedBuffer(surfaceBuffer);\r\n        }\r\n        this.bufferList.push(buffer);\r\n    }\r\n    update(what) {\r\n        if (this.bufferList.length === 0)\r\n            return;\r\n        what = what || {};\r\n        const surfaceData = {};\r\n        if (what.position) {\r\n            surfaceData.position = this.surface.getPosition();\r\n        }\r\n        if (what.color) {\r\n            surfaceData.color = this.surface.getColor(this.getColorParams());\r\n        }\r\n        if (what.index) {\r\n            surfaceData.index = this.surface.getIndex();\r\n        }\r\n        if (what.normal) {\r\n            surfaceData.normal = this.surface.getNormal();\r\n        }\r\n        this.bufferList.forEach(function (buffer) {\r\n            buffer.setAttributes(surfaceData);\r\n        });\r\n    }\r\n    /**\r\n     * Set representation parameters\r\n     * @alias SurfaceRepresentation#setParameters\r\n     * @param {SurfaceRepresentationParameters} params - surface parameter object\r\n     * @param {Object} [what] - buffer data attributes to be updated,\r\n     *                        note that this needs to be implemented in the\r\n     *                        derived classes. Generally it allows more\r\n     *                        fine-grained control over updating than\r\n     *                        forcing a rebuild.\r\n     * @param {Boolean} what.position - update position data\r\n     * @param {Boolean} what.color - update color data\r\n     * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n     * @return {SurfaceRepresentation} this object\r\n     */\r\n    setParameters(params, what, rebuild) {\r\n        if (params && params.isolevelType !== undefined &&\r\n            this.volume) {\r\n            if (this.isolevelType === 'value' &&\r\n                params.isolevelType === 'sigma') {\r\n                this.isolevel = this.volume.getSigmaForValue(this.isolevel);\r\n            }\r\n            else if (this.isolevelType === 'sigma' &&\r\n                params.isolevelType === 'value') {\r\n                this.isolevel = this.volume.getValueForSigma(this.isolevel);\r\n            }\r\n            this.isolevelType = params.isolevelType;\r\n        }\r\n        if (params && params.boxCenter) {\r\n            this.boxCenter.copy(params.boxCenter);\r\n            delete params.boxCenter;\r\n        }\r\n        // Forbid wireframe && contour as in molsurface\r\n        if (params && params.wireframe && (params.contour || (params.contour === undefined && this.contour))) {\r\n            params.wireframe = false;\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        if (params.matrix) {\r\n            this.inverseMatrix.getInverse(params.matrix);\r\n        }\r\n        if (this.volume) {\r\n            this.volume.getBox(this.boxCenter, this.boxSize, this.box);\r\n        }\r\n        if (params && params.colorVolume !== undefined) {\r\n            if (what)\r\n                what.color = true;\r\n        }\r\n        if (this.surface && (params.isolevel !== undefined ||\r\n            params.negateIsolevel !== undefined ||\r\n            params.smooth !== undefined ||\r\n            params.wrap !== undefined ||\r\n            params.boxSize !== undefined ||\r\n            (this.boxSize > 0 &&\r\n                !this.__box.equals(this.box)))) {\r\n            this.build({\r\n                'position': true,\r\n                'color': true,\r\n                'index': true,\r\n                'normal': !this.contour\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    getColorParams() {\r\n        const p = super.getColorParams();\r\n        p.volume = this.colorVolume;\r\n        return p;\r\n    }\r\n    dispose() {\r\n        this.viewer.signals.ticked.remove(this.setBox, this);\r\n        super.dispose();\r\n    }\r\n}\r\nexport default SurfaceRepresentation;\r\n//# sourceMappingURL=surface-representation.js.map","/**\r\n * @file Annotation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector2, Vector3 } from 'three';\r\nimport { defaults } from '../utils';\r\nimport { smoothstep } from '../math/math-utils';\r\n/**\r\n * Annotation HTML element floating on top of a position rendered in 3d\r\n */\r\nexport default class Annotation {\r\n    /**\r\n     * @param {Component} component - the associated component\r\n     * @param {Vector3} position - position in 3d\r\n     * @param {String|Element} content - HTML content\r\n     * @param {Object} [params] - parameters\r\n     * @param {Integer} params.offsetX - 2d offset in x direction\r\n     * @param {Integer} params.offsetY - 2d offset in y direction\r\n     * @param {Boolean} params.visible - visibility flag\r\n     */\r\n    constructor(component, position, content, params = {}) {\r\n        this.component = component;\r\n        this.position = position;\r\n        this.offsetX = defaults(params.offsetX, 0);\r\n        this.offsetY = defaults(params.offsetY, 0);\r\n        this.visible = defaults(params.visible, true);\r\n        this.stage = component.stage;\r\n        this.viewer = component.stage.viewer;\r\n        this._viewerPosition = new Vector3();\r\n        this._updateViewerPosition();\r\n        this._canvasPosition = new Vector2();\r\n        this._cameraPosition = new Vector3();\r\n        this.element = document.createElement('div');\r\n        Object.assign(this.element.style, {\r\n            display: 'block',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            whiteSpace: 'nowrap',\r\n            left: '-10000px'\r\n        });\r\n        this.viewer.wrapper.appendChild(this.element);\r\n        this.setContent(content);\r\n        this.updateVisibility();\r\n        this.viewer.signals.rendered.add(this._update, this);\r\n        this.component.signals.matrixChanged.add(this._updateViewerPosition, this);\r\n    }\r\n    /**\r\n     * Set HTML content of the annotation\r\n     * @param {String|Element} value - HTML content\r\n     * @return {undefined}\r\n     */\r\n    setContent(value) {\r\n        const displayValue = this.element.style.display;\r\n        if (displayValue === 'none') {\r\n            this.element.style.left = '-10000px';\r\n            this.element.style.display = 'block';\r\n        }\r\n        if (value instanceof HTMLElement) {\r\n            this.element.appendChild(value);\r\n        }\r\n        else {\r\n            const content = document.createElement('div');\r\n            content.innerText = value;\r\n            Object.assign(content.style, {\r\n                backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n                color: 'lightgrey',\r\n                padding: '8px',\r\n                fontFamily: 'sans-serif',\r\n            });\r\n            this.element.appendChild(content);\r\n        }\r\n        this._clientRect = this.element.getBoundingClientRect();\r\n        if (displayValue === 'none') {\r\n            this.element.style.display = displayValue;\r\n        }\r\n    }\r\n    /**\r\n     * Set visibility of the annotation\r\n     * @param {Boolean} value - visibility flag\r\n     * @return {undefined}\r\n     */\r\n    setVisibility(value) {\r\n        this.visible = value;\r\n        this.updateVisibility();\r\n    }\r\n    getVisibility() {\r\n        return this.visible && this.component.parameters.visible;\r\n    }\r\n    updateVisibility() {\r\n        this.element.style.display = this.getVisibility() ? 'block' : 'none';\r\n    }\r\n    _updateViewerPosition() {\r\n        this._viewerPosition\r\n            .copy(this.position)\r\n            .applyMatrix4(this.component.matrix);\r\n    }\r\n    _update() {\r\n        if (!this.getVisibility())\r\n            return;\r\n        const s = this.element.style;\r\n        const cp = this._canvasPosition;\r\n        const vp = this._viewerPosition;\r\n        const cr = this._clientRect;\r\n        this._cameraPosition.copy(vp)\r\n            .add(this.viewer.translationGroup.position)\r\n            .applyMatrix4(this.viewer.rotationGroup.matrix)\r\n            .sub(this.viewer.camera.position);\r\n        if (this._cameraPosition.z < 0) {\r\n            s.display = 'none';\r\n            return;\r\n        }\r\n        else {\r\n            s.display = 'block';\r\n        }\r\n        const depth = this._cameraPosition.length();\r\n        const fog = this.viewer.scene.fog; // TODO\r\n        s.opacity = (1 - smoothstep(fog.near, fog.far, depth)).toString();\r\n        s.zIndex = (Math.round((fog.far - depth) * 100)).toString();\r\n        this.stage.viewerControls.getPositionOnCanvas(vp, cp);\r\n        s.bottom = (this.offsetX + cp.y + cr.height / 2) + 'px';\r\n        s.left = (this.offsetY + cp.x - cr.width / 2) + 'px';\r\n    }\r\n    /**\r\n     * Safely remove the annotation\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        this.viewer.wrapper.removeChild(this.element);\r\n        this.viewer.signals.ticked.remove(this._update, this);\r\n        this.component.signals.matrixChanged.remove(this._updateViewerPosition, this);\r\n    }\r\n}\r\n//# sourceMappingURL=annotation.js.map","/**\r\n * @file Component Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4, Quaternion } from 'three';\r\nimport * as signalsWrapper from 'signals';\r\nimport { ensureVector3 } from '../utils';\r\nconst tmpRotateMatrix = new Matrix4();\r\nconst tmpRotateVector = new Vector3();\r\nconst tmpRotateQuaternion = new Quaternion();\r\n/**\r\n * Component controls\r\n */\r\nclass ComponentControls {\r\n    /**\r\n     * @param  {Component} component - the component object\r\n     */\r\n    constructor(component) {\r\n        this.component = component;\r\n        this.signals = {\r\n            changed: new signalsWrapper.Signal()\r\n        };\r\n        this.stage = component.stage;\r\n        this.viewer = component.stage.viewer;\r\n    }\r\n    /**\r\n     * component center position\r\n     * @type {Vector3}\r\n     */\r\n    get position() {\r\n        return this.component.position;\r\n    }\r\n    /**\r\n     * component rotation\r\n     * @type {Quaternion}\r\n     */\r\n    get rotation() {\r\n        return this.component.quaternion;\r\n    }\r\n    /**\r\n     * Trigger render and emit changed event\r\n     * @emits {ComponentControls.signals.changed}\r\n     * @return {undefined}\r\n     */\r\n    changed() {\r\n        this.component.updateMatrix();\r\n        this.viewer.requestRender();\r\n        this.signals.changed.dispatch();\r\n    }\r\n    /**\r\n     * spin component on axis\r\n     * @param  {Vector3|Array} axis - rotation axis\r\n     * @param  {Number} angle - amount to spin\r\n     * @return {undefined}\r\n     */\r\n    spin(axis, angle) {\r\n        tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix);\r\n        tmpRotateVector\r\n            .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix);\r\n        tmpRotateMatrix.extractRotation(this.component.transform);\r\n        tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix);\r\n        tmpRotateMatrix.getInverse(tmpRotateMatrix);\r\n        tmpRotateVector.copy(ensureVector3(axis));\r\n        tmpRotateVector.applyMatrix4(tmpRotateMatrix);\r\n        tmpRotateMatrix.makeRotationAxis(tmpRotateVector, angle);\r\n        tmpRotateQuaternion.setFromRotationMatrix(tmpRotateMatrix);\r\n        this.component.quaternion.premultiply(tmpRotateQuaternion);\r\n        this.changed();\r\n    }\r\n}\r\nexport default ComponentControls;\r\n//# sourceMappingURL=component-controls.js.map","/**\r\n * @file Radius Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { NucleicBackboneAtoms } from '../structure/structure-constants';\r\nexport const RadiusFactoryTypes = {\r\n    '': '',\r\n    'vdw': 'by vdW radius',\r\n    'covalent': 'by covalent radius',\r\n    'sstruc': 'by secondary structure',\r\n    'bfactor': 'by bfactor',\r\n    'size': 'size',\r\n    'data': 'data',\r\n    'explicit': 'explicit'\r\n};\r\nclass RadiusFactory {\r\n    constructor(params = {}) {\r\n        this.max = 10;\r\n        this.type = defaults(params.type, 'size');\r\n        this.scale = defaults(params.scale, 1);\r\n        this.size = defaults(params.size, 1);\r\n        this.data = defaults(params.data, {});\r\n    }\r\n    atomRadius(a) {\r\n        let r;\r\n        switch (this.type) {\r\n            case 'vdw':\r\n                r = a.vdw;\r\n                break;\r\n            case 'covalent':\r\n                r = a.covalent;\r\n                break;\r\n            case 'bfactor':\r\n                r = a.bfactor || 1.0;\r\n                break;\r\n            case 'sstruc':\r\n                const sstruc = a.sstruc;\r\n                if (sstruc === 'h') {\r\n                    r = 0.25;\r\n                }\r\n                else if (sstruc === 'g') {\r\n                    r = 0.25;\r\n                }\r\n                else if (sstruc === 'i') {\r\n                    r = 0.25;\r\n                }\r\n                else if (sstruc === 'e') {\r\n                    r = 0.25;\r\n                }\r\n                else if (sstruc === 'b') {\r\n                    r = 0.25;\r\n                }\r\n                else if (NucleicBackboneAtoms.includes(a.atomname)) {\r\n                    r = 0.4;\r\n                }\r\n                else {\r\n                    r = 0.1;\r\n                }\r\n                break;\r\n            case 'data':\r\n                r = defaults(this.data[a.index], 1.0);\r\n                break;\r\n            case 'explicit':\r\n                // defaults is inappropriate as AtomProxy.radius returns\r\n                // null for missing radii\r\n                r = a.radius;\r\n                if (r === null)\r\n                    r = this.size;\r\n                break;\r\n            default:\r\n                r = this.size;\r\n                break;\r\n        }\r\n        return Math.min(r * this.scale, this.max);\r\n    }\r\n}\r\nRadiusFactory.types = RadiusFactoryTypes;\r\nexport default RadiusFactory;\r\n//# sourceMappingURL=radius-factory.js.map","/**\r\n * @file Principal Axes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4, Quaternion } from 'three';\r\nimport { Matrix, meanRows, subRows, transpose, multiplyABt, svd } from './matrix-utils.js';\r\nimport { projectPointOnVector } from './vector-utils';\r\nconst negateVector = new Vector3(-1, -1, -1);\r\nconst tmpMatrix = new Matrix4();\r\n/**\r\n * Principal axes\r\n */\r\nclass PrincipalAxes {\r\n    /**\r\n     * @param  {Matrix} points - 3 by N matrix\r\n     */\r\n    constructor(points) {\r\n        // console.time( \"PrincipalAxes\" );\r\n        const n = points.rows;\r\n        const n3 = n / 3;\r\n        const pointsT = new Matrix(n, 3);\r\n        const A = new Matrix(3, 3);\r\n        const W = new Matrix(1, 3);\r\n        const U = new Matrix(3, 3);\r\n        const V = new Matrix(3, 3);\r\n        // calculate\r\n        const mean = meanRows(points);\r\n        subRows(points, mean);\r\n        transpose(pointsT, points);\r\n        multiplyABt(A, pointsT, pointsT);\r\n        svd(A, W, U, V);\r\n        // console.log( points, pointsT, mean )\r\n        // console.log( n, A, W, U, V );\r\n        // center\r\n        const vm = new Vector3(mean[0], mean[1], mean[2]);\r\n        // normalized\r\n        const van = new Vector3(U.data[0], U.data[3], U.data[6]);\r\n        const vbn = new Vector3(U.data[1], U.data[4], U.data[7]);\r\n        const vcn = new Vector3(U.data[2], U.data[5], U.data[8]);\r\n        // scaled\r\n        const va = van.clone().multiplyScalar(Math.sqrt(W.data[0] / n3));\r\n        const vb = vbn.clone().multiplyScalar(Math.sqrt(W.data[1] / n3));\r\n        const vc = vcn.clone().multiplyScalar(Math.sqrt(W.data[2] / n3));\r\n        // points\r\n        this.begA = vm.clone().sub(va);\r\n        this.endA = vm.clone().add(va);\r\n        this.begB = vm.clone().sub(vb);\r\n        this.endB = vm.clone().add(vb);\r\n        this.begC = vm.clone().sub(vc);\r\n        this.endC = vm.clone().add(vc);\r\n        //\r\n        this.center = vm;\r\n        this.vecA = va;\r\n        this.vecB = vb;\r\n        this.vecC = vc;\r\n        this.normVecA = van;\r\n        this.normVecB = vbn;\r\n        this.normVecC = vcn;\r\n        // console.timeEnd( \"PrincipalAxes\" );\r\n    }\r\n    /**\r\n     * Get the basis matrix descriping the axes\r\n     * @param  {Matrix4} [optionalTarget] - target object\r\n     * @return {Matrix4} the basis\r\n     */\r\n    getBasisMatrix(optionalTarget = new Matrix4()) {\r\n        const basis = optionalTarget;\r\n        basis.makeBasis(this.normVecB, this.normVecA, this.normVecC);\r\n        if (basis.determinant() < 0) {\r\n            basis.scale(negateVector);\r\n        }\r\n        return basis;\r\n    }\r\n    /**\r\n     * Get a quaternion descriping the axes rotation\r\n     * @param  {Quaternion} [optionalTarget] - target object\r\n     * @return {Quaternion} the rotation\r\n     */\r\n    getRotationQuaternion(optionalTarget = new Quaternion()) {\r\n        const q = optionalTarget;\r\n        q.setFromRotationMatrix(this.getBasisMatrix(tmpMatrix));\r\n        return q.inverse();\r\n    }\r\n    /**\r\n     * Get the scale/length for each dimension for a box around the axes\r\n     * to enclose the atoms of a structure\r\n     * @param  {Structure|StructureView} structure - the structure\r\n     * @return {{d1a: Number, d2a: Number, d3a: Number, d1b: Number, d2b: Number, d3b: Number}} scale\r\n     */\r\n    getProjectedScaleForAtoms(structure) {\r\n        let d1a = -Infinity;\r\n        let d1b = -Infinity;\r\n        let d2a = -Infinity;\r\n        let d2b = -Infinity;\r\n        let d3a = -Infinity;\r\n        let d3b = -Infinity;\r\n        const p = new Vector3();\r\n        const t = new Vector3();\r\n        const center = this.center;\r\n        const ax1 = this.normVecA;\r\n        const ax2 = this.normVecB;\r\n        const ax3 = this.normVecC;\r\n        structure.eachAtom(function (ap) {\r\n            projectPointOnVector(p.copy(ap), ax1, center); // TODO\r\n            const dp1 = t.subVectors(p, center).normalize().dot(ax1);\r\n            const dt1 = p.distanceTo(center);\r\n            if (dp1 > 0) {\r\n                if (dt1 > d1a)\r\n                    d1a = dt1;\r\n            }\r\n            else {\r\n                if (dt1 > d1b)\r\n                    d1b = dt1;\r\n            }\r\n            projectPointOnVector(p.copy(ap), ax2, center);\r\n            const dp2 = t.subVectors(p, center).normalize().dot(ax2);\r\n            const dt2 = p.distanceTo(center);\r\n            if (dp2 > 0) {\r\n                if (dt2 > d2a)\r\n                    d2a = dt2;\r\n            }\r\n            else {\r\n                if (dt2 > d2b)\r\n                    d2b = dt2;\r\n            }\r\n            projectPointOnVector(p.copy(ap), ax3, center);\r\n            const dp3 = t.subVectors(p, center).normalize().dot(ax3);\r\n            const dt3 = p.distanceTo(center);\r\n            if (dp3 > 0) {\r\n                if (dt3 > d3a)\r\n                    d3a = dt3;\r\n            }\r\n            else {\r\n                if (dt3 > d3b)\r\n                    d3b = dt3;\r\n            }\r\n        });\r\n        return {\r\n            d1a: d1a,\r\n            d2a: d2a,\r\n            d3a: d3a,\r\n            d1b: -d1b,\r\n            d2b: -d2b,\r\n            d3b: -d3b\r\n        };\r\n    }\r\n}\r\nexport default PrincipalAxes;\r\n//# sourceMappingURL=principal-axes.js.map","/**\r\n * @file Filtered Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport Volume from './volume.js';\r\nclass FilteredVolume {\r\n    constructor(volume, minValue, maxValue, outside) {\r\n        this.volume = volume;\r\n        this.setFilter(minValue, maxValue, outside);\r\n    }\r\n    get header() { return this.volume.header; }\r\n    get matrix() { return this.volume.matrix; }\r\n    get normalMatrix() { return this.volume.normalMatrix; }\r\n    get inverseMatrix() { return this.volume.inverseMatrix; }\r\n    get center() { return this.volume.center; }\r\n    get boundingBox() { return this.volume.boundingBox; }\r\n    get min() { return this.volume.min; }\r\n    get max() { return this.volume.max; }\r\n    get mean() { return this.volume.mean; }\r\n    get rms() { return this.volume.rms; }\r\n    _getFilterHash(minValue, maxValue, outside) {\r\n        return JSON.stringify([minValue, maxValue, outside]);\r\n    }\r\n    setFilter(minValue, maxValue, outside) {\r\n        if (isNaN(minValue) && this.header) {\r\n            minValue = this.header.DMEAN + 2.0 * this.header.ARMS;\r\n        }\r\n        minValue = (minValue !== undefined && !isNaN(minValue)) ? minValue : -Infinity;\r\n        maxValue = defaults(maxValue, Infinity);\r\n        outside = defaults(outside, false);\r\n        const data = this.volume.data;\r\n        const position = this.volume.position;\r\n        const atomindex = this.volume.atomindex;\r\n        const filterHash = this._getFilterHash(minValue, maxValue, outside);\r\n        if (filterHash === this._filterHash) {\r\n            // already filtered\r\n            return;\r\n        }\r\n        else if (minValue === -Infinity && maxValue === Infinity) {\r\n            this.data = data;\r\n            this.position = position;\r\n            this.atomindex = atomindex;\r\n        }\r\n        else {\r\n            const n = data.length;\r\n            if (!this._dataBuffer) {\r\n                // ArrayBuffer for re-use as Float32Array backend\r\n                this._dataBuffer = new ArrayBuffer(n * 4);\r\n                this._positionBuffer = new ArrayBuffer(n * 3 * 4);\r\n                if (atomindex)\r\n                    this._atomindexBuffer = new ArrayBuffer(n * 4);\r\n            }\r\n            const filteredData = new Float32Array(this._dataBuffer);\r\n            const filteredPosition = new Float32Array(this._positionBuffer);\r\n            let filteredAtomindex;\r\n            if (atomindex)\r\n                filteredAtomindex = new Uint32Array(this._atomindexBuffer);\r\n            let j = 0;\r\n            for (let i = 0; i < n; ++i) {\r\n                const i3 = i * 3;\r\n                const v = data[i];\r\n                if ((!outside && v >= minValue && v <= maxValue) ||\r\n                    (outside && (v < minValue || v > maxValue))) {\r\n                    const j3 = j * 3;\r\n                    filteredData[j] = v;\r\n                    filteredPosition[j3 + 0] = position[i3 + 0];\r\n                    filteredPosition[j3 + 1] = position[i3 + 1];\r\n                    filteredPosition[j3 + 2] = position[i3 + 2];\r\n                    if (atomindex && filteredAtomindex)\r\n                        filteredAtomindex[j] = atomindex[i];\r\n                    j += 1;\r\n                }\r\n            }\r\n            // set views\r\n            this.data = new Float32Array(this._dataBuffer, 0, j);\r\n            this.position = new Float32Array(this._positionBuffer, 0, j * 3);\r\n            if (atomindex)\r\n                this.atomindex = new Int32Array(this._atomindexBuffer, 0, j);\r\n        }\r\n        this._filterHash = filterHash;\r\n    }\r\n}\r\nFilteredVolume.prototype.getValueForSigma = Volume.prototype.getValueForSigma;\r\nFilteredVolume.prototype.getSigmaForValue = Volume.prototype.getSigmaForValue;\r\nFilteredVolume.prototype.getDataAtomindex = Volume.prototype.getDataAtomindex;\r\nFilteredVolume.prototype.getDataPosition = Volume.prototype.getDataPosition;\r\nFilteredVolume.prototype.getDataColor = Volume.prototype.getDataColor;\r\nFilteredVolume.prototype.getDataPicking = Volume.prototype.getDataPicking;\r\nFilteredVolume.prototype.getDataSize = Volume.prototype.getDataSize;\r\nexport default FilteredVolume;\r\n//# sourceMappingURL=filtered-volume.js.map","/**\r\n * @file Bond Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { createAdjacencyList } from '../utils/adjacency-list';\r\nclass BondHash {\r\n    constructor(bondStore, atomCount) {\r\n        const al = createAdjacencyList({\r\n            nodeArray1: bondStore.atomIndex1,\r\n            nodeArray2: bondStore.atomIndex2,\r\n            edgeCount: bondStore.count,\r\n            nodeCount: atomCount\r\n        });\r\n        this.countArray = al.countArray;\r\n        this.offsetArray = al.offsetArray;\r\n        this.indexArray = al.indexArray;\r\n    }\r\n}\r\nexport default BondHash;\r\n//# sourceMappingURL=bond-hash.js.map","/**\r\n * @file Bond Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store';\r\n/**\r\n * Bond store\r\n */\r\nexport default class BondStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['atomIndex1', 1, 'int32'],\r\n            ['atomIndex2', 1, 'int32'],\r\n            ['bondOrder', 1, 'int8']\r\n        ];\r\n    }\r\n    addBond(atom1, atom2, bondOrder) {\r\n        this.growIfFull();\r\n        const i = this.count;\r\n        const ai1 = atom1.index;\r\n        const ai2 = atom2.index;\r\n        if (ai1 < ai2) {\r\n            this.atomIndex1[i] = ai1;\r\n            this.atomIndex2[i] = ai2;\r\n        }\r\n        else {\r\n            this.atomIndex2[i] = ai1;\r\n            this.atomIndex1[i] = ai2;\r\n        }\r\n        if (bondOrder)\r\n            this.bondOrder[i] = bondOrder;\r\n        this.count += 1;\r\n    }\r\n    addBondIfConnected(atom1, atom2, bondOrder) {\r\n        if (atom1.connectedTo(atom2)) {\r\n            this.addBond(atom1, atom2, bondOrder);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=bond-store.js.map","/**\r\n * @file Atom Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store';\r\n/**\r\n * Atom store\r\n */\r\nexport default class AtomStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['residueIndex', 1, 'uint32'],\r\n            ['atomTypeId', 1, 'uint16'],\r\n            ['x', 1, 'float32'],\r\n            ['y', 1, 'float32'],\r\n            ['z', 1, 'float32'],\r\n            ['serial', 1, 'int32'],\r\n            ['bfactor', 1, 'float32'],\r\n            ['altloc', 1, 'uint8'],\r\n            ['occupancy', 1, 'float32']\r\n        ];\r\n    }\r\n    setAltloc(i, str) {\r\n        this.altloc[i] = str.charCodeAt(0);\r\n    }\r\n    getAltloc(i) {\r\n        const code = this.altloc[i];\r\n        return code ? String.fromCharCode(code) : '';\r\n    }\r\n}\r\n//# sourceMappingURL=atom-store.js.map","/**\r\n * @file Residue Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store.js';\r\n/**\r\n * Residue store\r\n */\r\nexport default class ResidueStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['chainIndex', 1, 'uint32'],\r\n            ['atomOffset', 1, 'uint32'],\r\n            ['atomCount', 1, 'uint16'],\r\n            ['residueTypeId', 1, 'uint16'],\r\n            ['resno', 1, 'int32'],\r\n            ['sstruc', 1, 'uint8'],\r\n            ['inscode', 1, 'uint8']\r\n        ];\r\n    }\r\n    setSstruc(i, str) {\r\n        this.sstruc[i] = str.charCodeAt(0);\r\n    }\r\n    getSstruc(i) {\r\n        const code = this.sstruc[i];\r\n        return code ? String.fromCharCode(code) : '';\r\n    }\r\n    setInscode(i, str) {\r\n        this.inscode[i] = str.charCodeAt(0);\r\n    }\r\n    getInscode(i) {\r\n        const code = this.inscode[i];\r\n        return code ? String.fromCharCode(code) : '';\r\n    }\r\n}\r\n//# sourceMappingURL=residue-store.js.map","/**\r\n * @file Chain Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store';\r\n/**\r\n * Chain store\r\n */\r\nexport default class ChainStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['entityIndex', 1, 'uint16'],\r\n            ['modelIndex', 1, 'uint16'],\r\n            ['residueOffset', 1, 'uint32'],\r\n            ['residueCount', 1, 'uint32'],\r\n            ['chainname', 4, 'uint8'],\r\n            ['chainid', 4, 'uint8']\r\n        ];\r\n    }\r\n    setChainname(i, str) {\r\n        const j = 4 * i;\r\n        this.chainname[j] = str.charCodeAt(0);\r\n        this.chainname[j + 1] = str.charCodeAt(1);\r\n        this.chainname[j + 2] = str.charCodeAt(2);\r\n        this.chainname[j + 3] = str.charCodeAt(3);\r\n    }\r\n    getChainname(i) {\r\n        let chainname = '';\r\n        for (let k = 0; k < 4; ++k) {\r\n            const code = this.chainname[4 * i + k];\r\n            if (code) {\r\n                chainname += String.fromCharCode(code);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return chainname;\r\n    }\r\n    setChainid(i, str) {\r\n        const j = 4 * i;\r\n        this.chainid[j] = str.charCodeAt(0);\r\n        this.chainid[j + 1] = str.charCodeAt(1);\r\n        this.chainid[j + 2] = str.charCodeAt(2);\r\n        this.chainid[j + 3] = str.charCodeAt(3);\r\n    }\r\n    getChainid(i) {\r\n        let chainid = '';\r\n        for (let k = 0; k < 4; ++k) {\r\n            const code = this.chainid[4 * i + k];\r\n            if (code) {\r\n                chainid += String.fromCharCode(code);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return chainid;\r\n    }\r\n}\r\n//# sourceMappingURL=chain-store.js.map","/**\r\n * @file Model Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Store from './store.js';\r\n/**\r\n * Model store\r\n */\r\nexport default class ModelStore extends Store {\r\n    get _defaultFields() {\r\n        return [\r\n            ['chainOffset', 1, 'uint32'],\r\n            ['chainCount', 1, 'uint32']\r\n        ];\r\n    }\r\n}\r\n//# sourceMappingURL=model-store.js.map","/**\r\n * @file Helixorient\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { AtomPicker } from '../utils/picker';\r\nimport RadiusFactory from '../utils/radius-factory';\r\nimport { copyArray } from '../math/array-utils';\r\nimport { projectPointOnVector } from '../math/vector-utils';\r\nclass Helixorient {\r\n    constructor(polymer) {\r\n        this.polymer = polymer;\r\n        this.size = polymer.residueCount;\r\n    }\r\n    getCenterIterator(smooth = 0) {\r\n        const center = this.getPosition().center;\r\n        const size = center.length / 3;\r\n        let i = 0;\r\n        let j = -1;\r\n        const cache = [\r\n            new Vector3(),\r\n            new Vector3(),\r\n            new Vector3(),\r\n            new Vector3()\r\n        ];\r\n        function next() {\r\n            const vector = this.get(j);\r\n            j += 1;\r\n            return vector;\r\n        }\r\n        function get(idx) {\r\n            idx = Math.min(size - 1, Math.max(0, idx));\r\n            const v = cache[i % 4];\r\n            const idx3 = 3 * idx;\r\n            v.fromArray(center, idx3); // TODO\r\n            if (smooth) {\r\n                const w = Math.min(smooth, idx, size - idx - 1);\r\n                for (let k = 1; k <= w; ++k) {\r\n                    const l = k * 3;\r\n                    const t = (w + 1 - k) / (w + 1);\r\n                    v.x += t * center[idx3 - l + 0] + t * center[idx3 + l + 0];\r\n                    v.y += t * center[idx3 - l + 1] + t * center[idx3 + l + 1];\r\n                    v.z += t * center[idx3 - l + 2] + t * center[idx3 + l + 2];\r\n                }\r\n                v.x /= w + 1;\r\n                v.y /= w + 1;\r\n                v.z /= w + 1;\r\n            }\r\n            i += 1;\r\n            return v;\r\n        }\r\n        function reset() {\r\n            i = 0;\r\n            j = -1;\r\n        }\r\n        return { size, next, get, reset };\r\n    }\r\n    getColor(params) {\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        const residueIndexStart = polymer.residueIndexStart;\r\n        const col = new Float32Array(n * 3);\r\n        const p = params || {};\r\n        p.structure = structure;\r\n        const colormaker = ColormakerRegistry.getScheme(p);\r\n        const rp = structure.getResidueProxy();\r\n        const ap = structure.getAtomProxy();\r\n        for (let i = 0; i < n; ++i) {\r\n            rp.index = residueIndexStart + i;\r\n            ap.index = rp.traceAtomIndex;\r\n            colormaker.atomColorToArray(ap, col, i * 3);\r\n        }\r\n        return {\r\n            'color': col\r\n        };\r\n    }\r\n    getPicking() {\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        const residueIndexStart = polymer.residueIndexStart;\r\n        const pick = new Float32Array(n);\r\n        const rp = structure.getResidueProxy();\r\n        for (let i = 0; i < n; ++i) {\r\n            rp.index = residueIndexStart + i;\r\n            pick[i] = rp.traceAtomIndex;\r\n        }\r\n        return {\r\n            'picking': new AtomPicker(pick, structure)\r\n        };\r\n    }\r\n    getSize(params) {\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        const residueIndexStart = polymer.residueIndexStart;\r\n        const size = new Float32Array(n);\r\n        const radiusFactory = new RadiusFactory(params);\r\n        const rp = structure.getResidueProxy();\r\n        const ap = structure.getAtomProxy();\r\n        for (let i = 0; i < n; ++i) {\r\n            rp.index = residueIndexStart + i;\r\n            ap.index = rp.traceAtomIndex;\r\n            size[i] = radiusFactory.atomRadius(ap);\r\n        }\r\n        return { size };\r\n    }\r\n    getPosition() {\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        const n3 = n - 3;\r\n        const center = new Float32Array(3 * n);\r\n        const axis = new Float32Array(3 * n);\r\n        const diff = new Float32Array(n);\r\n        const radius = new Float32Array(n);\r\n        const rise = new Float32Array(n);\r\n        const twist = new Float32Array(n);\r\n        const resdir = new Float32Array(3 * n);\r\n        const r12 = new Vector3();\r\n        const r23 = new Vector3();\r\n        const r34 = new Vector3();\r\n        const diff13 = new Vector3();\r\n        const diff24 = new Vector3();\r\n        const v1 = new Vector3();\r\n        const v2 = new Vector3();\r\n        const vt = new Vector3();\r\n        const _axis = new Vector3();\r\n        const _prevAxis = new Vector3();\r\n        const _resdir = new Vector3();\r\n        const _center = new Vector3(0, 0, 0);\r\n        const type = 'trace';\r\n        const a1 = structure.getAtomProxy();\r\n        const a2 = structure.getAtomProxy(polymer.getAtomIndexByType(0, type));\r\n        const a3 = structure.getAtomProxy(polymer.getAtomIndexByType(1, type));\r\n        const a4 = structure.getAtomProxy(polymer.getAtomIndexByType(2, type));\r\n        for (let i = 0; i < n3; ++i) {\r\n            a1.index = a2.index;\r\n            a2.index = a3.index;\r\n            a3.index = a4.index;\r\n            a4.index = polymer.getAtomIndexByType(i + 3, type); // TODO\r\n            const j = 3 * i;\r\n            // ported from GROMACS src/tools/gmx_helixorient.c\r\n            r12.subVectors(a2, a1); // TODO\r\n            r23.subVectors(a3, a2); // TODO\r\n            r34.subVectors(a4, a3); // TODO\r\n            diff13.subVectors(r12, r23);\r\n            diff24.subVectors(r23, r34);\r\n            _axis.crossVectors(diff13, diff24).normalize();\r\n            _axis.toArray(axis, j); // TODO\r\n            if (i > 0) {\r\n                diff[i] = _axis.angleTo(_prevAxis);\r\n            }\r\n            const tmp = Math.cos(diff13.angleTo(diff24));\r\n            twist[i] = 180.0 / Math.PI * Math.acos(tmp);\r\n            const diff13Length = diff13.length();\r\n            const diff24Length = diff24.length();\r\n            radius[i] = (Math.sqrt(diff24Length * diff13Length) /\r\n                // clamp, to avoid instabilities for when\r\n                // angle between diff13 and diff24 is near 0\r\n                Math.max(2.0, 2.0 * (1.0 - tmp)));\r\n            rise[i] = Math.abs(r23.dot(_axis));\r\n            //\r\n            v1.copy(diff13).multiplyScalar(radius[i] / diff13Length);\r\n            v2.copy(diff24).multiplyScalar(radius[i] / diff24Length);\r\n            v1.subVectors(a2, v1); // TODO\r\n            v2.subVectors(a3, v2); // TODO\r\n            v1.toArray(center, j + 3); // TODO\r\n            v2.toArray(center, j + 6); // TODO\r\n            //\r\n            _resdir.subVectors(a1, _center); // TODO\r\n            _resdir.toArray(resdir, j); // TODO\r\n            _prevAxis.copy(_axis);\r\n            _center.copy(v1);\r\n        }\r\n        //\r\n        // calc axis as dir of second and third center pos\r\n        // project first traceAtom onto axis to get first center pos\r\n        v1.fromArray(center, 3); // TODO\r\n        v2.fromArray(center, 6); // TODO\r\n        _axis.subVectors(v1, v2).normalize();\r\n        // _center.copy( res[ 0 ].getTraceAtom() );\r\n        a1.index = polymer.getAtomIndexByType(0, type); // TODO\r\n        _center.copy(a1); // TODO\r\n        vt.copy(a1); // TODO\r\n        projectPointOnVector(vt, _axis, v1);\r\n        vt.toArray(center, 0); // TODO\r\n        // calc first resdir\r\n        _resdir.subVectors(_center, v1);\r\n        _resdir.toArray(resdir, 0); // TODO\r\n        // calc axis as dir of n-1 and n-2 center pos\r\n        // project last traceAtom onto axis to get last center pos\r\n        v1.fromArray(center, 3 * n - 6); // TODO\r\n        v2.fromArray(center, 3 * n - 9); // TODO\r\n        _axis.subVectors(v1, v2).normalize();\r\n        // _center.copy( res[ n - 1 ].getTraceAtom() );\r\n        a1.index = polymer.getAtomIndexByType(n - 1, type); // TODO\r\n        _center.copy(a1); // TODO\r\n        vt.copy(a1); // TODO\r\n        projectPointOnVector(vt, _axis, v1);\r\n        vt.toArray(center, 3 * n - 3); // TODO\r\n        // calc last three resdir\r\n        for (let i = n - 3; i < n; ++i) {\r\n            v1.fromArray(center, 3 * i); // TODO\r\n            // _center.copy( res[ i ].getTraceAtom() );\r\n            a1.index = polymer.getAtomIndexByType(i, type); // TODO\r\n            _center.copy(a1); // TODO\r\n            _resdir.subVectors(_center, v1);\r\n            _resdir.toArray(resdir, 3 * i); // TODO\r\n        }\r\n        // average measures to define them on the residues\r\n        const resRadius = new Float32Array(n);\r\n        const resTwist = new Float32Array(n);\r\n        const resRise = new Float32Array(n);\r\n        const resBending = new Float32Array(n);\r\n        resRadius[1] = radius[0];\r\n        resTwist[1] = twist[0];\r\n        resRise[1] = radius[0];\r\n        for (let i = 2; i < n - 2; ++i) {\r\n            resRadius[i] = 0.5 * (radius[i - 2] + radius[i - 1]);\r\n            resTwist[i] = 0.5 * (twist[i - 2] + twist[i - 1]);\r\n            resRise[i] = 0.5 * (rise[i - 2] + rise[i - 1]);\r\n            v1.fromArray(axis, 3 * (i - 2)); // TODO\r\n            v2.fromArray(axis, 3 * (i - 1)); // TODO\r\n            resBending[i] = 180.0 / Math.PI * Math.acos(Math.cos(v1.angleTo(v2)));\r\n        }\r\n        resRadius[n - 2] = radius[n - 4];\r\n        resTwist[n - 2] = twist[n - 4];\r\n        resRise[n - 2] = rise[n - 4];\r\n        // average helix axes to define them on the residues\r\n        const resAxis = new Float32Array(3 * n);\r\n        copyArray(axis, resAxis, 0, 0, 3);\r\n        copyArray(axis, resAxis, 0, 3, 3);\r\n        for (let i = 2; i < n - 2; ++i) {\r\n            v1.fromArray(axis, 3 * (i - 2)); // TODO\r\n            v2.fromArray(axis, 3 * (i - 1)); // TODO\r\n            _axis.addVectors(v2, v1).multiplyScalar(0.5).normalize();\r\n            _axis.toArray(resAxis, 3 * i); // TODO\r\n        }\r\n        copyArray(axis, resAxis, 3 * n - 12, 3 * n - 6, 3);\r\n        copyArray(axis, resAxis, 3 * n - 12, 3 * n - 3, 3);\r\n        return {\r\n            center,\r\n            axis: resAxis,\r\n            bending: resBending,\r\n            radius: resRadius,\r\n            rise: resRise,\r\n            twist: resTwist,\r\n            resdir: resdir\r\n        };\r\n    }\r\n}\r\nexport default Helixorient;\r\n//# sourceMappingURL=helixorient.js.map","/**\r\n * @file Helixbundle\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { AtomPicker } from '../utils/picker.js';\r\nimport RadiusFactory from '../utils/radius-factory.js';\r\nimport Helixorient from './helixorient.js';\r\nimport { calculateMeanVector3, projectPointOnVector } from '../math/vector-utils.js';\r\nclass Helixbundle {\r\n    constructor(polymer) {\r\n        this.polymer = polymer;\r\n        this.helixorient = new Helixorient(polymer);\r\n        this.position = this.helixorient.getPosition();\r\n    }\r\n    getAxis(localAngle, centerDist, ssBorder, colorParams, radiusParams) {\r\n        localAngle = localAngle || 30;\r\n        centerDist = centerDist || 2.5;\r\n        ssBorder = ssBorder === undefined ? false : ssBorder;\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        const residueIndexStart = polymer.residueIndexStart;\r\n        const pos = this.position;\r\n        const cp = colorParams || {};\r\n        cp.structure = structure;\r\n        const colormaker = ColormakerRegistry.getScheme(cp);\r\n        const radiusFactory = new RadiusFactory(radiusParams);\r\n        let j = 0;\r\n        let k = 0;\r\n        const axis = [];\r\n        const center = [];\r\n        const beg = [];\r\n        const end = [];\r\n        const col = [];\r\n        const pick = [];\r\n        const size = [];\r\n        const residueOffset = [];\r\n        const residueCount = [];\r\n        let tmpAxis = new Float32Array(n * 3);\r\n        let tmpCenter = new Float32Array(n * 3);\r\n        let _axis, _center;\r\n        const _beg = new Vector3();\r\n        const _end = new Vector3();\r\n        const rp1 = structure.getResidueProxy();\r\n        const rp2 = structure.getResidueProxy();\r\n        const ap = structure.getAtomProxy();\r\n        const c1 = new Vector3();\r\n        const c2 = new Vector3();\r\n        let split = false;\r\n        for (let i = 0; i < n; ++i) {\r\n            rp1.index = residueIndexStart + i;\r\n            c1.fromArray(pos.center, i * 3);\r\n            if (i === n - 1) {\r\n                split = true;\r\n            }\r\n            else {\r\n                rp2.index = residueIndexStart + i + 1;\r\n                c2.fromArray(pos.center, i * 3 + 3);\r\n                if (ssBorder && rp1.sstruc !== rp2.sstruc) {\r\n                    split = true;\r\n                }\r\n                else if (c1.distanceTo(c2) > centerDist) {\r\n                    split = true;\r\n                }\r\n                else if (pos.bending[i] > localAngle) {\r\n                    split = true;\r\n                }\r\n            }\r\n            if (split) {\r\n                if (i - j < 4) {\r\n                    j = i;\r\n                    split = false;\r\n                    continue;\r\n                }\r\n                ap.index = rp1.traceAtomIndex;\r\n                // ignore first and last axis\r\n                tmpAxis = pos.axis.subarray(j * 3 + 3, i * 3);\r\n                tmpCenter = pos.center.subarray(j * 3, i * 3 + 3);\r\n                _axis = calculateMeanVector3(tmpAxis).normalize();\r\n                _center = calculateMeanVector3(tmpCenter);\r\n                _beg.fromArray(tmpCenter);\r\n                projectPointOnVector(_beg, _axis, _center);\r\n                _end.fromArray(tmpCenter, tmpCenter.length - 3);\r\n                projectPointOnVector(_end, _axis, _center);\r\n                _axis.subVectors(_end, _beg);\r\n                _axis.toArray(axis, k);\r\n                _center.toArray(center, k);\r\n                _beg.toArray(beg, k);\r\n                _end.toArray(end, k);\r\n                colormaker.atomColorToArray(ap, col, k);\r\n                pick.push(ap.index);\r\n                size.push(radiusFactory.atomRadius(ap));\r\n                residueOffset.push(residueIndexStart + j);\r\n                residueCount.push(residueIndexStart + i + 1 - j);\r\n                k += 3;\r\n                j = i;\r\n                split = false;\r\n            }\r\n        }\r\n        const picking = new Float32Array(pick);\r\n        return {\r\n            axis: new Float32Array(axis),\r\n            center: new Float32Array(center),\r\n            begin: new Float32Array(beg),\r\n            end: new Float32Array(end),\r\n            color: new Float32Array(col),\r\n            picking: new AtomPicker(picking, structure),\r\n            size: new Float32Array(size),\r\n            residueOffset: residueOffset,\r\n            residueCount: residueCount\r\n        };\r\n    }\r\n}\r\nexport default Helixbundle;\r\n//# sourceMappingURL=helixbundle.js.map","/**\r\n * @file Binary Heap\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n/**\r\n * Binary heap implementation\r\n * @class\r\n * @author http://eloquentjavascript.net/appendix2.htm\r\n * @param {Function} scoreFunction - the heap scoring function\r\n */\r\nclass BinaryHeap {\r\n    constructor(scoreFunction) {\r\n        this.scoreFunction = scoreFunction;\r\n        this.content = [];\r\n        this.scoreFunction = scoreFunction;\r\n    }\r\n    push(element) {\r\n        // Add the new element to the end of the array.\r\n        this.content.push(element);\r\n        // Allow it to bubble up.\r\n        this.bubbleUp(this.content.length - 1);\r\n    }\r\n    pop() {\r\n        // Store the first element so we can return it later.\r\n        const result = this.content[0];\r\n        // Get the element at the end of the array.\r\n        const end = this.content.pop();\r\n        // If there are any elements left, put the end element at the\r\n        // start, and let it sink down.\r\n        if (end && this.content.length > 0) {\r\n            this.content[0] = end;\r\n            this.sinkDown(0);\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this.content[0];\r\n    }\r\n    remove(element) {\r\n        const len = this.content.length;\r\n        // To remove a value, we must search through the array to find it.\r\n        for (let i = 0; i < len; i++) {\r\n            if (this.content[i] === element) {\r\n                // When it is found, the process seen in 'pop' is repeated\r\n                // to fill up the hole.\r\n                const end = this.content.pop();\r\n                if (end && i !== len - 1) {\r\n                    this.content[i] = end;\r\n                    if (this.scoreFunction(end) < this.scoreFunction(element)) {\r\n                        this.bubbleUp(i);\r\n                    }\r\n                    else {\r\n                        this.sinkDown(i);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        throw new Error('Node not found.');\r\n    }\r\n    size() {\r\n        return this.content.length;\r\n    }\r\n    bubbleUp(n) {\r\n        // Fetch the element that has to be moved.\r\n        const element = this.content[n];\r\n        // When at 0, an element can not go up any further.\r\n        while (n > 0) {\r\n            // Compute the parent element's index, and fetch it.\r\n            const parentN = Math.floor((n + 1) / 2) - 1;\r\n            const parent = this.content[parentN];\r\n            // Swap the elements if the parent is greater.\r\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n                this.content[parentN] = element;\r\n                this.content[n] = parent;\r\n                // Update 'n' to continue at the new position.\r\n                n = parentN;\r\n            }\r\n            else {\r\n                // Found a parent that is less, no need to move it further.\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    sinkDown(n) {\r\n        // Look up the target element and its score.\r\n        const length = this.content.length;\r\n        const element = this.content[n];\r\n        const elemScore = this.scoreFunction(element);\r\n        let child1Score = 0;\r\n        let child2Score = 0;\r\n        while (true) {\r\n            // Compute the indices of the child elements.\r\n            const child2N = (n + 1) * 2;\r\n            const child1N = child2N - 1;\r\n            // This is used to store the new position of the element, if any.\r\n            let swap = null;\r\n            // If the first child exists (is inside the array)...\r\n            if (child1N < length) {\r\n                // Look it up and compute its score.\r\n                const child1 = this.content[child1N];\r\n                child1Score = this.scoreFunction(child1);\r\n                // If the score is less than our element's, we need to swap.\r\n                if (child1Score < elemScore)\r\n                    swap = child1N;\r\n            }\r\n            // Do the same checks for the other child.\r\n            if (child2N < length) {\r\n                const child2 = this.content[child2N];\r\n                child2Score = this.scoreFunction(child2);\r\n                if (child2Score < (swap === null ? elemScore : child1Score))\r\n                    swap = child2N;\r\n            }\r\n            // If the element needs to be moved, swap it, and continue.\r\n            if (swap !== null) {\r\n                this.content[n] = this.content[swap];\r\n                this.content[swap] = element;\r\n                n = swap;\r\n            }\r\n            else {\r\n                // Otherwise, we are done.\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default BinaryHeap;\r\n//# sourceMappingURL=binary-heap.js.map","/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport BinaryHeap from './binary-heap';\r\n/**\r\n * Kdtree\r\n * @class\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>, 2016\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * k-d Tree for typed arrays of 3d points (e.g. for Float32Array), in-place\r\n * provides fast nearest neighbour search\r\n *\r\n * Based on https://github.com/ubilabs/kd-tree-javascript by Ubilabs\r\n *\r\n * Further information (including mathematical properties)\r\n * http://en.wikipedia.org/wiki/Binary_tree\r\n * http://en.wikipedia.org/wiki/K-d_tree\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * metric: function(a, b){\r\n *    return Math.pow(a[0]-b[0], 2) + Math.pow(a[1]-b[1], 2) + Math.pow(a[2]-b[2], 2);\r\n * }\r\n *\r\n * @param {Float32Array} points - points\r\n * @param {Function} metric - metric\r\n */\r\nclass Kdtree {\r\n    constructor(points, metric) {\r\n        this.points = points;\r\n        this.metric = metric;\r\n        this.maxDepth = 0;\r\n        this.currentNode = 0;\r\n        const n = points.length / 3;\r\n        const indices = new Uint32Array(n);\r\n        for (let i = 0; i < n; ++i) {\r\n            indices[i] = i;\r\n        }\r\n        this.indices = indices;\r\n        this.nodes = new Int32Array(n * 4);\r\n        this.rootIndex = this.buildTree(0, -1, 0, n);\r\n    }\r\n    buildTree(depth, parent, arrBegin, arrEnd) {\r\n        if (depth > this.maxDepth)\r\n            this.maxDepth = depth;\r\n        const plength = arrEnd - arrBegin;\r\n        if (plength === 0) {\r\n            return -1;\r\n        }\r\n        const nodeIndex = this.currentNode * 4;\r\n        const nodes = this.nodes;\r\n        this.currentNode += 1;\r\n        if (plength === 1) {\r\n            nodes[nodeIndex] = arrBegin;\r\n            nodes[nodeIndex + 1] = -1;\r\n            nodes[nodeIndex + 2] = -1;\r\n            nodes[nodeIndex + 3] = parent;\r\n            return nodeIndex;\r\n        }\r\n        // if(plength <= 32){\r\n        //   return nodeIndex;\r\n        // }\r\n        const indices = this.indices;\r\n        const points = this.points;\r\n        const arrMedian = arrBegin + Math.floor(plength / 2);\r\n        const currentDim = depth % 3;\r\n        // inlined quickselect function\r\n        let j, tmp, pivotIndex, pivotValue, storeIndex;\r\n        let left = arrBegin;\r\n        let right = arrEnd - 1;\r\n        while (right > left) {\r\n            pivotIndex = (left + right) >> 1;\r\n            pivotValue = points[indices[pivotIndex] * 3 + currentDim];\r\n            // swap( pivotIndex, right );\r\n            tmp = indices[pivotIndex];\r\n            indices[pivotIndex] = indices[right];\r\n            indices[right] = tmp;\r\n            storeIndex = left;\r\n            for (j = left; j < right; ++j) {\r\n                if (points[indices[j] * 3 + currentDim] < pivotValue) {\r\n                    // swap( storeIndex, j );\r\n                    tmp = indices[storeIndex];\r\n                    indices[storeIndex] = indices[j];\r\n                    indices[j] = tmp;\r\n                    ++storeIndex;\r\n                }\r\n            }\r\n            // swap( right, storeIndex );\r\n            tmp = indices[right];\r\n            indices[right] = indices[storeIndex];\r\n            indices[storeIndex] = tmp;\r\n            pivotIndex = storeIndex;\r\n            if (arrMedian === pivotIndex) {\r\n                break;\r\n            }\r\n            else if (arrMedian < pivotIndex) {\r\n                right = pivotIndex - 1;\r\n            }\r\n            else {\r\n                left = pivotIndex + 1;\r\n            }\r\n        }\r\n        nodes[nodeIndex] = arrMedian;\r\n        nodes[nodeIndex + 1] = this.buildTree(depth + 1, nodeIndex, arrBegin, arrMedian);\r\n        nodes[nodeIndex + 2] = this.buildTree(depth + 1, nodeIndex, arrMedian + 1, arrEnd);\r\n        nodes[nodeIndex + 3] = parent;\r\n        return nodeIndex;\r\n    }\r\n    getNodeDepth(nodeIndex) {\r\n        const parentIndex = this.nodes[nodeIndex + 3];\r\n        return (parentIndex === -1) ? 0 : this.getNodeDepth(parentIndex) + 1;\r\n    }\r\n    // TODO\r\n    // function getNodePos (node) {}\r\n    /**\r\n     * find nearest points\r\n     * @param {Array} point - array of size 3\r\n     * @param {Integer} maxNodes - max amount of nodes to return\r\n     * @param {Float} maxDistance - maximum distance of point to result nodes\r\n     * @return {Array} array of point, distance pairs\r\n     */\r\n    nearest(point, maxNodes, maxDistance) {\r\n        const bestNodes = new BinaryHeap(e => -e[1]);\r\n        const nodes = this.nodes;\r\n        const points = this.points;\r\n        const indices = this.indices;\r\n        const nearestSearch = (nodeIndex) => {\r\n            let bestChild, otherChild;\r\n            const dimension = this.getNodeDepth(nodeIndex) % 3;\r\n            const pointIndex = indices[nodes[nodeIndex]] * 3;\r\n            const ownPoint = [\r\n                points[pointIndex + 0],\r\n                points[pointIndex + 1],\r\n                points[pointIndex + 2]\r\n            ];\r\n            const ownDistance = this.metric(point, ownPoint);\r\n            function saveNode(nodeIndex, distance) {\r\n                bestNodes.push([nodeIndex, distance]);\r\n                if (bestNodes.size() > maxNodes) {\r\n                    bestNodes.pop();\r\n                }\r\n            }\r\n            const leftIndex = nodes[nodeIndex + 1];\r\n            const rightIndex = nodes[nodeIndex + 2];\r\n            // if it's a leaf\r\n            if (rightIndex === -1 && leftIndex === -1) {\r\n                if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) &&\r\n                    ownDistance <= maxDistance) {\r\n                    saveNode(nodeIndex, ownDistance);\r\n                }\r\n                return;\r\n            }\r\n            if (rightIndex === -1) {\r\n                bestChild = leftIndex;\r\n            }\r\n            else if (leftIndex === -1) {\r\n                bestChild = rightIndex;\r\n            }\r\n            else {\r\n                if (point[dimension] <= points[pointIndex + dimension]) {\r\n                    bestChild = leftIndex;\r\n                }\r\n                else {\r\n                    bestChild = rightIndex;\r\n                }\r\n            }\r\n            // recursive search\r\n            nearestSearch(bestChild);\r\n            if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[1]) &&\r\n                ownDistance <= maxDistance) {\r\n                saveNode(nodeIndex, ownDistance);\r\n            }\r\n            // if there's still room or the current distance is nearer than the best distance\r\n            const linearPoint = [];\r\n            for (let i = 0; i < 3; i += 1) {\r\n                if (i === dimension) {\r\n                    linearPoint[i] = point[i];\r\n                }\r\n                else {\r\n                    linearPoint[i] = points[pointIndex + i];\r\n                }\r\n            }\r\n            const linearDistance = this.metric(linearPoint, ownPoint);\r\n            if ((bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[1]) &&\r\n                Math.abs(linearDistance) <= maxDistance) {\r\n                if (bestChild === leftIndex) {\r\n                    otherChild = rightIndex;\r\n                }\r\n                else {\r\n                    otherChild = leftIndex;\r\n                }\r\n                if (otherChild !== -1) {\r\n                    nearestSearch(otherChild);\r\n                }\r\n            }\r\n        };\r\n        nearestSearch(this.rootIndex);\r\n        const result = [];\r\n        for (let i = 0, il = Math.min(bestNodes.size(), maxNodes); i < il; i += 1) {\r\n            result.push(bestNodes.content[i]);\r\n        }\r\n        return result;\r\n    }\r\n    verify(nodeIndex, depth = 0) {\r\n        let count = 1;\r\n        if (nodeIndex === undefined) {\r\n            nodeIndex = this.rootIndex;\r\n        }\r\n        if (nodeIndex === -1) {\r\n            throw new Error('node is null');\r\n        }\r\n        const dim = depth % 3;\r\n        const nodes = this.nodes;\r\n        const points = this.points;\r\n        const indices = this.indices;\r\n        const leftIndex = nodes[nodeIndex + 1];\r\n        const rightIndex = nodes[nodeIndex + 2];\r\n        if (leftIndex !== -1) {\r\n            if (points[indices[nodes[leftIndex]] * 3 + dim] >\r\n                points[indices[nodes[nodeIndex]] * 3 + dim]) {\r\n                throw new Error('left child is > parent!');\r\n            }\r\n            count += this.verify(leftIndex, depth + 1);\r\n        }\r\n        if (rightIndex !== -1) {\r\n            if (points[indices[nodes[rightIndex]] * 3 + dim] <\r\n                points[indices[nodes[nodeIndex]] * 3 + dim]) {\r\n                throw new Error('right child is < parent!');\r\n            }\r\n            count += this.verify(rightIndex, depth + 1);\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport default Kdtree;\r\n//# sourceMappingURL=kdtree.js.map","/**\r\n * @file Atom Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { SecStrucHelix, SecStrucSheet, SecStrucTurn, ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType } from '../structure/structure-constants';\r\n/**\r\n * Atom proxy\r\n */\r\nclass AtomProxy {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} index - the index\r\n     */\r\n    constructor(structure, index = 0) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.chainStore = structure.chainStore;\r\n        this.residueStore = structure.residueStore;\r\n        this.atomStore = structure.atomStore;\r\n        this.residueMap = structure.residueMap;\r\n        this.atomMap = structure.atomMap;\r\n    }\r\n    /**\r\n     * @type {BondHash}\r\n     */\r\n    get bondHash() { return this.structure.bondHash; }\r\n    /**\r\n     * Molecular enity\r\n     * @type {Entity}\r\n     */\r\n    get entity() {\r\n        return this.structure.entityList[this.entityIndex];\r\n    }\r\n    get entityIndex() {\r\n        return this.chainStore.entityIndex[this.chainIndex];\r\n    }\r\n    get modelIndex() {\r\n        return this.chainStore.modelIndex[this.chainIndex];\r\n    }\r\n    get chainIndex() {\r\n        return this.residueStore.chainIndex[this.residueIndex];\r\n    }\r\n    /**\r\n     * @type {ResidueProxy}\r\n     */\r\n    get residue() {\r\n        console.warn('residue - might be expensive');\r\n        return this.structure.getResidueProxy(this.residueIndex);\r\n    }\r\n    get residueIndex() {\r\n        return this.atomStore.residueIndex[this.index];\r\n    }\r\n    set residueIndex(value) {\r\n        this.atomStore.residueIndex[this.index] = value;\r\n    }\r\n    //\r\n    /**\r\n     * Secondary structure code\r\n     * @type {String}\r\n     */\r\n    get sstruc() {\r\n        return this.residueStore.getSstruc(this.residueIndex);\r\n    }\r\n    /**\r\n     * Insertion code\r\n     * @type {String}\r\n     */\r\n    get inscode() {\r\n        return this.residueStore.getInscode(this.residueIndex);\r\n    }\r\n    /**\r\n     * Residue number/label\r\n     * @type {Integer}\r\n     */\r\n    get resno() {\r\n        return this.residueStore.resno[this.residueIndex];\r\n    }\r\n    /**\r\n     * Chain name\r\n     * @type {String}\r\n     */\r\n    get chainname() {\r\n        return this.chainStore.getChainname(this.chainIndex);\r\n    }\r\n    /**\r\n     * Chain id\r\n     * @type {String}\r\n     */\r\n    get chainid() {\r\n        return this.chainStore.getChainid(this.chainIndex);\r\n    }\r\n    //\r\n    /**\r\n     * @type {ResidueType}\r\n     */\r\n    get residueType() {\r\n        return this.residueMap.get(this.residueStore.residueTypeId[this.residueIndex]);\r\n    }\r\n    /**\r\n     * @type {AtomType}\r\n     */\r\n    get atomType() {\r\n        return this.atomMap.get(this.atomStore.atomTypeId[this.index]);\r\n    }\r\n    get residueAtomOffset() {\r\n        return this.residueStore.atomOffset[this.residueIndex];\r\n    }\r\n    //\r\n    /**\r\n     * Residue name\r\n     */\r\n    get resname() {\r\n        return this.residueType.resname;\r\n    }\r\n    /**\r\n     * Hetero flag\r\n     */\r\n    get hetero() {\r\n        return this.residueType.hetero;\r\n    }\r\n    //\r\n    /**\r\n     * Atom name\r\n     */\r\n    get atomname() {\r\n        return this.atomType.atomname;\r\n    }\r\n    /**\r\n     * Atomic number\r\n     */\r\n    get number() {\r\n        return this.atomType.number;\r\n    }\r\n    /**\r\n     * Element\r\n     */\r\n    get element() {\r\n        return this.atomType.element;\r\n    }\r\n    /**\r\n     * Van-der-Waals radius\r\n     */\r\n    get vdw() {\r\n        return this.atomType.vdw;\r\n    }\r\n    /**\r\n     * Covalent radius\r\n     */\r\n    get covalent() {\r\n        return this.atomType.covalent;\r\n    }\r\n    //\r\n    /**\r\n     * X coordinate\r\n     */\r\n    get x() {\r\n        return this.atomStore.x[this.index];\r\n    }\r\n    set x(value) {\r\n        this.atomStore.x[this.index] = value;\r\n    }\r\n    /**\r\n     * Y coordinate\r\n     */\r\n    get y() {\r\n        return this.atomStore.y[this.index];\r\n    }\r\n    set y(value) {\r\n        this.atomStore.y[this.index] = value;\r\n    }\r\n    /**\r\n     * Z coordinate\r\n     */\r\n    get z() {\r\n        return this.atomStore.z[this.index];\r\n    }\r\n    set z(value) {\r\n        this.atomStore.z[this.index] = value;\r\n    }\r\n    /**\r\n     * Serial number\r\n     */\r\n    get serial() {\r\n        return this.atomStore.serial[this.index];\r\n    }\r\n    set serial(value) {\r\n        this.atomStore.serial[this.index] = value;\r\n    }\r\n    /**\r\n     * B-factor value\r\n     */\r\n    get bfactor() {\r\n        return this.atomStore.bfactor[this.index];\r\n    }\r\n    set bfactor(value) {\r\n        this.atomStore.bfactor[this.index] = value;\r\n    }\r\n    /**\r\n     * Occupancy value\r\n     */\r\n    get occupancy() {\r\n        return this.atomStore.occupancy[this.index];\r\n    }\r\n    set occupancy(value) {\r\n        this.atomStore.occupancy[this.index] = value;\r\n    }\r\n    /**\r\n     * Alternate location identifier\r\n     */\r\n    get altloc() {\r\n        return this.atomStore.getAltloc(this.index);\r\n    }\r\n    set altloc(value) {\r\n        this.atomStore.setAltloc(this.index, value);\r\n    }\r\n    /**\r\n     * Partial charge\r\n     */\r\n    get partialCharge() {\r\n        return this.atomStore.partialCharge ? this.atomStore.partialCharge[this.index] : null;\r\n    }\r\n    set partialCharge(value) {\r\n        if (this.atomStore.partialCharge) {\r\n            this.atomStore.partialCharge[this.index] = value;\r\n        }\r\n    }\r\n    /**\r\n     * Explicit radius\r\n     */\r\n    get radius() {\r\n        return this.atomStore.radius ? this.atomStore.radius[this.index] : null;\r\n    }\r\n    set radius(value) {\r\n        if (this.atomStore.radius) {\r\n            this.atomStore.radius[this.index] = value;\r\n        }\r\n    }\r\n    /**\r\n     * Formal charge\r\n     */\r\n    get formalCharge() {\r\n        return this.atomStore.formalCharge ? this.atomStore.formalCharge[this.index] : null;\r\n    }\r\n    set formalCharge(value) {\r\n        if (this.atomStore.formalCharge) {\r\n            this.atomStore.formalCharge[this.index] = value;\r\n        }\r\n    }\r\n    /**\r\n     * Aromaticity flag\r\n     */\r\n    get aromatic() {\r\n        if (this.atomStore.aromatic) {\r\n            return this.atomStore.aromatic[this.index];\r\n        }\r\n        else {\r\n            return this.residueType.isAromatic(this) ? 1 : 0;\r\n        }\r\n    }\r\n    set aromatic(value) {\r\n        if (this.atomStore.aromatic) {\r\n            this.atomStore.aromatic[this.index] = value;\r\n        }\r\n    }\r\n    //\r\n    get bondCount() {\r\n        return this.bondHash.countArray[this.index]; // TODO\r\n    }\r\n    //\r\n    /**\r\n     * Iterate over each bond\r\n     * @param  {function(bond: BondProxy)} callback - iterator callback function\r\n     * @param  {BondProxy} [bp] - optional target bond proxy for use in the callback\r\n     * @return {undefined}\r\n     */\r\n    eachBond(callback, bp) {\r\n        bp = bp || this.structure._bp;\r\n        const idx = this.index;\r\n        const bondHash = this.bondHash; // TODO\r\n        const indexArray = bondHash.indexArray;\r\n        const n = bondHash.countArray[idx];\r\n        const offset = bondHash.offsetArray[idx];\r\n        for (let i = 0; i < n; ++i) {\r\n            bp.index = indexArray[offset + i];\r\n            callback(bp);\r\n        }\r\n    }\r\n    /**\r\n     * Iterate over each bonded atom\r\n     * @param  {function(atom: AtomProxy)} callback - iterator callback function\r\n     * @param  {AtomProxy} [ap] - optional target atom proxy for use in the callback\r\n     * @return {undefined}\r\n     */\r\n    eachBondedAtom(callback, _ap) {\r\n        const ap = _ap ? _ap : this.structure._ap;\r\n        const idx = this.index;\r\n        this.eachBond(function (bp) {\r\n            ap.index = idx !== bp.atomIndex1 ? bp.atomIndex1 : bp.atomIndex2;\r\n            callback(ap);\r\n        });\r\n        this.index = idx;\r\n    }\r\n    /**\r\n     * Check if this atom is bonded to the given atom,\r\n     * assumes both atoms are from the same structure\r\n     * @param  {AtomProxy} ap - the given atom\r\n     * @return {Boolean} whether a bond exists or not\r\n     */\r\n    hasBondTo(ap) {\r\n        let flag = false;\r\n        this.eachBondedAtom(function (bap) {\r\n            if (ap.index === bap.index)\r\n                flag = true;\r\n        });\r\n        return flag;\r\n    }\r\n    bondToElementCount(element) {\r\n        let count = 0;\r\n        const idx = this.index; // Avoid reentrancy problems\r\n        this.eachBondedAtom(function (bap) {\r\n            if (bap.number === element)\r\n                count += 1;\r\n        });\r\n        this.index = idx;\r\n        return count;\r\n    }\r\n    hasBondToElement(element) {\r\n        return this.bondToElementCount(element) > 0;\r\n    }\r\n    //\r\n    /**\r\n     * If atom is part of a backbone\r\n     * @return {Boolean} flag\r\n     */\r\n    isBackbone() {\r\n        const backboneIndexList = this.residueType.backboneIndexList;\r\n        if (backboneIndexList.length > 0) {\r\n            return backboneIndexList.includes(this.index - this.residueAtomOffset);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * If atom is part of a polymer\r\n     * @return {Boolean} flag\r\n     */\r\n    isPolymer() {\r\n        if (this.structure.entityList.length > 0) {\r\n            return this.entity.isPolymer();\r\n        }\r\n        else {\r\n            const moleculeType = this.residueType.moleculeType;\r\n            return (moleculeType === ProteinType ||\r\n                moleculeType === RnaType ||\r\n                moleculeType === DnaType);\r\n        }\r\n    }\r\n    /**\r\n     * If atom is part of a sidechin\r\n     * @return {Boolean} flag\r\n     */\r\n    isSidechain() {\r\n        return this.isPolymer() && !this.isBackbone();\r\n    }\r\n    /**\r\n     * If atom is part of a coarse-grain group\r\n     * @return {Boolean} flag\r\n     */\r\n    isCg() {\r\n        const backboneType = this.residueType.backboneType;\r\n        return (backboneType === CgProteinBackboneType ||\r\n            backboneType === CgRnaBackboneType ||\r\n            backboneType === CgDnaBackboneType);\r\n    }\r\n    isTrace() {\r\n        return this.index === (this.residueType.traceAtomIndex + this.residueAtomOffset);\r\n    }\r\n    /**\r\n     * If atom is part of a hetero group\r\n     * @return {Boolean} flag\r\n     */\r\n    isHetero() {\r\n        return this.residueType.hetero === 1;\r\n    }\r\n    /**\r\n     * If atom is part of a protein molecule\r\n     * @return {Boolean} flag\r\n     */\r\n    isProtein() {\r\n        return this.residueType.moleculeType === ProteinType;\r\n    }\r\n    /**\r\n     * If atom is part of a nucleic molecule\r\n     * @return {Boolean} flag\r\n     */\r\n    isNucleic() {\r\n        const moleculeType = this.residueType.moleculeType;\r\n        return moleculeType === RnaType || moleculeType === DnaType;\r\n    }\r\n    /**\r\n     * If atom is part of a rna\r\n     * @return {Boolean} flag\r\n     */\r\n    isRna() {\r\n        return this.residueType.moleculeType === RnaType;\r\n    }\r\n    /**\r\n     * If atom is part of a dna\r\n     * @return {Boolean} flag\r\n     */\r\n    isDna() {\r\n        return this.residueType.moleculeType === DnaType;\r\n    }\r\n    /**\r\n     * If atom is part of a water molecule\r\n     * @return {Boolean} flag\r\n     */\r\n    isWater() {\r\n        return this.residueType.moleculeType === WaterType;\r\n    }\r\n    /**\r\n     * If atom is part of an ion\r\n     * @return {Boolean} flag\r\n     */\r\n    isIon() {\r\n        return this.residueType.moleculeType === IonType;\r\n    }\r\n    /**\r\n     * If atom is part of a saccharide\r\n     * @return {Boolean} flag\r\n     */\r\n    isSaccharide() {\r\n        return this.residueType.moleculeType === SaccharideType;\r\n    }\r\n    /**\r\n     * If atom is part of a helix\r\n     * @return {Boolean} flag\r\n     */\r\n    isHelix() {\r\n        return SecStrucHelix.includes(this.sstruc);\r\n    }\r\n    /**\r\n     * If atom is part of a sheet\r\n     * @return {Boolean} flag\r\n     */\r\n    isSheet() {\r\n        return SecStrucSheet.includes(this.sstruc);\r\n    }\r\n    /**\r\n     * If atom is part of a turn\r\n     * @return {Boolean} flag\r\n     */\r\n    isTurn() {\r\n        return SecStrucTurn.includes(this.sstruc) && this.isProtein();\r\n    }\r\n    isBonded() {\r\n        return this.bondHash.countArray[this.index] !== 0; // TODO\r\n    }\r\n    /**\r\n     * If atom is part of a ring\r\n     * @return {Boolean} flag\r\n     */\r\n    isRing() {\r\n        const atomRings = this.residueType.getRings().atomRings; // TODO\r\n        return atomRings[this.index - this.residueAtomOffset] !== undefined;\r\n    }\r\n    isAromatic() {\r\n        return this.aromatic === 1;\r\n    }\r\n    isMetal() { return this.atomType.isMetal(); }\r\n    isNonmetal() { return this.atomType.isNonmetal(); }\r\n    isMetalloid() { return this.atomType.isMetalloid(); }\r\n    isHalogen() { return this.atomType.isHalogen(); }\r\n    isDiatomicNonmetal() { return this.atomType.isDiatomicNonmetal(); }\r\n    isPolyatomicNonmetal() { return this.atomType.isPolyatomicNonmetal(); }\r\n    isAlkaliMetal() { return this.atomType.isAlkaliMetal(); }\r\n    isAlkalineEarthMetal() { return this.atomType.isAlkalineEarthMetal(); }\r\n    isNobleGas() { return this.atomType.isNobleGas(); }\r\n    isTransitionMetal() { return this.atomType.isTransitionMetal(); }\r\n    isPostTransitionMetal() { return this.atomType.isPostTransitionMetal(); }\r\n    isLanthanide() { return this.atomType.isLanthanide(); }\r\n    isActinide() { return this.atomType.isActinide(); }\r\n    getDefaultValence() { return this.atomType.getDefaultValence(); }\r\n    getValenceList() { return this.atomType.getValenceList(); }\r\n    getOuterShellElectronCount() { return this.atomType.getOuterShellElectronCount(); }\r\n    /**\r\n     * Distance to another atom\r\n     * @param  {AtomProxy} atom - the other atom\r\n     * @return {Number} the distance\r\n     */\r\n    distanceTo(atom) {\r\n        const taa = this.atomStore;\r\n        const aaa = atom.atomStore;\r\n        const ti = this.index;\r\n        const ai = atom.index;\r\n        const x = taa.x[ti] - aaa.x[ai];\r\n        const y = taa.y[ti] - aaa.y[ai];\r\n        const z = taa.z[ti] - aaa.z[ai];\r\n        const distSquared = x * x + y * y + z * z;\r\n        return Math.sqrt(distSquared);\r\n    }\r\n    /**\r\n     * If connected to another atom\r\n     * @param  {AtomProxy} atom - the other atom\r\n     * @return {Boolean} flag\r\n     */\r\n    connectedTo(atom) {\r\n        const taa = this.atomStore;\r\n        const aaa = atom.atomStore;\r\n        const ti = this.index;\r\n        const ai = atom.index;\r\n        if (taa.altloc && aaa.altloc) {\r\n            const ta = taa.altloc[ti]; // use Uint8 value to compare\r\n            const aa = aaa.altloc[ai]; // no need to convert to char\r\n            // 0 is the Null character, 32 is the space character\r\n            if (!(ta === 0 || aa === 0 || ta === 32 || aa === 32 || (ta === aa)))\r\n                return false;\r\n        }\r\n        const x = taa.x[ti] - aaa.x[ai];\r\n        const y = taa.y[ti] - aaa.y[ai];\r\n        const z = taa.z[ti] - aaa.z[ai];\r\n        const distSquared = x * x + y * y + z * z;\r\n        // if( this.isCg() ) console.log( this.qualifiedName(), Math.sqrt( distSquared ), distSquared )\r\n        if (distSquared < 48.0 && this.isCg())\r\n            return true;\r\n        if (isNaN(distSquared))\r\n            return false;\r\n        const d = this.covalent + atom.covalent;\r\n        const d1 = d + 0.3;\r\n        const d2 = d - 0.5;\r\n        return distSquared < (d1 * d1) && distSquared > (d2 * d2);\r\n    }\r\n    /**\r\n     * Set atom position from array\r\n     * @param  {Array|TypedArray} array - input array\r\n     * @param  {Integer} [offset] - the offset\r\n     * @return {AtomProxy} this object\r\n     */\r\n    positionFromArray(array, offset = 0) {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Write atom position to array\r\n     * @param  {Array|TypedArray} [array] - target array\r\n     * @param  {Integer} [offset] - the offset\r\n     * @return {Array|TypedArray} target array\r\n     */\r\n    positionToArray(array = [], offset = 0) {\r\n        const index = this.index;\r\n        const atomStore = this.atomStore;\r\n        array[offset + 0] = atomStore.x[index];\r\n        array[offset + 1] = atomStore.y[index];\r\n        array[offset + 2] = atomStore.z[index];\r\n        return array;\r\n    }\r\n    /**\r\n     * Write atom position to vector\r\n     * @param  {Vector3} [v] - target vector\r\n     * @return {Vector3} target vector\r\n     */\r\n    positionToVector3(v) {\r\n        if (v === undefined)\r\n            v = new Vector3();\r\n        v.x = this.x;\r\n        v.y = this.y;\r\n        v.z = this.z;\r\n        return v;\r\n    }\r\n    /**\r\n     * Set atom position from vector\r\n     * @param  {Vector3} v - input vector\r\n     * @return {AtomProxy} this object\r\n     */\r\n    positionFromVector3(v) {\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n        this.z = v.z;\r\n        return this;\r\n    }\r\n    /**\r\n     * Add vector to atom position\r\n     * @param  {Vector3} v - input vector\r\n     * @return {AtomProxy} this object\r\n     */\r\n    positionAdd(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    /**\r\n     * Subtract vector from atom position\r\n     * @param  {Vector3} v - input vector\r\n     * @return {AtomProxy} this object\r\n     */\r\n    positionSub(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get intra group/residue bonds\r\n     * @param  {Boolean} firstOnly - immediately return the first connected atomIndex\r\n     * @return {Integer[]|Integer|undefined} connected atomIndices\r\n     */\r\n    getResidueBonds(firstOnly = false) {\r\n        const residueAtomOffset = this.residueAtomOffset;\r\n        const relativeIndex = this.index - this.residueAtomOffset;\r\n        const bonds = this.residueType.getBonds(); // TODO\r\n        const atomIndices1 = bonds.atomIndices1;\r\n        const atomIndices2 = bonds.atomIndices2;\r\n        let idx1, idx2, connectedAtomIndex;\r\n        let connectedAtomIndices;\r\n        if (!firstOnly)\r\n            connectedAtomIndices = [];\r\n        idx1 = atomIndices1.indexOf(relativeIndex);\r\n        while (idx1 !== -1) {\r\n            connectedAtomIndex = atomIndices2[idx1] + residueAtomOffset;\r\n            if (connectedAtomIndices) {\r\n                connectedAtomIndices.push(connectedAtomIndex);\r\n                idx1 = atomIndices1.indexOf(relativeIndex, idx1 + 1);\r\n            }\r\n            else {\r\n                return connectedAtomIndex;\r\n            }\r\n        }\r\n        idx2 = atomIndices2.indexOf(relativeIndex);\r\n        while (idx2 !== -1) {\r\n            connectedAtomIndex = atomIndices1[idx2] + residueAtomOffset;\r\n            if (connectedAtomIndices) {\r\n                connectedAtomIndices.push(connectedAtomIndex);\r\n                idx2 = atomIndices2.indexOf(relativeIndex, idx2 + 1);\r\n            }\r\n            else {\r\n                return connectedAtomIndex;\r\n            }\r\n        }\r\n        return connectedAtomIndices;\r\n    }\r\n    //\r\n    qualifiedName(noResname = false) {\r\n        var name = '';\r\n        if (this.resname && !noResname)\r\n            name += '[' + this.resname + ']';\r\n        if (this.resno !== undefined)\r\n            name += this.resno;\r\n        if (this.inscode)\r\n            name += '^' + this.inscode;\r\n        if (this.chainname)\r\n            name += ':' + this.chainname;\r\n        if (this.atomname)\r\n            name += '.' + this.atomname;\r\n        if (this.altloc)\r\n            name += '%' + this.altloc;\r\n        if (this.structure.modelStore.count > 1)\r\n            name += '/' + this.modelIndex;\r\n        return name;\r\n    }\r\n    /**\r\n     * Clone object\r\n     * @return {AtomProxy} cloned atom\r\n     */\r\n    clone() {\r\n        return new AtomProxy(this.structure, this.index);\r\n    }\r\n    toObject() {\r\n        return {\r\n            index: this.index,\r\n            residueIndex: this.residueIndex,\r\n            resname: this.resname,\r\n            x: this.x,\r\n            y: this.y,\r\n            z: this.z,\r\n            element: this.element,\r\n            chainname: this.chainname,\r\n            resno: this.resno,\r\n            serial: this.serial,\r\n            vdw: this.vdw,\r\n            covalent: this.covalent,\r\n            hetero: this.hetero,\r\n            bfactor: this.bfactor,\r\n            altloc: this.altloc,\r\n            atomname: this.atomname,\r\n            modelIndex: this.modelIndex\r\n        };\r\n    }\r\n}\r\nexport default AtomProxy;\r\n//# sourceMappingURL=atom-proxy.js.map","/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { Debug, Log } from '../globals';\r\nimport _Kdtree from '../utils/kdtree';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nfunction euclideanDistSq(a, b) {\r\n    const dx = a[0] - b[0];\r\n    const dy = a[1] - b[1];\r\n    const dz = a[2] - b[2];\r\n    return dx * dx + dy * dy + dz * dz;\r\n}\r\nfunction euclideanDist(a, b) {\r\n    return Math.sqrt(euclideanDistSq(a, b));\r\n}\r\nconst pointArray = new Float32Array(3);\r\nclass Kdtree {\r\n    constructor(structure, useSquaredDist = false) {\r\n        if (Debug)\r\n            Log.time('Kdtree build');\r\n        const metric = useSquaredDist ? euclideanDistSq : euclideanDist;\r\n        const points = new Float32Array(structure.atomCount * 3);\r\n        const atomIndices = new Uint32Array(structure.atomCount);\r\n        let i = 0;\r\n        structure.eachAtom(function (ap) {\r\n            points[i + 0] = ap.x;\r\n            points[i + 1] = ap.y;\r\n            points[i + 2] = ap.z;\r\n            atomIndices[i / 3] = ap.index;\r\n            i += 3;\r\n        });\r\n        this.atomIndices = atomIndices;\r\n        this.points = points;\r\n        this.kdtree = new _Kdtree(points, metric);\r\n        if (Debug)\r\n            Log.timeEnd('Kdtree build');\r\n        // console.log(\"this.kdtree.verify()\", this.kdtree.verify())\r\n    }\r\n    nearest(point, maxNodes, maxDistance) {\r\n        // Log.time( \"Kdtree nearest\" );\r\n        if (point instanceof Vector3) {\r\n            point.toArray(pointArray);\r\n        }\r\n        else if (point instanceof AtomProxy) {\r\n            point.positionToArray(pointArray);\r\n        }\r\n        const nodeList = this.kdtree.nearest(pointArray, maxNodes, maxDistance);\r\n        const indices = this.kdtree.indices;\r\n        const nodes = this.kdtree.nodes;\r\n        const atomIndices = this.atomIndices;\r\n        const resultList = [];\r\n        for (let i = 0, n = nodeList.length; i < n; ++i) {\r\n            const d = nodeList[i];\r\n            const nodeIndex = d[0];\r\n            const dist = d[1];\r\n            resultList.push({\r\n                index: atomIndices[indices[nodes[nodeIndex]]],\r\n                distance: dist\r\n            });\r\n        }\r\n        // Log.timeEnd( \"Kdtree nearest\" );\r\n        return resultList;\r\n    }\r\n}\r\nexport default Kdtree;\r\n//# sourceMappingURL=kdtree.js.map","/**\r\n * @file Symmetry Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport const SymOpCode = {\r\n    ' ': 'X',\r\n    '!': 'Y',\r\n    '#': 'Z',\r\n    '$': '-X',\r\n    '%': '-Y',\r\n    '&': '-Z',\r\n    \"'\": 'Y+1/2',\r\n    '(': '1/2+X',\r\n    ')': '1/2+Y',\r\n    '*': '1/2-X',\r\n    '+': '1/2+Z',\r\n    ',': '1/2-Y',\r\n    '-': '1/2-Z',\r\n    '.': 'X+1/2',\r\n    '/': 'Z+1/2',\r\n    '0': '-X+1/2',\r\n    '1': '-Y+1/2',\r\n    '2': '-Z+1/2',\r\n    '3': '1/4+X',\r\n    '4': '1/4-Y',\r\n    '5': '1/4+Z',\r\n    '6': '1/4-X',\r\n    '7': '1/4+Y',\r\n    '8': '3/4-Y',\r\n    '9': '3/4+Z',\r\n    ':': '3/4+Y',\r\n    ';': '3/4+X',\r\n    '<': '3/4-X',\r\n    '=': '1/4-Z',\r\n    '>': '3/4-Z',\r\n    '?': 'X-Y',\r\n    '@': 'Y-X',\r\n    'A': 'Z+1/3',\r\n    'B': 'Z+2/3',\r\n    'C': 'X+2/3',\r\n    'D': 'Y+1/3',\r\n    'E': '-Y+2/3',\r\n    'F': 'X-Y+1/3',\r\n    'G': 'Y-X+2/3',\r\n    'H': '-X+1/3',\r\n    'I': 'X+1/3',\r\n    'J': 'Y+2/3',\r\n    'K': '-Y+1/3',\r\n    'L': 'X-Y+2/3',\r\n    'M': 'Y-X+1/3',\r\n    'N': '-X+2/3',\r\n    'O': '2/3+X',\r\n    'P': '1/3+Y',\r\n    'Q': '1/3+Z',\r\n    'R': '2/3-Y',\r\n    'S': '1/3+X-Y',\r\n    'T': '2/3+Y-X',\r\n    'U': '1/3-X',\r\n    'V': '2/3-X',\r\n    'W': '1/3-Y',\r\n    'X': '1/3-Z',\r\n    'Y': '2/3+Y',\r\n    'Z': '1/3+Y-X',\r\n    '[': '2/3+X-Y',\r\n    ']': '1/3+X',\r\n    '^': '2/3+Z',\r\n    '_': '2/3-Z',\r\n    '`': '5/6+Z',\r\n    'a': '1/6+Z',\r\n    'b': '5/6-Z',\r\n    'c': '1/6-Z',\r\n    'd': 'Z+5/6',\r\n    'e': 'Z+1/6',\r\n    'f': 'Z+1/4',\r\n    'g': '+Y'\r\n};\r\n// encoded, originally from CCP4 symop.lib\r\nexport const EncodedSymOp = {\r\n    'P 1': ' !#',\r\n    'P -1': ' !#$%&',\r\n    'P 1 2 1': ' !#$!&',\r\n    'P 1 21 1': \" !#$'&\",\r\n    'C 1 2 1': ' !#$!&()#*)&',\r\n    'P 1 m 1': ' !# %#',\r\n    'P 1 c 1': ' !# %+',\r\n    'C 1 m 1': ' !# %#()#(,#',\r\n    'C 1 c 1': ' !# %+()#(,+',\r\n    'P 1 2/m 1': ' !# %#$!&$%&',\r\n    'P 1 21/m 1': ' !#$)&$%& ,#',\r\n    'C 1 2/m 1': ' !# %#$!&$%&()#(,#*)&*,&',\r\n    'P 1 2/c 1': ' !#$!-$%& %+',\r\n    'P 1 21/c 1': ' !#$%&$)- ,+',\r\n    'C 1 2/c 1': ' !#$!-$%& %+()#*)-*,&(,+',\r\n    'P 2 2 2': ' !#$%#$!& %&',\r\n    'P 2 2 21': ' !#$%+$!- %&',\r\n    'P 21 21 2': ' !#$%#*)&(,&',\r\n    'P 21 21 21': ' !#*%+$)-(,&',\r\n    'C 2 2 21': ' !#$%+$!- %&()#*,+*)-(,&',\r\n    'C 2 2 2': ' !#$%#$!& %&()#*,#*)&(,&',\r\n    'F 2 2 2': ' !#$%#$!& %& )+$,+$)- ,-(!+*%+*!-(%-()#*,#*)&(,&',\r\n    'I 2 2 2': \" !#$%# %&$!&.'/01/.120'2\",\r\n    'I 21 21 21': ' !#*%+$)-(,&()+$,#*!& %-',\r\n    'P m m 2': ' !#$%# %#$!#',\r\n    'P m c 21': ' !#$%+ %+$!#',\r\n    'P c c 2': ' !#$%# %+$!+',\r\n    'P m a 2': ' !#$%#(%#*!#',\r\n    'P c a 21': ' !#$%+(%#*!+',\r\n    'P n c 2': ' !#$%# ,+$)+',\r\n    'P m n 21': ' !#*%+(%+$!#',\r\n    'P b a 2': ' !#$%#(,#*)#',\r\n    'P n a 21': ' !#$%+(,#*)+',\r\n    'P n n 2': ' !#$%#(,+*)+',\r\n    'C m m 2': ' !#$%# %#$!#()#*,#(,#*)#',\r\n    'C m c 21': ' !#$%+ %+$!#()#*,+(,+*)#',\r\n    'C c c 2': ' !#$%# %+$!+()#*,#(,+*)+',\r\n    'A m m 2': ' !#$%# %#$!# )+$,+ ,+$)+',\r\n    'A b m 2': ' !#$%# ,#$)# )+$,+ %+$!+',\r\n    'A m a 2': ' !#$%#(%#*!# )+$,+(,+*)+',\r\n    'A b a 2': ' !#$%#(,#*)# )+$,+(%+*!+',\r\n    'F m m 2': ' !#$%# %#$!# )+$,+ ,+$)+(!+*%+(%+*!+()#*,#(,#*)#',\r\n    'F d d 2': ' !#$%#345675 )+$,+3896:9(!+*%+;49<79()#*,#;85<:5',\r\n    'I m m 2': ' !#$%# %#$!#()+*,+(,+*)+',\r\n    'I b a 2': ' !#$%#(,#*)#()+*,+ %+$!+',\r\n    'I m a 2': ' !#$%#(%#*!#()+*,+ ,+$)+',\r\n    'P 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#',\r\n    'P 2/n 2/n 2/n': ' !#$%#$!& %&*,-()-(,+*)+',\r\n    'P 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+',\r\n    'P 2/b 2/a 2/n': ' !#$%#$!& %&*,&()&(,#*)#',\r\n    'P 21/m 2/m 2/a': ' !#*%#$!&(%&$%&(!& %#*!#',\r\n    'P 2/n 21/n 2/a': ' !#*%#*)- ,-$%&(!&(,+$)+',\r\n    'P 2/m 2/n 21/a': ' !#*%+*!- %&$%&(!-(%+$!#',\r\n    'P 21/c 2/c 2/a': ' !#*%#$!-(%-$%&(!& %+*!+',\r\n    'P 21/b 21/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#',\r\n    'P 21/c 21/c 2/n': ' !#*,#$)-(%-$%&()& ,+*!+',\r\n    'P 2/b 21/c 21/m': ' !#$%+$)- ,&$%& !- ,+$)#',\r\n    'P 21/n 21/n 2/m': ' !#$%#*)-(,-$%& !&(,+*)+',\r\n    'P 21/m 21/m 2/n': \" !#$%#*'&.,&*,&.'& %#$!#\",\r\n    'P 21/b 2/c 21/n': ' !#*,+$!-(,&$%&()- %+*)#',\r\n    'P 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#',\r\n    'P 21/n 21/m 21/a': \" !#0%/$'&.12$%&.!2 1#0'/\",\r\n    'C 2/m 2/c 21/m': ' !#$%+$!- %&$%& !- %+$!#()#*,+*)-(,&*,&()-(,+*)#',\r\n    'C 2/m 2/c 21/a': ' !#$,+$)- %&$%& )- ,+$!#()#*%+*!-(,&*,&(!-(%+*)#',\r\n    'C 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()#*,#*)&(,&*,&()&(,#*)#',\r\n    'C 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+()#*,#*)-(,-*,&()&(,+*)+',\r\n    'C 2/m 2/m 2/a': ' !#$,#$)& %&$%& )& ,#$!#()#*%#*!&(,&*,&(!&(%#*)#',\r\n    'C 2/c 2/c 2/a': ' !#*,#$!&(,&$,-(!- ,+*!+()#$%#*)& %&*%- )-(%+$)+',\r\n    'F 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!# )+$,+$)- ,-$,- )- ,+$)+(!+*%+*!-(%-*%-(!-(%+*!+()#*,#*)&(,&*,&()&(,#*)#',\r\n    'F 2/d 2/d 2/d': ' !#$%#$!& %&64=37=345675 )+$,+$)- ,-68>3:>3896:9(!+*%+*!-(%-<4>;7>;49<79()#*,#*)&(,&<8=;:=;85<:5',\r\n    'I 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()+*,+*)-(,-*,-()-(,+*)+',\r\n    'I 2/b 2/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#()+*,+$!- %-*,-()- %+$!+',\r\n    'I 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#()+$,#*!& %-*,- )&(%#$!+',\r\n    'I 21/m 21/m 21/a': ' !#$,#$)& %&$%& )& ,#$!#()+*%+*!-(,-*,-(!-(%+*)+',\r\n    'P 4': ' !#$%#% #!$#',\r\n    'P 41': ' !#$%+% 5!$9',\r\n    'P 42': ' !#$%#% +!$+',\r\n    'P 43': ' !#$%+% 9!$5',\r\n    'I 4': ' !#$%#% #!$#()+*,+,(+)*+',\r\n    'I 41': ' !#*,+%(5)$9()+$%#, 9!*5',\r\n    'P -4': ' !#$%#!$&% &',\r\n    'I -4': ' !#$%#!$&% &()+*,+)*-,(-',\r\n    'P 4/m': ' !#$%#% #!$#$%& !&!$&% &',\r\n    'P 42/m': ' !#$%#% +!$+$%& !&!$-% -',\r\n    'P 4/n': ' !#$%#,(#)*#*,&()&!$&% &',\r\n    'P 42/n': ' !#$%#,(+)*+*,-()-!$&% &',\r\n    'I 4/m': ' !#$%#% #!$#$%& !&!$&% &()+*,+,(+)*+*,-()-)*-,(-',\r\n    'I 41/a': ' !#*,+%(5)$9$,=(!>!$&,(-()+$%#, 9!*5*%> )=)*-% &',\r\n    'P 4 2 2': ' !#$%#% #!$#$!& %&! &%$&',\r\n    'P 4 21 2': ' !#$%#,(#)*#*)&(,&! &%$&',\r\n    'P 41 2 2': ' !#$%+% 5!$9$!& %-! >%$=',\r\n    'P 41 21 2': ' !#$%+,(5)*9*)=(,>! &%$-',\r\n    'P 42 2 2': ' !#$%#% +!$+$!& %&! -%$-',\r\n    'P 42 21 2': ' !#$%#,(+)*+*)-(,-! &%$&',\r\n    'P 43 2 2': ' !#$%+% 9!$5$!& %-! =%$>',\r\n    'P 43 21 2': ' !#$%+,(9)*5*)>(,=! &%$-',\r\n    'I 4 2 2': ' !#$%#% #!$#$!& %&! &%$&()+*,+,(+)*+*)-(,-)(-,*-',\r\n    'I 41 2 2': ' !#*,+%(5)$9*!> ,=)(-%$&()+$%#, 9!*5$)=(%>! &,*-',\r\n    'P 4 m m': ' !#$%#% #!$# %#$!#%$#! #',\r\n    'P 4 b m': ' !#$%#% #!$#(,#*)#,*#)(#',\r\n    'P 42 c m': ' !#$%#% +!$+ %+$!+%$#! #',\r\n    'P 42 n m': ' !#$%#,(+)*+(,+*)+%$#! #',\r\n    'P 4 c c': ' !#$%#% #!$# %+$!+%$+! +',\r\n    'P 4 n c': ' !#$%#% #!$#(,+*)+,*+)(+',\r\n    'P 42 m c': ' !#$%#% +!$+ %#$!#%$+! +',\r\n    'P 42 b c': ' !#$%#% +!$+(,#*)#,*+)(+',\r\n    'I 4 m m': ' !#$%#% #!$# %#$!#%$#! #()+*,+,(+)*+(,+*)+,*+)(+',\r\n    'I 4 c m': ' !#$%#% #!$# %+$!+%$+! +()+*,+,(+)*+(,#*)#,*#)(#',\r\n    'I 41 m d': ' !#*,+%(5)$9 %#*)+%*5) 9()+$%#, 9!*5(,+$!#,$9!(5',\r\n    'I 41 c d': ' !#*,+%(5)$9 %+*)#%*9) 5()+$%#, 9!*5(,#$!+,$5!(9',\r\n    'P -4 2 m': ' !#$%#% &!$&$!& %&%$#! #',\r\n    'P -4 2 c': ' !#$%#% &!$&$!- %-%$+! +',\r\n    'P -4 21 m': ' !#$%#% &!$&*)&(,&,*#)(#',\r\n    'P -4 21 c': ' !#$%#% &!$&*)-(,-,*+)(+',\r\n    'P -4 m 2': ' !#$%#!$&% & %#$!#! &%$&',\r\n    'P -4 c 2': ' !#$%#% &!$& %+$!+! -%$-',\r\n    'P -4 b 2': ' !#$%#% &!$&(,#*)#)(&,*&',\r\n    'P -4 n 2': ' !#$%#% &!$&(,+*)+)(-,*-',\r\n    'I -4 m 2': ' !#$%#% &!$& %#$!#! &%$&()+*,+,(-)*-(,+*)+)(-,*-',\r\n    'I -4 c 2': ' !#$%#% &!$& %+$!+! -%$-()+*,+,(-)*-(,#*)#)(&,*&',\r\n    'I -4 2 m': ' !#$%#% &!$&$!& %&%$#! #()+*,+,(-)*-*)-(,-,*+)(+',\r\n    'I -4 2 d': ' !#$%#% &!$&*!>(%>,$9) 9()+*,+,(-)*-$)= ,=%*5!(5',\r\n    'P 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #',\r\n    'P 4/m 2/c 2/c': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +',\r\n    'P 4/n 2/b 2/m': ' !#$%#% #!$#$!& %&! &%$&*,&()&)*&,(&(,#*)#,*#)(#',\r\n    'P 4/n 2/n 2/c': ' !#$%#% #!$#$!& %&! &%$&*,-()-)*-,(-(,+*)+,*+)(+',\r\n    'P 4/m 21/b 2/m': ' !#$%#% #!$#*)&(,&)(&,*&$%& !&!$&% &(,#*)#,*#)(#',\r\n    'P 4/m 21/n 2/c': ' !#$%#% #!$#*)-(,-)(-,*-$%& !&!$&% &(,+*)+,*+)(+',\r\n    'P 4/n 21/m 2/m': ' !#$%#,(#)*#*)&(,&! &%$&*,&()&!$&% & %#$!#,*#)(#',\r\n    'P 4/n 2/c 2/c': ' !#$%#,(#)*#*)-(,-! -%$-*,&()&!$&% & %+$!+,*+)(+',\r\n    'P 42/m 2/m 2/c': ' !#$%#% +!$+$!& %&! -%$-$%& !&!$-% - %#$!#%$+! +',\r\n    'P 42/m 2/c 2/m': ' !#$%#% +!$+$!- %-! &%$&$%& !&!$-% - %+$!+%$#! #',\r\n    'P 42/n 2/b 2/c': ' !#$%#,(+)*+$!- %-)(&,*&*,-()-!$&% &(,#*)#%$+! +',\r\n    'P 42/n 2/n 2/m': ' !#$%#,(+)*+$!& %&)(-,*-*,-()-!$&% &(,+*)+%$#! #',\r\n    'P 42/m 21/b 2/c': ' !#$%#% +!$+*)&(,&)(-,*-$%& !&!$-% -(,#*)#,*+)(+',\r\n    'P 42/m 21/n 2/m': \" !#$%#,./'*/*'-.,-! &%$&$%& !&'*-,.-.,/*'/%$#! #\",\r\n    'P 42/n 21/m 2/c': ' !#$%#,(+)*+*)-(,-! &%$&*,-()-!$&% & %#$!#,*+)(+',\r\n    'P 42/n 21/c 2/m': ' !#$%#,(+)*+*)&(,&! -%$-*,-()-!$&% & %+$!+,*#)(#',\r\n    'I 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #()+*,+,(+)*+*)-(,-)(-,*-*,-()-)*-,(-(,+*)+,*+)(+',\r\n    'I 4/m 2/c 2/m': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +()+*,+,(+)*+*)&(,&)(&,*&*,-()-)*-,(-(,#*)#,*#)(#',\r\n    'I 41/a 2/m 2/d': ' !#*,+%(5)$9*!> ,=)(-%$&$,=(!>!$&,(-(,+$!#,$9!(5()+$%#, 9!*5$)=(%>! &,*-*%> )=)*-% & %#*)+%*5) 9',\r\n    'I 41/a 2/c 2/d': ' !#*,+%(5)$9*!= ,>)(&%$-$,=(!>!$&,(-(,#$!+,$5!(9()+$%#, 9!*5$)>(%=! -,*&*%> )=)*-% & %+*)#%*9) 5',\r\n    'P 3': ' !#%?#@$#',\r\n    'P 31': ' !#%?A@$B',\r\n    'P 32': ' !#%?B@$A',\r\n    'H 3': ' !#%?#@$#CDAEFAGHAIJBKLBMNB',\r\n    'R 3': ' !## !!# ',\r\n    'P -3': ' !#%?#@$#$%&!@&? &',\r\n    'H -3': ' !#%?#@$#$%&!@&? &OPQRSQTUQVWXYZX[]X]Y^W[^ZV^UR_PT_SO_',\r\n    'R -3': ' !## !!# $%&&$%%&$',\r\n    'P 3 1 2': ' !#%?#@$#%$&@!& ?&',\r\n    'P 3 2 1': ' !#%?#@$#! &?%&$@&',\r\n    'P 31 1 2': ' !#%?Q@$^%$_@!X ?&',\r\n    'P 31 2 1': ' !#%?A@$B! &?%_$@X',\r\n    'P 32 1 2': ' !#%?^@$Q%$X@!_ ?&',\r\n    'P 32 2 1': ' !#%?B@$A! &?%X$@_',\r\n    'H 3 2': ' !#%?#@$#! &?%&$@&OPQRSQTUQY]X[WXVZX]Y^W[^ZV^PO_SR_UT_',\r\n    'R 3 2': ' !## !!# %$&$&%&%$',\r\n    'P 3 m 1': ' !#%?#@$#%$#@!# ?#',\r\n    'P 3 1 m': ' !#%?#@$#! #?%#$@#',\r\n    'P 3 c 1': ' !#%?#@$#%$+@!+ ?+',\r\n    'P 3 1 c': ' !#%?#@$#! +?%+$@+',\r\n    'H 3 m': ' !#%?#@$#%$#@!# ?#OPQRSQTUQRUQTPQOSQ]Y^W[^ZV^WV^ZY^][^',\r\n    'R 3 m': ' !## !!# ! # #!#! ',\r\n    'H 3 c': ' !#%?#@$#%$+@!+ ?+OPQRSQTUQRU`TP`OS`]Y^W[^ZV^WVaZYa][a',\r\n    'R 3 c': \" !## !!# '././'/'.\",\r\n    'P -3 1 2/m': ' !#%?#@$#%$&@!& ?&$%&!@&? &! #?%#$@#',\r\n    'P -3 1 2/c': ' !#%?#@$#%$-@!- ?-$%&!@&? &! +?%+$@+',\r\n    'P -3 2/m 1': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#',\r\n    'P -3 2/c 1': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+',\r\n    'H -3 2/m': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#OPQRSQTUQY]X[WXVZXVWXYZX[]XRUQTPQOSQ]Y^W[^ZV^PO_SR_UT_UR_PT_SO_WV^ZY^][^',\r\n    'R -3 2/m': ' !## !!# %$&$&%&%$$%&&$%%&$! # #!#! ',\r\n    'H -3 2/c': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+OPQRSQTUQY]b[WbVZbVWXYZX[]XRU`TP`OS`]Y^W[^ZV^POcSRcUTcUR_PT_SO_WVaZYa][a',\r\n    'R -3 2/c': \" !## !!# 102021210$%&&$%%&$'././'/'.\",\r\n    'P 6': ' !#%?#@$#$%#!@#? #',\r\n    'P 61': ' !#%?A@$B$%/!@d? e',\r\n    'P 65': ' !#%?B@$A$%/!@e? d',\r\n    'P 62': ' !#%?^@$Q$%#!@^? Q',\r\n    'P 64': ' !#%?Q@$^$%#!@Q? ^',\r\n    'P 63': ' !#%?#@$#$%+!@+? +',\r\n    'P -6': ' !#%?#@$# !&%?&@$&',\r\n    'P 6/m': ' !#%?#@$#$%#!@#? #$%&!@&? & !&%?&@$&',\r\n    'P 63/m': ' !#%?#@$#$%+!@+? +$%&!@&? & !-%?-@$-',\r\n    'P 6 2 2': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&',\r\n    'P 61 2 2': ' !#%?Q@$^$%+!@`? a! X?%&$@_%$b@!- ?c',\r\n    'P 65 2 2': ' !#%?^@$Q$%+!@a? `! _?%&$@X%$c@!- ?b',\r\n    'P 62 2 2': ' !#%?^@$Q$%#!@^? Q! _?%&$@X%$_@!& ?X',\r\n    'P 64 2 2': ' !#%?Q@$^$%#!@Q? ^! X?%&$@_%$X@!& ?_',\r\n    'P 63 2 2': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-',\r\n    'P 6 m m': ' !#%?#@$#$%#!@#? #%$#@!# ?#! #?%#$@#',\r\n    'P 6 c c': ' !#%?#@$#$%#!@#? #%$+@!+ ?+! +?%+$@+',\r\n    'P 63 c m': ' !#%?#@$#$%+!@+? +%$+@!+ ?+! #?%#$@#',\r\n    'P 63 m c': ' !#%?#@$#$%+!@+? +%$#@!# ?#! +?%+$@+',\r\n    'P -6 m 2': ' !#%?#@$# !&%?&@$&%$#@!# ?#%$&@!& ?&',\r\n    'P -6 c 2': ' !#%?#@$# !-%?-@$-%$+@!+ ?+%$&@!& ?&',\r\n    'P -6 2 m': ' !#%?#@$# !&%?&@$&! &?%&$@&! #?%#$@#',\r\n    'P -6 2 c': ' !#%?#@$# !-%?-@$-! &?%&$@&! +?%+$@+',\r\n    'P 6/m 2/m 2/m': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&$%&!@&? & !&@$&%?&%$#@!# ?#! #?%#$@#',\r\n    'P 6/m 2/c 2/c': ' !#%?#@$#$%#!@#? #! -?%-$@-%$-@!- ?-$%&!@&? & !&@$&%?&%$+@!+ ?+! +?%+$@+',\r\n    'P 63/m 2/c 2/m': ' !#%?#@$#$%+!@+? +! -?%-$@-%$&@!& ?&$%&!@&? & !-@$-%?-%$+@!+ ?+! #?%#$@#',\r\n    'P 63/m 2/m 2/c': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-$%&!@&? & !-@$-%?-%$#@!# ?#! +?%+$@+',\r\n    'P 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ',\r\n    'F 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%&  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ',\r\n    'I 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(',\r\n    'P 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(',\r\n    'I 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- ',\r\n    'P 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$',\r\n    'P 2/n -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& *,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n    'F 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-($,- )- ,+$)+&*,&()#(,#*)%-*!-(%+(!+*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(*%-(!-(%+*!+-$,- )+ ,+$),&*)&(,#()#*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- *,&()&(,#*)#-*%-(!+(%+*!,-$)- ,+ )+$',\r\n    'F 2/d -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& 64=37=345675=64=375345674=67=3453756 )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(68>3:>3896:9=<8=;:5;85<:4><7>;49;79<(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(<4>;7>;49<79>68>3:93896:8=<:=;85;:5<()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- <8=;:=;8f<:f><4>;79;49<78>6:>3893:96',\r\n    'I 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n    'P 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*',\r\n    'I 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*()+$,#*g& %-+()#$,&*!- %)+(,#$!&*%- *,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$',\r\n    'P 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$',\r\n    'P 42 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n    'F 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(-%*-!*+%(+ +,$+)$-, -)#)*#,(&)(&,*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() -,$-)$+, +(#,*#)*&,(&)+!*+%(-!(-%*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(&,*&)*#,(#(+%*+!*-%(-!+)$+, -) -,$',\r\n    'F 41 3 2': ' !#$,+*)&(%-# !+$,&*)-(%!# ,+$)&*%-(:3>46=7<98;5;58<976=43>:97<58;>:3=46 )+$%#*!-(,&#()+*%&$!- ,!+(,#*)-$%& :;=4<>765839;94<5:6>83=79:6543>7;=8<(!+*,#$)- %&+ )#$%-*!&(,)#(%+*!&$,- 73=86>:<54;935469:<=8;>7576983=:;>4<()#*%+$!& ,-+(!#*,-$)& %)+ %#$!-*,&(7;>8<=:69435398657<>4;=:5:<94;=73>86',\r\n    'I 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n    'P 43 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n    'P 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<',\r\n    'I 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n    'P -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ',\r\n    'F -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&%  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(+%*+!*-%(- +)$+,$-) -,#)(#,*&)*&,((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() +,$+)$-, -(#)*#,*&)(&,+!(+%*-!*-%(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(#,*#)*&,(&(+!*+%*-!(-%+) +,$-)$-, ',\r\n    'I -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n    'P -4 3 n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n    'F -4 3 c': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,( )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-() #,$#)$&, &(#!*#%*&!(&%+! +%$-!$-% (!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(!(#%*#!*&%(& +!$+%$-! -%#) #,$&)$&, ()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ! +%$+!$-% - #)$#,$&) &,#!(#%*&!*&%(',\r\n    'I -4 3 d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7354<9:6>8;=357<946>:;=857394<>:6=8;()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- :;98657<=43>;9:658<=73>49:;586=7<>43',\r\n    'P 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n    'P 4/n -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n    'P 42/m -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n    'P 42/n -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n    'F 4/m -3 2/mr\n    'F 4/m -3 2/cr\n    'F 41/d -3 2/mr\n    'F 41/d -3 2/cr\n    'I 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n    'I 41/a -3 2/d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<$%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*4<97358;=:6>6>:;=8357<94=8;>:694<573()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46*,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$865:;943>7<=<=73>4;9:658>43=7<5869:;',\r\n    'P 1 1 2': ' !#$%#',\r\n    'P 1 1 21': ' !#$%+',\r\n    'B 1 1 2': ' !#$%#(g+*%+',\r\n    'A 1 2 1': ' !#$!& )+$)-',\r\n    'C 1 21 1': ' !#$)&()#*!&',\r\n    'I 1 2 1': \" !#$!&.'/0'2\",\r\n    'I 1 21 1': \" !#$)&.'/0!-\",\r\n    'P 1 1 m': ' !# !&',\r\n    'P 1 1 b': ' !# )&',\r\n    'B 1 1 m': ' !# !&(!+(!-',\r\n    'B 1 1 b': ' !# )&(!+()-',\r\n    'P 1 1 2/m': ' !# !&$%#$%&',\r\n    'P 1 1 21/m': ' !#$%+$%& !-',\r\n    'B 1 1 2/m': ' !# !&$%#$%&(!+(!-*%+*%-',\r\n    'P 1 1 2/b': ' !#$,#$%& )&',\r\n    'P 1 1 21/b': ' !#$%&$,+ )-',\r\n    'B 1 1 2/b': ' !#$,#$%& )&(!+*,+*%-()-',\r\n    'P 21 2 2': ' !#$!&(%&*%#',\r\n    'P 2 21 2': ' !# ,&$)&$%#',\r\n    'P 21 21 2 (a)': \" !#*,#.%&$'&\",\r\n    'P 21 2 21': ' !#$!&(%-*%+',\r\n    'P 2 21 21': ' !# %&$)-$,+',\r\n    'C 2 2 21a)': ' !#*%+(,&$)-()#$,+ %&*!-',\r\n    'C 2 2 2a': \" !#*,#.%&$'&()#$%# ,&*!&\",\r\n    'F 2 2 2a': \" !#*,#.%&$'& '/*%/.12$!2.!/$,/ %20'2.'#$%# 1&0!&\",\r\n    'I 2 2 2a': \" !#*,#.%&$'&()+$%+*!- ,-\",\r\n    'P 21/m 21/m 2/n a': \" !#*,#$)&(%&$%&.'& ,#*!#\",\r\n    'P 42 21 2a': \" !#*,#%.+'$+$'&.%&! -,*-\",\r\n    'I 2 3a': \" !#*,#.%&$'&!# ,- '&$%/$# !-*!/$%&.%()+$%+ ,-*!-)+(%&(!-*,#*+()&$)#*,- ,\"\r\n};\r\n//# sourceMappingURL=symmetry-constants.js.map","/**\r\n * @file Symmetry Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Log } from '../globals';\r\nimport { EncodedSymOp, SymOpCode } from './symmetry-constants';\r\nconst reInteger = /^[1-9]$/;\r\nexport function getSymmetryOperations(spacegroup) {\r\n    const encodedSymopList = EncodedSymOp[spacegroup];\r\n    const matrixDict = {};\r\n    if (encodedSymopList === undefined) {\r\n        console.warn(`spacegroup '${spacegroup}' not found in symop library`);\r\n        return matrixDict;\r\n    }\r\n    const symopList = [];\r\n    for (let i = 0, il = encodedSymopList.length; i < il; i += 3) {\r\n        const symop = [];\r\n        for (let j = 0; j < 3; ++j) {\r\n            symop.push(SymOpCode[encodedSymopList[i + j]]);\r\n        }\r\n        symopList.push(symop);\r\n    }\r\n    symopList.forEach(function (symop) {\r\n        let row = 0;\r\n        const matrix = new Matrix4().set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);\r\n        const me = matrix.elements;\r\n        matrixDict[symop.toString()] = matrix;\r\n        symop.forEach(function (elm) {\r\n            let negate = false;\r\n            let denominator = false;\r\n            for (let i = 0, n = elm.length; i < n; ++i) {\r\n                const c = elm[i];\r\n                if (c === '-') {\r\n                    negate = true;\r\n                }\r\n                else if (c === '+') {\r\n                    negate = false;\r\n                }\r\n                else if (c === '/') {\r\n                    denominator = true;\r\n                }\r\n                else if (c === 'X') {\r\n                    me[0 + row] = negate ? -1 : 1;\r\n                }\r\n                else if (c === 'Y') {\r\n                    me[4 + row] = negate ? -1 : 1;\r\n                }\r\n                else if (c === 'Z') {\r\n                    me[8 + row] = negate ? -1 : 1;\r\n                }\r\n                else if (reInteger.test(c)) {\r\n                    const integer = parseInt(c);\r\n                    if (denominator) {\r\n                        me[12 + row] /= integer;\r\n                    }\r\n                    else {\r\n                        me[12 + row] = integer;\r\n                    }\r\n                }\r\n                else {\r\n                    Log.warn(`getSymmetryOperations: unknown token '${c}'`);\r\n                }\r\n            }\r\n            row += 1;\r\n        });\r\n    });\r\n    return matrixDict;\r\n}\r\n//# sourceMappingURL=symmetry-utils.js.map","/**\r\n * @file Assembly\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Box3, Vector3 } from 'three';\r\nimport { uniqueArray } from '../utils';\r\nimport Selection from '../selection/selection';\r\nfunction selectionFromChains(chainList) {\r\n    let sele = '';\r\n    if (chainList.length > 0) {\r\n        sele = ':' + uniqueArray(chainList).join(' OR :');\r\n    }\r\n    return new Selection(sele);\r\n}\r\n/**\r\n * Assembly of transformed parts of a {@link Structure}\r\n */\r\nclass Assembly {\r\n    /**\r\n     * @param {String} name - assembly name\r\n     */\r\n    constructor(name = '') {\r\n        this.name = name;\r\n        this.partList = [];\r\n    }\r\n    get type() { return 'Assembly'; }\r\n    /**\r\n     * Add transformed parts to the assembly\r\n     * @example\r\n     * var m1 = new NGL.Matrix4().set( ... );\r\n     * var m2 = new NGL.Matrix4().set( ... );\r\n     * var assembly = new NGL.Assembly( \"myAssembly\" );\r\n     * // add part that transforms chain 'A' and 'B' using matrices `m1` and `m2`\r\n     * assembly.addPart( [ m1, m2 ], [ \"A\", \"B\" ] )\r\n     *\r\n     * @param {Matrix4[]} matrixList - array of 4x4 transformation matrices\r\n     * @param {String[]} chainList - array of chain names\r\n     * @return {AssemblyPart} the added assembly part\r\n     */\r\n    addPart(matrixList, chainList) {\r\n        const part = new AssemblyPart(matrixList, chainList);\r\n        this.partList.push(part);\r\n        return part;\r\n    }\r\n    /**\r\n     * Get the number of atom for a given structure\r\n     * @param  {Structure} structure - the given structure\r\n     * @return {Integer} number of atoms in the assembly\r\n     */\r\n    getAtomCount(structure) {\r\n        return this.partList.reduce((count, part) => count + part.getAtomCount(structure), 0);\r\n    }\r\n    /**\r\n     * Get the number of residues for a given structure\r\n     * @param  {Structure} structure - the given structure\r\n     * @return {Integer} number of residues in the assembly\r\n     */\r\n    getResidueCount(structure) {\r\n        return this.partList.reduce((count, part) => count + part.getResidueCount(structure), 0);\r\n    }\r\n    /**\r\n     * Get number of instances the assembly will produce, i.e.\r\n     * the number of transformations performed by the assembly\r\n     * @return {Integer} number of instances\r\n     */\r\n    getInstanceCount() {\r\n        let instanceCount = 0;\r\n        this.partList.forEach(function (part) {\r\n            instanceCount += part.matrixList.length;\r\n        });\r\n        return instanceCount;\r\n    }\r\n    /**\r\n     * Determine if the assembly is the full and untransformed structure\r\n     * @param  {Structure}  structure - the given structure\r\n     * @return {Boolean} whether the assembly is identical to the structure\r\n     */\r\n    isIdentity(structure) {\r\n        if (this.partList.length !== 1)\r\n            return false;\r\n        const part = this.partList[0];\r\n        if (part.matrixList.length !== 1)\r\n            return false;\r\n        const identityMatrix = new Matrix4();\r\n        if (!identityMatrix.equals(part.matrixList[0]))\r\n            return false;\r\n        let structureChainList = [];\r\n        structure.eachChain(function (cp) {\r\n            structureChainList.push(cp.chainname);\r\n        });\r\n        structureChainList = uniqueArray(structureChainList);\r\n        if (part.chainList.length !== structureChainList.length)\r\n            return false;\r\n        return true;\r\n    }\r\n    getBoundingBox(structure) {\r\n        const boundingBox = new Box3();\r\n        this.partList.forEach(function (part) {\r\n            const partBox = part.getBoundingBox(structure);\r\n            boundingBox.expandByPoint(partBox.min);\r\n            boundingBox.expandByPoint(partBox.max);\r\n        });\r\n        return boundingBox;\r\n    }\r\n    getCenter(structure) {\r\n        return this.getBoundingBox(structure).getCenter(new Vector3());\r\n    }\r\n    getSelection() {\r\n        let chainList = [];\r\n        this.partList.forEach(function (part) {\r\n            chainList = chainList.concat(part.chainList);\r\n        });\r\n        return selectionFromChains(chainList);\r\n    }\r\n}\r\nexport class AssemblyPart {\r\n    constructor(matrixList = [], chainList = []) {\r\n        this.matrixList = matrixList;\r\n        this.chainList = chainList;\r\n    }\r\n    get type() { return 'AssemblyPart'; }\r\n    _getCount(structure, propertyName) {\r\n        let count = 0;\r\n        structure.eachChain(cp => {\r\n            if (this.chainList.length === 0 || this.chainList.includes(cp.chainname)) {\r\n                count += cp[propertyName];\r\n            }\r\n        });\r\n        return this.matrixList.length * count;\r\n    }\r\n    getAtomCount(structure) {\r\n        return this._getCount(structure, 'atomCount');\r\n    }\r\n    getResidueCount(structure) {\r\n        return this._getCount(structure, 'residueCount');\r\n    }\r\n    getBoundingBox(structure) {\r\n        const partBox = new Box3();\r\n        const instanceBox = new Box3();\r\n        const selection = this.getSelection();\r\n        const structureBox = structure.getBoundingBox(selection);\r\n        this.matrixList.forEach(function (matrix) {\r\n            instanceBox.copy(structureBox).applyMatrix4(matrix);\r\n            partBox.expandByPoint(instanceBox.min);\r\n            partBox.expandByPoint(instanceBox.max);\r\n        });\r\n        return partBox;\r\n    }\r\n    getSelection() {\r\n        return selectionFromChains(this.chainList);\r\n    }\r\n    getView(structure) {\r\n        const selection = this.getSelection();\r\n        if (selection) {\r\n            return structure.getView(selection);\r\n        }\r\n        else {\r\n            return structure;\r\n        }\r\n    }\r\n    getInstanceList() {\r\n        const instanceList = [];\r\n        for (let j = 0, jl = this.matrixList.length; j < jl; ++j) {\r\n            instanceList.push({\r\n                id: j + 1,\r\n                name: j,\r\n                matrix: this.matrixList[j]\r\n            });\r\n        }\r\n        return instanceList;\r\n    }\r\n}\r\nexport default Assembly;\r\n//# sourceMappingURL=assembly.js.map","/**\r\n * @file Structure Builder\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass StructureBuilder {\r\n    constructor(structure) {\r\n        this.structure = structure;\r\n        this.currentModelindex = null;\r\n        this.currentChainid = null;\r\n        this.currentResname = null;\r\n        this.currentResno = null;\r\n        this.currentInscode = undefined;\r\n        this.currentHetero = null;\r\n        this.previousResname = '';\r\n        this.previousHetero = null;\r\n        this.ai = -1;\r\n        this.ri = -1;\r\n        this.ci = -1;\r\n        this.mi = -1;\r\n    }\r\n    addResidueType(ri) {\r\n        const atomStore = this.structure.atomStore;\r\n        const residueStore = this.structure.residueStore;\r\n        const residueMap = this.structure.residueMap;\r\n        const count = residueStore.atomCount[ri];\r\n        const offset = residueStore.atomOffset[ri];\r\n        const atomTypeIdList = new Array(count);\r\n        for (let i = 0; i < count; ++i) {\r\n            atomTypeIdList[i] = atomStore.atomTypeId[offset + i];\r\n        }\r\n        residueStore.residueTypeId[ri] = residueMap.add(this.previousResname, atomTypeIdList, this.previousHetero // TODO\r\n        );\r\n    }\r\n    addAtom(modelindex, chainname, chainid, resname, resno, hetero, sstruc, inscode) {\r\n        const atomStore = this.structure.atomStore;\r\n        const residueStore = this.structure.residueStore;\r\n        const chainStore = this.structure.chainStore;\r\n        const modelStore = this.structure.modelStore;\r\n        let addModel = false;\r\n        let addChain = false;\r\n        let addResidue = false;\r\n        if (this.currentModelindex !== modelindex) {\r\n            addModel = true;\r\n            addChain = true;\r\n            addResidue = true;\r\n            this.mi += 1;\r\n            this.ci += 1;\r\n            this.ri += 1;\r\n        }\r\n        else if (this.currentChainid !== chainid) {\r\n            addChain = true;\r\n            addResidue = true;\r\n            this.ci += 1;\r\n            this.ri += 1;\r\n        }\r\n        else if (this.currentResno !== resno || this.currentResname !== resname || this.currentInscode !== inscode) {\r\n            addResidue = true;\r\n            this.ri += 1;\r\n        }\r\n        this.ai += 1;\r\n        if (addModel) {\r\n            modelStore.growIfFull();\r\n            modelStore.chainOffset[this.mi] = this.ci;\r\n            modelStore.chainCount[this.mi] = 0;\r\n            modelStore.count += 1;\r\n            chainStore.modelIndex[this.ci] = this.mi;\r\n        }\r\n        if (addChain) {\r\n            chainStore.growIfFull();\r\n            chainStore.setChainname(this.ci, chainname);\r\n            chainStore.setChainid(this.ci, chainid);\r\n            chainStore.residueOffset[this.ci] = this.ri;\r\n            chainStore.residueCount[this.ci] = 0;\r\n            chainStore.count += 1;\r\n            chainStore.modelIndex[this.ci] = this.mi;\r\n            modelStore.chainCount[this.mi] += 1;\r\n            residueStore.chainIndex[this.ri] = this.ci;\r\n        }\r\n        if (addResidue) {\r\n            this.previousResname = this.currentResname;\r\n            this.previousHetero = this.currentHetero;\r\n            if (this.ri > 0)\r\n                this.addResidueType(this.ri - 1);\r\n            residueStore.growIfFull();\r\n            residueStore.resno[this.ri] = resno;\r\n            if (sstruc !== undefined) {\r\n                residueStore.sstruc[this.ri] = sstruc.charCodeAt(0);\r\n            }\r\n            if (inscode !== undefined) {\r\n                residueStore.inscode[this.ri] = inscode.charCodeAt(0);\r\n            }\r\n            residueStore.atomOffset[this.ri] = this.ai;\r\n            residueStore.atomCount[this.ri] = 0;\r\n            residueStore.count += 1;\r\n            residueStore.chainIndex[this.ri] = this.ci;\r\n            chainStore.residueCount[this.ci] += 1;\r\n        }\r\n        atomStore.count += 1;\r\n        atomStore.residueIndex[this.ai] = this.ri;\r\n        residueStore.atomCount[this.ri] += 1;\r\n        this.currentModelindex = modelindex;\r\n        this.currentChainid = chainid;\r\n        this.currentResname = resname;\r\n        this.currentResno = resno;\r\n        this.currentInscode = inscode;\r\n        this.currentHetero = hetero;\r\n    }\r\n    finalize() {\r\n        this.previousResname = this.currentResname;\r\n        this.previousHetero = this.currentHetero;\r\n        if (this.ri > -1)\r\n            this.addResidueType(this.ri);\r\n    }\r\n}\r\nexport default StructureBuilder;\r\n//# sourceMappingURL=structure-builder.js.map","/**\r\n * @file Structure Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4 } from 'three';\r\nimport { Debug, Log } from '../globals';\r\nimport { binarySearchIndexOf } from '../utils';\r\nimport Helixbundle from '../geometry/helixbundle';\r\nimport Kdtree from '../geometry/kdtree';\r\nimport { getSymmetryOperations } from '../symmetry/symmetry-utils';\r\nimport Assembly from '../symmetry/assembly';\r\nimport Structure from '../structure/structure';\r\nimport StructureBuilder from '../structure/structure-builder.js';\r\nimport { UnknownBackboneType, AA3, Bases } from './structure-constants';\r\nexport function reorderAtoms(structure) {\r\n    if (Debug)\r\n        Log.time('reorderAtoms');\r\n    var ap1 = structure.getAtomProxy();\r\n    var ap2 = structure.getAtomProxy();\r\n    function compareModelChainResno(index1, index2) {\r\n        ap1.index = index1;\r\n        ap2.index = index2;\r\n        if (ap1.modelIndex < ap2.modelIndex) {\r\n            return -1;\r\n        }\r\n        else if (ap1.modelIndex > ap2.modelIndex) {\r\n            return 1;\r\n        }\r\n        else {\r\n            if (ap1.chainname < ap2.chainname) {\r\n                return -1;\r\n            }\r\n            else if (ap1.chainname > ap2.chainname) {\r\n                return 1;\r\n            }\r\n            else {\r\n                if (ap1.resno < ap2.resno) {\r\n                    return -1;\r\n                }\r\n                else if (ap1.resno > ap2.resno) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    structure.atomStore.sort(compareModelChainResno);\r\n    if (Debug)\r\n        Log.timeEnd('reorderAtoms');\r\n}\r\nexport function assignSecondaryStructure(structure, secStruct) {\r\n    if (!secStruct)\r\n        return;\r\n    if (Debug)\r\n        Log.time('assignSecondaryStructure');\r\n    const chainnames = [];\r\n    structure.eachModel(function (mp) {\r\n        mp.eachChain(function (cp) {\r\n            chainnames.push(cp.chainname);\r\n        });\r\n    });\r\n    const chainnamesSorted = chainnames.slice().sort();\r\n    const chainnamesIndex = [];\r\n    chainnamesSorted.forEach(function (c) {\r\n        chainnamesIndex.push(chainnames.indexOf(c));\r\n    });\r\n    // helix assignment\r\n    const helices = secStruct.helices.filter(function (h) {\r\n        return binarySearchIndexOf(chainnamesSorted, h[0]) >= 0;\r\n    });\r\n    helices.sort(function (h1, h2) {\r\n        const c1 = h1[0];\r\n        const c2 = h2[0];\r\n        const r1 = h1[1];\r\n        const r2 = h2[1];\r\n        if (c1 === c2) {\r\n            if (r1 === r2) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return r1 < r2 ? -1 : 1;\r\n            }\r\n        }\r\n        else {\r\n            const idx1 = binarySearchIndexOf(chainnamesSorted, c1);\r\n            const idx2 = binarySearchIndexOf(chainnamesSorted, c2);\r\n            return chainnamesIndex[idx1] < chainnamesIndex[idx2] ? -1 : 1;\r\n        }\r\n    });\r\n    const residueStore = structure.residueStore;\r\n    structure.eachModel(function (mp) {\r\n        let i = 0;\r\n        const n = helices.length;\r\n        if (n === 0)\r\n            return;\r\n        let helix = helices[i];\r\n        let helixRun = false;\r\n        let done = false;\r\n        mp.eachChain(function (cp) {\r\n            let chainChange = false;\r\n            if (cp.chainname === helix[0]) {\r\n                const count = cp.residueCount;\r\n                const offset = cp.residueOffset;\r\n                const end = offset + count;\r\n                for (let j = offset; j < end; ++j) {\r\n                    if (residueStore.resno[j] === helix[1] && // resnoBeg\r\n                        residueStore.getInscode(j) === helix[2] // inscodeBeg\r\n                    ) {\r\n                        helixRun = true;\r\n                    }\r\n                    if (helixRun) {\r\n                        residueStore.sstruc[j] = helix[6];\r\n                        if (residueStore.resno[j] === helix[4] && // resnoEnd\r\n                            residueStore.getInscode(j) === helix[5] // inscodeEnd\r\n                        ) {\r\n                            helixRun = false;\r\n                            i += 1;\r\n                            if (i < n) {\r\n                                // must look at previous residues as\r\n                                // residues may not be ordered by resno\r\n                                j = offset - 1;\r\n                                helix = helices[i];\r\n                                chainChange = cp.chainname !== helix[0];\r\n                            }\r\n                            else {\r\n                                done = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (chainChange || done)\r\n                        return;\r\n                }\r\n            }\r\n        });\r\n    });\r\n    // sheet assignment\r\n    const sheets = secStruct.sheets.filter(function (s) {\r\n        return binarySearchIndexOf(chainnamesSorted, s[0]) >= 0;\r\n    });\r\n    sheets.sort(function (s1, s2) {\r\n        const c1 = s1[0];\r\n        const c2 = s2[0];\r\n        if (c1 === c2)\r\n            return 0;\r\n        const idx1 = binarySearchIndexOf(chainnamesSorted, c1);\r\n        const idx2 = binarySearchIndexOf(chainnamesSorted, c2);\r\n        return chainnamesIndex[idx1] < chainnamesIndex[idx2] ? -1 : 1;\r\n    });\r\n    const strandCharCode = 'e'.charCodeAt(0);\r\n    structure.eachModel(function (mp) {\r\n        let i = 0;\r\n        const n = sheets.length;\r\n        if (n === 0)\r\n            return;\r\n        let sheet = sheets[i];\r\n        let sheetRun = false;\r\n        let done = false;\r\n        mp.eachChain(function (cp) {\r\n            let chainChange = false;\r\n            if (cp.chainname === sheet[0]) {\r\n                const count = cp.residueCount;\r\n                const offset = cp.residueOffset;\r\n                const end = offset + count;\r\n                for (let j = offset; j < end; ++j) {\r\n                    if (residueStore.resno[j] === sheet[1] && // resnoBeg\r\n                        residueStore.getInscode(j) === sheet[2] // inscodeBeg\r\n                    ) {\r\n                        sheetRun = true;\r\n                    }\r\n                    if (sheetRun) {\r\n                        residueStore.sstruc[j] = strandCharCode;\r\n                        if (residueStore.resno[j] === sheet[4] && // resnoEnd\r\n                            residueStore.getInscode(j) === sheet[5] // inscodeEnd\r\n                        ) {\r\n                            sheetRun = false;\r\n                            i += 1;\r\n                            if (i < n) {\r\n                                // must look at previous residues as\r\n                                // residues may not be ordered by resno\r\n                                j = offset - 1;\r\n                                sheet = sheets[i];\r\n                                chainChange = cp.chainname !== sheet[0];\r\n                            }\r\n                            else {\r\n                                done = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (chainChange || done)\r\n                        return;\r\n                }\r\n            }\r\n        });\r\n    });\r\n    if (Debug)\r\n        Log.timeEnd('assignSecondaryStructure');\r\n}\r\nexport const calculateSecondaryStructure = (function () {\r\n    // Implementation for proteins based on \"pv\"\r\n    //\r\n    // assigns secondary structure information based on a simple and very fast\r\n    // algorithm published by Zhang and Skolnick in their TM-align paper.\r\n    // Reference:\r\n    //\r\n    // TM-align: a protein structure alignment algorithm based on the Tm-score\r\n    // (2005) NAR, 33(7) 2302-2309\r\n    const zhangSkolnickSS = function (polymer, i, distances, delta) {\r\n        const structure = polymer.structure;\r\n        const offset = polymer.residueIndexStart;\r\n        const rp1 = structure.getResidueProxy();\r\n        const rp2 = structure.getResidueProxy();\r\n        const ap1 = structure.getAtomProxy();\r\n        const ap2 = structure.getAtomProxy();\r\n        for (let j = Math.max(0, i - 2); j <= i; ++j) {\r\n            for (let k = 2; k < 5; ++k) {\r\n                if (j + k >= polymer.residueCount) {\r\n                    continue;\r\n                }\r\n                rp1.index = offset + j;\r\n                rp2.index = offset + j + k;\r\n                ap1.index = rp1.traceAtomIndex;\r\n                ap2.index = rp2.traceAtomIndex;\r\n                const d = ap1.distanceTo(ap2);\r\n                if (Math.abs(d - distances[k - 2]) > delta) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    const isHelical = function (polymer, i) {\r\n        const helixDistances = [5.45, 5.18, 6.37];\r\n        const helixDelta = 2.1;\r\n        return zhangSkolnickSS(polymer, i, helixDistances, helixDelta);\r\n    };\r\n    const isSheet = function (polymer, i) {\r\n        const sheetDistances = [6.1, 10.4, 13.0];\r\n        const sheetDelta = 1.42;\r\n        return zhangSkolnickSS(polymer, i, sheetDistances, sheetDelta);\r\n    };\r\n    const proteinPolymer = function (p) {\r\n        const residueStore = p.residueStore;\r\n        const offset = p.residueIndexStart;\r\n        for (let i = 0, il = p.residueCount; i < il; ++i) {\r\n            let sstruc = 'c';\r\n            if (isHelical(p, i)) {\r\n                sstruc = 'h';\r\n            }\r\n            else if (isSheet(p, i)) {\r\n                sstruc = 'e';\r\n            }\r\n            residueStore.sstruc[offset + i] = sstruc.charCodeAt(0);\r\n        }\r\n    };\r\n    const cgPolymer = function (p) {\r\n        const localAngle = 20;\r\n        const centerDist = 2.0;\r\n        const residueStore = p.residueStore;\r\n        const offset = p.residueIndexStart;\r\n        const helixbundle = new Helixbundle(p);\r\n        const pos = helixbundle.position;\r\n        const c1 = new Vector3();\r\n        const c2 = new Vector3();\r\n        for (let i = 0, il = p.residueCount; i < il; ++i) {\r\n            c1.fromArray(pos.center, i * 3); // TODO\r\n            c2.fromArray(pos.center, i * 3 + 3); // TODO\r\n            const d = c1.distanceTo(c2);\r\n            if (d < centerDist && d > 1.0 && pos.bending[i] < localAngle) {\r\n                residueStore.sstruc[offset + i] = 'h'.charCodeAt(0);\r\n                residueStore.sstruc[offset + i + 1] = 'h'.charCodeAt(0);\r\n            }\r\n        }\r\n    };\r\n    return function calculateSecondaryStructure(structure) {\r\n        if (Debug)\r\n            Log.time('calculateSecondaryStructure');\r\n        structure.eachPolymer(function (p) {\r\n            // assign secondary structure\r\n            if (p.residueCount < 4)\r\n                return;\r\n            if (p.isCg()) {\r\n                cgPolymer(p);\r\n            }\r\n            else if (p.isProtein()) {\r\n                proteinPolymer(p);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            // set lone secondary structure assignments to \"c\"\r\n            let prevSstruc;\r\n            let sstrucCount = 0;\r\n            p.eachResidue(function (r) {\r\n                if (r.sstruc === prevSstruc) {\r\n                    sstrucCount += 1;\r\n                }\r\n                else {\r\n                    if (sstrucCount === 1) {\r\n                        r.index -= 1;\r\n                        r.sstruc = 'c';\r\n                    }\r\n                    sstrucCount = 1;\r\n                    prevSstruc = r.sstruc;\r\n                }\r\n            });\r\n        });\r\n        if (Debug)\r\n            Log.timeEnd('calculateSecondaryStructure');\r\n    };\r\n}());\r\n// const ChainnameAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\r\n//                           \"abcdefghijklmnopqrstuvwxyz\" +\r\n//                           \"0123456789\";\r\nconst ChainnameAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport function getChainname(index) {\r\n    const n = ChainnameAlphabet.length;\r\n    let j = index;\r\n    let k = 0;\r\n    let chainname = ChainnameAlphabet[j % n];\r\n    while (j >= n) {\r\n        j = Math.floor(j / n);\r\n        chainname += ChainnameAlphabet[j % n];\r\n        k += 1;\r\n    }\r\n    if (k >= 5) {\r\n        Log.warn('chainname overflow');\r\n    }\r\n    return chainname;\r\n}\r\nexport function calculateChainnames(structure, useExistingBonds = false) {\r\n    if (Debug)\r\n        Log.time('calculateChainnames');\r\n    let doAutoChainName = true;\r\n    structure.eachChain(function (c) {\r\n        if (c.chainname)\r\n            doAutoChainName = false;\r\n    });\r\n    if (doAutoChainName) {\r\n        const modelStore = structure.modelStore;\r\n        const chainStore = structure.chainStore;\r\n        const residueStore = structure.residueStore;\r\n        const addChain = function (mIndex, chainname, rOffset, rCount) {\r\n            const ci = chainStore.count;\r\n            for (let i = 0; i < rCount; ++i) {\r\n                residueStore.chainIndex[rOffset + i] = ci;\r\n            }\r\n            chainStore.growIfFull();\r\n            chainStore.modelIndex[ci] = mIndex;\r\n            chainStore.setChainname(ci, chainname);\r\n            chainStore.setChainid(ci, chainname);\r\n            chainStore.residueOffset[ci] = rOffset;\r\n            chainStore.residueCount[ci] = rCount;\r\n            chainStore.count += 1;\r\n            modelStore.chainCount[mIndex] += 1;\r\n        };\r\n        const ap1 = structure.getAtomProxy();\r\n        const ap2 = structure.getAtomProxy();\r\n        let i = 0;\r\n        let mi = 0;\r\n        let rStart = 0;\r\n        let rEnd = 0;\r\n        const chainData = [];\r\n        if (residueStore.count === 1) {\r\n            chainData.push({\r\n                mIndex: 0,\r\n                chainname: 'A',\r\n                rStart: 0,\r\n                rCount: 1\r\n            });\r\n        }\r\n        else {\r\n            structure.eachResidueN(2, function (rp1, rp2) {\r\n                let newChain = false;\r\n                const bbType1 = rp1.backboneType;\r\n                const bbType2 = rp2.backboneType;\r\n                const bbTypeUnk = UnknownBackboneType;\r\n                rEnd = rp1.index;\r\n                if (rp1.modelIndex !== rp2.modelIndex) {\r\n                    newChain = true;\r\n                }\r\n                else if (rp1.moleculeType !== rp2.moleculeType) {\r\n                    newChain = true;\r\n                }\r\n                else if (bbType1 !== bbTypeUnk && bbType1 === bbType2) {\r\n                    ap1.index = rp1.backboneEndAtomIndex;\r\n                    ap2.index = rp2.backboneStartAtomIndex;\r\n                    if (useExistingBonds) {\r\n                        newChain = !ap1.hasBondTo(ap2);\r\n                    }\r\n                    else {\r\n                        newChain = !ap1.connectedTo(ap2);\r\n                    }\r\n                }\r\n                // current chain goes to end of the structure\r\n                if (!newChain && rp2.index === residueStore.count - 1) {\r\n                    newChain = true;\r\n                    rEnd = rp2.index;\r\n                }\r\n                if (newChain) {\r\n                    chainData.push({\r\n                        mIndex: mi,\r\n                        chainname: getChainname(i),\r\n                        rStart: rStart,\r\n                        rCount: rEnd - rStart + 1\r\n                    });\r\n                    i += 1;\r\n                    if (rp1.modelIndex !== rp2.modelIndex) {\r\n                        i = 0;\r\n                        mi += 1;\r\n                    }\r\n                    // new chain for the last residue of the structure\r\n                    if (rp2.index === residueStore.count - 1 && rEnd !== rp2.index) {\r\n                        chainData.push({\r\n                            mIndex: mi,\r\n                            chainname: getChainname(i),\r\n                            rStart: residueStore.count - 1,\r\n                            rCount: 1\r\n                        });\r\n                    }\r\n                    rStart = rp2.index;\r\n                    rEnd = rp2.index;\r\n                }\r\n            });\r\n        }\r\n        //\r\n        chainStore.count = 0;\r\n        chainData.forEach(function (d) {\r\n            addChain(d.mIndex, d.chainname, d.rStart, d.rCount);\r\n        });\r\n        let chainOffset = 0;\r\n        structure.eachModel(function (mp) {\r\n            modelStore.chainOffset[mp.index] = chainOffset;\r\n            modelStore.chainCount[mp.index] -= 1;\r\n            chainOffset += modelStore.chainCount[mp.index];\r\n        });\r\n    }\r\n    if (Debug)\r\n        Log.timeEnd('calculateChainnames');\r\n}\r\nexport function calculateBonds(structure) {\r\n    if (Debug)\r\n        Log.time('calculateBonds');\r\n    calculateBondsWithin(structure);\r\n    calculateBondsBetween(structure);\r\n    if (Debug)\r\n        Log.timeEnd('calculateBonds');\r\n}\r\nconst BondOrderTable = {\r\n    'HIS|CD2|CG': 2,\r\n    'HIS|CE1|ND1': 2,\r\n    'ARG|CZ|NH2': 2,\r\n    'PHE|CE1|CZ': 2,\r\n    'PHE|CD2|CE2': 2,\r\n    'PHE|CD1|CG': 2,\r\n    'TRP|CD1|CG': 2,\r\n    'TRP|CD2|CE2': 2,\r\n    'TRP|CE3|CZ3': 2,\r\n    'TRP|CH2|CZ2': 2,\r\n    'ASN|CG|OD1': 2,\r\n    'GLN|CD|OE1': 2,\r\n    'TYR|CD1|CG': 2,\r\n    'TYR|CD2|CE2': 2,\r\n    'TYR|CE1|CZ': 2,\r\n    'ASP|CG|OD1': 2,\r\n    'GLU|CD|OE1': 2,\r\n    'G|C8|N7': 2,\r\n    'G|C4|C5': 2,\r\n    'G|C2|N3': 2,\r\n    'G|C6|O6': 2,\r\n    'C|C4|N3': 2,\r\n    'C|C5|C6': 2,\r\n    'C|C2|O2': 2,\r\n    'A|C2|N3': 2,\r\n    'A|C6|N1': 2,\r\n    'A|C4|C5': 2,\r\n    'A|C8|N7': 2,\r\n    'U|C5|C6': 2,\r\n    'U|C2|O2': 2,\r\n    'U|C4|O4': 2,\r\n    'DG|C8|N7': 2,\r\n    'DG|C4|C5': 2,\r\n    'DG|C2|N3': 2,\r\n    'DG|C6|O6': 2,\r\n    'DC|C4|N3': 2,\r\n    'DC|C5|C6': 2,\r\n    'DC|C2|O2': 2,\r\n    'DA|C2|N3': 2,\r\n    'DA|C6|N1': 2,\r\n    'DA|C4|C5': 2,\r\n    'DA|C8|N7': 2,\r\n    'DT|C5|C6': 2,\r\n    'DT|C2|O2': 2,\r\n    'DT|C4|O4': 2\r\n};\r\nfunction getBondOrderFromTable(resname, atomname1, atomname2) {\r\n    [atomname1, atomname2] = atomname1 < atomname2 ? [atomname1, atomname2] : [atomname2, atomname1];\r\n    if (AA3.includes(resname) && atomname1 === 'C' && atomname2 === 'O')\r\n        return 2;\r\n    if (Bases.includes(resname) && atomname1 === 'OP1' && atomname2 === 'P')\r\n        return 2;\r\n    return BondOrderTable[`${resname}|${atomname1}|${atomname2}`] || 1;\r\n}\r\nexport function calculateResidueBonds(r) {\r\n    const structure = r.structure;\r\n    const a1 = structure.getAtomProxy();\r\n    const a2 = structure.getAtomProxy();\r\n    const count = r.atomCount;\r\n    const offset = r.atomOffset;\r\n    const end = offset + count;\r\n    const end1 = end - 1;\r\n    const atomIndices1 = [];\r\n    const atomIndices2 = [];\r\n    const bondOrders = [];\r\n    if (count > 500) {\r\n        if (Debug)\r\n            Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName());\r\n    }\r\n    else {\r\n        if (count > 50) {\r\n            const kdtree = new Kdtree(r, true);\r\n            const radius = r.isCg() ? 1.2 : 2.3;\r\n            for (let i = offset; i < end1; ++i) {\r\n                a1.index = i;\r\n                const maxd = a1.covalent + radius + 0.3;\r\n                const nearestAtoms = kdtree.nearest(a1, Infinity, maxd * maxd); // TODO\r\n                const m = nearestAtoms.length;\r\n                for (let j = 0; j < m; ++j) {\r\n                    a2.index = nearestAtoms[j].index;\r\n                    if (a1.index < a2.index) {\r\n                        if (a1.connectedTo(a2)) {\r\n                            atomIndices1.push(a1.index - offset);\r\n                            atomIndices2.push(a2.index - offset);\r\n                            bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = offset; i < end1; ++i) {\r\n                a1.index = i;\r\n                for (let j = i + 1; j <= end1; ++j) {\r\n                    a2.index = j;\r\n                    if (a1.connectedTo(a2)) {\r\n                        atomIndices1.push(i - offset);\r\n                        atomIndices2.push(j - offset);\r\n                        bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        atomIndices1: atomIndices1,\r\n        atomIndices2: atomIndices2,\r\n        bondOrders: bondOrders\r\n    };\r\n}\r\nexport function calculateAtomBondMap(structure) {\r\n    if (Debug)\r\n        Log.time('calculateAtomBondMap');\r\n    var atomBondMap = [];\r\n    structure.eachBond(function (bp) {\r\n        var ai1 = bp.atomIndex1;\r\n        var ai2 = bp.atomIndex2;\r\n        if (atomBondMap[ai1] === undefined)\r\n            atomBondMap[ai1] = [];\r\n        atomBondMap[ai1][ai2] = bp.index;\r\n    });\r\n    if (Debug)\r\n        Log.timeEnd('calculateAtomBondMap');\r\n    return atomBondMap;\r\n}\r\nexport function calculateBondsWithin(structure, onlyAddRung = false) {\r\n    if (Debug)\r\n        Log.time('calculateBondsWithin');\r\n    const bondStore = structure.bondStore;\r\n    const rungBondStore = structure.rungBondStore;\r\n    const rungAtomSet = structure.getAtomSet(false);\r\n    const a1 = structure.getAtomProxy();\r\n    const a2 = structure.getAtomProxy();\r\n    const bp = structure.getBondProxy();\r\n    const atomBondMap = onlyAddRung ? null : calculateAtomBondMap(structure);\r\n    structure.eachResidue(function (r) {\r\n        if (!onlyAddRung && atomBondMap) {\r\n            const count = r.atomCount;\r\n            const offset = r.atomOffset;\r\n            if (count > 500) {\r\n                Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName());\r\n                return;\r\n            }\r\n            const bonds = r.getBonds();\r\n            const atomIndices1 = bonds.atomIndices1;\r\n            const atomIndices2 = bonds.atomIndices2;\r\n            const bondOrders = bonds.bondOrders;\r\n            const nn = atomIndices1.length;\r\n            for (let i = 0; i < nn; ++i) {\r\n                const rai1 = atomIndices1[i];\r\n                const rai2 = atomIndices2[i];\r\n                const ai1 = rai1 + offset;\r\n                const ai2 = rai2 + offset;\r\n                const tmp = atomBondMap[ai1];\r\n                if (tmp !== undefined && tmp[ai2] !== undefined) {\r\n                    bp.index = tmp[ai2];\r\n                    const residueTypeBondIndex = r.residueType.getBondIndex(rai1, rai2); // TODO\r\n                    // overwrite residueType bondOrder with value from existing bond\r\n                    bondOrders[residueTypeBondIndex] = bp.bondOrder;\r\n                }\r\n                else {\r\n                    a1.index = ai1;\r\n                    a2.index = ai2;\r\n                    // only add bond if not already in bondStore\r\n                    bondStore.addBond(a1, a2, bondOrders[i]);\r\n                }\r\n            }\r\n        }\r\n        // get RNA/DNA rung pseudo bonds\r\n        const traceAtomIndex = r.residueType.traceAtomIndex;\r\n        const rungEndAtomIndex = r.residueType.rungEndAtomIndex;\r\n        if (traceAtomIndex !== -1 && rungEndAtomIndex !== -1) {\r\n            a1.index = r.traceAtomIndex;\r\n            a2.index = r.rungEndAtomIndex;\r\n            rungBondStore.addBond(a1, a2);\r\n            rungAtomSet.set(a1.index);\r\n            rungAtomSet.set(a2.index);\r\n        }\r\n    });\r\n    structure.atomSetDict.rung = rungAtomSet;\r\n    if (Debug)\r\n        Log.timeEnd('calculateBondsWithin');\r\n}\r\nexport function calculateBondsBetween(structure, onlyAddBackbone = false, useExistingBonds = false) {\r\n    if (Debug)\r\n        Log.time('calculateBondsBetween');\r\n    const bondStore = structure.bondStore;\r\n    const backboneBondStore = structure.backboneBondStore;\r\n    const backboneAtomSet = structure.getAtomSet(false);\r\n    const ap1 = structure.getAtomProxy();\r\n    const ap2 = structure.getAtomProxy();\r\n    if (backboneBondStore.count === 0) {\r\n        backboneBondStore.resize(structure.residueStore.count);\r\n    }\r\n    function addBondIfConnected(rp1, rp2) {\r\n        const bbType1 = rp1.backboneType;\r\n        const bbType2 = rp2.backboneType;\r\n        if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n            ap1.index = rp1.backboneEndAtomIndex;\r\n            ap2.index = rp2.backboneStartAtomIndex;\r\n            if ((useExistingBonds && ap1.hasBondTo(ap2)) || ap1.connectedTo(ap2)) {\r\n                if (!onlyAddBackbone) {\r\n                    bondStore.addBond(ap1, ap2, 1); // assume single bond\r\n                }\r\n                ap1.index = rp1.traceAtomIndex;\r\n                ap2.index = rp2.traceAtomIndex;\r\n                backboneBondStore.addBond(ap1, ap2);\r\n                backboneAtomSet.set(ap1.index);\r\n                backboneAtomSet.set(ap2.index);\r\n            }\r\n        }\r\n    }\r\n    structure.eachResidueN(2, addBondIfConnected);\r\n    const rp1 = structure.getResidueProxy();\r\n    const rp2 = structure.getResidueProxy();\r\n    // check for cyclic chains\r\n    structure.eachChain(function (cp) {\r\n        if (cp.residueCount === 0)\r\n            return;\r\n        rp1.index = cp.residueOffset;\r\n        rp2.index = cp.residueOffset + cp.residueCount - 1;\r\n        addBondIfConnected(rp2, rp1);\r\n    });\r\n    structure.atomSetDict.backbone = backboneAtomSet;\r\n    if (!onlyAddBackbone) {\r\n        if (Debug)\r\n            Log.time('calculateBondsBetween inter');\r\n        const spatialHash = structure.spatialHash;\r\n        structure.eachResidue(function (rp) {\r\n            if (rp.backboneType === UnknownBackboneType && !rp.isWater()) {\r\n                rp.eachAtom(function (ap) {\r\n                    if (ap.isMetal())\r\n                        return;\r\n                    spatialHash.eachWithin(ap.x, ap.y, ap.z, 4, function (idx) {\r\n                        ap2.index = idx;\r\n                        if (ap.modelIndex === ap2.modelIndex &&\r\n                            ap.residueIndex !== ap2.residueIndex &&\r\n                            !ap2.isMetal()) {\r\n                            bondStore.addBondIfConnected(ap, ap2, 1); // assume single bond\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        if (Debug)\r\n            Log.timeEnd('calculateBondsBetween inter');\r\n    }\r\n    if (Debug)\r\n        Log.timeEnd('calculateBondsBetween');\r\n}\r\nexport function buildUnitcellAssembly(structure) {\r\n    if (!structure.unitcell)\r\n        return;\r\n    if (Debug)\r\n        Log.time('buildUnitcellAssembly');\r\n    const uc = structure.unitcell;\r\n    const structureCenterFrac = structure.center.clone().applyMatrix4(uc.cartToFrac);\r\n    const centerFrac = structureCenterFrac.clone().floor();\r\n    const symopDict = getSymmetryOperations(uc.spacegroup);\r\n    const centerFracSymop = new Vector3();\r\n    const positionFracSymop = new Vector3();\r\n    function getMatrixList(shift) {\r\n        const matrixList = [];\r\n        Object.keys(symopDict).forEach(function (name) {\r\n            const m = symopDict[name].clone();\r\n            centerFracSymop.copy(structureCenterFrac).applyMatrix4(m).floor();\r\n            positionFracSymop.setFromMatrixPosition(m);\r\n            positionFracSymop.sub(centerFracSymop);\r\n            positionFracSymop.add(centerFrac);\r\n            if (shift)\r\n                positionFracSymop.add(shift);\r\n            m.setPosition(positionFracSymop);\r\n            m.multiplyMatrices(uc.fracToCart, m);\r\n            m.multiply(uc.cartToFrac);\r\n            matrixList.push(m);\r\n        });\r\n        return matrixList;\r\n    }\r\n    const unitcellAssembly = new Assembly('UNITCELL');\r\n    const unitcellMatrixList = getMatrixList();\r\n    const ncsMatrixList = [];\r\n    if (structure.biomolDict.NCS) {\r\n        ncsMatrixList.push(new Matrix4(), ...structure.biomolDict.NCS.partList[0].matrixList);\r\n        const ncsUnitcellMatrixList = [];\r\n        unitcellMatrixList.forEach(sm => {\r\n            ncsMatrixList.forEach(nm => {\r\n                ncsUnitcellMatrixList.push(sm.clone().multiply(nm));\r\n            });\r\n        });\r\n        unitcellAssembly.addPart(ncsUnitcellMatrixList);\r\n    }\r\n    else {\r\n        unitcellAssembly.addPart(unitcellMatrixList);\r\n    }\r\n    const vec = new Vector3();\r\n    const supercellAssembly = new Assembly('SUPERCELL');\r\n    const supercellMatrixList = Array.prototype.concat.call(getMatrixList(vec.set(1, 0, 0)), // 655\r\n    getMatrixList(vec.set(0, 1, 0)), // 565\r\n    getMatrixList(vec.set(0, 0, 1)), // 556\r\n    getMatrixList(vec.set(-1, 0, 0)), // 455\r\n    getMatrixList(vec.set(0, -1, 0)), // 545\r\n    getMatrixList(vec.set(0, 0, -1)), // 554\r\n    getMatrixList(vec.set(1, 1, 0)), // 665\r\n    getMatrixList(vec.set(1, 0, 1)), // 656\r\n    getMatrixList(vec.set(0, 1, 1)), // 566\r\n    getMatrixList(vec.set(-1, -1, 0)), // 445\r\n    getMatrixList(vec.set(-1, 0, -1)), // 454\r\n    getMatrixList(vec.set(0, -1, -1)), // 544\r\n    getMatrixList(vec.set(1, -1, -1)), // 644\r\n    getMatrixList(vec.set(1, 1, -1)), // 664\r\n    getMatrixList(vec.set(1, -1, 1)), // 646\r\n    getMatrixList(vec.set(-1, 1, 1)), // 466\r\n    getMatrixList(vec.set(-1, -1, 1)), // 446\r\n    getMatrixList(vec.set(-1, 1, -1)), // 464\r\n    getMatrixList(vec.set(0, 1, -1)), // 564\r\n    getMatrixList(vec.set(0, -1, 1)), // 546\r\n    getMatrixList(vec.set(1, 0, -1)), // 654\r\n    getMatrixList(vec.set(-1, 0, 1)), // 456\r\n    getMatrixList(vec.set(1, -1, 0)), // 645\r\n    getMatrixList(vec.set(-1, 1, 0)), // 465\r\n    getMatrixList(), // 555\r\n    getMatrixList(vec.set(1, 1, 1)), // 666\r\n    getMatrixList(vec.set(-1, -1, -1)) // 444\r\n    );\r\n    if (structure.biomolDict.NCS) {\r\n        const ncsSupercellMatrixList = [];\r\n        supercellMatrixList.forEach(function (sm) {\r\n            ncsMatrixList.forEach(function (nm) {\r\n                ncsSupercellMatrixList.push(sm.clone().multiply(nm));\r\n            });\r\n        });\r\n        supercellAssembly.addPart(ncsSupercellMatrixList);\r\n    }\r\n    else {\r\n        supercellAssembly.addPart(supercellMatrixList);\r\n    }\r\n    structure.biomolDict.UNITCELL = unitcellAssembly;\r\n    structure.biomolDict.SUPERCELL = supercellAssembly;\r\n    if (Debug)\r\n        Log.timeEnd('buildUnitcellAssembly');\r\n}\r\nconst elm1 = ['H', 'C', 'O', 'N', 'S', 'P'];\r\nconst elm2 = ['NA', 'CL', 'FE'];\r\nexport function guessElement(atomName) {\r\n    let at = atomName.trim().toUpperCase();\r\n    if (parseInt(at.charAt(0)))\r\n        at = at.substr(1);\r\n    // parse again to check for a second integer\r\n    if (parseInt(at.charAt(0)))\r\n        at = at.substr(1);\r\n    const n = at.length;\r\n    if (n === 0)\r\n        return '';\r\n    if (n === 1)\r\n        return at;\r\n    if (n === 2) {\r\n        if (elm2.indexOf(at) !== -1)\r\n            return at;\r\n        if (elm1.indexOf(at[0]) !== -1)\r\n            return at[0];\r\n    }\r\n    if (n >= 3) {\r\n        if (elm1.indexOf(at[0]) !== -1)\r\n            return at[0];\r\n    }\r\n    return '';\r\n}\r\n/**\r\n * Assigns ResidueType bonds.\r\n * @param {Structure} structure - the structure object\r\n * @return {undefined}\r\n */\r\nexport function assignResidueTypeBonds(structure) {\r\n    // if( Debug ) Log.time( \"assignResidueTypeBonds\" )\r\n    const bondHash = structure.bondHash; // TODO\r\n    const countArray = bondHash.countArray;\r\n    const offsetArray = bondHash.offsetArray;\r\n    const indexArray = bondHash.indexArray;\r\n    const bp = structure.getBondProxy();\r\n    structure.eachResidue(function (rp) {\r\n        const residueType = rp.residueType;\r\n        if (residueType.bonds !== undefined)\r\n            return;\r\n        var atomOffset = rp.atomOffset;\r\n        var atomIndices1 = [];\r\n        var atomIndices2 = [];\r\n        var bondOrders = [];\r\n        var bondDict = {};\r\n        const nextAtomOffset = atomOffset + rp.atomCount;\r\n        rp.eachAtom(function (ap) {\r\n            const index = ap.index;\r\n            const offset = offsetArray[index];\r\n            const count = countArray[index];\r\n            for (let i = 0, il = count; i < il; ++i) {\r\n                bp.index = indexArray[offset + i];\r\n                let idx1 = bp.atomIndex1;\r\n                if (idx1 < atomOffset || idx1 >= nextAtomOffset) {\r\n                    // Don't add bonds outside of this resiude\r\n                    continue;\r\n                }\r\n                let idx2 = bp.atomIndex2;\r\n                if (idx2 < atomOffset || idx2 >= nextAtomOffset) {\r\n                    continue;\r\n                }\r\n                if (idx1 > idx2) {\r\n                    const tmp = idx2;\r\n                    idx2 = idx1;\r\n                    idx1 = tmp;\r\n                }\r\n                const hash = idx1 + '|' + idx2;\r\n                if (bondDict[hash] === undefined) {\r\n                    bondDict[hash] = true;\r\n                    atomIndices1.push(idx1 - atomOffset);\r\n                    atomIndices2.push(idx2 - atomOffset);\r\n                    bondOrders.push(bp.bondOrder);\r\n                }\r\n            }\r\n        });\r\n        residueType.bonds = {\r\n            atomIndices1: atomIndices1,\r\n            atomIndices2: atomIndices2,\r\n            bondOrders: bondOrders\r\n        };\r\n    });\r\n    // if( Debug ) Log.timeEnd( \"assignResidueTypeBonds\" )\r\n}\r\nexport function concatStructures(name, ...structures) {\r\n    if (Debug)\r\n        Log.time(\"concatStructures\");\r\n    const s = new Structure(name, '');\r\n    const sb = new StructureBuilder(s);\r\n    const atomStore = s.atomStore;\r\n    const atomMap = s.atomMap;\r\n    atomStore.addField('formalCharge', 1, 'int8');\r\n    atomStore.addField('partialCharge', 1, 'float32');\r\n    const atomIndexDict = {};\r\n    let idx = 0;\r\n    let atomCount = 0;\r\n    let modelCount = 0;\r\n    structures.forEach(structure => {\r\n        structure.eachAtom(a => {\r\n            atomStore.growIfFull();\r\n            atomStore.atomTypeId[idx] = atomMap.add(a.atomname, a.element);\r\n            atomStore.x[idx] = a.x;\r\n            atomStore.y[idx] = a.y;\r\n            atomStore.z[idx] = a.z;\r\n            atomStore.serial[idx] = a.serial;\r\n            atomStore.formalCharge[idx] = a.formalCharge;\r\n            atomStore.partialCharge[idx] = a.partialCharge;\r\n            atomStore.altloc[idx] = a.altloc;\r\n            atomStore.occupancy[idx] = a.occupancy;\r\n            atomStore.bfactor[idx] = a.bfactor;\r\n            sb.addAtom(a.modelIndex + modelCount, a.chainname, a.chainid, a.resname, a.resno, a.hetero === 1, a.sstruc, a.inscode);\r\n            atomIndexDict[a.index + atomCount] = idx;\r\n            idx += 1;\r\n        });\r\n        atomCount += structure.atomStore.count;\r\n        modelCount += structure.modelStore.count;\r\n    });\r\n    const bondStore = s.bondStore;\r\n    const a1 = s.getAtomProxy();\r\n    const a2 = s.getAtomProxy();\r\n    atomCount = 0;\r\n    structures.forEach(structure => {\r\n        structure.eachBond(b => {\r\n            a1.index = atomIndexDict[b.atomIndex1 + atomCount];\r\n            a2.index = atomIndexDict[b.atomIndex2 + atomCount];\r\n            bondStore.addBond(a1, a2, b.bondOrder);\r\n        });\r\n        atomCount += structure.atomStore.count;\r\n    });\r\n    sb.finalize();\r\n    calculateBondsBetween(s, true); // calculate backbone bonds\r\n    calculateBondsWithin(s, true); // calculate rung bonds\r\n    s.finalizeAtoms();\r\n    s.finalizeBonds();\r\n    assignResidueTypeBonds(s);\r\n    if (Debug)\r\n        Log.timeEnd(\"concatStructures\");\r\n    return s;\r\n}\r\n//# sourceMappingURL=structure-utils.js.map","/**\r\n * @file Atom Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { guessElement } from '../structure/structure-utils';\r\nimport { AtomicNumbers, DefaultAtomicNumber, VdwRadii, DefaultVdwRadius, CovalentRadii, DefaultCovalentRadius, Valences, DefaultValence, OuterShellElectronCounts, DefaultOuterShellElectronCount } from '../structure/structure-constants';\r\n// Li, Na, K, Rb, Cs Fr\r\nconst AlkaliMetals = [3, 11, 19, 37, 55, 87];\r\n// Be, Mg, Ca, Sr, Ba, Ra\r\nconst AlkalineEarthMetals = [4, 12, 20, 38, 56, 88];\r\n// C, P, S, Se\r\nconst PolyatomicNonmetals = [6, 15, 16, 34,];\r\n// H, N, O, F, Cl, Br, I\r\nconst DiatomicNonmetals = [1, 7, 8, 9, 17, 35, 53];\r\n// He, Ne, Ar, Kr, Xe, Rn\r\nconst NobleGases = [2, 10, 18, 36, 54, 86];\r\n// Zn, Ga, Cd, In, Sn, Hg, Ti, Pb, Bi, Po, Cn\r\nconst PostTransitionMetals = [13, 30, 31, 48, 49, 50, 80, 81, 82, 83, 84, 85, 112];\r\n// B, Si, Ge, As, Sb, Te, At\r\nconst Metalloids = [5, 14, 32, 33, 51, 52, 85];\r\n// F, Cl, Br, I, At\r\nconst Halogens = [9, 17, 35, 53, 85];\r\n/**\r\n * Atom type\r\n */\r\nclass AtomType {\r\n    /**\r\n     * @param {Structure} structure - the structure object\r\n     * @param {String} atomname - the name of the atom\r\n     * @param {String} element - the chemical element\r\n     */\r\n    constructor(structure, atomname, element) {\r\n        this.structure = structure;\r\n        this.atomname = atomname;\r\n        element = element || guessElement(atomname);\r\n        this.element = element;\r\n        this.number = AtomicNumbers[element] || DefaultAtomicNumber;\r\n        this.vdw = VdwRadii[this.number] || DefaultVdwRadius;\r\n        this.covalent = CovalentRadii[this.number] || DefaultCovalentRadius;\r\n    }\r\n    getDefaultValence() {\r\n        const vl = Valences[this.number];\r\n        return vl ? vl[0] : DefaultValence;\r\n    }\r\n    getValenceList() {\r\n        return Valences[this.number] || [];\r\n    }\r\n    getOuterShellElectronCount() {\r\n        return OuterShellElectronCounts[this.number] || DefaultOuterShellElectronCount;\r\n    }\r\n    isMetal() {\r\n        return (this.isAlkaliMetal() ||\r\n            this.isAlkalineEarthMetal() ||\r\n            this.isLanthanide() ||\r\n            this.isActinide() ||\r\n            this.isTransitionMetal() ||\r\n            this.isPostTransitionMetal());\r\n    }\r\n    isNonmetal() {\r\n        return (this.isDiatomicNonmetal() ||\r\n            this.isPolyatomicNonmetal() ||\r\n            this.isNobleGas());\r\n    }\r\n    isMetalloid() {\r\n        return Metalloids.includes(this.number);\r\n    }\r\n    isHalogen() {\r\n        return Halogens.includes(this.number);\r\n    }\r\n    isDiatomicNonmetal() {\r\n        return DiatomicNonmetals.includes(this.number);\r\n    }\r\n    isPolyatomicNonmetal() {\r\n        return PolyatomicNonmetals.includes(this.number);\r\n    }\r\n    isAlkaliMetal() {\r\n        return AlkaliMetals.includes(this.number);\r\n    }\r\n    isAlkalineEarthMetal() {\r\n        return AlkalineEarthMetals.includes(this.number);\r\n    }\r\n    isNobleGas() {\r\n        return NobleGases.includes(this.number);\r\n    }\r\n    isTransitionMetal() {\r\n        const no = this.number;\r\n        return ((no >= 21 && no <= 29) ||\r\n            (no >= 39 && no <= 47) ||\r\n            (no >= 72 && no <= 79) ||\r\n            (no >= 104 && no <= 108));\r\n    }\r\n    isPostTransitionMetal() {\r\n        return PostTransitionMetals.includes(this.number);\r\n    }\r\n    isLanthanide() {\r\n        return this.number >= 57 && this.number <= 71;\r\n    }\r\n    isActinide() {\r\n        return this.number >= 89 && this.number <= 103;\r\n    }\r\n}\r\nexport default AtomType;\r\n//# sourceMappingURL=atom-type.js.map","/**\r\n * @file Atom Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport AtomType from './atom-type';\r\nimport { guessElement } from '../structure/structure-utils';\r\nfunction getHash(atomname, element) {\r\n    return atomname + '|' + element;\r\n}\r\nclass AtomMap {\r\n    constructor(structure) {\r\n        this.structure = structure;\r\n        this.dict = {};\r\n        this.list = [];\r\n        this.structure = structure;\r\n    }\r\n    add(atomname, element) {\r\n        atomname = atomname.toUpperCase();\r\n        if (!element) {\r\n            element = guessElement(atomname);\r\n        }\r\n        else {\r\n            element = element.toUpperCase();\r\n        }\r\n        const hash = getHash(atomname, element);\r\n        let id = this.dict[hash];\r\n        if (id === undefined) {\r\n            const atomType = new AtomType(this.structure, atomname, element);\r\n            id = this.list.length;\r\n            this.dict[hash] = id;\r\n            this.list.push(atomType);\r\n        }\r\n        return id;\r\n    }\r\n    get(id) {\r\n        return this.list[id];\r\n    }\r\n}\r\nexport default AtomMap;\r\n//# sourceMappingURL=atom-map.js.map","/**\r\n * @file Residue Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport PrincipalAxes from '../math/principal-axes';\r\nimport { Matrix } from '../math/matrix-utils';\r\nimport { calculateResidueBonds } from '../structure/structure-utils';\r\nimport { ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, UnknownType, ProteinBackboneType, RnaBackboneType, DnaBackboneType, UnknownBackboneType, CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType, ChemCompProtein, ChemCompRna, ChemCompDna, ChemCompSaccharide, AA3, PurinBases, RnaBases, DnaBases, Bases, IonNames, WaterNames, SaccharideNames, ProteinBackboneAtoms, NucleicBackboneAtoms, ResidueTypeAtoms } from '../structure/structure-constants';\r\n/**\r\n * Residue type\r\n */\r\nexport default class ResidueType {\r\n    /**\r\n     * @param {Structure} structure - the structure object\r\n     * @param {String} resname - name of the residue\r\n     * @param {Array} atomTypeIdList - list of IDs of {@link AtomType}s corresponding\r\n     *                                 to the atoms of the residue\r\n     * @param {Boolean} hetero - hetero flag\r\n     * @param {String} chemCompType - chemical component type\r\n     * @param {Object} [bonds] - TODO\r\n     */\r\n    constructor(structure, resname, atomTypeIdList, hetero, chemCompType, bonds) {\r\n        this.structure = structure;\r\n        // Sparse array containing the reference atom index for each bond.\r\n        this.bondReferenceAtomIndices = [];\r\n        this.resname = resname;\r\n        this.atomTypeIdList = atomTypeIdList;\r\n        this.hetero = hetero ? 1 : 0;\r\n        this.chemCompType = chemCompType;\r\n        this.bonds = bonds;\r\n        this.atomCount = atomTypeIdList.length;\r\n        this.moleculeType = this.getMoleculeType();\r\n        this.backboneType = this.getBackboneType(0);\r\n        this.backboneEndType = this.getBackboneType(-1);\r\n        this.backboneStartType = this.getBackboneType(1);\r\n        this.backboneIndexList = this.getBackboneIndexList();\r\n        const atomnames = ResidueTypeAtoms[this.backboneType];\r\n        const atomnamesStart = ResidueTypeAtoms[this.backboneStartType];\r\n        const atomnamesEnd = ResidueTypeAtoms[this.backboneEndType];\r\n        const traceIndex = this.getAtomIndexByName(atomnames.trace);\r\n        this.traceAtomIndex = defaults(traceIndex, -1);\r\n        const dir1Index = this.getAtomIndexByName(atomnames.direction1);\r\n        this.direction1AtomIndex = defaults(dir1Index, -1);\r\n        const dir2Index = this.getAtomIndexByName(atomnames.direction2);\r\n        this.direction2AtomIndex = defaults(dir2Index, -1);\r\n        const bbStartIndex = this.getAtomIndexByName(atomnamesStart.backboneStart);\r\n        this.backboneStartAtomIndex = defaults(bbStartIndex, -1);\r\n        const bbEndIndex = this.getAtomIndexByName(atomnamesEnd.backboneEnd);\r\n        this.backboneEndAtomIndex = defaults(bbEndIndex, -1);\r\n        let rungEndIndex;\r\n        if (PurinBases.includes(resname)) {\r\n            rungEndIndex = this.getAtomIndexByName('N1');\r\n        }\r\n        else {\r\n            rungEndIndex = this.getAtomIndexByName('N3');\r\n        }\r\n        this.rungEndAtomIndex = defaults(rungEndIndex, -1);\r\n    }\r\n    getBackboneIndexList() {\r\n        const backboneIndexList = [];\r\n        let atomnameList;\r\n        switch (this.moleculeType) {\r\n            case ProteinType:\r\n                atomnameList = ProteinBackboneAtoms;\r\n                break;\r\n            case RnaType:\r\n            case DnaType:\r\n                atomnameList = NucleicBackboneAtoms;\r\n                break;\r\n            default:\r\n                return backboneIndexList;\r\n        }\r\n        const atomMap = this.structure.atomMap;\r\n        const atomTypeIdList = this.atomTypeIdList;\r\n        for (let i = 0, il = this.atomCount; i < il; ++i) {\r\n            const atomType = atomMap.get(atomTypeIdList[i]);\r\n            if (atomnameList.includes(atomType.atomname)) {\r\n                backboneIndexList.push(i);\r\n            }\r\n        }\r\n        return backboneIndexList;\r\n    }\r\n    getMoleculeType() {\r\n        if (this.isProtein()) {\r\n            return ProteinType;\r\n        }\r\n        else if (this.isRna()) {\r\n            return RnaType;\r\n        }\r\n        else if (this.isDna()) {\r\n            return DnaType;\r\n        }\r\n        else if (this.isWater()) {\r\n            return WaterType;\r\n        }\r\n        else if (this.isIon()) {\r\n            return IonType;\r\n        }\r\n        else if (this.isSaccharide()) {\r\n            return SaccharideType;\r\n        }\r\n        else {\r\n            return UnknownType;\r\n        }\r\n    }\r\n    getBackboneType(position) {\r\n        if (this.hasProteinBackbone(position)) {\r\n            return ProteinBackboneType;\r\n        }\r\n        else if (this.hasRnaBackbone(position)) {\r\n            return RnaBackboneType;\r\n        }\r\n        else if (this.hasDnaBackbone(position)) {\r\n            return DnaBackboneType;\r\n        }\r\n        else if (this.hasCgProteinBackbone(position)) {\r\n            return CgProteinBackboneType;\r\n        }\r\n        else if (this.hasCgRnaBackbone(position)) {\r\n            return CgRnaBackboneType;\r\n        }\r\n        else if (this.hasCgDnaBackbone(position)) {\r\n            return CgDnaBackboneType;\r\n        }\r\n        else {\r\n            return UnknownBackboneType;\r\n        }\r\n    }\r\n    isProtein() {\r\n        if (this.chemCompType) {\r\n            return ChemCompProtein.includes(this.chemCompType);\r\n        }\r\n        else {\r\n            return (this.hasAtomWithName('CA', 'C', 'N') ||\r\n                AA3.includes(this.resname));\r\n        }\r\n    }\r\n    isCg() {\r\n        const backboneType = this.backboneType;\r\n        return (backboneType === CgProteinBackboneType ||\r\n            backboneType === CgRnaBackboneType ||\r\n            backboneType === CgDnaBackboneType);\r\n    }\r\n    isNucleic() {\r\n        return this.isRna() || this.isDna();\r\n    }\r\n    isRna() {\r\n        if (this.chemCompType) {\r\n            return ChemCompRna.includes(this.chemCompType);\r\n        }\r\n        else if (this.hetero === 1) {\r\n            return false;\r\n        }\r\n        else {\r\n            return (this.hasAtomWithName(['P', \"O3'\", 'O3*'], [\"C4'\", 'C4*'], [\"O2'\", 'O2*', \"F2'\", 'F2*']) ||\r\n                (RnaBases.includes(this.resname) &&\r\n                    (this.hasAtomWithName([\"O2'\", 'O2*', \"F2'\", 'F2*']))));\r\n        }\r\n    }\r\n    isDna() {\r\n        if (this.chemCompType) {\r\n            return ChemCompDna.includes(this.chemCompType);\r\n        }\r\n        else if (this.hetero === 1) {\r\n            return false;\r\n        }\r\n        else {\r\n            return ((this.hasAtomWithName(['P', \"O3'\", 'O3*'], [\"C3'\", 'C3*']) &&\r\n                !this.hasAtomWithName([\"O2'\", 'O2*', \"F2'\", 'F2*'])) ||\r\n                DnaBases.includes(this.resname));\r\n        }\r\n    }\r\n    isHetero() {\r\n        return this.hetero === 1;\r\n    }\r\n    isIon() {\r\n        return IonNames.includes(this.resname);\r\n    }\r\n    isWater() {\r\n        return WaterNames.includes(this.resname);\r\n    }\r\n    isSaccharide() {\r\n        if (this.chemCompType) {\r\n            return ChemCompSaccharide.includes(this.chemCompType);\r\n        }\r\n        else {\r\n            return SaccharideNames.includes(this.resname);\r\n        }\r\n    }\r\n    isStandardAminoacid() {\r\n        return AA3.includes(this.resname);\r\n    }\r\n    isStandardBase() {\r\n        return Bases.includes(this.resname);\r\n    }\r\n    hasBackboneAtoms(position, type) {\r\n        const atomnames = ResidueTypeAtoms[type];\r\n        if (position === -1) {\r\n            return this.hasAtomWithName(atomnames.trace, atomnames.backboneEnd, atomnames.direction1, atomnames.direction2);\r\n        }\r\n        else if (position === 0) {\r\n            return this.hasAtomWithName(atomnames.trace, atomnames.direction1, atomnames.direction2);\r\n        }\r\n        else if (position === 1) {\r\n            return this.hasAtomWithName(atomnames.trace, atomnames.backboneStart, atomnames.direction1, atomnames.direction2);\r\n        }\r\n        else {\r\n            return this.hasAtomWithName(atomnames.trace, atomnames.backboneStart, atomnames.backboneEnd, atomnames.direction1, atomnames.direction2);\r\n        }\r\n    }\r\n    hasProteinBackbone(position) {\r\n        return (this.isProtein() &&\r\n            this.hasBackboneAtoms(position, ProteinBackboneType));\r\n    }\r\n    hasRnaBackbone(position) {\r\n        return (this.isRna() &&\r\n            this.hasBackboneAtoms(position, RnaBackboneType));\r\n    }\r\n    hasDnaBackbone(position) {\r\n        return (this.isDna() &&\r\n            this.hasBackboneAtoms(position, DnaBackboneType));\r\n    }\r\n    hasCgProteinBackbone(position) {\r\n        return (this.atomCount < 7 &&\r\n            this.isProtein() &&\r\n            this.hasBackboneAtoms(position, CgProteinBackboneType));\r\n    }\r\n    hasCgRnaBackbone(position) {\r\n        return (this.atomCount < 11 &&\r\n            this.isRna() &&\r\n            this.hasBackboneAtoms(position, CgRnaBackboneType));\r\n    }\r\n    hasCgDnaBackbone(position) {\r\n        return (this.atomCount < 11 &&\r\n            this.isDna() &&\r\n            this.hasBackboneAtoms(position, CgDnaBackboneType));\r\n    }\r\n    hasBackbone(position) {\r\n        return (this.hasProteinBackbone(position) ||\r\n            this.hasRnaBackbone(position) ||\r\n            this.hasDnaBackbone(position) ||\r\n            this.hasCgProteinBackbone(position) ||\r\n            this.hasCgRnaBackbone(position) ||\r\n            this.hasCgDnaBackbone(position));\r\n    }\r\n    getAtomIndexByName(atomname) {\r\n        const n = this.atomCount;\r\n        const atomMap = this.structure.atomMap;\r\n        const atomTypeIdList = this.atomTypeIdList;\r\n        if (Array.isArray(atomname)) {\r\n            for (let i = 0; i < n; ++i) {\r\n                const index = atomTypeIdList[i];\r\n                if (atomname.includes(atomMap.get(index).atomname)) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < n; ++i) {\r\n                const index = atomTypeIdList[i];\r\n                if (atomname === atomMap.get(index).atomname) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    hasAtomWithName(...atomnames) {\r\n        const n = atomnames.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            if (atomnames[i] === undefined)\r\n                continue;\r\n            if (this.getAtomIndexByName(atomnames[i]) === undefined) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getBonds(r) {\r\n        if (this.bonds === undefined) {\r\n            this.bonds = calculateResidueBonds(r); // TODO\r\n        }\r\n        return this.bonds;\r\n    }\r\n    getRings() {\r\n        if (this.rings === undefined) {\r\n            this.calculateRings();\r\n        }\r\n        return this.rings;\r\n    }\r\n    getBondGraph() {\r\n        if (this.bondGraph === undefined) {\r\n            this.calculateBondGraph();\r\n        }\r\n        return this.bondGraph;\r\n    }\r\n    getAromatic(a) {\r\n        if (this.aromaticAtoms === undefined) {\r\n            this.calculateAromatic(this.structure.getResidueProxy((a).residueIndex)); // TODO\r\n        }\r\n        return this.aromaticAtoms;\r\n    }\r\n    getAromaticRings(r) {\r\n        if (this.aromaticRings === undefined) {\r\n            this.calculateAromatic(r); // TODO\r\n        }\r\n        return this.aromaticRings;\r\n    }\r\n    /**\r\n     * @return {Object} bondGraph - represents the bonding in this\r\n     *   residue: { ai1: [ ai2, ai3, ...], ...}\r\n     */\r\n    calculateBondGraph() {\r\n        const bondGraph = this.bondGraph = {};\r\n        const bonds = this.getBonds();\r\n        const nb = bonds.atomIndices1.length;\r\n        const atomIndices1 = bonds.atomIndices1;\r\n        const atomIndices2 = bonds.atomIndices2;\r\n        for (let i = 0; i < nb; ++i) {\r\n            const ai1 = atomIndices1[i];\r\n            const ai2 = atomIndices2[i];\r\n            const a1 = bondGraph[ai1] = bondGraph[ai1] || [];\r\n            a1.push(ai2);\r\n            const a2 = bondGraph[ai2] = bondGraph[ai2] || [];\r\n            a2.push(ai1);\r\n        }\r\n    }\r\n    /**\r\n     * Find all rings up to 2 * RingFinderMaxDepth\r\n     */\r\n    calculateRings() {\r\n        const bondGraph = this.getBondGraph(); // TODO\r\n        const state = RingFinderState(bondGraph, this.atomCount);\r\n        for (let i = 0; i < state.count; i++) {\r\n            if (state.visited[i] >= 0)\r\n                continue;\r\n            findRings(state, i);\r\n        }\r\n        this.rings = { atomRings: state.atomRings, rings: state.rings };\r\n    }\r\n    isAromatic(atom) {\r\n        this.aromaticAtoms = this.getAromatic(atom); // TODO\r\n        return this.aromaticAtoms[atom.index - atom.residueAtomOffset] === 1;\r\n    }\r\n    calculateAromatic(r) {\r\n        const aromaticAtoms = this.aromaticAtoms = new Uint8Array(this.atomCount);\r\n        const rings = this.getRings().rings;\r\n        const aromaticRingFlags = rings.map(ring => {\r\n            return isRingAromatic(ring.map(idx => {\r\n                return this.structure.getAtomProxy(idx + r.atomOffset);\r\n            }));\r\n        });\r\n        const aromaticRings = this.aromaticRings = [];\r\n        rings.forEach((ring, i) => {\r\n            if (aromaticRingFlags[i]) {\r\n                aromaticRings.push(ring);\r\n                ring.forEach(idx => aromaticAtoms[idx] = 1);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * For bonds with order > 1, pick a reference atom\r\n     * @return {undefined}\r\n     */\r\n    assignBondReferenceAtomIndices() {\r\n        const bondGraph = this.getBondGraph(); // TODO\r\n        const rings = this.getRings(); // TODO\r\n        const atomRings = rings.atomRings;\r\n        const ringData = rings.rings;\r\n        const bonds = this.bonds; // TODO\r\n        const atomIndices1 = bonds.atomIndices1;\r\n        const atomIndices2 = bonds.atomIndices2;\r\n        const bondOrders = bonds.bondOrders;\r\n        const bondReferenceAtomIndices = this.bondReferenceAtomIndices;\r\n        const nb = bonds.atomIndices1.length;\r\n        bondReferenceAtomIndices.length = 0; // reset array\r\n        for (let i = 0; i < nb; ++i) {\r\n            // Not required for single bonds\r\n            if (bondOrders[i] <= 1)\r\n                continue;\r\n            let refRing;\r\n            const ai1 = atomIndices1[i];\r\n            const ai2 = atomIndices2[i];\r\n            const rings1 = atomRings[ai1];\r\n            const rings2 = atomRings[ai2];\r\n            // Are both atoms in a ring?\r\n            if (rings1 && rings2) {\r\n                // Are they in the same ring? (If not, ignore ring info)\r\n                for (let ri1 = 0; ri1 < rings1.length; ri1++) {\r\n                    if (rings2.indexOf(rings1[ri1]) !== -1) {\r\n                        refRing = ringData[rings1[ri1]];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // Find the first neighbour.\r\n            if (bondGraph[ai1].length > 1) {\r\n                for (let j = 0; j < bondGraph[ai1].length; ++j) {\r\n                    const ai3 = bondGraph[ai1][j];\r\n                    if (ai3 !== ai2) {\r\n                        if (refRing === undefined || refRing.indexOf(ai3) !== -1) {\r\n                            bondReferenceAtomIndices[i] = ai3;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (bondGraph[ai2].length > 1) {\r\n                for (let j = 0; j < bondGraph[ai2].length; ++j) {\r\n                    const ai3 = bondGraph[ai2][j];\r\n                    if (ai3 !== ai1) {\r\n                        if (refRing === undefined || refRing.indexOf(ai3) !== -1) {\r\n                            bondReferenceAtomIndices[i] = ai3;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } // No reference atom could be found (e.g. diatomic molecule/fragment)\r\n        }\r\n    }\r\n    getBondIndex(atomIndex1, atomIndex2) {\r\n        const bonds = this.bonds; // TODO\r\n        const atomIndices1 = bonds.atomIndices1;\r\n        const atomIndices2 = bonds.atomIndices2;\r\n        let idx1 = atomIndices1.indexOf(atomIndex1);\r\n        let idx2 = atomIndices2.indexOf(atomIndex2);\r\n        const _idx2 = idx2;\r\n        while (idx1 !== -1) {\r\n            while (idx2 !== -1) {\r\n                if (idx1 === idx2)\r\n                    return idx1;\r\n                idx2 = atomIndices2.indexOf(atomIndex2, idx2 + 1);\r\n            }\r\n            idx1 = atomIndices1.indexOf(atomIndex1, idx1 + 1);\r\n            idx2 = _idx2;\r\n        }\r\n        // returns undefined when no bond is found\r\n    }\r\n    getBondReferenceAtomIndex(atomIndex1, atomIndex2) {\r\n        const bondIndex = this.getBondIndex(atomIndex1, atomIndex2);\r\n        if (bondIndex === undefined)\r\n            return undefined;\r\n        if (this.bondReferenceAtomIndices.length === 0) {\r\n            this.assignBondReferenceAtomIndices();\r\n        }\r\n        return this.bondReferenceAtomIndices[bondIndex];\r\n    }\r\n}\r\n//\r\nconst AromaticRingElements = [\r\n    5 /* B */, 6 /* C */, 7 /* N */, 8 /* O */,\r\n    14 /* SI */, 15 /* P */, 16 /* S */,\r\n    32 /* GE */, 33 /* AS */,\r\n    50 /* SN */, 51 /* SB */,\r\n    83 /* BI */\r\n];\r\nconst AromaticRingPlanarityThreshold = 0.05;\r\nfunction isRingAromatic(ring) {\r\n    if (ring.some(a => !AromaticRingElements.includes(a.number)))\r\n        return false;\r\n    let i = 0;\r\n    const coords = new Matrix(3, ring.length);\r\n    const cd = coords.data;\r\n    ring.forEach(a => {\r\n        cd[i + 0] = a.x;\r\n        cd[i + 1] = a.y;\r\n        cd[i + 2] = a.z;\r\n        i += 3;\r\n    });\r\n    const pa = new PrincipalAxes(coords);\r\n    return pa.vecC.length() < AromaticRingPlanarityThreshold;\r\n}\r\n//\r\n/**\r\n * Ring finding code below adapted from MolQL\r\n * Copyright (c) 2017 MolQL contributors, licensed under MIT\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nfunction addRing(state, a, b) {\r\n    // only \"monotonous\" rings\r\n    if (b < a)\r\n        return;\r\n    const { pred, color, left, right } = state;\r\n    const nc = ++state.currentColor;\r\n    let current = a;\r\n    for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n        color[current] = nc;\r\n        current = pred[current];\r\n        if (current < 0)\r\n            break;\r\n    }\r\n    let leftOffset = 0;\r\n    let rightOffset = 0;\r\n    let found = false;\r\n    let target = 0;\r\n    current = b;\r\n    for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n        if (color[current] === nc) {\r\n            target = current;\r\n            found = true;\r\n            break;\r\n        }\r\n        right[rightOffset++] = current;\r\n        current = pred[current];\r\n        if (current < 0)\r\n            break;\r\n    }\r\n    if (!found)\r\n        return;\r\n    current = a;\r\n    for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n        left[leftOffset++] = current;\r\n        if (target === current)\r\n            break;\r\n        current = pred[current];\r\n        if (current < 0)\r\n            break;\r\n    }\r\n    const rn = leftOffset + rightOffset;\r\n    const ring = new Array(rn);\r\n    let ringOffset = 0;\r\n    for (let t = 0; t < leftOffset; t++) {\r\n        ring[ringOffset++] = left[t];\r\n    }\r\n    for (let t = rightOffset - 1; t >= 0; t--) {\r\n        ring[ringOffset++] = right[t];\r\n    }\r\n    const ri = state.rings.length;\r\n    // set atomRing indices:\r\n    for (let i = 0; i < rn; ++i) {\r\n        const ai = ring[i];\r\n        if (state.atomRings[ai]) {\r\n            state.atomRings[ai].push(ri);\r\n        }\r\n        else {\r\n            state.atomRings[ai] = [ri];\r\n        }\r\n    }\r\n    state.rings.push(ring);\r\n}\r\nfunction findRings(state, from) {\r\n    const { bonds, visited, queue, pred } = state;\r\n    visited[from] = 1;\r\n    queue[0] = from;\r\n    let head = 0;\r\n    let size = 1;\r\n    while (head < size) {\r\n        const top = queue[head++];\r\n        const start = 0;\r\n        if (bonds[top] === undefined) {\r\n            continue;\r\n        }\r\n        const end = bonds[top].length;\r\n        for (let i = start; i < end; i++) {\r\n            const other = bonds[top][i];\r\n            if (visited[other] > 0) {\r\n                if (pred[other] !== top && pred[top] !== other) {\r\n                    addRing(state, top, other);\r\n                }\r\n                continue;\r\n            }\r\n            visited[other] = 1;\r\n            queue[size++] = other;\r\n            pred[other] = top;\r\n        }\r\n    }\r\n}\r\nconst RingFinderMaxDepth = 4;\r\nfunction RingFinderState(bonds, capacity) {\r\n    const state = {\r\n        count: capacity,\r\n        visited: new Int32Array(capacity),\r\n        queue: new Int32Array(capacity),\r\n        pred: new Int32Array(capacity),\r\n        left: new Int32Array(RingFinderMaxDepth),\r\n        right: new Int32Array(RingFinderMaxDepth),\r\n        color: new Int32Array(capacity),\r\n        currentColor: 0,\r\n        rings: [],\r\n        atomRings: [],\r\n        bonds\r\n    };\r\n    for (let i = 0; i < capacity; i++) {\r\n        state.visited[i] = -1;\r\n        state.pred[i] = -1;\r\n    }\r\n    return state;\r\n}\r\n//# sourceMappingURL=residue-type.js.map","/**\r\n * @file Residue Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport ResidueType from './residue-type';\r\nfunction getHash(resname, atomTypeIdList, hetero, chemCompType = '') {\r\n    return (resname + '|' +\r\n        atomTypeIdList.join(',') + '|' +\r\n        (hetero ? 1 : 0) + '|' +\r\n        chemCompType);\r\n}\r\nclass ResidueMap {\r\n    constructor(structure) {\r\n        this.structure = structure;\r\n        this.dict = {};\r\n        this.list = [];\r\n    }\r\n    add(resname, atomTypeIdList, hetero, chemCompType = '', bonds) {\r\n        resname = resname.toUpperCase();\r\n        const hash = getHash(resname, atomTypeIdList, hetero, chemCompType);\r\n        let id = this.dict[hash];\r\n        if (id === undefined) {\r\n            const residueType = new ResidueType(this.structure, resname, atomTypeIdList, hetero, chemCompType, bonds);\r\n            id = this.list.length;\r\n            this.dict[hash] = id;\r\n            this.list.push(residueType);\r\n        }\r\n        return id;\r\n    }\r\n    get(id) {\r\n        return this.list[id];\r\n    }\r\n}\r\nexport default ResidueMap;\r\n//# sourceMappingURL=residue-map.js.map","/**\r\n * @file Bond Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\n/**\r\n * Bond proxy\r\n */\r\nclass BondProxy {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} index - the index\r\n     */\r\n    constructor(structure, index = 0) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.bondStore = structure.bondStore;\r\n        this._v12 = new Vector3();\r\n        this._v13 = new Vector3();\r\n        this._ap1 = this.structure.getAtomProxy();\r\n        this._ap2 = this.structure.getAtomProxy();\r\n        this._ap3 = this.structure.getAtomProxy();\r\n    }\r\n    /**\r\n     * @type {AtomProxy}\r\n     */\r\n    get atom1() {\r\n        return this.structure.getAtomProxy(this.atomIndex1);\r\n    }\r\n    /**\r\n     * @type {AtomProxy}\r\n     */\r\n    get atom2() {\r\n        return this.structure.getAtomProxy(this.atomIndex2);\r\n    }\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    get atomIndex1() {\r\n        return this.bondStore.atomIndex1[this.index];\r\n    }\r\n    set atomIndex1(value) {\r\n        this.bondStore.atomIndex1[this.index] = value;\r\n    }\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    get atomIndex2() {\r\n        return this.bondStore.atomIndex2[this.index];\r\n    }\r\n    set atomIndex2(value) {\r\n        this.bondStore.atomIndex2[this.index] = value;\r\n    }\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    get bondOrder() {\r\n        return this.bondStore.bondOrder[this.index];\r\n    }\r\n    set bondOrder(value) {\r\n        this.bondStore.bondOrder[this.index] = value;\r\n    }\r\n    getOtherAtomIndex(atomIndex) {\r\n        return atomIndex === this.atomIndex1 ? this.atomIndex2 : this.atomIndex1;\r\n    }\r\n    getOtherAtom(atom) {\r\n        return this.structure.getAtomProxy(this.getOtherAtomIndex(atom.index));\r\n    }\r\n    /**\r\n     * Get reference atom index for the bond\r\n     * @return {Integer|undefined} atom index, or `undefined` if unavailable\r\n     */\r\n    getReferenceAtomIndex() {\r\n        const ap1 = this._ap1;\r\n        const ap2 = this._ap2;\r\n        ap1.index = this.atomIndex1;\r\n        ap2.index = this.atomIndex2;\r\n        if (ap1.residueIndex !== ap2.residueIndex) {\r\n            return undefined; // Bond between residues, for now ignore (could detect)\r\n        }\r\n        const typeAtomIndex1 = ap1.index - ap1.residueAtomOffset;\r\n        const typeAtomIndex2 = ap2.index - ap2.residueAtomOffset;\r\n        const residueType = ap1.residueType;\r\n        const ix = residueType.getBondReferenceAtomIndex(typeAtomIndex1, typeAtomIndex2);\r\n        if (ix !== undefined) {\r\n            return ix + ap1.residueAtomOffset;\r\n        }\r\n        else {\r\n            console.warn('No reference atom found', ap1.index, ap2.index);\r\n        }\r\n    }\r\n    /**\r\n     * calculate shift direction for displaying double/triple bonds\r\n     * @param  {Vector3} [v] pre-allocated output vector\r\n     * @return {Vector3} the shift direction vector\r\n     */\r\n    calculateShiftDir(v = new Vector3()) {\r\n        const ap1 = this._ap1;\r\n        const ap2 = this._ap2;\r\n        const ap3 = this._ap3;\r\n        const v12 = this._v12;\r\n        const v13 = this._v13;\r\n        ap1.index = this.atomIndex1;\r\n        ap2.index = this.atomIndex2;\r\n        const ai3 = this.getReferenceAtomIndex();\r\n        v12.subVectors(ap1, ap2).normalize(); // TODO\r\n        if (ai3 !== undefined) {\r\n            ap3.index = ai3;\r\n            v13.subVectors(ap1, ap3); // TODO\r\n        }\r\n        else {\r\n            v13.copy(ap1); // no reference point, use origin  // TODO\r\n        }\r\n        v13.normalize();\r\n        // make sure v13 and v12 are not colinear\r\n        let dp = v12.dot(v13);\r\n        if (1 - Math.abs(dp) < 1e-5) {\r\n            v13.set(1, 0, 0);\r\n            dp = v12.dot(v13);\r\n            if (1 - Math.abs(dp) < 1e-5) {\r\n                v13.set(0, 1, 0);\r\n                dp = v12.dot(v13);\r\n            }\r\n        }\r\n        return v.copy(v13.sub(v12.multiplyScalar(dp))).normalize();\r\n    }\r\n    qualifiedName() {\r\n        return this.atomIndex1 + '=' + this.atomIndex2;\r\n    }\r\n    /**\r\n     * Clone object\r\n     * @return {BondProxy} cloned bond\r\n     */\r\n    clone() {\r\n        return new BondProxy(this.structure, this.index);\r\n    }\r\n    toObject() {\r\n        return {\r\n            atomIndex1: this.atomIndex1,\r\n            atomIndex2: this.atomIndex2,\r\n            bondOrder: this.bondOrder\r\n        };\r\n    }\r\n}\r\nexport default BondProxy;\r\n//# sourceMappingURL=bond-proxy.js.map","/**\r\n * @file Residue Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { SecStrucHelix, SecStrucSheet, SecStrucTurn, ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType, AA1 } from '../structure/structure-constants.js';\r\n/**\r\n * Residue proxy\r\n */\r\nclass ResidueProxy {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} index - the index\r\n     */\r\n    constructor(structure, index = 0) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.chainStore = structure.chainStore;\r\n        this.residueStore = structure.residueStore;\r\n        this.atomStore = structure.atomStore;\r\n        this.residueMap = structure.residueMap;\r\n        this.atomMap = structure.atomMap;\r\n    }\r\n    /**\r\n     * Entity\r\n     * @type {Entity}\r\n     */\r\n    get entity() {\r\n        return this.structure.entityList[this.entityIndex];\r\n    }\r\n    get entityIndex() {\r\n        return this.chainStore.entityIndex[this.chainIndex];\r\n    }\r\n    /**\r\n     * Chain\r\n     * @type {ChainProxy}\r\n     */\r\n    get chain() {\r\n        return this.structure.getChainProxy(this.chainIndex);\r\n    }\r\n    get chainIndex() {\r\n        return this.residueStore.chainIndex[this.index];\r\n    }\r\n    set chainIndex(value) {\r\n        this.residueStore.chainIndex[this.index] = value;\r\n    }\r\n    get atomOffset() {\r\n        return this.residueStore.atomOffset[this.index];\r\n    }\r\n    set atomOffset(value) {\r\n        this.residueStore.atomOffset[this.index] = value;\r\n    }\r\n    /**\r\n     * Atom count\r\n     * @type {Integer}\r\n     */\r\n    get atomCount() {\r\n        return this.residueStore.atomCount[this.index];\r\n    }\r\n    set atomCount(value) {\r\n        this.residueStore.atomCount[this.index] = value;\r\n    }\r\n    get atomEnd() {\r\n        return this.atomOffset + this.atomCount - 1;\r\n    }\r\n    //\r\n    get modelIndex() {\r\n        return this.chainStore.modelIndex[this.chainIndex];\r\n    }\r\n    /**\r\n     * Chain name\r\n     * @type {String}\r\n     */\r\n    get chainname() {\r\n        return this.chainStore.getChainname(this.chainIndex);\r\n    }\r\n    /**\r\n     * Chain id\r\n     * @type {String}\r\n     */\r\n    get chainid() {\r\n        return this.chainStore.getChainid(this.chainIndex);\r\n    }\r\n    //\r\n    /**\r\n     * Residue number/label\r\n     * @type {Integer}\r\n     */\r\n    get resno() {\r\n        return this.residueStore.resno[this.index];\r\n    }\r\n    set resno(value) {\r\n        this.residueStore.resno[this.index] = value;\r\n    }\r\n    /**\r\n     * Secondary structure code\r\n     * @type {String}\r\n     */\r\n    get sstruc() {\r\n        return this.residueStore.getSstruc(this.index);\r\n    }\r\n    set sstruc(value) {\r\n        this.residueStore.setSstruc(this.index, value);\r\n    }\r\n    /**\r\n     * Insertion code\r\n     * @type {String}\r\n     */\r\n    get inscode() {\r\n        return this.residueStore.getInscode(this.index);\r\n    }\r\n    set inscode(value) {\r\n        this.residueStore.setInscode(this.index, value);\r\n    }\r\n    //\r\n    get residueType() {\r\n        return this.residueMap.get(this.residueStore.residueTypeId[this.index]);\r\n    }\r\n    /**\r\n     * Residue name\r\n     * @type {String}\r\n     */\r\n    get resname() {\r\n        return this.residueType.resname;\r\n    }\r\n    /**\r\n     * Hetero flag\r\n     * @type {Boolean}\r\n     */\r\n    get hetero() {\r\n        return this.residueType.hetero;\r\n    }\r\n    get moleculeType() {\r\n        return this.residueType.moleculeType;\r\n    }\r\n    get backboneType() {\r\n        return this.residueType.backboneType;\r\n    }\r\n    get backboneStartType() {\r\n        return this.residueType.backboneStartType;\r\n    }\r\n    get backboneEndType() {\r\n        return this.residueType.backboneEndType;\r\n    }\r\n    get traceAtomIndex() {\r\n        return this.residueType.traceAtomIndex + this.atomOffset;\r\n    }\r\n    get direction1AtomIndex() {\r\n        return this.residueType.direction1AtomIndex + this.atomOffset;\r\n    }\r\n    get direction2AtomIndex() {\r\n        return this.residueType.direction2AtomIndex + this.atomOffset;\r\n    }\r\n    get backboneStartAtomIndex() {\r\n        return this.residueType.backboneStartAtomIndex + this.atomOffset;\r\n    }\r\n    get backboneEndAtomIndex() {\r\n        return this.residueType.backboneEndAtomIndex + this.atomOffset;\r\n    }\r\n    get rungEndAtomIndex() {\r\n        return this.residueType.rungEndAtomIndex + this.atomOffset;\r\n    }\r\n    //\r\n    get x() {\r\n        let x = 0;\r\n        for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n            x += this.atomStore.x[i];\r\n        }\r\n        return x / this.atomCount;\r\n    }\r\n    get y() {\r\n        let y = 0;\r\n        for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n            y += this.atomStore.y[i];\r\n        }\r\n        return y / this.atomCount;\r\n    }\r\n    get z() {\r\n        let z = 0;\r\n        for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n            z += this.atomStore.z[i];\r\n        }\r\n        return z / this.atomCount;\r\n    }\r\n    //\r\n    /**\r\n     * Atom iterator\r\n     * @param  {function(atom: AtomProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachAtom(callback, selection) {\r\n        const count = this.atomCount;\r\n        const offset = this.atomOffset;\r\n        const ap = this.structure._ap;\r\n        const end = offset + count;\r\n        if (selection && selection.atomOnlyTest) {\r\n            const atomOnlyTest = selection.atomOnlyTest;\r\n            for (let i = offset; i < end; ++i) {\r\n                ap.index = i;\r\n                if (atomOnlyTest(ap))\r\n                    callback(ap);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = offset; i < end; ++i) {\r\n                ap.index = i;\r\n                callback(ap);\r\n            }\r\n        }\r\n    }\r\n    //\r\n    /**\r\n     * Write residue center position to array\r\n     * @param  {Array|TypedArray} [array] - target array\r\n     * @param  {Integer} [offset] - the offset\r\n     * @return {Array|TypedArray} target array\r\n     */\r\n    positionToArray(array = [], offset = 0) {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n        array[offset + 2] = this.z;\r\n        return array;\r\n    }\r\n    //\r\n    /**\r\n     * If residue is from a protein\r\n     * @return {Boolean} flag\r\n     */\r\n    isProtein() {\r\n        return this.residueType.moleculeType === ProteinType;\r\n    }\r\n    /**\r\n     * If residue is nucleic\r\n     * @return {Boolean} flag\r\n     */\r\n    isNucleic() {\r\n        const moleculeType = this.residueType.moleculeType;\r\n        return moleculeType === RnaType || moleculeType === DnaType;\r\n    }\r\n    /**\r\n     * If residue is rna\r\n     * @return {Boolean} flag\r\n     */\r\n    isRna() {\r\n        return this.residueType.moleculeType === RnaType;\r\n    }\r\n    /**\r\n     * If residue is dna\r\n     * @return {Boolean} flag\r\n     */\r\n    isDna() {\r\n        return this.residueType.moleculeType === DnaType;\r\n    }\r\n    /**\r\n     * If residue is coarse-grain\r\n     * @return {Boolean} flag\r\n     */\r\n    isCg() {\r\n        const backboneType = this.residueType.backboneType;\r\n        return (backboneType === CgProteinBackboneType ||\r\n            backboneType === CgRnaBackboneType ||\r\n            backboneType === CgDnaBackboneType);\r\n    }\r\n    /**\r\n     * If residue is from a polymer\r\n     * @return {Boolean} flag\r\n     */\r\n    isPolymer() {\r\n        if (this.structure.entityList.length > 0) {\r\n            return this.entity.isPolymer();\r\n        }\r\n        else {\r\n            const moleculeType = this.residueType.moleculeType;\r\n            return (moleculeType === ProteinType ||\r\n                moleculeType === RnaType ||\r\n                moleculeType === DnaType);\r\n        }\r\n    }\r\n    /**\r\n     * If residue is hetero\r\n     * @return {Boolean} flag\r\n     */\r\n    isHetero() {\r\n        return this.residueType.hetero === 1;\r\n    }\r\n    /**\r\n     * If residue is a water molecule\r\n     * @return {Boolean} flag\r\n     */\r\n    isWater() {\r\n        return this.residueType.moleculeType === WaterType;\r\n    }\r\n    /**\r\n     * If residue is an ion\r\n     * @return {Boolean} flag\r\n     */\r\n    isIon() {\r\n        return this.residueType.moleculeType === IonType;\r\n    }\r\n    /**\r\n     * If residue is a saccharide\r\n     * @return {Boolean} flag\r\n     */\r\n    isSaccharide() {\r\n        return this.residueType.moleculeType === SaccharideType;\r\n    }\r\n    isStandardAminoacid() {\r\n        return this.residueType.isStandardAminoacid();\r\n    }\r\n    isStandardBase() {\r\n        return this.residueType.isStandardBase();\r\n    }\r\n    /**\r\n     * If residue is part of a helix\r\n     * @return {Boolean} flag\r\n     */\r\n    isHelix() {\r\n        return SecStrucHelix.includes(this.sstruc);\r\n    }\r\n    /**\r\n     * If residue is part of a sheet\r\n     * @return {Boolean} flag\r\n     */\r\n    isSheet() {\r\n        return SecStrucSheet.includes(this.sstruc);\r\n    }\r\n    /**\r\n     * If residue is part of a turn\r\n     * @return {Boolean} flag\r\n     */\r\n    isTurn() {\r\n        return SecStrucTurn.includes(this.sstruc) && this.isProtein();\r\n    }\r\n    getAtomType(index) {\r\n        return this.atomMap.get(this.atomStore.atomTypeId[index]);\r\n    }\r\n    getResname1() {\r\n        // FIXME nucleic support\r\n        return AA1[this.resname.toUpperCase()] || 'X';\r\n    }\r\n    getBackboneType(position) {\r\n        switch (position) {\r\n            case -1:\r\n                return this.residueType.backboneStartType;\r\n            case 1:\r\n                return this.residueType.backboneEndType;\r\n            default:\r\n                return this.residueType.backboneType;\r\n        }\r\n    }\r\n    getAtomIndexByName(atomname) {\r\n        let index = this.residueType.getAtomIndexByName(atomname);\r\n        if (index !== undefined) {\r\n            index += this.atomOffset;\r\n        }\r\n        return index;\r\n    }\r\n    hasAtomWithName(atomname) {\r\n        return this.residueType.hasAtomWithName(atomname);\r\n    }\r\n    getAtomnameList() {\r\n        console.warn('getAtomnameList - might be expensive');\r\n        const n = this.atomCount;\r\n        const offset = this.atomOffset;\r\n        const list = new Array(n);\r\n        for (let i = 0; i < n; ++i) {\r\n            list[i] = this.getAtomType(offset + i).atomname;\r\n        }\r\n        return list;\r\n    }\r\n    /**\r\n     * If residue is connected to another\r\n     * @param  {ResidueProxy} rNext - the other residue\r\n     * @return {Boolean} - flag\r\n     */\r\n    connectedTo(rNext) {\r\n        const bbAtomEnd = this.structure.getAtomProxy(this.backboneEndAtomIndex);\r\n        const bbAtomStart = this.structure.getAtomProxy(rNext.backboneStartAtomIndex);\r\n        if (bbAtomEnd && bbAtomStart) {\r\n            return bbAtomEnd.connectedTo(bbAtomStart);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    getNextConnectedResidue() {\r\n        const rOffset = this.chainStore.residueOffset[this.chainIndex];\r\n        const rCount = this.chainStore.residueCount[this.chainIndex];\r\n        const nextIndex = this.index + 1;\r\n        if (nextIndex < rOffset + rCount) {\r\n            const rpNext = this.structure.getResidueProxy(nextIndex);\r\n            if (this.connectedTo(rpNext)) {\r\n                return rpNext;\r\n            }\r\n        }\r\n        else if (nextIndex === rOffset + rCount) { // cyclic\r\n            const rpFirst = this.structure.getResidueProxy(rOffset);\r\n            if (this.connectedTo(rpFirst)) {\r\n                return rpFirst;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getPreviousConnectedResidue(residueProxy) {\r\n        const rOffset = this.chainStore.residueOffset[this.chainIndex];\r\n        const prevIndex = this.index - 1;\r\n        if (prevIndex >= rOffset) {\r\n            const rpPrev = defaults(residueProxy, this.structure.getResidueProxy());\r\n            rpPrev.index = prevIndex;\r\n            if (rpPrev.connectedTo(this)) {\r\n                return rpPrev;\r\n            }\r\n        }\r\n        else if (prevIndex === rOffset - 1) { // cyclic\r\n            const rCount = this.chainStore.residueCount[this.chainIndex];\r\n            const rpLast = defaults(residueProxy, this.structure.getResidueProxy());\r\n            rpLast.index = rOffset + rCount - 1;\r\n            if (rpLast.connectedTo(this)) {\r\n                return rpLast;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getBonds() {\r\n        return this.residueType.getBonds(this);\r\n    }\r\n    getRings() {\r\n        return this.residueType.getRings();\r\n    }\r\n    getAromaticRings() {\r\n        return this.residueType.getAromaticRings(this);\r\n    }\r\n    qualifiedName(noResname = false) {\r\n        let name = '';\r\n        if (this.resname && !noResname)\r\n            name += '[' + this.resname + ']';\r\n        if (this.resno !== undefined)\r\n            name += this.resno;\r\n        if (this.inscode)\r\n            name += '^' + this.inscode;\r\n        if (this.chain)\r\n            name += ':' + this.chainname;\r\n        name += '/' + this.modelIndex;\r\n        return name;\r\n    }\r\n    /**\r\n     * Clone object\r\n     * @return {ResidueProxy} cloned residue\r\n     */\r\n    clone() {\r\n        return new ResidueProxy(this.structure, this.index);\r\n    }\r\n    toObject() {\r\n        return {\r\n            index: this.index,\r\n            chainIndex: this.chainIndex,\r\n            atomOffset: this.atomOffset,\r\n            atomCount: this.atomCount,\r\n            resno: this.resno,\r\n            resname: this.resname,\r\n            sstruc: this.sstruc\r\n        };\r\n    }\r\n}\r\nexport default ResidueProxy;\r\n//# sourceMappingURL=residue-proxy.js.map","/**\r\n * @file Polymer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n/**\r\n * Polymer\r\n */\r\nclass Polymer {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} residueIndexStart - the index of the first residue\r\n     * @param {Integer} residueIndexEnd - the index of the last residue\r\n     */\r\n    constructor(structure, residueIndexStart, residueIndexEnd) {\r\n        this.structure = structure;\r\n        this.residueIndexStart = residueIndexStart;\r\n        this.residueIndexEnd = residueIndexEnd;\r\n        this.chainStore = structure.chainStore;\r\n        this.residueStore = structure.residueStore;\r\n        this.atomStore = structure.atomStore;\r\n        /**\r\n         * @type {Integer}\r\n         */\r\n        this.residueCount = residueIndexEnd - residueIndexStart + 1;\r\n        const rpStart = this.structure.getResidueProxy(this.residueIndexStart);\r\n        const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd);\r\n        this.isPrevConnected = rpStart.getPreviousConnectedResidue() !== undefined;\r\n        const rpNext = rpEnd.getNextConnectedResidue();\r\n        this.isNextConnected = rpNext !== undefined;\r\n        this.isNextNextConnected = rpNext !== undefined && rpNext.getNextConnectedResidue() !== undefined;\r\n        this.isCyclic = rpEnd.connectedTo(rpStart);\r\n        this.__residueProxy = this.structure.getResidueProxy();\r\n        // console.log( this.qualifiedName(), this );\r\n    }\r\n    get chainIndex() {\r\n        return this.residueStore.chainIndex[this.residueIndexStart];\r\n    }\r\n    get modelIndex() {\r\n        return this.chainStore.modelIndex[this.chainIndex];\r\n    }\r\n    /**\r\n     * @type {String}\r\n     */\r\n    get chainname() {\r\n        return this.chainStore.getChainname(this.chainIndex);\r\n    }\r\n    //\r\n    /**\r\n     * If first residue is from aprotein\r\n     * @return {Boolean} flag\r\n     */\r\n    isProtein() {\r\n        this.__residueProxy.index = this.residueIndexStart;\r\n        return this.__residueProxy.isProtein();\r\n    }\r\n    /**\r\n     * If atom is part of a coarse-grain group\r\n     * @return {Boolean} flag\r\n     */\r\n    isCg() {\r\n        this.__residueProxy.index = this.residueIndexStart;\r\n        return this.__residueProxy.isCg();\r\n    }\r\n    /**\r\n     * If atom is part of a nucleic molecule\r\n     * @return {Boolean} flag\r\n     */\r\n    isNucleic() {\r\n        this.__residueProxy.index = this.residueIndexStart;\r\n        return this.__residueProxy.isNucleic();\r\n    }\r\n    getMoleculeType() {\r\n        this.__residueProxy.index = this.residueIndexStart;\r\n        return this.__residueProxy.moleculeType;\r\n    }\r\n    getBackboneType(position) {\r\n        this.__residueProxy.index = this.residueIndexStart;\r\n        return this.__residueProxy.getBackboneType(position);\r\n    }\r\n    getAtomIndexByType(index, type) {\r\n        // TODO pre-calculate, add to residueStore???\r\n        if (this.isCyclic) {\r\n            if (index === -1) {\r\n                index = this.residueCount - 1;\r\n            }\r\n            else if (index === this.residueCount) {\r\n                index = 0;\r\n            }\r\n        }\r\n        else {\r\n            if (index === -1 && !this.isPrevConnected)\r\n                index += 1;\r\n            if (index === this.residueCount && !this.isNextNextConnected)\r\n                index -= 1;\r\n            // if( index === this.residueCount - 1 && !this.isNextConnected ) index -= 1;\r\n        }\r\n        const rp = this.__residueProxy;\r\n        rp.index = this.residueIndexStart + index;\r\n        let aIndex;\r\n        switch (type) {\r\n            case 'trace':\r\n                aIndex = rp.traceAtomIndex;\r\n                break;\r\n            case 'direction1':\r\n                aIndex = rp.direction1AtomIndex;\r\n                break;\r\n            case 'direction2':\r\n                aIndex = rp.direction2AtomIndex;\r\n                break;\r\n            default:\r\n                aIndex = rp.getAtomIndexByName(type);\r\n        }\r\n        // if (!ap){\r\n        //   console.log(this, type, rp.residueType)\r\n        //   // console.log(rp.qualifiedName(), rp.index, index, this.residueCount - 1)\r\n        //   // rp.index = this.residueIndexStart;\r\n        //   // console.log(rp.qualifiedName(), this.residueIndexStart)\r\n        //   // rp.index = this.residueIndexEnd;\r\n        //   // console.log(rp.qualifiedName(), this.residueIndexEnd)\r\n        // }\r\n        return aIndex;\r\n    }\r\n    /**\r\n     * Atom iterator\r\n     * @param  {function(atom: AtomProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachAtom(callback, selection) {\r\n        this.eachResidue(function (rp) {\r\n            rp.eachAtom(callback, selection);\r\n        });\r\n    }\r\n    eachAtomN(n, callback, type) {\r\n        const m = this.residueCount;\r\n        const array = new Array(n);\r\n        for (let i = 0; i < n; ++i) {\r\n            array[i] = this.structure.getAtomProxy(this.getAtomIndexByType(i, type));\r\n        }\r\n        callback.apply(this, array);\r\n        for (var j = n; j < m; ++j) {\r\n            for (let i = 1; i < n; ++i) {\r\n                array[i - 1].index = array[i].index;\r\n            }\r\n            array[n - 1].index = this.getAtomIndexByType(j, type); // TODO\r\n            callback.apply(this, array);\r\n        }\r\n    }\r\n    /**\r\n     * Residue iterator\r\n     * @param  {function(residue: ResidueProxy)} callback - the callback\r\n     * @return {undefined}\r\n     */\r\n    eachResidue(callback) {\r\n        const rp = this.structure.getResidueProxy();\r\n        const n = this.residueCount;\r\n        const rStartIndex = this.residueIndexStart;\r\n        for (let i = 0; i < n; ++i) {\r\n            rp.index = rStartIndex + i;\r\n            callback(rp);\r\n        }\r\n    }\r\n    qualifiedName() {\r\n        const rpStart = this.structure.getResidueProxy(this.residueIndexStart);\r\n        const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd);\r\n        return rpStart.qualifiedName() + ' - ' + rpEnd.qualifiedName();\r\n    }\r\n}\r\nexport default Polymer;\r\n//# sourceMappingURL=polymer.js.map","/**\r\n * @file Chain Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { UnknownBackboneType } from '../structure/structure-constants';\r\nimport Polymer from '../proxy/polymer';\r\n/**\r\n * Chain proxy\r\n */\r\nclass ChainProxy {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} index - the index\r\n     */\r\n    constructor(structure, index = 0) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.chainStore = structure.chainStore;\r\n        this.residueStore = structure.residueStore;\r\n    }\r\n    /**\r\n     * Entity\r\n     * @type {Entity}\r\n     */\r\n    get entity() {\r\n        return this.structure.entityList[this.entityIndex];\r\n    }\r\n    /**\r\n     * Model\r\n     * @type {ModelProxy}\r\n     */\r\n    get model() {\r\n        return this.structure.getModelProxy(this.modelIndex);\r\n    }\r\n    get entityIndex() {\r\n        return this.chainStore.entityIndex[this.index];\r\n    }\r\n    set entityIndex(value) {\r\n        this.chainStore.entityIndex[this.index] = value;\r\n    }\r\n    get modelIndex() {\r\n        return this.chainStore.modelIndex[this.index];\r\n    }\r\n    set modelIndex(value) {\r\n        this.chainStore.modelIndex[this.index] = value;\r\n    }\r\n    get residueOffset() {\r\n        return this.chainStore.residueOffset[this.index];\r\n    }\r\n    set residueOffset(value) {\r\n        this.chainStore.residueOffset[this.index] = value;\r\n    }\r\n    /**\r\n     * Residue count\r\n     * @type {Integer}\r\n     */\r\n    get residueCount() {\r\n        return this.chainStore.residueCount[this.index];\r\n    }\r\n    set residueCount(value) {\r\n        this.chainStore.residueCount[this.index] = value;\r\n    }\r\n    get residueEnd() {\r\n        return this.residueOffset + this.residueCount - 1;\r\n    }\r\n    get atomOffset() {\r\n        return this.residueStore.atomOffset[this.residueOffset];\r\n    }\r\n    get atomEnd() {\r\n        return (this.residueStore.atomOffset[this.residueEnd] +\r\n            this.residueStore.atomCount[this.residueEnd] - 1);\r\n    }\r\n    /**\r\n     * Atom count\r\n     * @type {Integer}\r\n     */\r\n    get atomCount() {\r\n        if (this.residueCount === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.atomEnd - this.atomOffset + 1;\r\n        }\r\n    }\r\n    //\r\n    /**\r\n     * Chain name\r\n     * @type {String}\r\n     */\r\n    get chainname() {\r\n        return this.chainStore.getChainname(this.index);\r\n    }\r\n    set chainname(value) {\r\n        this.chainStore.setChainname(this.index, value);\r\n    }\r\n    /**\r\n     * Chain id\r\n     * @type {String}\r\n     */\r\n    get chainid() {\r\n        return this.chainStore.getChainid(this.index);\r\n    }\r\n    set chainid(value) {\r\n        this.chainStore.setChainid(this.index, value);\r\n    }\r\n    //\r\n    /**\r\n     * Atom iterator\r\n     * @param  {function(atom: AtomProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachAtom(callback, selection) {\r\n        this.eachResidue(function (rp) {\r\n            rp.eachAtom(callback, selection);\r\n        }, selection);\r\n    }\r\n    /**\r\n     * Residue iterator\r\n     * @param  {function(residue: ResidueProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachResidue(callback, selection) {\r\n        const count = this.residueCount;\r\n        const offset = this.residueOffset;\r\n        const rp = this.structure._rp;\r\n        const end = offset + count;\r\n        if (selection && selection.test) {\r\n            const residueOnlyTest = selection.residueOnlyTest;\r\n            if (residueOnlyTest) {\r\n                for (let i = offset; i < end; ++i) {\r\n                    rp.index = i;\r\n                    if (residueOnlyTest(rp)) {\r\n                        callback(rp);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = offset; i < end; ++i) {\r\n                    rp.index = i;\r\n                    callback(rp);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = offset; i < end; ++i) {\r\n                rp.index = i;\r\n                callback(rp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Multi-residue iterator\r\n     * @param {Integer} n - window size\r\n     * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n     * @return {undefined}\r\n     */\r\n    eachResidueN(n, callback) {\r\n        const count = this.residueCount;\r\n        const offset = this.residueOffset;\r\n        const end = offset + count;\r\n        if (count < n)\r\n            return;\r\n        const array = new Array(n);\r\n        for (let i = 0; i < n; ++i) {\r\n            array[i] = this.structure.getResidueProxy(offset + i);\r\n        }\r\n        callback.apply(this, array);\r\n        for (let j = offset + n; j < end; ++j) {\r\n            for (let i = 0; i < n; ++i) {\r\n                array[i].index += 1;\r\n            }\r\n            callback.apply(this, array);\r\n        }\r\n    }\r\n    /**\r\n     * Polymer iterator\r\n     * @param  {function(polymer: Polymer)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachPolymer(callback, selection) {\r\n        let rStartIndex = 0;\r\n        let rNextIndex = 0;\r\n        const test = selection ? selection.residueOnlyTest : undefined;\r\n        const structure = this.model.structure;\r\n        const count = this.residueCount;\r\n        const offset = this.residueOffset;\r\n        const end = offset + count;\r\n        const rp1 = this.structure.getResidueProxy();\r\n        const rp2 = this.structure.getResidueProxy(offset);\r\n        const ap1 = this.structure.getAtomProxy();\r\n        const ap2 = this.structure.getAtomProxy();\r\n        let first = true;\r\n        for (let i = offset + 1; i < end; ++i) {\r\n            rp1.index = rp2.index;\r\n            rp2.index = i;\r\n            const bbType1 = first ? rp1.backboneEndType : rp1.backboneType;\r\n            const bbType2 = rp2.backboneType;\r\n            if (first) {\r\n                rStartIndex = rp1.index;\r\n                first = false;\r\n            }\r\n            rNextIndex = rp2.index;\r\n            if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n                ap1.index = rp1.backboneEndAtomIndex;\r\n                ap2.index = rp2.backboneStartAtomIndex;\r\n            }\r\n            else {\r\n                if (bbType1 !== UnknownBackboneType) {\r\n                    if (rp1.index - rStartIndex > 1) {\r\n                        // console.log(\"FOO1\",rStartIndex, rp1.index)\r\n                        callback(new Polymer(structure, rStartIndex, rp1.index));\r\n                    }\r\n                }\r\n                rStartIndex = rNextIndex;\r\n                continue;\r\n            }\r\n            if (!ap1 || !ap2 || !ap1.connectedTo(ap2) ||\r\n                (test && (!test(rp1) || !test(rp2)))) {\r\n                if (rp1.index - rStartIndex > 1) {\r\n                    // console.log(\"FOO2\",rStartIndex, rp1.index)\r\n                    callback(new Polymer(structure, rStartIndex, rp1.index));\r\n                }\r\n                rStartIndex = rNextIndex;\r\n            }\r\n        }\r\n        if (rNextIndex - rStartIndex > 1) {\r\n            if (this.structure.getResidueProxy(rStartIndex).backboneEndType) {\r\n                // console.log(\"FOO3\",rStartIndex, rNextIndex)\r\n                callback(new Polymer(structure, rStartIndex, rNextIndex));\r\n            }\r\n        }\r\n    }\r\n    //\r\n    qualifiedName() {\r\n        var name = ':' + this.chainname + '/' + this.modelIndex;\r\n        return name;\r\n    }\r\n    /**\r\n     * Clone object\r\n     * @return {ChainProxy} cloned chain\r\n     */\r\n    clone() {\r\n        return new ChainProxy(this.structure, this.index);\r\n    }\r\n    toObject() {\r\n        return {\r\n            index: this.index,\r\n            residueOffset: this.residueOffset,\r\n            residueCount: this.residueCount,\r\n            chainname: this.chainname\r\n        };\r\n    }\r\n}\r\nexport default ChainProxy;\r\n//# sourceMappingURL=chain-proxy.js.map","/**\r\n * @file Model Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n/**\r\n * Model proxy\r\n */\r\nclass ModelProxy {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Integer} index - the index\r\n     */\r\n    constructor(structure, index = 0) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.modelStore = structure.modelStore;\r\n        this.chainStore = structure.chainStore;\r\n        this.residueStore = structure.residueStore;\r\n    }\r\n    get chainOffset() {\r\n        return this.modelStore.chainOffset[this.index];\r\n    }\r\n    set chainOffset(value) {\r\n        this.modelStore.chainOffset[this.index] = value;\r\n    }\r\n    get chainCount() {\r\n        return this.modelStore.chainCount[this.index];\r\n    }\r\n    set chainCount(value) {\r\n        this.modelStore.chainCount[this.index] = value;\r\n    }\r\n    get residueOffset() {\r\n        return this.chainStore.residueOffset[this.chainOffset];\r\n    }\r\n    get atomOffset() {\r\n        return this.residueStore.atomOffset[this.residueOffset];\r\n    }\r\n    get chainEnd() {\r\n        return this.chainOffset + this.chainCount - 1;\r\n    }\r\n    get residueEnd() {\r\n        return (this.chainStore.residueOffset[this.chainEnd] +\r\n            this.chainStore.residueCount[this.chainEnd] - 1);\r\n    }\r\n    get atomEnd() {\r\n        return (this.residueStore.atomOffset[this.residueEnd] +\r\n            this.residueStore.atomCount[this.residueEnd] - 1);\r\n    }\r\n    /**\r\n     * Residue count\r\n     * @type {Integer}\r\n     */\r\n    get residueCount() {\r\n        if (this.chainCount === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.residueEnd - this.residueOffset + 1;\r\n        }\r\n    }\r\n    /**\r\n     * Atom count\r\n     * @type {Integer}\r\n     */\r\n    get atomCount() {\r\n        if (this.residueCount === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.atomEnd - this.atomOffset + 1;\r\n        }\r\n    }\r\n    //\r\n    /**\r\n     * Atom iterator\r\n     * @param  {function(atom: AtomProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachAtom(callback, selection) {\r\n        this.eachChain(function (cp) {\r\n            cp.eachAtom(callback, selection);\r\n        }, selection);\r\n    }\r\n    /**\r\n     * Residue iterator\r\n     * @param  {function(residue: ResidueProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachResidue(callback, selection) {\r\n        this.eachChain(function (cp) {\r\n            cp.eachResidue(callback, selection);\r\n        }, selection);\r\n    }\r\n    /**\r\n     * Polymer iterator\r\n     * @param  {function(polymer: Polymer)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachPolymer(callback, selection) {\r\n        if (selection && selection.chainOnlyTest) {\r\n            const chainOnlyTest = selection.chainOnlyTest;\r\n            this.eachChain(function (cp) {\r\n                if (chainOnlyTest(cp)) {\r\n                    cp.eachPolymer(callback, selection);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.eachChain(function (cp) {\r\n                cp.eachPolymer(callback, selection);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Chain iterator\r\n     * @param  {function(chain: ChainProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachChain(callback, selection) {\r\n        const count = this.chainCount;\r\n        const offset = this.chainOffset;\r\n        const cp = this.structure._cp;\r\n        const end = offset + count;\r\n        if (selection && selection.test) {\r\n            const chainOnlyTest = selection.chainOnlyTest;\r\n            if (chainOnlyTest) {\r\n                for (let i = offset; i < end; ++i) {\r\n                    cp.index = i;\r\n                    if (chainOnlyTest(cp)) {\r\n                        callback(cp);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = offset; i < end; ++i) {\r\n                    cp.index = i;\r\n                    callback(cp);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = offset; i < end; ++i) {\r\n                cp.index = i;\r\n                callback(cp);\r\n            }\r\n        }\r\n    }\r\n    //\r\n    qualifiedName() {\r\n        const name = '/' + this.index;\r\n        return name;\r\n    }\r\n    /**\r\n     * Clone object\r\n     * @return {ModelProxy} cloned model\r\n     */\r\n    clone() {\r\n        return new ModelProxy(this.structure, this.index);\r\n    }\r\n    toObject() {\r\n        return {\r\n            index: this.index,\r\n            chainOffset: this.chainOffset,\r\n            chainCount: this.chainCount\r\n        };\r\n    }\r\n}\r\nexport default ModelProxy;\r\n//# sourceMappingURL=model-proxy.js.map","/**\r\n * @file Structure\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Box3 } from 'three';\r\nimport { Signal } from 'signals';\r\nimport { Debug, Log, ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { AtomPicker, BondPicker } from '../utils/picker';\r\nimport { copyWithin, arrayMin, arrayMax } from '../math/array-utils';\r\nimport BitArray from '../utils/bitarray';\r\nimport RadiusFactory from '../utils/radius-factory';\r\nimport { Matrix } from '../math/matrix-utils';\r\nimport PrincipalAxes from '../math/principal-axes';\r\nimport SpatialHash from '../geometry/spatial-hash';\r\nimport FilteredVolume from '../surface/filtered-volume';\r\nimport { createData } from './data';\r\nimport BondHash from '../store/bond-hash';\r\nimport BondStore from '../store/bond-store';\r\nimport AtomStore from '../store/atom-store';\r\nimport ResidueStore from '../store/residue-store';\r\nimport ChainStore from '../store/chain-store';\r\nimport ModelStore from '../store/model-store';\r\nimport AtomMap from '../store/atom-map';\r\nimport ResidueMap from '../store/residue-map';\r\nimport BondProxy from '../proxy/bond-proxy';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport ResidueProxy from '../proxy/residue-proxy';\r\nimport ChainProxy from '../proxy/chain-proxy';\r\nimport ModelProxy from '../proxy/model-proxy';\r\n/**\r\n * Structure\r\n */\r\nclass Structure {\r\n    /**\r\n     * @param {String} name - structure name\r\n     * @param {String} path - source path\r\n     */\r\n    constructor(name = '', path = '') {\r\n        this.signals = {\r\n            refreshed: new Signal()\r\n        };\r\n        this.init(name, path);\r\n    }\r\n    init(name, path) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.title = '';\r\n        this.id = '';\r\n        this.data = createData(this);\r\n        this.header = {};\r\n        this.extraData = {};\r\n        this.atomSetCache = {};\r\n        this.atomSetDict = {};\r\n        this.biomolDict = {};\r\n        this.entityList = [];\r\n        this.unitcell = undefined;\r\n        this.frames = [];\r\n        this.boxes = [];\r\n        this.validation = undefined;\r\n        this.bondStore = new BondStore(0);\r\n        this.backboneBondStore = new BondStore(0);\r\n        this.rungBondStore = new BondStore(0);\r\n        this.atomStore = new AtomStore(0);\r\n        this.residueStore = new ResidueStore(0);\r\n        this.chainStore = new ChainStore(0);\r\n        this.modelStore = new ModelStore(0);\r\n        this.atomMap = new AtomMap(this);\r\n        this.residueMap = new ResidueMap(this);\r\n        this.bondHash = undefined;\r\n        this.spatialHash = undefined;\r\n        this.atomSet = undefined;\r\n        this.bondSet = undefined;\r\n        this.center = new Vector3();\r\n        this.boundingBox = new Box3();\r\n        this._bp = this.getBondProxy();\r\n        this._ap = this.getAtomProxy();\r\n        this._rp = this.getResidueProxy();\r\n        this._cp = this.getChainProxy();\r\n    }\r\n    get type() { return 'Structure'; }\r\n    finalizeAtoms() {\r\n        this.atomSet = this.getAtomSet();\r\n        this.atomCount = this.atomStore.count;\r\n        this.boundingBox = this.getBoundingBox(undefined, this.boundingBox);\r\n        this.center = this.boundingBox.getCenter(new Vector3());\r\n        this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox);\r\n    }\r\n    finalizeBonds() {\r\n        this.bondSet = this.getBondSet();\r\n        this.bondCount = this.bondStore.count;\r\n        this.bondHash = new BondHash(this.bondStore, this.atomStore.count);\r\n        this.atomSetCache = {};\r\n        if (!this.atomSetDict.rung) {\r\n            this.atomSetDict.rung = this.getAtomSet(false);\r\n        }\r\n        for (let name in this.atomSetDict) {\r\n            this.atomSetCache['__' + name] = this.atomSetDict[name].clone();\r\n        }\r\n    }\r\n    //\r\n    getBondProxy(index) {\r\n        return new BondProxy(this, index);\r\n    }\r\n    getAtomProxy(index) {\r\n        return new AtomProxy(this, index);\r\n    }\r\n    getResidueProxy(index) {\r\n        return new ResidueProxy(this, index);\r\n    }\r\n    getChainProxy(index) {\r\n        return new ChainProxy(this, index);\r\n    }\r\n    getModelProxy(index) {\r\n        return new ModelProxy(this, index);\r\n    }\r\n    //\r\n    getBondSet( /* selection */) {\r\n        // TODO implement selection parameter\r\n        const n = this.bondStore.count;\r\n        const bondSet = new BitArray(n);\r\n        const atomSet = this.atomSet;\r\n        if (atomSet) {\r\n            if (atomSet.isAllSet()) {\r\n                bondSet.setAll();\r\n            }\r\n            else if (atomSet.isAllClear()) {\r\n                bondSet.clearAll();\r\n            }\r\n            else {\r\n                const bp = this.getBondProxy();\r\n                for (let i = 0; i < n; ++i) {\r\n                    bp.index = i;\r\n                    if (atomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n                        bondSet.set(bp.index);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            bondSet.setAll();\r\n        }\r\n        return bondSet;\r\n    }\r\n    getBackboneBondSet( /* selection */) {\r\n        // TODO implement selection parameter\r\n        const n = this.backboneBondStore.count;\r\n        const backboneBondSet = new BitArray(n);\r\n        const backboneAtomSet = this.atomSetCache.__backbone;\r\n        if (backboneAtomSet) {\r\n            const bp = this.getBondProxy();\r\n            bp.bondStore = this.backboneBondStore;\r\n            for (let i = 0; i < n; ++i) {\r\n                bp.index = i;\r\n                if (backboneAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n                    backboneBondSet.set(bp.index);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            backboneBondSet.setAll();\r\n        }\r\n        return backboneBondSet;\r\n    }\r\n    getRungBondSet( /* selection */) {\r\n        // TODO implement selection parameter\r\n        const n = this.rungBondStore.count;\r\n        const rungBondSet = new BitArray(n);\r\n        const rungAtomSet = this.atomSetCache.__rung;\r\n        if (rungAtomSet) {\r\n            const bp = this.getBondProxy();\r\n            bp.bondStore = this.rungBondStore;\r\n            for (let i = 0; i < n; ++i) {\r\n                bp.index = i;\r\n                if (rungAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n                    rungBondSet.set(bp.index);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            rungBondSet.setAll();\r\n        }\r\n        return rungBondSet;\r\n    }\r\n    /**\r\n     * Get a set of atoms\r\n     * @param  {Boolean|Selection|BitArray} selection - object defining how to\r\n     *                                      initialize the atom set.\r\n     *                                      Boolean: init with value;\r\n     *                                      Selection: init with selection;\r\n     *                                      BitArray: return bit array\r\n     * @return {BitArray} set of atoms\r\n     */\r\n    getAtomSet(selection) {\r\n        const n = this.atomStore.count;\r\n        if (selection === undefined) {\r\n            return new BitArray(n, true);\r\n        }\r\n        else if (selection instanceof BitArray) {\r\n            return selection;\r\n        }\r\n        else if (selection === true) {\r\n            return new BitArray(n, true);\r\n        }\r\n        else if (selection && selection.test) {\r\n            const seleString = selection.string;\r\n            if (seleString in this.atomSetCache) {\r\n                return this.atomSetCache[seleString];\r\n            }\r\n            else {\r\n                if (seleString === '') {\r\n                    return new BitArray(n, true);\r\n                }\r\n                else {\r\n                    const atomSet = new BitArray(n);\r\n                    this.eachAtom(function (ap) {\r\n                        atomSet.set(ap.index);\r\n                    }, selection);\r\n                    this.atomSetCache[seleString] = atomSet;\r\n                    return atomSet;\r\n                }\r\n            }\r\n        }\r\n        else if (selection === false) {\r\n            return new BitArray(n);\r\n        }\r\n        return new BitArray(n, true);\r\n    }\r\n    /**\r\n     * Get set of atoms around a set of atoms from a selection\r\n     * @param  {Selection} selection - the selection object\r\n     * @param  {Number} radius - radius to select within\r\n     * @return {BitArray} set of atoms\r\n     */\r\n    getAtomSetWithinSelection(selection, radius) {\r\n        const spatialHash = this.spatialHash;\r\n        const atomSet = this.getAtomSet(false);\r\n        const ap = this.getAtomProxy();\r\n        if (!spatialHash)\r\n            return atomSet;\r\n        this.getAtomSet(selection).forEach(function (idx) {\r\n            ap.index = idx;\r\n            spatialHash.within(ap.x, ap.y, ap.z, radius).forEach(function (idx2) {\r\n                atomSet.set(idx2);\r\n            });\r\n        });\r\n        return atomSet;\r\n    }\r\n    /**\r\n     * Get set of atoms around a point\r\n     * @param  {Vector3|AtomProxy} point - the point\r\n     * @param  {Number} radius - radius to select within\r\n     * @return {BitArray} set of atoms\r\n     */\r\n    getAtomSetWithinPoint(point, radius) {\r\n        const p = point;\r\n        const atomSet = this.getAtomSet(false);\r\n        if (!this.spatialHash)\r\n            return atomSet;\r\n        this.spatialHash.within(p.x, p.y, p.z, radius).forEach(function (idx) {\r\n            atomSet.set(idx);\r\n        });\r\n        return atomSet;\r\n    }\r\n    /**\r\n     * Get set of atoms within a volume\r\n     * @param  {Volume} volume - the volume\r\n     * @param  {Number} radius - radius to select within\r\n     * @param  {[type]} minValue - minimum value to be considered as within the volume\r\n     * @param  {[type]} maxValue - maximum value to be considered as within the volume\r\n     * @param  {[type]} outside - use only values falling outside of the min/max values\r\n     * @return {BitArray} set of atoms\r\n     */\r\n    getAtomSetWithinVolume(volume, radius, minValue, maxValue, outside) {\r\n        const fv = new FilteredVolume(volume, minValue, maxValue, outside); // TODO\r\n        const dp = fv.getDataPosition();\r\n        const n = dp.length;\r\n        const r = fv.matrix.getMaxScaleOnAxis();\r\n        const atomSet = this.getAtomSet(false);\r\n        if (!this.spatialHash)\r\n            return atomSet;\r\n        for (let i = 0; i < n; i += 3) {\r\n            this.spatialHash.within(dp[i], dp[i + 1], dp[i + 2], r).forEach(function (idx) {\r\n                atomSet.set(idx);\r\n            });\r\n        }\r\n        return atomSet;\r\n    }\r\n    /**\r\n     * Get set of all atoms within the groups of a selection\r\n     * @param  {Selection} selection - the selection object\r\n     * @return {BitArray} set of atoms\r\n     */\r\n    getAtomSetWithinGroup(selection) {\r\n        const atomResidueIndex = this.atomStore.residueIndex;\r\n        const atomSet = this.getAtomSet(false);\r\n        const rp = this.getResidueProxy();\r\n        this.getAtomSet(selection).forEach(function (idx) {\r\n            rp.index = atomResidueIndex[idx];\r\n            for (let idx2 = rp.atomOffset; idx2 <= rp.atomEnd; ++idx2) {\r\n                atomSet.set(idx2);\r\n            }\r\n        });\r\n        return atomSet;\r\n    }\r\n    //\r\n    getSelection() {\r\n        return false;\r\n    }\r\n    getStructure() {\r\n        return this;\r\n    }\r\n    /**\r\n     * Entity iterator\r\n     * @param  {function(entity: Entity)} callback - the callback\r\n     * @param  {EntityType} type - entity type\r\n     * @return {undefined}\r\n     */\r\n    eachEntity(callback, type) {\r\n        this.entityList.forEach(function (entity) {\r\n            if (type === undefined || entity.getEntityType() === type) {\r\n                callback(entity);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Bond iterator\r\n     * @param  {function(bond: BondProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachBond(callback, selection) {\r\n        const bp = this.getBondProxy();\r\n        let bondSet;\r\n        if (selection && selection.test) {\r\n            bondSet = this.getBondSet( /*selection*/);\r\n            if (this.bondSet) {\r\n                bondSet.intersection(this.bondSet);\r\n            }\r\n        }\r\n        if (bondSet) {\r\n            bondSet.forEach(function (index) {\r\n                bp.index = index;\r\n                callback(bp);\r\n            });\r\n        }\r\n        else {\r\n            const n = this.bondStore.count;\r\n            for (let i = 0; i < n; ++i) {\r\n                bp.index = i;\r\n                callback(bp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Atom iterator\r\n     * @param  {function(atom: AtomProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachAtom(callback, selection) {\r\n        if (selection && selection.test) {\r\n            this.eachModel(function (mp) {\r\n                mp.eachAtom(callback, selection);\r\n            }, selection);\r\n        }\r\n        else {\r\n            const an = this.atomStore.count;\r\n            const ap = this.getAtomProxy();\r\n            for (let i = 0; i < an; ++i) {\r\n                ap.index = i;\r\n                callback(ap);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Residue iterator\r\n     * @param  {function(residue: ResidueProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachResidue(callback, selection) {\r\n        if (selection && selection.test) {\r\n            const mn = this.modelStore.count;\r\n            const mp = this.getModelProxy();\r\n            const modelOnlyTest = selection.modelOnlyTest;\r\n            if (modelOnlyTest) {\r\n                for (let i = 0; i < mn; ++i) {\r\n                    mp.index = i;\r\n                    if (modelOnlyTest(mp)) {\r\n                        mp.eachResidue(callback, selection);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i < mn; ++i) {\r\n                    mp.index = i;\r\n                    mp.eachResidue(callback, selection);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const rn = this.residueStore.count;\r\n            const rp = this.getResidueProxy();\r\n            for (let i = 0; i < rn; ++i) {\r\n                rp.index = i;\r\n                callback(rp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Multi-residue iterator\r\n     * @param {Integer} n - window size\r\n     * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n     * @return {undefined}\r\n     */\r\n    eachResidueN(n, callback) {\r\n        const rn = this.residueStore.count;\r\n        if (rn < n)\r\n            return;\r\n        const array = new Array(n);\r\n        for (let i = 0; i < n; ++i) {\r\n            array[i] = this.getResidueProxy(i);\r\n        }\r\n        callback.apply(this, array);\r\n        for (let j = n; j < rn; ++j) {\r\n            for (let i = 0; i < n; ++i) {\r\n                array[i].index += 1;\r\n            }\r\n            callback.apply(this, array);\r\n        }\r\n    }\r\n    /**\r\n     * Polymer iterator\r\n     * @param  {function(polymer: Polymer)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachPolymer(callback, selection) {\r\n        if (selection && selection.modelOnlyTest) {\r\n            const modelOnlyTest = selection.modelOnlyTest;\r\n            this.eachModel(function (mp) {\r\n                if (modelOnlyTest(mp)) {\r\n                    mp.eachPolymer(callback, selection);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.eachModel(function (mp) {\r\n                mp.eachPolymer(callback, selection);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Chain iterator\r\n     * @param  {function(chain: ChainProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachChain(callback, selection) {\r\n        if (selection && selection.test) {\r\n            this.eachModel(function (mp) {\r\n                mp.eachChain(callback, selection);\r\n            });\r\n        }\r\n        else {\r\n            const cn = this.chainStore.count;\r\n            const cp = this.getChainProxy();\r\n            for (let i = 0; i < cn; ++i) {\r\n                cp.index = i;\r\n                callback(cp);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Model iterator\r\n     * @param  {function(model: ModelProxy)} callback - the callback\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {undefined}\r\n     */\r\n    eachModel(callback, selection) {\r\n        const n = this.modelStore.count;\r\n        const mp = this.getModelProxy();\r\n        if (selection && selection.test) {\r\n            const modelOnlyTest = selection.modelOnlyTest;\r\n            if (modelOnlyTest) {\r\n                for (let i = 0; i < n; ++i) {\r\n                    mp.index = i;\r\n                    if (modelOnlyTest(mp)) {\r\n                        callback(mp);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0; i < n; ++i) {\r\n                    mp.index = i;\r\n                    callback(mp);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < n; ++i) {\r\n                mp.index = i;\r\n                callback(mp);\r\n            }\r\n        }\r\n    }\r\n    //\r\n    getAtomData(params) {\r\n        const p = Object.assign({}, params);\r\n        if (p.colorParams)\r\n            p.colorParams.structure = this.getStructure();\r\n        const what = p.what;\r\n        const atomSet = defaults(p.atomSet, this.atomSet);\r\n        let radiusFactory; // TODO\r\n        let colormaker; // TODO\r\n        const atomData = {};\r\n        const ap = this.getAtomProxy();\r\n        const atomCount = atomSet.getSize();\r\n        if (!what || what.position) {\r\n            atomData.position = new Float32Array(atomCount * 3);\r\n        }\r\n        if ((!what || what.color) && p.colorParams) {\r\n            atomData.color = new Float32Array(atomCount * 3);\r\n            colormaker = ColormakerRegistry.getScheme(p.colorParams);\r\n        }\r\n        if (!what || what.picking) {\r\n            atomData.picking = new AtomPicker(new Float32Array(atomCount), this.getStructure());\r\n        }\r\n        if (!what || what.radius) {\r\n            atomData.radius = new Float32Array(atomCount);\r\n            radiusFactory = new RadiusFactory(p.radiusParams);\r\n        }\r\n        if (!what || what.index) {\r\n            atomData.index = new Uint32Array(atomCount);\r\n        }\r\n        const { position, color, picking, radius, index } = atomData;\r\n        atomSet.forEach((idx, i) => {\r\n            const i3 = i * 3;\r\n            ap.index = idx;\r\n            if (position) {\r\n                ap.positionToArray(position, i3);\r\n            }\r\n            if (color) {\r\n                colormaker.atomColorToArray(ap, color, i3);\r\n            }\r\n            if (picking) {\r\n                picking.array[i] = idx;\r\n            }\r\n            if (radius) {\r\n                radius[i] = radiusFactory.atomRadius(ap);\r\n            }\r\n            if (index) {\r\n                index[i] = idx;\r\n            }\r\n        });\r\n        return atomData;\r\n    }\r\n    getBondData(params) {\r\n        const p = Object.assign({}, params);\r\n        if (p.colorParams)\r\n            p.colorParams.structure = this.getStructure();\r\n        const what = p.what;\r\n        const bondSet = defaults(p.bondSet, this.bondSet);\r\n        const multipleBond = defaults(p.multipleBond, 'off');\r\n        const isMulti = multipleBond !== 'off';\r\n        const isOffset = multipleBond === 'offset';\r\n        const bondScale = defaults(p.bondScale, 0.4);\r\n        const bondSpacing = defaults(p.bondSpacing, 1.0);\r\n        let radiusFactory; // TODO\r\n        let colormaker; // TODO\r\n        const bondData = {};\r\n        const bp = this.getBondProxy();\r\n        if (p.bondStore)\r\n            bp.bondStore = p.bondStore;\r\n        const ap1 = this.getAtomProxy();\r\n        const ap2 = this.getAtomProxy();\r\n        let bondCount;\r\n        if (isMulti) {\r\n            const storeBondOrder = bp.bondStore.bondOrder;\r\n            bondCount = 0;\r\n            bondSet.forEach(function (index) {\r\n                bondCount += storeBondOrder[index];\r\n            });\r\n        }\r\n        else {\r\n            bondCount = bondSet.getSize();\r\n        }\r\n        if (!what || what.position) {\r\n            bondData.position1 = new Float32Array(bondCount * 3);\r\n            bondData.position2 = new Float32Array(bondCount * 3);\r\n        }\r\n        if ((!what || what.color) && p.colorParams) {\r\n            bondData.color = new Float32Array(bondCount * 3);\r\n            bondData.color2 = new Float32Array(bondCount * 3);\r\n            colormaker = ColormakerRegistry.getScheme(p.colorParams);\r\n        }\r\n        if (!what || what.picking) {\r\n            bondData.picking = new BondPicker(new Float32Array(bondCount), this.getStructure(), p.bondStore);\r\n        }\r\n        if (!what || what.radius || (isMulti && what.position)) {\r\n            radiusFactory = new RadiusFactory(p.radiusParams);\r\n        }\r\n        if (!what || what.radius) {\r\n            bondData.radius = new Float32Array(bondCount);\r\n            if (p.radius2) {\r\n                bondData.radius2 = new Float32Array(bondCount);\r\n            }\r\n        }\r\n        const { position1, position2, color, color2, picking, radius, radius2 } = bondData;\r\n        let i = 0;\r\n        let j, i3, k, bondOrder, absOffset;\r\n        let multiRadius;\r\n        const vt = new Vector3();\r\n        const vShortening = new Vector3();\r\n        const vShift = new Vector3();\r\n        bondSet.forEach((index) => {\r\n            i3 = i * 3;\r\n            bp.index = index;\r\n            ap1.index = bp.atomIndex1;\r\n            ap2.index = bp.atomIndex2;\r\n            bondOrder = bp.bondOrder;\r\n            if (position1) {\r\n                if (isMulti && bondOrder > 1) {\r\n                    const atomRadius = radiusFactory.atomRadius(ap1);\r\n                    multiRadius = atomRadius * bondScale / (0.5 * bondOrder);\r\n                    bp.calculateShiftDir(vShift);\r\n                    if (isOffset) {\r\n                        absOffset = 2 * bondSpacing * atomRadius;\r\n                        vShift.multiplyScalar(absOffset);\r\n                        vShift.negate();\r\n                        // Shortening is calculated so that neighbouring double\r\n                        // bonds on tetrahedral geometry (e.g. sulphonamide)\r\n                        // are not quite touching (arccos(1.9 / 2) ~ 109deg)\r\n                        // but don't shorten beyond 10% each end or it looks odd\r\n                        vShortening.subVectors(ap2, ap1).multiplyScalar(// TODO\r\n                        Math.max(0.1, absOffset / 1.88));\r\n                        ap1.positionToArray(position1, i3);\r\n                        ap2.positionToArray(position2, i3);\r\n                        if (bondOrder >= 2) {\r\n                            vt.addVectors(ap1, vShift).add(vShortening).toArray(position1, i3 + 3); // TODO\r\n                            vt.addVectors(ap2, vShift).sub(vShortening).toArray(position2, i3 + 3); // TODO\r\n                            if (bondOrder >= 3) {\r\n                                vt.subVectors(ap1, vShift).add(vShortening).toArray(position1, i3 + 6); // TODO\r\n                                vt.subVectors(ap2, vShift).sub(vShortening).toArray(position2, i3 + 6); // TODO\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        absOffset = (bondSpacing - bondScale) * atomRadius;\r\n                        vShift.multiplyScalar(absOffset);\r\n                        if (bondOrder === 2) {\r\n                            vt.addVectors(ap1, vShift).toArray(position1, i3); // TODO\r\n                            vt.subVectors(ap1, vShift).toArray(position1, i3 + 3); // TODO\r\n                            vt.addVectors(ap2, vShift).toArray(position2, i3); // TODO\r\n                            vt.subVectors(ap2, vShift).toArray(position2, i3 + 3); // TODO\r\n                        }\r\n                        else if (bondOrder === 3) {\r\n                            ap1.positionToArray(position1, i3);\r\n                            vt.addVectors(ap1, vShift).toArray(position1, i3 + 3); // TODO\r\n                            vt.subVectors(ap1, vShift).toArray(position1, i3 + 6); // TODO\r\n                            ap2.positionToArray(position2, i3);\r\n                            vt.addVectors(ap2, vShift).toArray(position2, i3 + 3); // TODO\r\n                            vt.subVectors(ap2, vShift).toArray(position2, i3 + 6); // TODO\r\n                        }\r\n                        else {\r\n                            // todo, better fallback\r\n                            ap1.positionToArray(position1, i3);\r\n                            ap2.positionToArray(position2, i3);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    ap1.positionToArray(position1, i3);\r\n                    ap2.positionToArray(position2, i3);\r\n                }\r\n            }\r\n            if (color && color2) {\r\n                colormaker.bondColorToArray(bp, 1, color, i3);\r\n                colormaker.bondColorToArray(bp, 0, color2, i3);\r\n                if (isMulti && bondOrder > 1) {\r\n                    for (j = 1; j < bondOrder; ++j) {\r\n                        k = j * 3 + i3;\r\n                        copyWithin(color, i3, k, 3);\r\n                        copyWithin(color2, i3, k, 3);\r\n                    }\r\n                }\r\n            }\r\n            if (picking && picking.array) {\r\n                picking.array[i] = index;\r\n                if (isMulti && bondOrder > 1) {\r\n                    for (j = 1; j < bondOrder; ++j) {\r\n                        picking.array[i + j] = index;\r\n                    }\r\n                }\r\n            }\r\n            if (radius) {\r\n                radius[i] = radiusFactory.atomRadius(ap1);\r\n                if (isMulti && bondOrder > 1) {\r\n                    multiRadius = radius[i] * bondScale / (isOffset ? 1 : (0.5 * bondOrder));\r\n                    for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n                        radius[i + j] = multiRadius;\r\n                    }\r\n                }\r\n            }\r\n            if (radius2) {\r\n                radius2[i] = radiusFactory.atomRadius(ap2);\r\n                if (isMulti && bondOrder > 1) {\r\n                    multiRadius = radius2[i] * bondScale / (isOffset ? 1 : (0.5 * bondOrder));\r\n                    for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n                        radius2[i + j] = multiRadius;\r\n                    }\r\n                }\r\n            }\r\n            i += isMulti ? bondOrder : 1;\r\n        });\r\n        return bondData;\r\n    }\r\n    getBackboneAtomData(params) {\r\n        params = Object.assign({\r\n            atomSet: this.atomSetCache.__backbone\r\n        }, params);\r\n        return this.getAtomData(params);\r\n    }\r\n    getBackboneBondData(params) {\r\n        params = Object.assign({\r\n            bondSet: this.getBackboneBondSet(),\r\n            bondStore: this.backboneBondStore\r\n        }, params);\r\n        return this.getBondData(params);\r\n    }\r\n    getRungAtomData(params) {\r\n        params = Object.assign({\r\n            atomSet: this.atomSetCache.__rung\r\n        }, params);\r\n        return this.getAtomData(params);\r\n    }\r\n    getRungBondData(params) {\r\n        params = Object.assign({\r\n            bondSet: this.getRungBondSet(),\r\n            bondStore: this.rungBondStore\r\n        }, params);\r\n        return this.getBondData(params);\r\n    }\r\n    //\r\n    /**\r\n     * Gets the bounding box of the (selected) structure atoms\r\n     * @param  {Selection} [selection] - the selection\r\n     * @param  {Box3} [box] - optional target\r\n     * @return {Vector3} the box\r\n     */\r\n    getBoundingBox(selection, box) {\r\n        if (Debug)\r\n            Log.time('getBoundingBox');\r\n        box = box || new Box3();\r\n        let minX = +Infinity;\r\n        let minY = +Infinity;\r\n        let minZ = +Infinity;\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n        let maxZ = -Infinity;\r\n        this.eachAtom(ap => {\r\n            const x = ap.x;\r\n            const y = ap.y;\r\n            const z = ap.z;\r\n            if (x < minX)\r\n                minX = x;\r\n            if (y < minY)\r\n                minY = y;\r\n            if (z < minZ)\r\n                minZ = z;\r\n            if (x > maxX)\r\n                maxX = x;\r\n            if (y > maxY)\r\n                maxY = y;\r\n            if (z > maxZ)\r\n                maxZ = z;\r\n        }, selection);\r\n        box.min.set(minX, minY, minZ);\r\n        box.max.set(maxX, maxY, maxZ);\r\n        if (Debug)\r\n            Log.timeEnd('getBoundingBox');\r\n        return box;\r\n    }\r\n    /**\r\n     * Gets the principal axes of the (selected) structure atoms\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {PrincipalAxes} the principal axes\r\n     */\r\n    getPrincipalAxes(selection) {\r\n        if (Debug)\r\n            Log.time('getPrincipalAxes');\r\n        let i = 0;\r\n        const coords = new Matrix(3, this.atomCount);\r\n        const cd = coords.data;\r\n        this.eachAtom(a => {\r\n            cd[i + 0] = a.x;\r\n            cd[i + 1] = a.y;\r\n            cd[i + 2] = a.z;\r\n            i += 3;\r\n        }, selection);\r\n        if (Debug)\r\n            Log.timeEnd('getPrincipalAxes');\r\n        return new PrincipalAxes(coords);\r\n    }\r\n    /**\r\n     * Gets the center of the (selected) structure atoms\r\n     * @param  {Selection} [selection] - the selection\r\n     * @return {Vector3} the center\r\n     */\r\n    atomCenter(selection) {\r\n        if (selection) {\r\n            return this.getBoundingBox(selection).getCenter(new Vector3());\r\n        }\r\n        else {\r\n            return this.center.clone();\r\n        }\r\n    }\r\n    hasCoords() {\r\n        if (this._hasCoords === undefined) {\r\n            const atomStore = this.atomStore;\r\n            this._hasCoords = (arrayMin(atomStore.x) !== 0 || arrayMax(atomStore.x) !== 0 ||\r\n                arrayMin(atomStore.y) !== 0 || arrayMax(atomStore.y) !== 0 ||\r\n                arrayMin(atomStore.z) !== 0 || arrayMax(atomStore.z) !== 0) || (\r\n            // allow models with a single atom at the origin\r\n            atomStore.count / this.modelStore.count === 1);\r\n        }\r\n        return this._hasCoords;\r\n    }\r\n    getSequence(selection) {\r\n        const seq = [];\r\n        const rp = this.getResidueProxy();\r\n        this.eachAtom(function (ap) {\r\n            rp.index = ap.residueIndex;\r\n            if (ap.index === rp.traceAtomIndex) {\r\n                seq.push(rp.getResname1());\r\n            }\r\n        }, selection);\r\n        return seq;\r\n    }\r\n    getAtomIndices(selection) {\r\n        if (selection && selection.string) {\r\n            const indices = [];\r\n            this.eachAtom(function (ap) {\r\n                indices.push(ap.index);\r\n            }, selection);\r\n            return new Uint32Array(indices);\r\n        }\r\n        else {\r\n            const p = { what: { index: true } };\r\n            return this.getAtomData(p).index;\r\n        }\r\n    }\r\n    /**\r\n     * Get number of unique chainnames\r\n     * @param  {Selection} selection - limit count to selection\r\n     * @return {Integer} count\r\n     */\r\n    getChainnameCount(selection) {\r\n        const chainnames = new Set();\r\n        this.eachChain(function (cp) {\r\n            if (cp.residueCount) {\r\n                chainnames.add(cp.chainname);\r\n            }\r\n        }, selection);\r\n        return chainnames.size;\r\n    }\r\n    //\r\n    updatePosition(position) {\r\n        let i = 0;\r\n        this.eachAtom(function (ap) {\r\n            ap.positionFromArray(position, i);\r\n            i += 3;\r\n        }, undefined);\r\n        this._hasCoords = undefined; // to trigger recalculation\r\n    }\r\n    refreshPosition() {\r\n        this.getBoundingBox(undefined, this.boundingBox);\r\n        this.boundingBox.getCenter(this.center);\r\n        this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox);\r\n    }\r\n    /**\r\n     * Calls dispose() method of property objects.\r\n     * Unsets properties to help garbage collection.\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        if (this.frames)\r\n            this.frames.length = 0;\r\n        if (this.boxes)\r\n            this.boxes.length = 0;\r\n        this.bondStore.dispose();\r\n        this.backboneBondStore.dispose();\r\n        this.rungBondStore.dispose();\r\n        this.atomStore.dispose();\r\n        this.residueStore.dispose();\r\n        this.chainStore.dispose();\r\n        this.modelStore.dispose();\r\n        delete this.bondStore;\r\n        delete this.atomStore;\r\n        delete this.residueStore;\r\n        delete this.chainStore;\r\n        delete this.modelStore;\r\n        delete this.frames;\r\n        delete this.boxes;\r\n        delete this.bondSet;\r\n        delete this.atomSet;\r\n    }\r\n}\r\nexport default Structure;\r\n//# sourceMappingURL=structure.js.map","/**\r\n * @file Shape\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Matrix4 required for declaration only\r\nimport { Box3, Vector3 } from 'three';\r\nimport { createParams, ensureFloat32Array, getUintArray } from '../utils';\r\nimport { ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive, EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive, TextPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive } from './primitive';\r\nimport { MeshPicker } from '../utils/picker';\r\nimport MeshBuffer from '../buffer/mesh-buffer';\r\nconst tmpBox = new Box3();\r\nconst Primitives = [\r\n    ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n    EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive,\r\n    TextPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive\r\n];\r\nexport const ShapeDefaultParameters = {\r\n    aspectRatio: 1.5,\r\n    sphereDetail: 2,\r\n    radialSegments: 50,\r\n    disableImpostor: false,\r\n    openEnded: false,\r\n    dashedCylinder: false,\r\n    labelParams: {},\r\n    pointSize: 2,\r\n    sizeAttenuation: false,\r\n    useTexture: true,\r\n    linewidth: 2\r\n};\r\n/**\r\n * Class for building custom shapes.\r\n *\r\n * @example\r\n * var shape = new NGL.Shape('shape', { disableImpostor: true });\r\n * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\r\n * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n * shape.addArrow([ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0);\r\n * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n * var shapeComp = stage.addComponentFromObject(shape);\r\n * geoComp.addRepresentation('buffer');\r\n */\r\nclass Shape {\r\n    /**\r\n     * @param {String} name - name\r\n     * @param {Object} params - parameter object\r\n     * @param {Integer} params.aspectRatio - arrow aspect ratio, used for cylinder radius and cone length\r\n     * @param {Integer} params.sphereDetail - sphere quality (icosahedron subdivisions)\r\n     * @param {Integer} params.radialSegments - cylinder quality (number of segments)\r\n     * @param {Boolean} params.disableImpostor - disable use of raycasted impostors for rendering\r\n     * @param {Boolean} params.openEnded - capped or not\r\n     * @param {TextBufferParameters} params.labelParams - label parameters\r\n     */\r\n    constructor(name = 'shape', params = {}) {\r\n        this.boundingBox = new Box3();\r\n        this.bufferList = [];\r\n        this.meshCount = 0;\r\n        this._primitiveData = {};\r\n        this.name = name;\r\n        this.parameters = createParams(params, ShapeDefaultParameters);\r\n        Primitives.forEach(P => {\r\n            Object.keys(P.fields).forEach(name => {\r\n                this._primitiveData[P.getShapeKey(name)] = [];\r\n            });\r\n            this._primitiveData[P.getShapeKey('name')] = [];\r\n        });\r\n    }\r\n    /**\r\n     * Add a buffer\r\n     * @param {Buffer} buffer - buffer object\r\n     * @return {Shape} this object\r\n     */\r\n    addBuffer(buffer) {\r\n        this.bufferList.push(buffer);\r\n        const geometry = buffer.geometry; // TODO\r\n        if (!geometry.boundingBox) {\r\n            geometry.computeBoundingBox();\r\n        }\r\n        this.boundingBox.union(geometry.boundingBox);\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a mesh\r\n     * @example\r\n     * shape.addMesh(\r\n     *   [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\r\n     *   [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n     * );\r\n     *\r\n     * @param {Float32Array|Array} position - positions\r\n     * @param {Float32Array|Array} color - colors\r\n     * @param {Uint32Array|Uint16Array|Array} [index] - indices\r\n     * @param {Float32Array|Array} [normal] - normals\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addMesh(position, color, index, normal, name) {\r\n        position = ensureFloat32Array(position);\r\n        color = ensureFloat32Array(color);\r\n        if (Array.isArray(index)) {\r\n            index = getUintArray(index, position.length);\r\n        }\r\n        if (normal) {\r\n            normal = ensureFloat32Array(normal);\r\n        }\r\n        let data;\r\n        if (normal === undefined || normal.length == 0) {\r\n            data = { position, color, index };\r\n        }\r\n        else {\r\n            data = { position, color, index, normal };\r\n        }\r\n        //const data = { position, color, index, normal }\r\n        const picking = new MeshPicker(this, Object.assign({ serial: this.meshCount, name }, data));\r\n        const meshBuffer = new MeshBuffer(Object.assign({ picking }, data));\r\n        this.bufferList.push(meshBuffer);\r\n        tmpBox.setFromArray(position);\r\n        this.boundingBox.union(tmpBox);\r\n        this.meshCount += 1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a sphere\r\n     * @example\r\n     * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addSphere(position, color, radius, name) {\r\n        SpherePrimitive.objectToShape(this, { position, color, radius, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add an ellipsoid\r\n     * @example\r\n     * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {Vector3|Array} majorAxis - major axis vector or array\r\n     * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addEllipsoid(position, color, radius, majorAxis, minorAxis, name) {\r\n        EllipsoidPrimitive.objectToShape(this, { position, color, radius, majorAxis, minorAxis, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a torus\r\n     * @example\r\n     * shape.addTorus([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {Vector3|Array} majorAxis - major axis vector or array\r\n     * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addTorus(position, color, radius, majorAxis, minorAxis, name) {\r\n        TorusPrimitive.objectToShape(this, { position, color, radius, majorAxis, minorAxis, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a cylinder\r\n     * @example\r\n     * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n     *\r\n     * @param {Vector3|Array} position1 - from position vector or array\r\n     * @param {Vector3|Array} position2 - to position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addCylinder(position1, position2, color, radius, name) {\r\n        CylinderPrimitive.objectToShape(this, { position1, position2, color, radius, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a cone\r\n     * @example\r\n     * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n     *\r\n     * @param {Vector3|Array} position1 - from position vector or array\r\n     * @param {Vector3|Array} position2 - to position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addCone(position1, position2, color, radius, name) {\r\n        ConePrimitive.objectToShape(this, { position1, position2, color, radius, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add an arrow\r\n     * @example\r\n     * shape.addArrow([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n     *\r\n     * @param {Vector3|Array} position1 - from position vector or array\r\n     * @param {Vector3|Array} position2 - to position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} radius - radius value\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addArrow(position1, position2, color, radius, name) {\r\n        ArrowPrimitive.objectToShape(this, { position1, position2, color, radius, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a box\r\n     * @example\r\n     * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} size - size value\r\n     * @param {Vector3|Array} heightAxis - height axis vector or array\r\n     * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addBox(position, color, size, heightAxis, depthAxis, name) {\r\n        BoxPrimitive.objectToShape(this, { position, color, size, heightAxis, depthAxis, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add an octahedron\r\n     * @example\r\n     * shape.addOctahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} size - size value\r\n     * @param {Vector3|Array} heightAxis - height axis vector or array\r\n     * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addOctahedron(position, color, size, heightAxis, depthAxis, name) {\r\n        OctahedronPrimitive.objectToShape(this, { position, color, size, heightAxis, depthAxis, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a tetrahedron\r\n     * @example\r\n     * shape.addTetrahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} size - size value\r\n     * @param {Vector3|Array} heightAxis - height axis vector or array\r\n     * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addTetrahedron(position, color, size, heightAxis, depthAxis, name) {\r\n        TetrahedronPrimitive.objectToShape(this, { position, color, size, heightAxis, depthAxis, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add text\r\n     * @example\r\n     * shape.addText([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ], 0.5, \"Hello\");\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {Float} size - size value\r\n     * @param {String} text - text value\r\n     * @return {Shape} this object\r\n     */\r\n    addText(position, color, size, text) {\r\n        TextPrimitive.objectToShape(this, { position, color, size, text });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add point\r\n     * @example\r\n     * shape.addPoint([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ]);\r\n     *\r\n     * @param {Vector3|Array} position - position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addPoint(position, color, name) {\r\n        PointPrimitive.objectToShape(this, { position, color, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Add a wideline\r\n     * @example\r\n     * shape.addWideline([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ]);\r\n     *\r\n     * @param {Vector3|Array} position1 - from position vector or array\r\n     * @param {Vector3|Array} position2 - to position vector or array\r\n     * @param {Color|Array} color - color object or array\r\n     * @param {String} [name] - text\r\n     * @return {Shape} this object\r\n     */\r\n    addWideline(position1, position2, color, linewidth, name) {\r\n        this.parameters.linewidth = linewidth;\r\n        WidelinePrimitive.objectToShape(this, { position1, position2, color, name });\r\n        return this;\r\n    }\r\n    /**\r\n     * Deprecated, use `.addText`\r\n     */\r\n    addLabel(position, color, size, text) {\r\n        console.warn('Shape.addLabel is deprecated, use .addText instead');\r\n        return this.addText(position, color, size, text);\r\n    }\r\n    getBufferList() {\r\n        const buffers = [];\r\n        Primitives.forEach(P => {\r\n            if (this._primitiveData[P.getShapeKey('color')].length) {\r\n                buffers.push(P.bufferFromShape(this, this.parameters));\r\n            }\r\n        });\r\n        return this.bufferList.concat(buffers);\r\n    }\r\n    dispose() {\r\n        this.bufferList.forEach(function (buffer) {\r\n            buffer.dispose();\r\n        });\r\n        this.bufferList.length = 0;\r\n        Primitives.forEach(P => {\r\n            Object.keys(P.fields).forEach(name => {\r\n                this._primitiveData[P.getShapeKey(name)].length = 0;\r\n            });\r\n            this._primitiveData[P.getShapeKey('name')].length = 0;\r\n        });\r\n    }\r\n    get center() {\r\n        if (!this._center) {\r\n            this._center = this.boundingBox.getCenter(new Vector3());\r\n        }\r\n        return this._center;\r\n    }\r\n    get type() { return 'Shape'; }\r\n}\r\nexport default Shape;\r\n//# sourceMappingURL=shape.js.map","/**\r\n * @file Buffer Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Representation from './representation.js';\r\n/**\r\n * Representation for showing buffer objects. Good for efficiently showing\r\n * large amounts of geometric primitives e.g. spheres via {@link SphereBuffer}.\r\n * Smaller numbers of geometric primitives are more easily shown with help\r\n * from the {@link Shape} class.\r\n *\r\n * __Name:__ _buffer_\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a shape instance\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * var sphereBuffer = new NGL.SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n * shape.addBuffer( sphereBuffer );\r\n * var shapeComp = stage.addComponentFromObject( shape );\r\n * shapeComp.addRepresentation( \"buffer\" );\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a structure component instance\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     var sphereBuffer = new NGL.SphereBuffer( {\r\n *         position: new Float32Array( [ 0, 0, 0 ] ),\r\n *         color: new Float32Array( [ 1, 0, 0 ] ),\r\n *         radius: new Float32Array( [ 1 ] )\r\n *     } );\r\n *     o.addBufferRepresentation( sphereBuffer, { opacity: 0.5 } );\r\n * } );\r\n */\r\nclass BufferRepresentation extends Representation {\r\n    /**\r\n     * Create Buffer representation\r\n     * @param {Buffer} buffer - a buffer object\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {RepresentationParameters} params - representation parameters\r\n     */\r\n    constructor(buffer, viewer, params) {\r\n        if (!Array.isArray(buffer)) {\r\n            buffer = [buffer];\r\n        }\r\n        super(buffer, viewer, params);\r\n        this.type = 'buffer';\r\n        this.parameters = Object.assign({}, this.parameters, {\r\n            colorScheme: null,\r\n            colorScale: null,\r\n            colorValue: null,\r\n            colorDomain: null,\r\n            colorMode: null\r\n        });\r\n        this.buffer = buffer;\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        super.init(params);\r\n        this.build();\r\n    }\r\n    create() {\r\n        this.bufferList.push.apply(this.bufferList, this.buffer);\r\n    }\r\n    attach(callback) {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.add(buffer);\r\n            buffer.setParameters(this.getBufferParams());\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n}\r\nexport default BufferRepresentation;\r\n//# sourceMappingURL=buffer-representation.js.map","/**\r\n * @file Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Matrix4, Matrix3 } from 'three';\r\nimport { getUintArray } from '../utils';\r\nimport { serialBlockArray } from '../math/array-utils.js';\r\nimport { applyMatrix3toVector3array, applyMatrix4toVector3array } from '../math/vector-utils.js';\r\nimport MeshBuffer from './mesh-buffer.js';\r\nimport { Log } from \"../globals\";\r\nconst matrix = new Matrix4();\r\nconst normalMatrix = new Matrix3();\r\nfunction getData(data, geo) {\r\n    const geoPosition = geo.attributes.position.array;\r\n    const geoIndex = geo.index ? geo.index.array : undefined;\r\n    const n = data.position.length / 3;\r\n    const m = geoPosition.length / 3;\r\n    const size = n * m;\r\n    const meshPosition = new Float32Array(size * 3);\r\n    const meshNormal = new Float32Array(size * 3);\r\n    const meshColor = new Float32Array(size * 3);\r\n    let meshIndex;\r\n    if (geoIndex) {\r\n        meshIndex = getUintArray(n * geoIndex.length, size);\r\n    }\r\n    return {\r\n        position: meshPosition,\r\n        color: meshColor,\r\n        index: meshIndex,\r\n        normal: meshNormal,\r\n        primitiveId: data.primitiveId || serialBlockArray(n, m),\r\n        picking: data.picking\r\n    };\r\n}\r\n/**\r\n * Geometry buffer. Base class for geometry-based buffers. Used to draw\r\n * geometry primitives given a mesh.\r\n * @interface\r\n */\r\nclass GeometryBuffer extends MeshBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     * @param {BufferGeometry} geo - geometry object\r\n     */\r\n    constructor(data, params = {}, geo) {\r\n        super(getData(data, geo), params);\r\n        this.updateNormals = false;\r\n        const geoPosition = geo.attributes.position.array;\r\n        const geoNormal = geo.attributes.normal.array;\r\n        const geoIndex = geo.index ? geo.index.array : undefined;\r\n        this.geoPosition = geoPosition;\r\n        this.geoNormal = geoNormal;\r\n        this.geoIndex = geoIndex;\r\n        this.positionCount = data.position.length / 3;\r\n        this.geoPositionCount = geoPosition.length / 3;\r\n        this.transformedGeoPosition = new Float32Array(this.geoPositionCount * 3);\r\n        this.transformedGeoNormal = new Float32Array(this.geoPositionCount * 3);\r\n        const attributes = this.geometry.attributes; // TODO\r\n        this.meshPosition = attributes.position.array;\r\n        this.meshColor = attributes.color.array;\r\n        this.meshNormal = attributes.normal.array;\r\n        this.setAttributes(data);\r\n        if (geoIndex) {\r\n            const index = this.geometry.getIndex();\r\n            if (!index) {\r\n                Log.error('Index is null');\r\n                return;\r\n            }\r\n            this.meshIndex = index.array;\r\n            this.makeIndex();\r\n        }\r\n    }\r\n    setAttributes(data = {}, initNormals = false) {\r\n        const attributes = this.geometry.attributes; // TODO\r\n        let position, color;\r\n        let geoPosition, geoNormal;\r\n        let transformedGeoPosition, transformedGeoNormal;\r\n        let meshPosition, meshColor, meshNormal;\r\n        const updateNormals = this.updateNormals;\r\n        if (data.position) {\r\n            position = data.position;\r\n            geoPosition = this.geoPosition;\r\n            meshPosition = this.meshPosition;\r\n            transformedGeoPosition = this.transformedGeoPosition;\r\n            attributes.position.needsUpdate = true;\r\n            if (updateNormals || initNormals) {\r\n                geoNormal = this.geoNormal;\r\n                meshNormal = this.meshNormal;\r\n                transformedGeoNormal = this.transformedGeoNormal;\r\n                attributes.normal.needsUpdate = true;\r\n            }\r\n        }\r\n        if (data.color) {\r\n            color = data.color;\r\n            meshColor = this.meshColor;\r\n            attributes.color.needsUpdate = true;\r\n        }\r\n        const n = this.positionCount;\r\n        const m = this.geoPositionCount;\r\n        for (let i = 0; i < n; ++i) {\r\n            let j, l;\r\n            const k = i * m * 3;\r\n            const i3 = i * 3;\r\n            if (position && transformedGeoPosition && meshPosition && meshNormal && geoPosition && geoNormal) {\r\n                transformedGeoPosition.set(geoPosition);\r\n                matrix.makeTranslation(position[i3], position[i3 + 1], position[i3 + 2]);\r\n                this.applyPositionTransform(matrix, i, i3);\r\n                applyMatrix4toVector3array(matrix.elements, transformedGeoPosition);\r\n                meshPosition.set(transformedGeoPosition, k);\r\n                if (updateNormals && transformedGeoNormal) {\r\n                    transformedGeoNormal.set(geoNormal);\r\n                    normalMatrix.getNormalMatrix(matrix);\r\n                    applyMatrix3toVector3array(normalMatrix.elements, transformedGeoNormal);\r\n                    meshNormal.set(transformedGeoNormal, k);\r\n                }\r\n                else if (initNormals) {\r\n                    meshNormal.set(geoNormal, k);\r\n                }\r\n            }\r\n            if (color && meshColor) {\r\n                for (j = 0; j < m; ++j) {\r\n                    l = k + 3 * j;\r\n                    meshColor[l] = color[i3];\r\n                    meshColor[l + 1] = color[i3 + 1];\r\n                    meshColor[l + 2] = color[i3 + 2];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    makeIndex() {\r\n        const geoIndex = this.geoIndex;\r\n        const meshIndex = this.meshIndex;\r\n        if (!geoIndex)\r\n            return;\r\n        const n = this.positionCount;\r\n        const m = this.geoPositionCount;\r\n        const o = geoIndex.length / 3;\r\n        const o3 = o * 3;\r\n        for (let i = 0; i < n; ++i) {\r\n            const j = i * o3;\r\n            const q = j + o3;\r\n            meshIndex.set(geoIndex, j);\r\n            for (let p = j; p < q; ++p)\r\n                meshIndex[p] += i * m;\r\n        }\r\n    }\r\n}\r\nexport default GeometryBuffer;\r\n//# sourceMappingURL=geometry-buffer.js.map","/**\r\n * @file Sphere Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { IcosahedronBufferGeometry, Vector3 } from 'three';\r\nimport { defaults } from '../utils';\r\nimport GeometryBuffer from './geometry-buffer';\r\nimport { BufferDefaultParameters } from './buffer';\r\nconst scale = new Vector3();\r\nexport const SphereGeometryBufferDefaultParameters = Object.assign({\r\n    sphereDetail: 1\r\n}, BufferDefaultParameters);\r\n/**\r\n * Sphere geometry buffer.\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereGeometryBuffer extends GeometryBuffer {\r\n    /**\r\n     * @param {Object} data - attribute object\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 1)));\r\n        this.setAttributes(data, true);\r\n    }\r\n    get defaultParameters() { return SphereGeometryBufferDefaultParameters; }\r\n    applyPositionTransform(matrix, i) {\r\n        const r = this._radius[i];\r\n        scale.set(r, r, r);\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.radius)\r\n            this._radius = data.radius;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nexport default SphereGeometryBuffer;\r\n//# sourceMappingURL=spheregeometry-buffer.js.map","/**\r\n * @file Mapped Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { getUintArray } from '../utils';\r\nimport { calculateCenterArray, serialArray } from '../math/array-utils';\r\nimport Buffer from './buffer';\r\n/**\r\n * Mapped buffer. Sends mapping attribute to the GPU and repeats data in\r\n * others attributes. Used to render imposters.\r\n * @interface\r\n */\r\nclass MappedBuffer extends Buffer {\r\n    constructor(mappingType, data, params = {}) {\r\n        super(data, params);\r\n        this.index = getUintArray(this.indexSize, this.attributeSize);\r\n        this.makeIndex();\r\n        this.initIndex(this.index);\r\n        this.addAttributes({\r\n            'mapping': { type: mappingType, value: null }\r\n        });\r\n        this.setAttributes({ primitiveId: serialArray(this.size) });\r\n    }\r\n    get attributeSize() {\r\n        return this.size * this.mappingSize;\r\n    }\r\n    get indexSize() {\r\n        return this.size * this.mappingIndicesSize;\r\n    }\r\n    addAttributes(attributes) {\r\n        const nullValueAttributes = {};\r\n        for (const name in attributes) {\r\n            const a = attributes[name];\r\n            nullValueAttributes[name] = {\r\n                type: a.type,\r\n                value: null\r\n            };\r\n        }\r\n        super.addAttributes(nullValueAttributes);\r\n    }\r\n    getAttributeIndex(dataIndex) {\r\n        return dataIndex * 3 * this.mappingSize;\r\n    }\r\n    setAttributes(data) {\r\n        if (data && !data.position && data.position1 && data.position2) {\r\n            data.position = calculateCenterArray(data.position1, data.position2);\r\n        }\r\n        const size = this.size;\r\n        const mappingSize = this.mappingSize;\r\n        const attributes = this.geometry.attributes; // TODO\r\n        let a, d, itemSize, array, n, i, j;\r\n        for (const name in data) {\r\n            if (name === 'index' || name === 'picking')\r\n                continue;\r\n            d = data[name];\r\n            a = attributes[name];\r\n            itemSize = a.itemSize;\r\n            array = a.array;\r\n            for (let k = 0; k < size; ++k) {\r\n                n = k * itemSize;\r\n                i = n * mappingSize;\r\n                for (let l = 0; l < mappingSize; ++l) {\r\n                    j = i + (itemSize * l);\r\n                    for (let m = 0; m < itemSize; ++m) {\r\n                        array[j + m] = d[n + m];\r\n                    }\r\n                }\r\n            }\r\n            a.needsUpdate = true;\r\n        }\r\n    }\r\n    makeMapping() {\r\n        const size = this.size;\r\n        const mapping = this.mapping;\r\n        const mappingSize = this.mappingSize;\r\n        const mappingItemSize = this.mappingItemSize;\r\n        const attributes = this.geometry.attributes; // TODO\r\n        const aMapping = attributes.mapping.array;\r\n        for (let v = 0; v < size; v++) {\r\n            aMapping.set(mapping, v * mappingItemSize * mappingSize);\r\n        }\r\n    }\r\n    makeIndex() {\r\n        const size = this.size;\r\n        const mappingSize = this.mappingSize;\r\n        const mappingIndices = this.mappingIndices;\r\n        const mappingIndicesSize = this.mappingIndicesSize;\r\n        const index = this.index;\r\n        for (let v = 0; v < size; v++) {\r\n            const ix = v * mappingIndicesSize;\r\n            const it = v * mappingSize;\r\n            index.set(mappingIndices, ix);\r\n            for (let s = 0; s < mappingIndicesSize; ++s) {\r\n                index[ix + s] += it;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default MappedBuffer;\r\n//# sourceMappingURL=mapped-buffer.js.map","/**\r\n * @file Mapped Quad Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport MappedBuffer from './mapped-buffer';\r\nconst mapping = new Float32Array([\r\n    -1.0, 1.0,\r\n    -1.0, -1.0,\r\n    1.0, 1.0,\r\n    1.0, -1.0\r\n]);\r\nconst mappingIndices = new Uint16Array([\r\n    0, 1, 2,\r\n    1, 3, 2\r\n]);\r\n/**\r\n * Mapped Quad buffer. Draws screen-aligned quads. Used to render impostors.\r\n * @interface\r\n */\r\nclass MappedQuadBuffer extends MappedBuffer {\r\n    constructor(data, params = {}) {\r\n        super('v2', data, params);\r\n    }\r\n    get mapping() { return mapping; }\r\n    get mappingIndices() { return mappingIndices; }\r\n    get mappingIndicesSize() { return 6; }\r\n    get mappingSize() { return 4; }\r\n    get mappingItemSize() { return 2; }\r\n}\r\nexport default MappedQuadBuffer;\r\n//# sourceMappingURL=mappedquad-buffer.js.map","/**\r\n * @file Sphere Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport '../shader/SphereImpostor.vert';\r\nimport '../shader/SphereImpostor.frag';\r\nimport MappedQuadBuffer from './mappedquad-buffer';\r\n/**\r\n * Sphere impostor buffer.\r\n *\r\n * @example\r\n * var sphereImpostorBuffer = new SphereImpostorBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereImpostorBuffer extends MappedQuadBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.isImpostor = true;\r\n        this.vertexShader = 'SphereImpostor.vert';\r\n        this.fragmentShader = 'SphereImpostor.frag';\r\n        this.addUniforms({\r\n            'projectionMatrixInverse': { value: new Matrix4() },\r\n            'ortho': { value: 0.0 }\r\n        });\r\n        this.addAttributes({\r\n            'radius': { type: 'f', value: null }\r\n        });\r\n        this.setAttributes(data);\r\n        this.makeMapping();\r\n    }\r\n}\r\nexport default SphereImpostorBuffer;\r\n//# sourceMappingURL=sphereimpostor-buffer.js.map","/**\r\n * @file Sphere Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals';\r\nimport SphereGeometryBuffer, { SphereGeometryBufferDefaultParameters } from './spheregeometry-buffer';\r\nimport SphereImpostorBuffer from './sphereimpostor-buffer';\r\nexport const SphereBufferDefaultParameters = Object.assign({\r\n    disableImpostor: false\r\n}, SphereGeometryBufferDefaultParameters);\r\n/**\r\n * Sphere buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link SphereGeometryBuffer} or a {@link SphereImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereBuffer = new SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n */\r\nclass SphereBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} params - parameters object\r\n     * @return {SphereGeometryBuffer|SphereImpostorBuffer} the buffer object\r\n     */\r\n    constructor(data, params) {\r\n        if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n            return new SphereGeometryBuffer(data, params);\r\n        }\r\n        else {\r\n            return new SphereImpostorBuffer(data, params);\r\n        }\r\n    }\r\n}\r\nBufferRegistry.add('sphere', SphereBuffer);\r\nexport default SphereBuffer;\r\n//# sourceMappingURL=sphere-buffer.js.map","/**\r\n * @file Point Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { DataTexture } from 'three';\r\nimport '../shader/Point.vert';\r\nimport '../shader/Point.frag';\r\nimport { BufferRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { smoothstep } from '../math/math-utils';\r\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nfunction distance(x0, y0, x1, y1) {\r\n    const dx = x1 - x0;\r\n    const dy = y1 - y0;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n}\r\nfunction makePointTexture(params) {\r\n    const p = params || {};\r\n    const width = defaults(p.width, 256);\r\n    const height = defaults(p.height, 256);\r\n    const center = [width / 2, height / 2];\r\n    const radius = Math.min(width / 2, height / 2);\r\n    const delta = defaults(p.delta, 1 / (radius + 1)) * radius;\r\n    let x = 0;\r\n    let y = 0;\r\n    const data = new Uint8Array(width * height * 4);\r\n    for (let i = 0, il = data.length; i < il; i += 4) {\r\n        const dist = distance(x, y, center[0], center[1]);\r\n        const value = 1 - smoothstep(radius - delta, radius, dist);\r\n        data[i] = value * 255;\r\n        data[i + 1] = value * 255;\r\n        data[i + 2] = value * 255;\r\n        data[i + 3] = value * 255;\r\n        if (++x === width) {\r\n            x = 0;\r\n            y++;\r\n        }\r\n    }\r\n    const tex = new DataTexture(data, width, height);\r\n    tex.needsUpdate = true;\r\n    return tex;\r\n}\r\nexport const PointBufferDefaultParameters = Object.assign({\r\n    pointSize: 1,\r\n    sizeAttenuation: true,\r\n    sortParticles: false,\r\n    alphaTest: 0.5,\r\n    useTexture: false,\r\n    forceTransparent: false,\r\n    edgeBleach: 0.0\r\n}, BufferDefaultParameters);\r\nconst PointBufferParameterTypes = Object.assign({\r\n    pointSize: { uniform: 'size' },\r\n    sizeAttenuation: { updateShader: true },\r\n    sortParticles: {},\r\n    alphaTest: { updateShader: true },\r\n    useTexture: { updateShader: true },\r\n    forceTransparent: {},\r\n    edgeBleach: { uniform: true }\r\n}, BufferParameterTypes);\r\n/**\r\n * Point buffer. Draws points. Optionally textured.\r\n *\r\n * @example\r\n * var pointBuffer = new PointBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] )\r\n * } );\r\n */\r\nclass PointBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.parameterTypes = PointBufferParameterTypes;\r\n        this.vertexShader = 'Point.vert';\r\n        this.fragmentShader = 'Point.frag';\r\n        this.isPoint = true;\r\n        this.addUniforms({\r\n            'size': { value: this.parameters.pointSize },\r\n            'canvasHeight': { value: 1.0 },\r\n            'pixelRatio': { value: 1.0 },\r\n            'map': { value: null }\r\n        });\r\n    }\r\n    get defaultParameters() { return PointBufferDefaultParameters; }\r\n    makeMaterial() {\r\n        super.makeMaterial();\r\n        this.makeTexture();\r\n        const m = this.material;\r\n        const wm = this.wireframeMaterial;\r\n        const pm = this.pickingMaterial;\r\n        m.uniforms.map.value = this.tex;\r\n        m.needsUpdate = true;\r\n        wm.uniforms.map.value = this.tex;\r\n        wm.needsUpdate = true;\r\n        pm.uniforms.map.value = this.tex;\r\n        pm.needsUpdate = true;\r\n    }\r\n    makeTexture() {\r\n        if (this.tex)\r\n            this.tex.dispose();\r\n        this.tex = makePointTexture({ delta: this.parameters.edgeBleach });\r\n    }\r\n    getDefines(type) {\r\n        const defines = super.getDefines(type);\r\n        if (this.parameters.sizeAttenuation) {\r\n            defines.USE_SIZEATTENUATION = 1;\r\n        }\r\n        if (this.parameters.useTexture) {\r\n            defines.USE_MAP = 1;\r\n        }\r\n        if (this.parameters.alphaTest > 0 && this.parameters.alphaTest <= 1) {\r\n            defines.ALPHATEST = this.parameters.alphaTest.toPrecision(2);\r\n        }\r\n        return defines;\r\n    }\r\n    setUniforms(data) {\r\n        if (data && data.edgeBleach !== undefined) {\r\n            this.makeTexture();\r\n            data.map = this.tex;\r\n        }\r\n        super.setUniforms(data);\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this.tex)\r\n            this.tex.dispose();\r\n    }\r\n}\r\nBufferRegistry.add('point', PointBuffer);\r\nexport default PointBuffer;\r\n//# sourceMappingURL=point-buffer.js.map","/**\r\n * @file Dot Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ExtensionFragDepth } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Representation from './representation.js';\r\nimport Volume from '../surface/volume.js';\r\nimport FilteredVolume from '../surface/filtered-volume.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport PointBuffer from '../buffer/point-buffer.js';\r\n/**\r\n * Dot representation\r\n */\r\nclass DotRepresentation extends Representation {\r\n    /**\r\n     * Create Dot representation object\r\n     * @param {Surface|Volume} surface - the surface or volume to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {DotRepresentationParameters} params - dot representation parameters\r\n     */\r\n    constructor(surface, viewer, params) {\r\n        super(surface, viewer, params);\r\n        this.type = 'dot';\r\n        this.parameters = Object.assign({\r\n            thresholdType: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'value': 'value', 'sigma': 'sigma'\r\n                }\r\n            },\r\n            thresholdMin: {\r\n                type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n            },\r\n            thresholdMax: {\r\n                type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n            },\r\n            thresholdOut: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            dotType: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    '': '',\r\n                    'sphere': 'sphere',\r\n                    'point': 'point'\r\n                }\r\n            },\r\n            radiusType: {\r\n                type: 'select',\r\n                options: {\r\n                    '': '',\r\n                    'value': 'value',\r\n                    'abs-value': 'abs-value',\r\n                    'value-min': 'value-min',\r\n                    'deviation': 'deviation',\r\n                    'size': 'size'\r\n                }\r\n            },\r\n            radius: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001, property: 'size'\r\n            },\r\n            scale: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            sphereDetail: true,\r\n            disableImpostor: true,\r\n            pointSize: {\r\n                type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n            },\r\n            sizeAttenuation: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            sortParticles: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            useTexture: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            alphaTest: {\r\n                type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n            },\r\n            forceTransparent: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            edgeBleach: {\r\n                type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n            }\r\n        }, this.parameters, {\r\n            colorScheme: {\r\n                type: 'select',\r\n                update: 'color',\r\n                options: {\r\n                    '': '',\r\n                    'value': 'value',\r\n                    'uniform': 'uniform',\r\n                    'random': 'random'\r\n                }\r\n            }\r\n        });\r\n        if (surface instanceof Volume) {\r\n            this.surface = undefined;\r\n            this.volume = new FilteredVolume(surface);\r\n        }\r\n        else {\r\n            this.surface = surface;\r\n            this.volume = undefined;\r\n        }\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'uniform');\r\n        p.colorValue = defaults(p.colorValue, 0xDDDDDD);\r\n        this.thresholdType = defaults(p.thresholdType, 'sigma');\r\n        this.thresholdMin = defaults(p.thresholdMin, 2.0);\r\n        this.thresholdMax = defaults(p.thresholdMax, Infinity);\r\n        this.thresholdOut = defaults(p.thresholdOut, false);\r\n        this.dotType = defaults(p.dotType, 'point');\r\n        this.radius = defaults(p.radius, 0.1);\r\n        this.scale = defaults(p.scale, 1.0);\r\n        this.pointSize = defaults(p.pointSize, 1);\r\n        this.sizeAttenuation = defaults(p.sizeAttenuation, true);\r\n        this.sortParticles = defaults(p.sortParticles, false);\r\n        this.useTexture = defaults(p.useTexture, false);\r\n        this.alphaTest = defaults(p.alphaTest, 0.5);\r\n        this.forceTransparent = defaults(p.forceTransparent, false);\r\n        this.edgeBleach = defaults(p.edgeBleach, 0.0);\r\n        super.init(p);\r\n        this.build();\r\n    }\r\n    attach(callback) {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.add(buffer);\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n    create() {\r\n        var dotData = {};\r\n        if (this.volume) {\r\n            var volume = this.volume;\r\n            var thresholdMin, thresholdMax;\r\n            if (this.thresholdType === 'sigma') {\r\n                thresholdMin = volume.getValueForSigma(this.thresholdMin);\r\n                thresholdMax = volume.getValueForSigma(this.thresholdMax);\r\n            }\r\n            else {\r\n                thresholdMin = this.thresholdMin;\r\n                thresholdMax = this.thresholdMax;\r\n            }\r\n            volume.setFilter(thresholdMin, thresholdMax, this.thresholdOut);\r\n            Object.assign(dotData, {\r\n                position: volume.getDataPosition(),\r\n                color: volume.getDataColor(this.getColorParams())\r\n            });\r\n            if (this.dotType === 'sphere') {\r\n                Object.assign(dotData, {\r\n                    radius: volume.getDataSize(this.radius, this.scale),\r\n                    picking: volume.getDataPicking()\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var surface = this.surface;\r\n            Object.assign(dotData, {\r\n                position: surface.getPosition(),\r\n                color: surface.getColor(this.getColorParams())\r\n            });\r\n            if (this.dotType === 'sphere') {\r\n                Object.assign(dotData, {\r\n                    radius: surface.getSize(this.radius, this.scale),\r\n                    picking: surface.getPicking()\r\n                });\r\n            }\r\n        }\r\n        if (this.dotType === 'sphere') {\r\n            this.dotBuffer = new SphereBuffer(dotData, this.getBufferParams({\r\n                sphereDetail: this.sphereDetail,\r\n                disableImpostor: this.disableImpostor,\r\n                dullInterior: false\r\n            }));\r\n        }\r\n        else {\r\n            this.dotBuffer = new PointBuffer(dotData, this.getBufferParams({\r\n                pointSize: this.pointSize,\r\n                sizeAttenuation: this.sizeAttenuation,\r\n                sortParticles: this.sortParticles,\r\n                useTexture: this.useTexture,\r\n                alphaTest: this.alphaTest,\r\n                forceTransparent: this.forceTransparent,\r\n                edgeBleach: this.edgeBleach\r\n            }));\r\n        }\r\n        this.bufferList.push(this.dotBuffer);\r\n    }\r\n    update(what = {}) {\r\n        if (this.bufferList.length === 0)\r\n            return;\r\n        const dotData = {};\r\n        if (what.color) {\r\n            if (this.volume) {\r\n                Object.assign(dotData, {\r\n                    color: this.volume.getDataColor(this.getColorParams())\r\n                });\r\n            }\r\n            else {\r\n                Object.assign(dotData, {\r\n                    color: this.surface.getColor(this.getColorParams())\r\n                });\r\n            }\r\n        }\r\n        if (this.dotType === 'sphere' && (what.radius || what.scale)) {\r\n            if (this.volume) {\r\n                Object.assign(dotData, {\r\n                    radius: this.volume.getDataSize(this.radius, this.scale)\r\n                });\r\n            }\r\n            else {\r\n                Object.assign(dotData, {\r\n                    radius: this.surface.getSize(this.radius, this.scale)\r\n                });\r\n            }\r\n        }\r\n        this.dotBuffer.setAttributes(dotData);\r\n    }\r\n    setParameters(params, what = {}, rebuild) {\r\n        if (params && params.thresholdType !== undefined &&\r\n            this.volume instanceof Volume) {\r\n            if (this.thresholdType === 'value' &&\r\n                params.thresholdType === 'sigma') {\r\n                this.thresholdMin = this.volume.getSigmaForValue(this.thresholdMin);\r\n                this.thresholdMax = this.volume.getSigmaForValue(this.thresholdMax);\r\n            }\r\n            else if (this.thresholdType === 'sigma' &&\r\n                params.thresholdType === 'value') {\r\n                this.thresholdMin = this.volume.getValueForSigma(this.thresholdMin);\r\n                this.thresholdMax = this.volume.getValueForSigma(this.thresholdMax);\r\n            }\r\n            this.thresholdType = params.thresholdType;\r\n        }\r\n        if (params && params.radiusType !== undefined) {\r\n            if (params.radiusType === 'radius') {\r\n                this.radius = 0.1;\r\n            }\r\n            else {\r\n                this.radius = parseFloat(params.radiusType);\r\n            }\r\n            what.radius = true;\r\n            if (this.dotType === 'sphere' &&\r\n                (!ExtensionFragDepth || this.disableImpostor)) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        if (params && params.radius !== undefined) {\r\n            what.radius = true;\r\n            if (this.dotType === 'sphere' &&\r\n                (!ExtensionFragDepth || this.disableImpostor)) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        if (params && params.scale !== undefined) {\r\n            what.scale = true;\r\n            if (this.dotType === 'sphere' &&\r\n                (!ExtensionFragDepth || this.disableImpostor)) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nexport default DotRepresentation;\r\n//# sourceMappingURL=dot-representation.js.map","/**\r\n * @file Image Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { \r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nVector2, BufferAttribute, DataTexture, NormalBlending, NearestFilter, LinearFilter } from 'three';\r\nimport '../shader/Image.vert';\r\nimport '../shader/Image.frag';\r\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nconst quadIndices = new Uint16Array([\r\n    0, 1, 2,\r\n    1, 3, 2\r\n]);\r\nconst quadUvs = new Float32Array([\r\n    0, 1,\r\n    0, 0,\r\n    1, 1,\r\n    1, 0\r\n]);\r\nexport const ImageBufferDefaultParameters = Object.assign({\r\n    filter: 'nearest',\r\n    forceTransparent: true\r\n}, BufferDefaultParameters);\r\nexport const ImageBufferParameterTypes = Object.assign({\r\n    filter: { updateShader: true, uniform: true }\r\n}, BufferParameterTypes);\r\n/**\r\n * Image buffer. Draw a single image. Optionally interpolate.\r\n */\r\nclass ImageBuffer extends Buffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - image position\r\n     * @param {Float32Array} data.imageData - image data, rgba channels\r\n     * @param {Float32Array} data.width - image width\r\n     * @param {Float32Array} data.height - image height\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n    constructor(data, params) {\r\n        super({\r\n            position: data.position,\r\n            index: quadIndices,\r\n            picking: data.picking\r\n        }, params);\r\n        this.parameterTypes = ImageBufferParameterTypes;\r\n        this.alwaysTransparent = true;\r\n        this.hasWireframe = false;\r\n        this.vertexShader = 'Image.vert';\r\n        this.fragmentShader = 'Image.frag';\r\n        const { imageData, width, height } = data;\r\n        const tex = new DataTexture(imageData, width, height);\r\n        tex.flipY = true;\r\n        this.tex = tex;\r\n        const n = imageData.length;\r\n        const pickingData = new Uint8Array(n);\r\n        for (let i = 0; i < n; i += 4) {\r\n            const j = i / 4;\r\n            pickingData[i] = j >> 16 & 255;\r\n            pickingData[i + 1] = j >> 8 & 255;\r\n            pickingData[i + 2] = j & 255;\r\n        }\r\n        const pickingTex = new DataTexture(pickingData, width, height);\r\n        pickingTex.flipY = true;\r\n        pickingTex.minFilter = NearestFilter;\r\n        pickingTex.magFilter = NearestFilter;\r\n        this.pickingTex = pickingTex;\r\n        this.addUniforms({\r\n            'map': { value: tex },\r\n            'pickingMap': { value: pickingTex },\r\n            'mapSize': { value: new Vector2(width, height) }\r\n        });\r\n        this.geometry.setAttribute('uv', new BufferAttribute(quadUvs, 2));\r\n    }\r\n    get defaultParameters() { return ImageBufferDefaultParameters; }\r\n    getDefines(type) {\r\n        const defines = super.getDefines(type);\r\n        const filter = this.parameters.filter;\r\n        if (filter.startsWith('cubic')) {\r\n            defines.CUBIC_INTERPOLATION = 1;\r\n            if (filter.endsWith('bspline')) {\r\n                defines.BSPLINE_FILTER = 1;\r\n            }\r\n            else if (filter.endsWith('catmulrom')) {\r\n                defines.CATMULROM_FILTER = 1;\r\n            }\r\n            else if (filter.endsWith('mitchell')) {\r\n                defines.MITCHELL_FILTER = 1;\r\n            }\r\n        }\r\n        return defines;\r\n    }\r\n    updateTexture() {\r\n        const tex = this.tex;\r\n        const filter = this.parameters.filter;\r\n        if (filter.startsWith('cubic')) {\r\n            tex.minFilter = NearestFilter;\r\n            tex.magFilter = NearestFilter;\r\n        }\r\n        else if (filter === 'linear') {\r\n            tex.minFilter = LinearFilter;\r\n            tex.magFilter = LinearFilter;\r\n        }\r\n        else { // filter === \"nearest\"\r\n            tex.minFilter = NearestFilter;\r\n            tex.magFilter = NearestFilter;\r\n        }\r\n        tex.needsUpdate = true;\r\n        this.pickingTex.needsUpdate = true;\r\n    }\r\n    makeMaterial() {\r\n        super.makeMaterial();\r\n        this.updateTexture();\r\n        const m = this.material;\r\n        m.uniforms.map.value = this.tex;\r\n        m.blending = NormalBlending;\r\n        m.needsUpdate = true;\r\n        const wm = this.wireframeMaterial;\r\n        wm.uniforms.map.value = this.tex;\r\n        wm.blending = NormalBlending;\r\n        wm.needsUpdate = true;\r\n        const pm = this.pickingMaterial;\r\n        pm.uniforms.map.value = this.tex;\r\n        pm.uniforms.pickingMap.value = this.pickingTex;\r\n        pm.blending = NormalBlending;\r\n        pm.needsUpdate = true;\r\n    }\r\n    setUniforms(data) {\r\n        if (data && data.filter !== undefined) {\r\n            this.updateTexture();\r\n            data.map = this.tex;\r\n        }\r\n        super.setUniforms(data);\r\n    }\r\n}\r\nexport default ImageBuffer;\r\n//# sourceMappingURL=image-buffer.js.map","/**\r\n * @file Volume Slice\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { SlicePicker } from '../utils/picker.js';\r\nclass VolumeSlice {\r\n    constructor(volume, params) {\r\n        const p = params || {};\r\n        this.dimension = defaults(p.dimension, 'x');\r\n        this.positionType = defaults(p.positionType, 'percent');\r\n        this.position = defaults(p.position, 30);\r\n        this.thresholdType = defaults(p.thresholdType, 'sigma');\r\n        this.thresholdMin = defaults(p.thresholdMin, -Infinity);\r\n        this.thresholdMax = defaults(p.thresholdMax, Infinity);\r\n        this.normalize = defaults(p.normalize, false);\r\n        this.volume = volume;\r\n    }\r\n    getPositionFromCoordinate(coord) {\r\n        const dim = this.dimension;\r\n        const v = this.volume;\r\n        const m = v.matrix;\r\n        const mp = new Vector3().setFromMatrixPosition(m)[dim];\r\n        const ms = new Vector3().setFromMatrixScale(m)[dim];\r\n        let vn;\r\n        if (dim === 'x') {\r\n            vn = v.nx;\r\n        }\r\n        else if (dim === 'y') {\r\n            vn = v.ny;\r\n        }\r\n        else {\r\n            vn = v.nz;\r\n        }\r\n        return Math.round((((coord - mp) / (vn / 100)) + 1) / ms);\r\n    }\r\n    getData(params) {\r\n        params = params || {};\r\n        const v = this.volume;\r\n        const d = v.data;\r\n        const m = v.matrix;\r\n        let p;\r\n        if (this.positionType === 'coordinate') {\r\n            p = this.getPositionFromCoordinate(this.position);\r\n        }\r\n        else {\r\n            p = this.position;\r\n        }\r\n        function pos(dimLen) {\r\n            return Math.round((dimLen / 100) * (p - 1));\r\n        }\r\n        function index(x, y, z, i) {\r\n            return (z * v.ny * v.nx + y * v.nx + x) * 3 + i;\r\n        }\r\n        const position = new Float32Array(4 * 3);\r\n        const vec = new Vector3();\r\n        let width, height;\r\n        let x;\r\n        let y;\r\n        let z;\r\n        let x0 = 0;\r\n        let y0 = 0;\r\n        let z0 = 0;\r\n        let nx = v.nx;\r\n        let ny = v.ny;\r\n        let nz = v.nz;\r\n        function setVec(x, y, z, offset) {\r\n            vec.set(x, y, z).applyMatrix4(m).toArray(position, offset);\r\n        }\r\n        if (this.dimension === 'x') {\r\n            x = pos(v.nx);\r\n            y = v.ny - 1;\r\n            z = v.nz - 1;\r\n            width = v.nz;\r\n            height = v.ny;\r\n            x0 = x;\r\n            nx = x0 + 1;\r\n            setVec(x, 0, 0, 0);\r\n            setVec(x, y, 0, 3);\r\n            setVec(x, 0, z, 6);\r\n            setVec(x, y, z, 9);\r\n        }\r\n        else if (this.dimension === 'y') {\r\n            x = v.nx - 1;\r\n            y = pos(v.ny);\r\n            z = v.nz - 1;\r\n            width = v.nz;\r\n            height = v.nx;\r\n            y0 = y;\r\n            ny = y0 + 1;\r\n            setVec(0, y, 0, 0);\r\n            setVec(x, y, 0, 3);\r\n            setVec(0, y, z, 6);\r\n            setVec(x, y, z, 9);\r\n        }\r\n        else if (this.dimension === 'z') {\r\n            x = v.nx - 1;\r\n            y = v.ny - 1;\r\n            z = pos(v.nz);\r\n            width = v.nx;\r\n            height = v.ny;\r\n            z0 = z;\r\n            nz = z0 + 1;\r\n            setVec(0, 0, z, 0);\r\n            setVec(0, y, z, 3);\r\n            setVec(x, 0, z, 6);\r\n            setVec(x, y, z, 9);\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const imageData = new Uint8Array(width * height * 4);\r\n        const pickingArray = new Float32Array(width * height);\r\n        let tMin, tMax;\r\n        if (this.thresholdType === 'sigma') {\r\n            tMin = v.getValueForSigma(this.thresholdMin);\r\n            tMax = v.getValueForSigma(this.thresholdMax);\r\n        }\r\n        else {\r\n            tMin = this.thresholdMin;\r\n            tMax = this.thresholdMax;\r\n        }\r\n        const cp = Object.assign({}, params.colorParams, { volume: v });\r\n        if (this.normalize) {\r\n            cp.domain = [0, 1];\r\n        }\r\n        const colormaker = ColormakerRegistry.getScheme(cp);\r\n        const tmp = new Float32Array(3);\r\n        const scale = colormaker.getScale();\r\n        let min = 0, max, diff = 0;\r\n        if (this.normalize) {\r\n            min = +Infinity;\r\n            max = -Infinity;\r\n            for (let iy = y0; iy < ny; ++iy) {\r\n                for (let ix = x0; ix < nx; ++ix) {\r\n                    for (let iz = z0; iz < nz; ++iz) {\r\n                        const idx = index(ix, iy, iz, 0) / 3;\r\n                        const val = d[idx];\r\n                        if (val < min)\r\n                            min = val;\r\n                        if (val > max)\r\n                            max = val;\r\n                    }\r\n                }\r\n            }\r\n            diff = max - min;\r\n        }\r\n        for (let iy = y0; iy < ny; ++iy) {\r\n            for (let ix = x0; ix < nx; ++ix) {\r\n                for (let iz = z0; iz < nz; ++iz) {\r\n                    const idx = index(ix, iy, iz, 0) / 3;\r\n                    let val = d[idx];\r\n                    if (this.normalize) {\r\n                        val = (val - min) / diff;\r\n                    }\r\n                    colormaker.colorToArray(scale(val), tmp);\r\n                    imageData[i] = Math.round(tmp[0] * 255);\r\n                    imageData[i + 1] = Math.round(tmp[1] * 255);\r\n                    imageData[i + 2] = Math.round(tmp[2] * 255);\r\n                    imageData[i + 3] = (val > tMin && val < tMax) ? 255 : 0;\r\n                    pickingArray[j] = idx;\r\n                    ++j;\r\n                    i += 4;\r\n                }\r\n            }\r\n        }\r\n        const picking = new SlicePicker(pickingArray, v);\r\n        return { position, imageData, width, height, picking };\r\n    }\r\n}\r\nexport default VolumeSlice;\r\n//# sourceMappingURL=volume-slice.js.map","/**\r\n * @file Slice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport Representation from './representation.js';\r\nimport ImageBuffer from '../buffer/image-buffer.js';\r\nimport VolumeSlice from '../surface/volume-slice.js';\r\n/**\r\n * Slice representation\r\n */\r\nclass SliceRepresentation extends Representation {\r\n    /**\r\n     * Create Slice representation object\r\n     * @param {Volume} surface - the volume to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {SliceRepresentationParameters} params - slice representation parameters\r\n     */\r\n    constructor(volume, viewer, params) {\r\n        super(volume, viewer, params);\r\n        this.type = 'slice';\r\n        this.parameters = Object.assign({\r\n            filter: {\r\n                type: 'select',\r\n                buffer: true,\r\n                options: {\r\n                    'nearest': 'nearest',\r\n                    'linear': 'linear',\r\n                    'cubic-bspline': 'cubic-bspline',\r\n                    'cubic-catmulrom': 'cubic-catmulrom',\r\n                    'cubic-mitchell': 'cubic-mitchell'\r\n                }\r\n            },\r\n            positionType: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'percent': 'percent', 'coordinate': 'coordinate'\r\n                }\r\n            },\r\n            position: {\r\n                type: 'range',\r\n                step: 0.1,\r\n                max: 100,\r\n                min: 1,\r\n                rebuild: true\r\n            },\r\n            dimension: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'x': 'x', 'y': 'y', 'z': 'z'\r\n                }\r\n            },\r\n            thresholdType: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'value': 'value', 'sigma': 'sigma'\r\n                }\r\n            },\r\n            thresholdMin: {\r\n                type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n            },\r\n            thresholdMax: {\r\n                type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n            },\r\n            normalize: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            flatShaded: null,\r\n            side: null,\r\n            wireframe: null,\r\n            linewidth: null,\r\n            colorScheme: null,\r\n            roughness: null,\r\n            metalness: null,\r\n            diffuse: null\r\n        });\r\n        this.volume = volume;\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const v = this.volume;\r\n        const p = params || {};\r\n        p.colorDomain = defaults(p.colorDomain, [v.min, v.max]);\r\n        p.colorScheme = defaults(p.colorScheme, 'value');\r\n        p.colorScale = defaults(p.colorScale, 'Spectral');\r\n        this.colorScheme = 'value';\r\n        this.dimension = defaults(p.dimension, 'x');\r\n        this.filter = defaults(p.filter, 'cubic-bspline');\r\n        this.positionType = defaults(p.positionType, 'percent');\r\n        this.position = defaults(p.position, 30);\r\n        this.thresholdType = defaults(p.thresholdType, 'sigma');\r\n        this.thresholdMin = defaults(p.thresholdMin, -Infinity);\r\n        this.thresholdMax = defaults(p.thresholdMax, Infinity);\r\n        this.normalize = defaults(p.normalize, false);\r\n        super.init(p);\r\n        this.build();\r\n    }\r\n    attach(callback) {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.add(buffer);\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n    create() {\r\n        const volumeSlice = new VolumeSlice(this.volume, {\r\n            positionType: this.positionType,\r\n            position: this.position,\r\n            dimension: this.dimension,\r\n            thresholdType: this.thresholdType,\r\n            thresholdMin: this.thresholdMin,\r\n            thresholdMax: this.thresholdMax,\r\n            normalize: this.normalize\r\n        });\r\n        const sliceBuffer = new ImageBuffer(volumeSlice.getData({ colorParams: this.getColorParams() }), this.getBufferParams({\r\n            filter: this.filter\r\n        }));\r\n        this.bufferList.push(sliceBuffer);\r\n    }\r\n}\r\nexport default SliceRepresentation;\r\n//# sourceMappingURL=slice-representation.js.map","import { Structure } from \"../ngl\";\r\nclass DnaOrigamiNanostructure extends Structure {\r\n    constructor(name, elementsPosition, path = \"\") {\r\n        super(name, path);\r\n        this._elementsPosition = elementsPosition;\r\n    }\r\n    get type() {\r\n        return \"DnaOrigamiNanostructure\";\r\n    }\r\n    get elementsPosition() {\r\n        return this._elementsPosition;\r\n    }\r\n}\r\nexport default DnaOrigamiNanostructure;\r\n//# sourceMappingURL=DnaOrigamiNanostructure.js.map","import Shape from \"../geometry/shape\";\r\nimport Representation from \"../representation/representation\";\r\nimport { defaults } from '../utils';\r\nclass MultiscaleRepresentation extends Representation {\r\n    constructor(structure, viewer, params) {\r\n        const p = params || {};\r\n        super(structure, viewer, p);\r\n        this.type = \"multiscale\";\r\n        this.parameters = Object.assign({\r\n            desiredScale: {\r\n                type: 'range', step: 1, max: 2, min: 0,\r\n            }\r\n        }, this.parameters);\r\n        this.structure = structure;\r\n        this.init(p);\r\n    }\r\n    init(params) {\r\n        super.init(params);\r\n        this.currentScale = defaults(params.desiredScale, 0);\r\n        this.build();\r\n    }\r\n    create() {\r\n        console.log(\"MultiRepr CREATE: \", this.currentScale, this.structure.elementsPosition, this.parameters);\r\n        // Multi-scale idea is implemented here\r\n        switch (this.currentScale) {\r\n            case 0:\r\n                this.currentShape = new Shape(\"Scale level 0\", { disableImpostor: true });\r\n                console.log(\"LEVEL0\");\r\n                for (let i = 0; i < this.structure.elementsPosition.length; ++i) {\r\n                    this.currentShape.addSphere(this.structure.elementsPosition[i], [1, .1, 0], 2.5, \"Sphere_\" + i.toString());\r\n                }\r\n                break;\r\n            case 1:\r\n                this.currentShape = new Shape(\"Scale level 1\");\r\n                for (let i = 1; i < this.structure.elementsPosition.length; ++i) {\r\n                    this.currentShape.addCylinder(this.structure.elementsPosition[i - 1], this.structure.elementsPosition[i], [1, .1, 0], 2.5, \"Cylinder_\" + i.toString());\r\n                }\r\n                break;\r\n            default:\r\n                this.currentShape = new Shape(\"Scale level 2\");\r\n                for (let i = 1; i < this.structure.elementsPosition.length; ++i) {\r\n                    this.currentShape.addArrow(this.structure.elementsPosition[i - 1], this.structure.elementsPosition[i], [1, .1, 0], 2.5, \"Arrow_\" + i.toString());\r\n                }\r\n                break;\r\n        }\r\n        this.bufferList.push.apply(this.bufferList, this.currentShape.getBufferList());\r\n    }\r\n    build(updateWhat) {\r\n        super.build(updateWhat);\r\n        console.log(\"MultiRepr BUILD: \", updateWhat);\r\n    }\r\n    clear() {\r\n        var _a;\r\n        console.log(\"MultiRepr CLEAR\");\r\n        (_a = this.currentShape) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        super.clear();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        console.log(\"MultiRepr DISPOSE\");\r\n        (_a = this.currentShape) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        super.dispose();\r\n    }\r\n    setParameters(params, what = {}, rebuild = false) {\r\n        if (params.desiredScale !== undefined) {\r\n            this.currentScale = params.desiredScale;\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        console.log(\"MultiRepr SET_PARAMETERS\", params, what, rebuild);\r\n        return this;\r\n    }\r\n    attach(callback) {\r\n        this.bufferList.forEach(buffer => {\r\n            this.viewer.add(buffer);\r\n            buffer.setParameters(this.getBufferParams());\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n}\r\nexport default MultiscaleRepresentation;\r\n//# sourceMappingURL=MultiscaleRepresentation.js.map","/**\r\n * @file Representation Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, RepresentationRegistry } from '../globals';\r\nimport Structure from '../structure/structure';\r\nimport Surface from '../surface/surface';\r\nimport Volume from '../surface/volume';\r\nimport Shape from '../geometry/shape';\r\nimport BufferRepresentation from './buffer-representation';\r\nimport SurfaceRepresentation from './surface-representation';\r\nimport DotRepresentation from './dot-representation';\r\nimport SliceRepresentation from './slice-representation';\r\nimport DnaOrigamiNanostructure from '../marilia_custom_classes/DnaOrigamiNanostructure';\r\nimport MultiscaleRepresentation from '../marilia_custom_classes/MultiscaleRepresentation';\r\nfunction logReprUnknown(type) {\r\n    Log.error(`makeRepresentation: representation type ${type} unknown`);\r\n}\r\nexport function makeRepresentation(type, object, viewer, params) {\r\n    if (Debug)\r\n        Log.time('makeRepresentation ' + type);\r\n    var ReprClass;\r\n    if (object instanceof DnaOrigamiNanostructure) {\r\n        if (type === \"multiscale\") {\r\n            ReprClass = MultiscaleRepresentation;\r\n        }\r\n        else {\r\n            logReprUnknown(type);\r\n            return;\r\n        }\r\n    }\r\n    else if (object instanceof Structure) {\r\n        ReprClass = RepresentationRegistry.get(type);\r\n        if (!ReprClass) {\r\n            logReprUnknown(type);\r\n            return;\r\n        }\r\n    }\r\n    else if (object instanceof Surface) {\r\n        if (type === 'surface') {\r\n            ReprClass = SurfaceRepresentation;\r\n        }\r\n        else if (type === 'dot') {\r\n            ReprClass = DotRepresentation;\r\n        }\r\n        else {\r\n            logReprUnknown(type);\r\n            return;\r\n        }\r\n    }\r\n    else if (object instanceof Volume) {\r\n        if (type === 'surface') {\r\n            ReprClass = SurfaceRepresentation;\r\n        }\r\n        else if (type === 'dot') {\r\n            ReprClass = DotRepresentation;\r\n        }\r\n        else if (type === 'slice') {\r\n            ReprClass = SliceRepresentation;\r\n        }\r\n        else {\r\n            logReprUnknown(type);\r\n            return;\r\n        }\r\n    }\r\n    else if (object instanceof Shape) {\r\n        ReprClass = BufferRepresentation;\r\n        object = object.getBufferList();\r\n    }\r\n    else if (type === 'buffer') {\r\n        ReprClass = BufferRepresentation;\r\n    }\r\n    else {\r\n        Log.error('makeRepresentation: object ' + object + ' unknown');\r\n        return;\r\n    }\r\n    const repr = new ReprClass(object, viewer, params);\r\n    if (Debug)\r\n        Log.timeEnd('makeRepresentation ' + type);\r\n    return repr;\r\n}\r\n//# sourceMappingURL=representation-utils.js.map","/**\r\n * @file Element\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { createParams } from '../utils';\r\nimport { generateUUID } from '../math/math-utils';\r\nexport const ElementDefaultParameters = {\r\n    name: 'some element',\r\n    status: ''\r\n};\r\n/**\r\n * Element base class\r\n */\r\nclass Element {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {ElementParameters} params - component parameters\r\n     */\r\n    constructor(stage, params = {}) {\r\n        this.stage = stage;\r\n        /**\r\n         * Events emitted by the element\r\n         */\r\n        this.signals = {\r\n            statusChanged: new Signal(),\r\n            nameChanged: new Signal(),\r\n            disposed: new Signal()\r\n        };\r\n        this.parameters = createParams(params, this.defaultParameters);\r\n        this.uuid = generateUUID();\r\n    }\r\n    get defaultParameters() { return ElementDefaultParameters; }\r\n    get name() { return this.parameters.name; }\r\n    setStatus(value) {\r\n        this.parameters.status = value;\r\n        this.signals.statusChanged.dispatch(value);\r\n        return this;\r\n    }\r\n    setName(value) {\r\n        this.parameters.name = value;\r\n        this.signals.nameChanged.dispatch(value);\r\n        return this;\r\n    }\r\n    dispose() {\r\n        this.signals.disposed.dispatch();\r\n    }\r\n}\r\nexport default Element;\r\n//# sourceMappingURL=element.js.map","/**\r\n * @file Representation Element\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport Element, { ElementDefaultParameters } from './element';\r\nexport const RepresentationElementDefaultParameters = Object.assign({\r\n    visible: true\r\n}, ElementDefaultParameters);\r\n/**\r\n * Element wrapping a {@link Representation} object\r\n */\r\nclass RepresentationElement extends Element {\r\n    /**\r\n     * Create representation component\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Representation} repr - representation object to wrap\r\n     * @param {RepresentationParameters} [params] - component parameters\r\n     * @param {Component} [parent] - parent component\r\n     */\r\n    constructor(stage, repr, params = {}, parent) {\r\n        super(stage, Object.assign({ name: repr.type }, params));\r\n        this.parent = parent;\r\n        this.signals = Object.assign({\r\n            visibilityChanged: new Signal(),\r\n            parametersChanged: new Signal()\r\n        }, this.signals);\r\n        this.setRepresentation(repr);\r\n    }\r\n    get defaultParameters() { return RepresentationElementDefaultParameters; }\r\n    get visible() { return this.parameters.visible; }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'representation'; }\r\n    getType() {\r\n        return this.repr.type;\r\n    }\r\n    setRepresentation(repr) {\r\n        this._disposeRepresentation();\r\n        this.repr = repr;\r\n        // this.name = repr.type;\r\n        this.stage.tasks.listen(this.repr.tasks);\r\n        this.updateVisibility();\r\n    }\r\n    _disposeRepresentation() {\r\n        if (this.repr) {\r\n            this.stage.tasks.unlisten(this.repr.tasks);\r\n            this.repr.dispose();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.parent && this.parent.hasRepresentation(this)) {\r\n            this.parent.removeRepresentation(this);\r\n        }\r\n        else {\r\n            this._disposeRepresentation();\r\n            this.signals.disposed.dispatch();\r\n        }\r\n    }\r\n    /**\r\n     * Set the visibility of the component, takes parent visibility into account\r\n     * @param {Boolean} value - visibility flag\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    setVisibility(value) {\r\n        this.parameters.visible = value;\r\n        this.updateVisibility();\r\n        this.signals.visibilityChanged.dispatch(this.parameters.visible);\r\n        return this;\r\n    }\r\n    getVisibility() {\r\n        if (this.parent) {\r\n            return this.parent.parameters.visible && this.parameters.visible;\r\n        }\r\n        else {\r\n            return this.parameters.visible;\r\n        }\r\n    }\r\n    /**\r\n     * Toggle visibility of the component, takes parent visibility into account\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    toggleVisibility() {\r\n        return this.setVisibility(!this.parameters.visible);\r\n    }\r\n    updateVisibility() {\r\n        this.repr.setVisibility(this.getVisibility());\r\n    }\r\n    /**\r\n     * Set selection\r\n     * @param {Object} what - flags indicating what attributes to update\r\n     * @param {Boolean} what.position - update position attribute\r\n     * @param {Boolean} what.color - update color attribute\r\n     * @param {Boolean} what.radius - update radius attribute\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    update(what) {\r\n        this.repr.update(what); // TODO\r\n        return this;\r\n    }\r\n    build(params) {\r\n        this.repr.build(params);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set selection\r\n     * @param {String} string - selection string\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    setSelection(string) {\r\n        const repr = this.repr; // TODO\r\n        if (repr.setSelection) {\r\n            repr.setSelection(string);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set representation parameters\r\n     * @param {RepresentationParameters} params - parameter object\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    setParameters(params) {\r\n        this.repr.setParameters(params);\r\n        this.signals.parametersChanged.dispatch(this.repr.getParameters());\r\n        return this;\r\n    }\r\n    /**\r\n     * Get representation parameters\r\n     * @return {RepresentationParameters} parameter object\r\n     */\r\n    getParameters() {\r\n        return this.repr.getParameters();\r\n    }\r\n    /**\r\n     * Set color\r\n     * @param {String|Color|Hex} value - color value\r\n     * @return {RepresentationElement} this object\r\n     */\r\n    setColor(value) {\r\n        this.repr.setColor(value);\r\n        return this;\r\n    }\r\n}\r\nexport default RepresentationElement;\r\n//# sourceMappingURL=representation-element.js.map","/**\r\n * @file Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Quaternion, Matrix4, Euler, Box3 } from 'three';\r\nimport { Signal } from 'signals';\r\nimport { defaults, createParams } from '../utils';\r\nimport { generateUUID } from '../math/math-utils';\r\nimport Annotation from '../component/annotation';\r\nimport ComponentControls from '../controls/component-controls';\r\nimport { makeRepresentation } from '../representation/representation-utils';\r\nimport RepresentationElement from './representation-element';\r\nconst _m = new Matrix4();\r\nconst _v = new Vector3();\r\nexport const ComponentDefaultParameters = {\r\n    name: '',\r\n    status: '',\r\n    visible: true\r\n};\r\n/**\r\n * Base class for components\r\n */\r\nclass Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {ComponentParameters} params - parameter object\r\n     */\r\n    constructor(stage, object, params = {}) {\r\n        this.stage = stage;\r\n        this.object = object;\r\n        /**\r\n         * Events emitted by the component\r\n         */\r\n        this.signals = {\r\n            representationAdded: new Signal(),\r\n            representationRemoved: new Signal(),\r\n            visibilityChanged: new Signal(),\r\n            matrixChanged: new Signal(),\r\n            statusChanged: new Signal(),\r\n            nameChanged: new Signal(),\r\n            disposed: new Signal()\r\n        };\r\n        this.reprList = [];\r\n        this.annotationList = [];\r\n        this.matrix = new Matrix4();\r\n        this.position = new Vector3();\r\n        this.quaternion = new Quaternion();\r\n        this.scale = new Vector3(1, 1, 1);\r\n        this.transform = new Matrix4();\r\n        this.parameters = createParams(params, this.defaultParameters);\r\n        this.uuid = generateUUID();\r\n        this.viewer = stage.viewer;\r\n        this.controls = new ComponentControls(this);\r\n    }\r\n    get defaultParameters() { return ComponentDefaultParameters; }\r\n    get name() { return this.parameters.name; }\r\n    get status() { return this.parameters.status; }\r\n    get visible() { return this.parameters.visible; }\r\n    /**\r\n     * Set position transform\r\n     *\r\n     * @example\r\n     * // translate by 25 angstrom along x axis\r\n     * component.setPosition([ 25, 0, 0 ]);\r\n     *\r\n     * @param {Vector3|Array} p - the coordinates\r\n     * @return {Component} this object\r\n     */\r\n    setPosition(p) {\r\n        if (Array.isArray(p)) {\r\n            this.position.fromArray(p);\r\n        }\r\n        else {\r\n            this.position.copy(p);\r\n        }\r\n        this.updateMatrix();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set local rotation transform\r\n     * (for global rotation use setTransform)\r\n     *\r\n     * @example\r\n     * // rotate by 2 degree radians on x axis\r\n     * component.setRotation( [ 2, 0, 0 ] );\r\n     *\r\n     * @param {Quaternion|Euler|Array} r - the rotation\r\n     * @return {Component} this object\r\n     */\r\n    setRotation(r) {\r\n        if (Array.isArray(r)) {\r\n            if (r.length === 3) {\r\n                const e = new Euler().fromArray(r);\r\n                this.quaternion.setFromEuler(e);\r\n            }\r\n            else {\r\n                this.quaternion.fromArray(r);\r\n            }\r\n        }\r\n        else if (r instanceof Euler) {\r\n            this.quaternion.setFromEuler(r);\r\n        }\r\n        else {\r\n            this.quaternion.copy(r);\r\n        }\r\n        this.updateMatrix();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set scale transform\r\n     *\r\n     * @example\r\n     * // scale by factor of two\r\n     * component.setScale( 2 );\r\n     *\r\n     * @param {Number} s - the scale\r\n     * @return {Component} this object\r\n     */\r\n    setScale(s) {\r\n        this.scale.set(s, s, s);\r\n        this.updateMatrix();\r\n        return this;\r\n    }\r\n    /**\r\n     * Set general transform. Is applied before and in addition\r\n     * to the position, rotation and scale transformations\r\n     *\r\n     * @example\r\n     * component.setTransform( matrix );\r\n     *\r\n     * @param {Matrix4} m - the matrix\r\n     * @return {Component} this object\r\n     */\r\n    setTransform(m) {\r\n        this.transform.copy(m);\r\n        this.updateMatrix();\r\n        return this;\r\n    }\r\n    updateMatrix() {\r\n        const c = this.getCenterUntransformed(_v);\r\n        this.matrix.makeTranslation(-c.x, -c.y, -c.z);\r\n        _m.makeRotationFromQuaternion(this.quaternion);\r\n        this.matrix.premultiply(_m);\r\n        _m.makeScale(this.scale.x, this.scale.y, this.scale.z);\r\n        this.matrix.premultiply(_m);\r\n        const p = this.position;\r\n        _m.makeTranslation(p.x + c.x, p.y + c.y, p.z + c.z);\r\n        this.matrix.premultiply(_m);\r\n        this.matrix.premultiply(this.transform);\r\n        this.updateRepresentationMatrices();\r\n        this.stage.viewer.updateBoundingBox();\r\n        this.signals.matrixChanged.dispatch(this.matrix);\r\n    }\r\n    /**\r\n     * Propogates our matrix to each representation\r\n     */\r\n    updateRepresentationMatrices() {\r\n        this.reprList.forEach(repr => {\r\n            repr.setParameters({ matrix: this.matrix });\r\n        });\r\n    }\r\n    /**\r\n     * Add an anotation object\r\n     * @param {Vector3} position - the 3d position\r\n     * @param {String|Element} content - the HTML content\r\n     * @param {Object} [params] - parameters\r\n     * @param {Integer} params.offsetX - 2d offset in x direction\r\n     * @param {Integer} params.offsetY - 2d offset in y direction\r\n     * @return {Annotation} the added annotation object\r\n     */\r\n    addAnnotation(position, content, params) {\r\n        const annotation = new Annotation(this, position, content, params);\r\n        this.annotationList.push(annotation);\r\n        return annotation;\r\n    }\r\n    /**\r\n     * Iterator over each annotation and executing the callback\r\n     * @param  {Function} callback - function to execute\r\n     * @return {undefined}\r\n     */\r\n    eachAnnotation(callback) {\r\n        this.annotationList.slice().forEach(callback);\r\n    }\r\n    /**\r\n     * Remove the give annotation from the component\r\n     * @param {Annotation} annotation - the annotation to remove\r\n     * @return {undefined}\r\n     */\r\n    removeAnnotation(annotation) {\r\n        const idx = this.annotationList.indexOf(annotation);\r\n        if (idx !== -1) {\r\n            this.annotationList.splice(idx, 1);\r\n            annotation.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Remove all annotations from the component\r\n     * @return {undefined}\r\n     */\r\n    removeAllAnnotations() {\r\n        this.eachAnnotation(annotation => annotation.dispose());\r\n        this.annotationList.length = 0;\r\n    }\r\n    /**\r\n     * Add a new representation to the component\r\n     * @param {String} type - the name of the representation\r\n     * @param {Object} object - the object on which the representation should be based\r\n     * @param {RepresentationParameters} [params] - representation parameters\r\n     * @return {RepresentationElement} the created representation wrapped into\r\n     *                                   a representation element object\r\n     */\r\n    _addRepresentation(type, object, params, hidden = false) {\r\n        const p = params || {};\r\n        const sp = this.stage.getParameters(); // TODO\r\n        p.matrix = this.matrix.clone();\r\n        p.quality = p.quality || sp.quality;\r\n        p.disableImpostor = defaults(p.disableImpostor, !sp.impostor);\r\n        p.useWorker = defaults(p.useWorker, sp.workerDefault);\r\n        p.visible = defaults(p.visible, true);\r\n        const p2 = Object.assign({}, p, { visible: this.parameters.visible && p.visible });\r\n        const repr = makeRepresentation(type, object, this.viewer, p2);\r\n        const reprElem = new RepresentationElement(this.stage, repr, p, this);\r\n        if (!hidden) {\r\n            this.reprList.push(reprElem);\r\n            this.signals.representationAdded.dispatch(reprElem);\r\n        }\r\n        return reprElem;\r\n    }\r\n    addBufferRepresentation(buffer, params) {\r\n        return this._addRepresentation.call(this, 'buffer', buffer, params);\r\n    }\r\n    hasRepresentation(repr) {\r\n        return this.reprList.indexOf(repr) !== -1;\r\n    }\r\n    /**\r\n     * Iterator over each representation and executing the callback\r\n     * @param  {Function} callback - function to execute\r\n     * @return {undefined}\r\n     */\r\n    eachRepresentation(callback) {\r\n        this.reprList.slice().forEach(callback);\r\n    }\r\n    /**\r\n     * Removes a representation component\r\n     * @param {RepresentationElement} repr - the representation element\r\n     * @return {undefined}\r\n     */\r\n    removeRepresentation(repr) {\r\n        const idx = this.reprList.indexOf(repr);\r\n        if (idx !== -1) {\r\n            this.reprList.splice(idx, 1);\r\n            repr.dispose();\r\n            this.signals.representationRemoved.dispatch(repr);\r\n        }\r\n    }\r\n    updateRepresentations(what) {\r\n        this.reprList.forEach(repr => repr.update(what));\r\n        this.stage.viewer.requestRender();\r\n    }\r\n    /**\r\n     * Removes all representation components\r\n     * @return {undefined}\r\n     */\r\n    removeAllRepresentations() {\r\n        this.eachRepresentation(repr => repr.dispose());\r\n    }\r\n    dispose() {\r\n        this.removeAllAnnotations();\r\n        this.removeAllRepresentations();\r\n        delete this.annotationList;\r\n        delete this.reprList;\r\n        this.signals.disposed.dispatch();\r\n    }\r\n    /**\r\n     * Set the visibility of the component, including added representations\r\n     * @param {Boolean} value - visibility flag\r\n     * @return {Component} this object\r\n     */\r\n    setVisibility(value) {\r\n        this.parameters.visible = value;\r\n        this.eachRepresentation((repr) => repr.updateVisibility());\r\n        this.eachAnnotation((annotation) => annotation.updateVisibility());\r\n        this.signals.visibilityChanged.dispatch(value);\r\n        return this;\r\n    }\r\n    setStatus(value) {\r\n        this.parameters.status = value;\r\n        this.signals.statusChanged.dispatch(value);\r\n        return this;\r\n    }\r\n    setName(value) {\r\n        this.parameters.name = value;\r\n        this.signals.nameChanged.dispatch(value);\r\n        return this;\r\n    }\r\n    /**\r\n     * @return {Box3} the component's bounding box\r\n     */\r\n    getBox(...args) {\r\n        return this.getBoxUntransformed(...args)\r\n            .clone().applyMatrix4(this.matrix);\r\n    }\r\n    /**\r\n     * @return {Vector3} the component's center position\r\n     */\r\n    getCenter(...args) {\r\n        return this.getCenterUntransformed(...args)\r\n            .clone().applyMatrix4(this.matrix);\r\n    }\r\n    getZoom(...args) {\r\n        return this.stage.getZoomForBox(this.getBox(...args));\r\n    }\r\n    /**\r\n     * @abstract\r\n     * @return {Box3} the untransformed component's bounding box\r\n     */\r\n    getBoxUntransformed(...args) {\r\n        return new Box3();\r\n    }\r\n    getCenterUntransformed(...args) {\r\n        return this.getBoxUntransformed().getCenter(new Vector3());\r\n    }\r\n    /**\r\n     * Automatically center and zoom the component\r\n     * @param  {Integer} [duration] - duration of the animation, defaults to 0\r\n     * @return {undefined}\r\n     */\r\n    autoView(duration) {\r\n        this.stage.animationControls.zoomMove(this.getCenter(), this.getZoom(), defaults(duration, 0));\r\n    }\r\n}\r\nexport default Component;\r\n//# sourceMappingURL=component.js.map","/**\r\n * @file Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass Collection {\r\n    constructor(list = []) {\r\n        this.list = list;\r\n        // remove elements from list when they get disposed\r\n        const n = list.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const elm = list[i];\r\n            elm.signals.disposed.add(this._remove, this);\r\n        }\r\n    }\r\n    _remove(elm) {\r\n        const idx = this.list.indexOf(elm);\r\n        if (idx !== -1) {\r\n            this.list.splice(idx, 1);\r\n        }\r\n    }\r\n    get first() {\r\n        return this.list.length > 0 ? this.list[0] : undefined;\r\n    }\r\n    forEach(fn) {\r\n        this.list.forEach(fn);\r\n        return this;\r\n    }\r\n    dispose() {\r\n        return this.forEach((elm) => elm.dispose());\r\n    }\r\n}\r\nexport default Collection;\r\n//# sourceMappingURL=collection.js.map","/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Collection from './collection.js';\r\nclass RepresentationCollection extends Collection {\r\n    setParameters(params) {\r\n        return this.forEach((repr) => repr.setParameters(params));\r\n    }\r\n    setVisibility(value) {\r\n        return this.forEach((repr) => repr.setVisibility(value));\r\n    }\r\n    setSelection(string) {\r\n        return this.forEach((repr) => repr.setSelection(string));\r\n    }\r\n    setColor(color) {\r\n        return this.forEach((repr) => repr.setColor(color));\r\n    }\r\n    update(what) {\r\n        return this.forEach((repr) => repr.update(what));\r\n    }\r\n    build(params) {\r\n        return this.forEach((repr) => repr.build(params));\r\n    }\r\n    dispose(params) {\r\n        return this.forEach((repr) => repr.dispose());\r\n    }\r\n}\r\nexport default RepresentationCollection;\r\n//# sourceMappingURL=representation-collection.js.map","/**\r\n * @file Trajectory Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport Element, { ElementDefaultParameters } from './element';\r\n/**\r\n * Trajectory component parameter object.\r\n * @typedef {Object} TrajectoryComponentParameters - component parameters\r\n *\r\n * @property {String} name - component name\r\n * @property {Integer} initialFrame - initial frame the trajectory is set to\r\n * @property {Integer} defaultStep - default step size to be used by trajectory players\r\n * @property {Integer} defaultTimeout - default timeout to be used by trajectory players\r\n * @property {String} defaultInterpolateType - one of \"\" (empty string), \"linear\" or \"spline\"\r\n * @property {Integer} defaultInterpolateStep - window size used for interpolation\r\n * @property {String} defaultMode - either \"loop\" or \"once\"\r\n * @property {String} defaultDirection - either \"forward\" or \"backward\"\r\n */\r\nexport const TrajectoryElementDefaultParameters = Object.assign({\r\n    defaultStep: 1,\r\n    defaultTimeout: 50,\r\n    defaultInterpolateType: '',\r\n    defaultInterpolateStep: 5,\r\n    defaultMode: 'loop',\r\n    defaultDirection: 'forward',\r\n    initialFrame: 0\r\n}, ElementDefaultParameters);\r\n/**\r\n * Component wrapping a {@link Trajectory} object\r\n */\r\nclass TrajectoryElement extends Element {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Trajectory} trajectory - the trajectory object\r\n     * @param {TrajectoryComponentParameters} params - component parameters\r\n     * @param {StructureComponent} parent - the parent structure\r\n     */\r\n    constructor(stage, trajectory, params = {}) {\r\n        super(stage, Object.assign({ name: trajectory.name }, params));\r\n        this.trajectory = trajectory;\r\n        this.signals = Object.assign(this.signals, {\r\n            frameChanged: new Signal(),\r\n            playerChanged: new Signal(),\r\n            countChanged: new Signal(),\r\n            parametersChanged: new Signal()\r\n        });\r\n        // signals\r\n        trajectory.signals.frameChanged.add((i) => {\r\n            this.signals.frameChanged.dispatch(i);\r\n        });\r\n        trajectory.signals.playerChanged.add((player) => {\r\n            this.signals.playerChanged.dispatch(player);\r\n        });\r\n        trajectory.signals.countChanged.add((n) => {\r\n            this.signals.countChanged.dispatch(n);\r\n        });\r\n        //\r\n        if (params.initialFrame !== undefined) {\r\n            this.setFrame(params.initialFrame);\r\n        }\r\n    }\r\n    get defaultParameters() { return TrajectoryElementDefaultParameters; }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'trajectory'; }\r\n    /**\r\n     * Set the frame of the trajectory\r\n     * @param {Integer} i - frame number\r\n     * @return {undefined}\r\n     */\r\n    setFrame(i) {\r\n        this.trajectory.setFrame(i);\r\n    }\r\n    /**\r\n     * Set trajectory parameters\r\n     * @param {TrajectoryParameters} params - trajectory parameters\r\n     * @return {undefined}\r\n     */\r\n    setParameters(params = {}) {\r\n        this.trajectory.setParameters(params);\r\n        this.signals.parametersChanged.dispatch(params);\r\n    }\r\n    dispose() {\r\n        this.trajectory.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\nexport default TrajectoryElement;\r\n//# sourceMappingURL=trajectory-element.js.map","/**\r\n * @file Frames\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport default class Frames {\r\n    constructor(name, path) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.coordinates = [];\r\n        this.boxes = [];\r\n        this.times = [];\r\n        this.timeOffset = 0;\r\n        this.deltaTime = 1;\r\n    }\r\n    get type() { return 'Frames'; }\r\n}\r\n//# sourceMappingURL=frames.js.map","/**\r\n * @file Superposition\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log } from '../globals';\r\nimport { Matrix, svd, meanRows, subRows, transpose, multiplyABt, invert3x3, multiply3x3, mat3x3determinant, multiply } from '../math/matrix-utils.js';\r\nimport Structure from '../structure/structure';\r\nclass Superposition {\r\n    constructor(atoms1, atoms2) {\r\n        // allocate & init data structures\r\n        this.A = new Matrix(3, 3);\r\n        this.W = new Matrix(1, 3);\r\n        this.U = new Matrix(3, 3);\r\n        this.V = new Matrix(3, 3);\r\n        this.VH = new Matrix(3, 3);\r\n        this.R = new Matrix(3, 3);\r\n        this.tmp = new Matrix(3, 3);\r\n        this.c = new Matrix(3, 3);\r\n        let n1;\r\n        if (atoms1 instanceof Structure) {\r\n            n1 = atoms1.atomCount;\r\n        }\r\n        else if (atoms1 instanceof Float32Array) {\r\n            n1 = atoms1.length / 3;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        let n2;\r\n        if (atoms2 instanceof Structure) {\r\n            n2 = atoms2.atomCount;\r\n        }\r\n        else if (atoms2 instanceof Float32Array) {\r\n            n2 = atoms2.length / 3;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const n = Math.min(n1, n2);\r\n        const coords1 = new Matrix(3, n);\r\n        const coords2 = new Matrix(3, n);\r\n        this.coords1t = new Matrix(n, 3);\r\n        this.coords2t = new Matrix(n, 3);\r\n        this.transformationMatrix = new Matrix4();\r\n        this.c.data.set([1, 0, 0, 0, 1, 0, 0, 0, -1]);\r\n        // prep coords\r\n        this.prepCoords(atoms1, coords1, n, false);\r\n        this.prepCoords(atoms2, coords2, n, false);\r\n        // superpose\r\n        this._superpose(coords1, coords2);\r\n    }\r\n    _superpose(coords1, coords2) {\r\n        this.mean1 = meanRows(coords1);\r\n        this.mean2 = meanRows(coords2);\r\n        subRows(coords1, this.mean1);\r\n        subRows(coords2, this.mean2);\r\n        transpose(this.coords1t, coords1);\r\n        transpose(this.coords2t, coords2);\r\n        multiplyABt(this.A, this.coords2t, this.coords1t);\r\n        svd(this.A, this.W, this.U, this.V);\r\n        invert3x3(this.V, this.VH);\r\n        multiply3x3(this.R, this.U, this.VH);\r\n        if (mat3x3determinant(this.R) < 0.0) {\r\n            if (Debug)\r\n                Log.log('R not a right handed system');\r\n            multiply3x3(this.tmp, this.c, this.VH);\r\n            multiply3x3(this.R, this.U, this.tmp);\r\n        }\r\n        //get the transformation matrix\r\n        const transformMat_ = new Matrix(4, 4);\r\n        const tmp_1 = new Matrix(4, 4);\r\n        const tmp_2 = new Matrix(4, 4);\r\n        const sub = new Matrix(4, 4);\r\n        const mult = new Matrix(4, 4);\r\n        const add = new Matrix(4, 4);\r\n        const R = this.R.data;\r\n        const M1 = this.mean1;\r\n        const M2 = this.mean2;\r\n        sub.data.set([1, 0, 0, -M1[0],\r\n            0, 1, 0, -M1[1],\r\n            0, 0, 1, -M1[2],\r\n            0, 0, 0, 1]);\r\n        mult.data.set([R[0], R[1], R[2], 0,\r\n            R[3], R[4], R[5], 0,\r\n            R[6], R[7], R[8], 0,\r\n            0, 0, 0, 1]);\r\n        add.data.set([1, 0, 0, M2[0],\r\n            0, 1, 0, M2[1],\r\n            0, 0, 1, M2[2],\r\n            0, 0, 0, 1]);\r\n        transpose(tmp_1, sub);\r\n        multiplyABt(transformMat_, mult, tmp_1);\r\n        transpose(tmp_2, transformMat_);\r\n        multiplyABt(tmp_1, add, tmp_2);\r\n        transpose(transformMat_, tmp_1);\r\n        this.transformationMatrix.elements = transformMat_.data;\r\n    }\r\n    prepCoords(atoms, coords, n, is4X4) {\r\n        let i = 0;\r\n        const cd = coords.data;\r\n        let c = 3;\r\n        let d = n * 3;\r\n        if (is4X4) {\r\n            d = n * 4;\r\n            c = 4;\r\n        }\r\n        if (atoms instanceof Structure) {\r\n            atoms.eachAtom(function (a) {\r\n                if (i < d) {\r\n                    cd[i + 0] = a.x;\r\n                    cd[i + 1] = a.y;\r\n                    cd[i + 2] = a.z;\r\n                    if (is4X4)\r\n                        cd[i + 3] = 1;\r\n                    i += c;\r\n                }\r\n            });\r\n        }\r\n        else if (atoms instanceof Float32Array) {\r\n            for (; i < d; i += c) {\r\n                if (i < d) {\r\n                    cd[i] = atoms[i];\r\n                    cd[i + 1] = atoms[i + 1];\r\n                    cd[i + 2] = atoms[i + 2];\r\n                    if (is4X4)\r\n                        cd[i + 3] = 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Log.warn('prepCoords: input type unknown');\r\n        }\r\n    }\r\n    transform(atoms) {\r\n        // allocate data structures\r\n        let n;\r\n        if (atoms instanceof Structure) {\r\n            n = atoms.atomCount;\r\n        }\r\n        else if (atoms instanceof Float32Array) {\r\n            n = atoms.length / 3;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const coords = new Matrix(4, n);\r\n        const tCoords = new Matrix(n, 4);\r\n        // prep coords\r\n        this.prepCoords(atoms, coords, n, true);\r\n        // check for transformation matrix correctness\r\n        const transform = this.transformationMatrix;\r\n        const det = transform.determinant();\r\n        if (!det) {\r\n            return det;\r\n        }\r\n        // do transform\r\n        const mult = new Matrix(4, 4);\r\n        mult.data = transform.elements;\r\n        multiply(tCoords, coords, mult);\r\n        let i = 0;\r\n        const cd = tCoords.data;\r\n        if (atoms instanceof Structure) {\r\n            atoms.eachAtom(function (a) {\r\n                a.x = cd[i];\r\n                a.y = cd[i + 1];\r\n                a.z = cd[i + 2];\r\n                i += 4;\r\n            });\r\n            //update transformation matrices for each assembly\r\n            const invertTrasform = new Matrix4();\r\n            invertTrasform.getInverse(transform);\r\n            const biomolDict = atoms.biomolDict;\r\n            for (let key in biomolDict) {\r\n                if (biomolDict.hasOwnProperty(key)) {\r\n                    let assembly = biomolDict[key];\r\n                    assembly.partList.forEach(function (part) {\r\n                        part.matrixList.forEach(function (mat) {\r\n                            mat.premultiply(transform);\r\n                            mat.multiply(invertTrasform);\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else if (atoms instanceof Float32Array) {\r\n            const n4 = n * 4;\r\n            for (; i < n4; i += 4) {\r\n                atoms[i] = cd[i];\r\n                atoms[i + 1] = cd[i + 1];\r\n                atoms[i + 2] = cd[i + 2];\r\n            }\r\n        }\r\n        else {\r\n            Log.warn('transform: input type unknown');\r\n        }\r\n        return this.transformationMatrix;\r\n    }\r\n}\r\nexport default Superposition;\r\n//# sourceMappingURL=superposition.js.map","/**\r\n * @file Trajectory Player\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { defaults, createParams, updateParams } from '../utils';\r\nexport const TrajectoryPlayerDefaultParameters = {\r\n    step: 1,\r\n    timeout: 50,\r\n    start: 0,\r\n    end: 0,\r\n    interpolateType: '',\r\n    interpolateStep: 5,\r\n    mode: 'loop',\r\n    direction: 'forward'\r\n};\r\n/**\r\n * Trajectory player for animating coordinate frames\r\n * @example\r\n * var player = new TrajectoryPlayer(trajectory, {step: 1, timeout: 50});\r\n * player.play();\r\n */\r\nclass TrajectoryPlayer {\r\n    /**\r\n     * make trajectory player\r\n     * @param {Trajectory} traj - the trajectory\r\n     * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n     */\r\n    constructor(traj, params = {}) {\r\n        this.signals = {\r\n            startedRunning: new Signal(),\r\n            haltedRunning: new Signal()\r\n        };\r\n        this._run = false;\r\n        this._previousTime = 0;\r\n        this._currentTime = 0;\r\n        this._currentStep = 1;\r\n        traj.signals.playerChanged.add((player) => {\r\n            if (player !== this) {\r\n                this.pause();\r\n            }\r\n        }, this);\r\n        const n = defaults(traj.frameCount, 1);\r\n        this.traj = traj;\r\n        this.parameters = createParams(params, TrajectoryPlayerDefaultParameters);\r\n        this.parameters.end = Math.min(defaults(params.end, n - 1), n - 1);\r\n        this.parameters.step = defaults(params.step, Math.ceil((n + 1) / 100));\r\n        this._currentFrame = this.parameters.start;\r\n        this._direction = this.parameters.direction === 'bounce' ? 'forward' : this.parameters.direction;\r\n        traj.signals.countChanged.add((n) => {\r\n            this.parameters.end = Math.min(defaults(this.parameters.end, n - 1), n - 1);\r\n        }, this);\r\n        this._animate = this._animate.bind(this);\r\n    }\r\n    get isRunning() { return this._run; }\r\n    /**\r\n     * set player parameters\r\n     * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n     */\r\n    setParameters(params = {}) {\r\n        updateParams(this.parameters, params);\r\n        if (params.direction !== undefined && this.parameters.direction !== 'bounce') {\r\n            this._direction = this.parameters.direction;\r\n        }\r\n    }\r\n    _animate() {\r\n        if (!this._run)\r\n            return;\r\n        this._currentTime = window.performance.now();\r\n        const dt = this._currentTime - this._previousTime;\r\n        const step = this.parameters.interpolateType ? this.parameters.interpolateStep : 1;\r\n        const timeout = this.parameters.timeout / step;\r\n        const traj = this.traj;\r\n        if (traj && traj.frameCount && !traj.inProgress && dt >= timeout) {\r\n            if (this.parameters.interpolateType) {\r\n                if (this._currentStep > this.parameters.interpolateStep) {\r\n                    this._currentStep = 1;\r\n                }\r\n                if (this._currentStep === 1) {\r\n                    this._currentFrame = this._nextInterpolated();\r\n                }\r\n                if (traj.hasFrame(this._currentFrame)) {\r\n                    this._currentStep += 1;\r\n                    const t = this._currentStep / (this.parameters.interpolateStep + 1);\r\n                    const [i, ip, ipp, ippp] = this._currentFrame;\r\n                    traj.setFrameInterpolated(i, ip, ipp, ippp, t, this.parameters.interpolateType);\r\n                    this._previousTime = this._currentTime;\r\n                }\r\n                else {\r\n                    traj.loadFrame(this._currentFrame);\r\n                }\r\n            }\r\n            else {\r\n                const i = this._next();\r\n                if (traj.hasFrame(i)) {\r\n                    traj.setFrame(i);\r\n                    this._previousTime = this._currentTime;\r\n                }\r\n                else {\r\n                    traj.loadFrame(i);\r\n                }\r\n            }\r\n        }\r\n        window.requestAnimationFrame(this._animate);\r\n    }\r\n    _next() {\r\n        const p = this.parameters;\r\n        let i;\r\n        if (this._direction === 'forward') {\r\n            i = this.traj.currentFrame + p.step;\r\n        }\r\n        else {\r\n            i = this.traj.currentFrame - p.step;\r\n        }\r\n        if (i > p.end || i < p.start) {\r\n            if (p.direction === 'bounce') {\r\n                if (this._direction === 'forward') {\r\n                    this._direction = 'backward';\r\n                }\r\n                else {\r\n                    this._direction = 'forward';\r\n                }\r\n            }\r\n            if (p.mode === 'once') {\r\n                this.pause();\r\n                if (p.direction === 'forward') {\r\n                    i = p.end;\r\n                }\r\n                else if (p.direction === 'backward') {\r\n                    i = p.start;\r\n                }\r\n                else {\r\n                    if (this._direction === 'forward') {\r\n                        i = p.start;\r\n                    }\r\n                    else {\r\n                        i = p.end;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._direction === 'forward') {\r\n                    i = p.start;\r\n                    if (p.interpolateType) {\r\n                        i = Math.min(p.end, i + p.step);\r\n                    }\r\n                }\r\n                else {\r\n                    i = p.end;\r\n                    if (p.interpolateType) {\r\n                        i = Math.max(p.start, i - p.step);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n    _nextInterpolated() {\r\n        const p = this.parameters;\r\n        const i = this._next();\r\n        let ip, ipp, ippp;\r\n        if (this._direction === 'forward') {\r\n            ip = Math.max(p.start, i - p.step);\r\n            ipp = Math.max(p.start, i - 2 * p.step);\r\n            ippp = Math.max(p.start, i - 3 * p.step);\r\n        }\r\n        else {\r\n            ip = Math.min(p.end, i + p.step);\r\n            ipp = Math.min(p.end, i + 2 * p.step);\r\n            ippp = Math.min(p.end, i + 3 * p.step);\r\n        }\r\n        return [i, ip, ipp, ippp];\r\n    }\r\n    /**\r\n     * toggle between playing and pausing the animation\r\n     * @return {undefined}\r\n     */\r\n    toggle() {\r\n        if (this._run) {\r\n            this.pause();\r\n        }\r\n        else {\r\n            this.play();\r\n        }\r\n    }\r\n    /**\r\n     * start the animation\r\n     * @return {undefined}\r\n     */\r\n    play() {\r\n        if (!this._run) {\r\n            if (this.traj.player !== this) {\r\n                this.traj.setPlayer(this);\r\n            }\r\n            this._currentStep = 1;\r\n            const p = this.parameters;\r\n            const frame = this.traj.currentFrame;\r\n            // snap to the grid implied by this.step division and multiplication\r\n            // thus minimizing cache misses\r\n            let i = Math.ceil(frame / p.step) * p.step;\r\n            // wrap when restarting from the limit (i.e. end or start)\r\n            if (p.direction === 'forward' && frame >= p.end) {\r\n                i = p.start;\r\n            }\r\n            else if (p.direction === 'backward' && frame <= p.start) {\r\n                i = p.end;\r\n            }\r\n            this.traj.setFrame(i);\r\n            this._run = true;\r\n            this._animate();\r\n            this.signals.startedRunning.dispatch();\r\n        }\r\n    }\r\n    /**\r\n     * pause the animation\r\n     * @return {undefined}\r\n     */\r\n    pause() {\r\n        this._run = false;\r\n        this.signals.haltedRunning.dispatch();\r\n    }\r\n    /**\r\n     * stop the animation (pause and go to start-frame)\r\n     * @return {undefined}\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.traj.setFrame(this.parameters.start);\r\n    }\r\n}\r\nexport default TrajectoryPlayer;\r\n//# sourceMappingURL=trajectory-player.js.map","/**\r\n * @file Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { Log } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { circularMean, arrayMean } from '../math/array-utils';\r\nimport { lerp, spline } from '../math/math-utils';\r\nimport Selection from '../selection/selection';\r\nimport Superposition from '../align/superposition';\r\nimport TrajectoryPlayer from './trajectory-player';\r\nfunction centerPbc(coords, mean, box) {\r\n    if (box[0] === 0 || box[8] === 0 || box[4] === 0) {\r\n        return;\r\n    }\r\n    const n = coords.length;\r\n    const bx = box[0];\r\n    const by = box[1];\r\n    const bz = box[2];\r\n    const mx = mean[0];\r\n    const my = mean[1];\r\n    const mz = mean[2];\r\n    const fx = -mx + bx + bx / 2;\r\n    const fy = -my + by + by / 2;\r\n    const fz = -mz + bz + bz / 2;\r\n    for (let i = 0; i < n; i += 3) {\r\n        coords[i + 0] = (coords[i + 0] + fx) % bx;\r\n        coords[i + 1] = (coords[i + 1] + fy) % by;\r\n        coords[i + 2] = (coords[i + 2] + fz) % bz;\r\n    }\r\n}\r\nfunction removePbc(x, box) {\r\n    if (box[0] === 0 || box[8] === 0 || box[4] === 0) {\r\n        return;\r\n    }\r\n    // ported from GROMACS src/gmxlib/rmpbc.c:rm_gropbc()\r\n    // in-place\r\n    const n = x.length;\r\n    for (let i = 3; i < n; i += 3) {\r\n        for (let j = 0; j < 3; ++j) {\r\n            const dist = x[i + j] - x[i - 3 + j];\r\n            if (Math.abs(dist) > 0.9 * box[j * 3 + j]) {\r\n                if (dist > 0) {\r\n                    for (let d = 0; d < 3; ++d) {\r\n                        x[i + d] -= box[j * 3 + d];\r\n                    }\r\n                }\r\n                else {\r\n                    for (let d = 0; d < 3; ++d) {\r\n                        x[i + d] += box[j * 3 + d];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return x;\r\n}\r\nfunction removePeriodicity(x, box, mean) {\r\n    if (box[0] === 0 || box[8] === 0 || box[4] === 0) {\r\n        return;\r\n    }\r\n    const n = x.length;\r\n    for (let i = 3; i < n; i += 3) {\r\n        for (let j = 0; j < 3; ++j) {\r\n            const f = (x[i + j] - mean[j]) / box[j * 3 + j];\r\n            if (Math.abs(f) > 0.5) {\r\n                x[i + j] -= box[j * 3 + j] * Math.round(f);\r\n            }\r\n        }\r\n    }\r\n    return x;\r\n}\r\nfunction circularMean3(indices, coords, box) {\r\n    return [\r\n        circularMean(coords, box[0], 3, 0, indices),\r\n        circularMean(coords, box[1], 3, 1, indices),\r\n        circularMean(coords, box[2], 3, 2, indices)\r\n    ];\r\n}\r\nfunction arrayMean3(coords) {\r\n    return [\r\n        arrayMean(coords, 3, 0),\r\n        arrayMean(coords, 3, 1),\r\n        arrayMean(coords, 3, 2)\r\n    ];\r\n}\r\nfunction interpolateSpline(c, cp, cpp, cppp, t) {\r\n    const m = c.length;\r\n    const coords = new Float32Array(m);\r\n    for (let j0 = 0; j0 < m; j0 += 3) {\r\n        const j1 = j0 + 1;\r\n        const j2 = j0 + 2;\r\n        coords[j0] = spline(cppp[j0], cpp[j0], cp[j0], c[j0], t, 1);\r\n        coords[j1] = spline(cppp[j1], cpp[j1], cp[j1], c[j1], t, 1);\r\n        coords[j2] = spline(cppp[j2], cpp[j2], cp[j2], c[j2], t, 1);\r\n    }\r\n    return coords;\r\n}\r\nfunction interpolateLerp(c, cp, t) {\r\n    const m = c.length;\r\n    const coords = new Float32Array(m);\r\n    for (let j0 = 0; j0 < m; j0 += 3) {\r\n        const j1 = j0 + 1;\r\n        const j2 = j0 + 2;\r\n        coords[j0] = lerp(cp[j0], c[j0], t);\r\n        coords[j1] = lerp(cp[j1], c[j1], t);\r\n        coords[j2] = lerp(cp[j2], c[j2], t);\r\n    }\r\n    return coords;\r\n}\r\n/**\r\n * Base class for trajectories, tying structures and coordinates together\r\n * @interface\r\n */\r\nclass Trajectory {\r\n    /**\r\n     * @param {String} trajPath - trajectory source\r\n     * @param {Structure} structure - the structure object\r\n     * @param {TrajectoryParameters} params - trajectory parameters\r\n     */\r\n    constructor(trajPath, structure, params = {}) {\r\n        this.signals = {\r\n            countChanged: new Signal(),\r\n            frameChanged: new Signal(),\r\n            playerChanged: new Signal()\r\n        };\r\n        this.frameCache = {};\r\n        this.loadQueue = {};\r\n        this.boxCache = {};\r\n        this.pathCache = {};\r\n        this.frameCacheSize = 0;\r\n        this._frameCount = 0;\r\n        this._currentFrame = -1;\r\n        this._disposed = false;\r\n        this.deltaTime = defaults(params.deltaTime, 0);\r\n        this.timeOffset = defaults(params.timeOffset, 0);\r\n        this.centerPbc = defaults(params.centerPbc, false);\r\n        this.removePbc = defaults(params.removePbc, false);\r\n        this.removePeriodicity = defaults(params.removePeriodicity, false);\r\n        this.superpose = defaults(params.superpose, false);\r\n        this.name = trajPath.replace(/^.*[\\\\/]/, '');\r\n        this.trajPath = trajPath;\r\n        this.selection = new Selection(defaults(params.sele, 'backbone and not hydrogen'));\r\n        this.selection.signals.stringChanged.add(() => {\r\n            this.selectionIndices = this.structure.getAtomIndices(this.selection);\r\n            this._resetCache();\r\n            this._saveInitialCoords();\r\n            this.setFrame(this._currentFrame);\r\n        });\r\n    }\r\n    /**\r\n     * Number of frames in the trajectory\r\n     */\r\n    get frameCount() {\r\n        return this._frameCount;\r\n    }\r\n    /**\r\n     * Currently set frame of the trajectory\r\n     */\r\n    get currentFrame() {\r\n        return this._currentFrame;\r\n    }\r\n    _init(structure) {\r\n        this.setStructure(structure);\r\n        this._loadFrameCount();\r\n        this.setPlayer(new TrajectoryPlayer(this));\r\n    }\r\n    _loadFrameCount() { }\r\n    setStructure(structure) {\r\n        this.structure = structure;\r\n        this.atomCount = structure.atomCount;\r\n        this.backboneIndices = this._getIndices(new Selection('backbone and not hydrogen'));\r\n        this._makeAtomIndices();\r\n        this._saveStructureCoords();\r\n        this.selectionIndices = this._getIndices(this.selection);\r\n        this._resetCache();\r\n        this._saveInitialCoords();\r\n        this.setFrame(this._currentFrame);\r\n    }\r\n    _saveInitialCoords() {\r\n        if (this.structure.hasCoords()) {\r\n            this.initialCoords = new Float32Array(this.structureCoords);\r\n            this._makeSuperposeCoords();\r\n        }\r\n        else if (this.frameCache[0]) {\r\n            this.initialCoords = new Float32Array(this.frameCache[0]);\r\n            this._makeSuperposeCoords();\r\n        }\r\n        else {\r\n            this.loadFrame(0, () => this._saveInitialCoords());\r\n        }\r\n    }\r\n    _saveStructureCoords() {\r\n        const p = { what: { position: true } };\r\n        this.structureCoords = this.structure.getAtomData(p).position;\r\n    }\r\n    setSelection(string) {\r\n        this.selection.setString(string);\r\n        return this;\r\n    }\r\n    _getIndices(selection) {\r\n        let i = 0;\r\n        const test = selection.test;\r\n        const indices = [];\r\n        if (test) {\r\n            this.structure.eachAtom((ap) => {\r\n                if (test(ap))\r\n                    indices.push(i);\r\n                i += 1;\r\n            });\r\n        }\r\n        return indices;\r\n    }\r\n    _makeSuperposeCoords() {\r\n        const n = this.selectionIndices.length * 3;\r\n        this.coords1 = new Float32Array(n);\r\n        this.coords2 = new Float32Array(n);\r\n        const y = this.initialCoords;\r\n        const coords2 = this.coords2;\r\n        for (let i = 0; i < n; i += 3) {\r\n            const j = this.selectionIndices[i / 3] * 3;\r\n            coords2[i + 0] = y[j + 0];\r\n            coords2[i + 1] = y[j + 1];\r\n            coords2[i + 2] = y[j + 2];\r\n        }\r\n    }\r\n    _makeAtomIndices() {\r\n        Log.error('Trajectory._makeAtomIndices not implemented');\r\n    }\r\n    _resetCache() {\r\n        this.frameCache = {};\r\n        this.loadQueue = {};\r\n        this.boxCache = {};\r\n        this.pathCache = {};\r\n        this.frameCacheSize = 0;\r\n        this.initialCoords = new Float32Array(0);\r\n    }\r\n    setParameters(params = {}) {\r\n        let resetCache = false;\r\n        if (params.centerPbc !== undefined && params.centerPbc !== this.centerPbc) {\r\n            this.centerPbc = params.centerPbc;\r\n            resetCache = true;\r\n        }\r\n        if (params.removePeriodicity !== undefined && params.removePeriodicity !== this.removePeriodicity) {\r\n            this.removePeriodicity = params.removePeriodicity;\r\n            resetCache = true;\r\n        }\r\n        if (params.removePbc !== undefined && params.removePbc !== this.removePbc) {\r\n            this.removePbc = params.removePbc;\r\n            resetCache = true;\r\n        }\r\n        if (params.superpose !== undefined && params.superpose !== this.superpose) {\r\n            this.superpose = params.superpose;\r\n            resetCache = true;\r\n        }\r\n        this.deltaTime = defaults(params.deltaTime, this.deltaTime);\r\n        this.timeOffset = defaults(params.timeOffset, this.timeOffset);\r\n        if (resetCache) {\r\n            this._resetCache();\r\n            this.setFrame(this._currentFrame);\r\n        }\r\n    }\r\n    /**\r\n     * Check if a frame is available\r\n     * @param  {Integer|Integer[]} i - the frame index\r\n     * @return {Boolean} frame availability\r\n     */\r\n    hasFrame(i) {\r\n        if (Array.isArray(i)) {\r\n            return i.every(j => !!this.frameCache[j]);\r\n        }\r\n        else {\r\n            return !!this.frameCache[i];\r\n        }\r\n    }\r\n    /**\r\n     * Set trajectory to a frame index\r\n     * @param {Integer} i - the frame index\r\n     * @param {Function} [callback] - fired when the frame has been set\r\n     */\r\n    setFrame(i, callback) {\r\n        if (i === undefined)\r\n            return this;\r\n        this.inProgress = true;\r\n        // i = parseInt(i)  // TODO\r\n        if (i === -1 || this.frameCache[i]) {\r\n            this._updateStructure(i);\r\n            if (callback)\r\n                callback();\r\n        }\r\n        else {\r\n            this.loadFrame(i, () => {\r\n                this._updateStructure(i);\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n    _interpolate(i, ip, ipp, ippp, t, type) {\r\n        const fc = this.frameCache;\r\n        let coords;\r\n        if (type === 'spline') {\r\n            coords = interpolateSpline(fc[i], fc[ip], fc[ipp], fc[ippp], t);\r\n        }\r\n        else {\r\n            coords = interpolateLerp(fc[i], fc[ip], t);\r\n        }\r\n        this.structure.updatePosition(coords);\r\n        this._currentFrame = i;\r\n        this.signals.frameChanged.dispatch(i);\r\n    }\r\n    /**\r\n     * Interpolated and set trajectory to frame indices\r\n     * @param {Integer} i - the frame index\r\n     * @param {Integer} ip - one before frame index\r\n     * @param {Integer} ipp - two before frame index\r\n     * @param {Integer} ippp - three before frame index\r\n     * @param {Number} t - interpolation step [0,1]\r\n     * @param {String} type - interpolation type, '', 'spline' or 'linear'\r\n     * @param {Function} callback - fired when the frame has been set\r\n     */\r\n    setFrameInterpolated(i, ip, ipp, ippp, t, type, callback) {\r\n        if (i === undefined)\r\n            return this;\r\n        const fc = this.frameCache;\r\n        const iList = [];\r\n        if (!fc[ippp])\r\n            iList.push(ippp);\r\n        if (!fc[ipp])\r\n            iList.push(ipp);\r\n        if (!fc[ip])\r\n            iList.push(ip);\r\n        if (!fc[i])\r\n            iList.push(i);\r\n        if (iList.length) {\r\n            this.loadFrame(iList, () => {\r\n                this._interpolate(i, ip, ipp, ippp, t, type);\r\n                if (callback)\r\n                    callback();\r\n            });\r\n        }\r\n        else {\r\n            this._interpolate(i, ip, ipp, ippp, t, type);\r\n            if (callback)\r\n                callback();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Load frame index\r\n     * @param {Integer|Integer[]} i - the frame index\r\n     * @param {Function} callback - fired when the frame has been loaded\r\n     */\r\n    loadFrame(i, callback) {\r\n        if (Array.isArray(i)) {\r\n            i.forEach(j => {\r\n                if (!this.loadQueue[j] && !this.frameCache[j]) {\r\n                    this.loadQueue[j] = true;\r\n                    this._loadFrame(j, () => {\r\n                        delete this.loadQueue[j];\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (!this.loadQueue[i] && !this.frameCache[i]) {\r\n                this.loadQueue[i] = true;\r\n                this._loadFrame(i, () => {\r\n                    delete this.loadQueue[i];\r\n                    if (callback)\r\n                        callback();\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Load frame index\r\n     * @abstract\r\n     * @param {Integer} i - the frame index\r\n     * @param {Function} callback - fired when the frame has been loaded\r\n     */\r\n    _loadFrame(i, callback) {\r\n        Log.error('Trajectory._loadFrame not implemented', i, callback);\r\n    }\r\n    _updateStructure(i) {\r\n        if (this._disposed) {\r\n            console.error('updateStructure: traj disposed');\r\n            return;\r\n        }\r\n        if (i === -1) {\r\n            if (this.structureCoords) {\r\n                this.structure.updatePosition(this.structureCoords);\r\n            }\r\n        }\r\n        else {\r\n            this.structure.updatePosition(this.frameCache[i]);\r\n        }\r\n        this.structure.trajectory = {\r\n            name: this.trajPath,\r\n            frame: i\r\n        };\r\n        this._currentFrame = i;\r\n        this.inProgress = false;\r\n        this.signals.frameChanged.dispatch(i);\r\n    }\r\n    _doSuperpose(x) {\r\n        const n = this.selectionIndices.length * 3;\r\n        const coords1 = this.coords1;\r\n        const coords2 = this.coords2;\r\n        for (let i = 0; i < n; i += 3) {\r\n            const j = this.selectionIndices[i / 3] * 3;\r\n            coords1[i + 0] = x[j + 0];\r\n            coords1[i + 1] = x[j + 1];\r\n            coords1[i + 2] = x[j + 2];\r\n        }\r\n        // TODO re-use superposition object\r\n        const sp = new Superposition(coords1, coords2);\r\n        sp.transform(x);\r\n    }\r\n    _process(i, box, coords, frameCount) {\r\n        this._setFrameCount(frameCount);\r\n        if (box) {\r\n            if (this.backboneIndices.length > 0 && this.centerPbc) {\r\n                const box2 = [box[0], box[4], box[8]];\r\n                const circMean = circularMean3(this.backboneIndices, coords, box2);\r\n                centerPbc(coords, circMean, box2);\r\n            }\r\n            if (this.removePeriodicity) {\r\n                const mean = arrayMean3(coords);\r\n                removePeriodicity(coords, box, mean);\r\n            }\r\n            if (this.removePbc) {\r\n                removePbc(coords, box);\r\n            }\r\n        }\r\n        if (this.selectionIndices.length > 0 && this.coords1 && this.superpose) {\r\n            this._doSuperpose(coords);\r\n        }\r\n        this.frameCache[i] = coords;\r\n        this.boxCache[i] = box;\r\n        this.frameCacheSize += 1;\r\n    }\r\n    _setFrameCount(n) {\r\n        if (n !== this._frameCount) {\r\n            this._frameCount = n;\r\n            this.signals.countChanged.dispatch(n);\r\n        }\r\n    }\r\n    /**\r\n     * Dispose of the trajectory object\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        this._resetCache(); // aid GC\r\n        this._disposed = true;\r\n        if (this.player)\r\n            this.player.stop();\r\n    }\r\n    /**\r\n     * Set player for this trajectory\r\n     * @param {TrajectoryPlayer} player - the player\r\n     */\r\n    setPlayer(player) {\r\n        this.player = player;\r\n        this.signals.playerChanged.dispatch(player);\r\n    }\r\n    /**\r\n     * Get time for frame\r\n     * @param  {Integer} i - frame index\r\n     * @return {Number} time in picoseconds\r\n     */\r\n    getFrameTime(i) {\r\n        return this.timeOffset + i * this.deltaTime;\r\n    }\r\n}\r\nexport default Trajectory;\r\n//# sourceMappingURL=trajectory.js.map","/**\r\n * @file Frames Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport Trajectory from './trajectory';\r\n/**\r\n * Frames trajectory class. Gets data from a frames object.\r\n */\r\nclass FramesTrajectory extends Trajectory {\r\n    constructor(frames, structure, params) {\r\n        const p = params || {};\r\n        p.timeOffset = defaults(p.timeOffset, frames.timeOffset);\r\n        p.deltaTime = defaults(p.deltaTime, frames.deltaTime);\r\n        super('', structure, p);\r\n        this.name = frames.name;\r\n        this.path = frames.path;\r\n        this.frames = frames.coordinates;\r\n        this.boxes = frames.boxes;\r\n        this._init(structure);\r\n    }\r\n    get type() { return 'frames'; }\r\n    _makeAtomIndices() {\r\n        if (this.structure.type === 'StructureView') {\r\n            this.atomIndices = this.structure.getAtomIndices();\r\n        }\r\n        else {\r\n            this.atomIndices = undefined;\r\n        }\r\n    }\r\n    _loadFrame(i, callback) {\r\n        let coords;\r\n        const frame = this.frames[i];\r\n        if (this.atomIndices) {\r\n            const indices = this.atomIndices;\r\n            const m = indices.length;\r\n            coords = new Float32Array(m * 3);\r\n            for (let j = 0; j < m; ++j) {\r\n                const j3 = j * 3;\r\n                const idx3 = indices[j] * 3;\r\n                coords[j3 + 0] = frame[idx3 + 0];\r\n                coords[j3 + 1] = frame[idx3 + 1];\r\n                coords[j3 + 2] = frame[idx3 + 2];\r\n            }\r\n        }\r\n        else {\r\n            coords = new Float32Array(frame);\r\n        }\r\n        const box = this.boxes[i];\r\n        const frameCount = this.frames.length;\r\n        this._process(i, box, coords, frameCount);\r\n        if (typeof callback === 'function') {\r\n            callback();\r\n        }\r\n    }\r\n    _loadFrameCount() {\r\n        if (this.frames) {\r\n            this._setFrameCount(this.frames.length);\r\n        }\r\n    }\r\n}\r\nexport default FramesTrajectory;\r\n//# sourceMappingURL=frames-trajectory.js.map","/**\r\n * @file Structure Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Trajectory from './trajectory';\r\n/**\r\n * Structure trajectory class. Gets data from a structure object.\r\n */\r\nclass StructureTrajectory extends Trajectory {\r\n    constructor(trajPath, structure, params) {\r\n        super('', structure, params);\r\n        this._init(structure);\r\n    }\r\n    get type() { return 'structure'; }\r\n    _makeAtomIndices() {\r\n        if (this.structure.atomSet && this.structure.atomSet.getSize() < this.structure.atomStore.count) {\r\n            this.atomIndices = this.structure.getAtomIndices();\r\n        }\r\n        else {\r\n            this.atomIndices = undefined;\r\n        }\r\n    }\r\n    _loadFrame(i, callback) {\r\n        let coords;\r\n        const structure = this.structure;\r\n        const frame = structure.frames[i];\r\n        if (this.atomIndices) {\r\n            const indices = this.atomIndices;\r\n            const m = indices.length;\r\n            coords = new Float32Array(m * 3);\r\n            for (let j = 0; j < m; ++j) {\r\n                const j3 = j * 3;\r\n                const idx3 = indices[j] * 3;\r\n                coords[j3 + 0] = frame[idx3 + 0];\r\n                coords[j3 + 1] = frame[idx3 + 1];\r\n                coords[j3 + 2] = frame[idx3 + 2];\r\n            }\r\n        }\r\n        else {\r\n            coords = new Float32Array(frame);\r\n        }\r\n        const box = structure.boxes[i];\r\n        const frameCount = structure.frames.length;\r\n        this._process(i, box, coords, frameCount);\r\n        if (typeof callback === 'function') {\r\n            callback();\r\n        }\r\n    }\r\n    _loadFrameCount() {\r\n        this._setFrameCount(this.structure.frames.length);\r\n    }\r\n}\r\nexport default StructureTrajectory;\r\n//# sourceMappingURL=structure-trajectory.js.map","/**\r\n * @file Remote Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log, TrajectoryDatasource } from '../globals';\r\nimport Trajectory from './trajectory';\r\n/**\r\n * Remote trajectory class. Gets data from an MDsrv instance.\r\n */\r\nclass RemoteTrajectory extends Trajectory {\r\n    constructor(trajPath, structure, params) {\r\n        super(trajPath, structure, params);\r\n        this._init(structure);\r\n    }\r\n    get type() { return 'remote'; }\r\n    _makeAtomIndices() {\r\n        const atomIndices = [];\r\n        if (this.structure.type === 'StructureView') {\r\n            const indices = this.structure.getAtomIndices(); // TODO\r\n            const n = indices.length;\r\n            let p = indices[0];\r\n            let q = indices[0];\r\n            for (let i = 1; i < n; ++i) {\r\n                const r = indices[i];\r\n                if (q + 1 < r) {\r\n                    atomIndices.push([p, q + 1]);\r\n                    p = r;\r\n                }\r\n                q = r;\r\n            }\r\n            atomIndices.push([p, q + 1]);\r\n        }\r\n        else {\r\n            atomIndices.push([0, this.atomCount]);\r\n        }\r\n        this.atomIndices = atomIndices;\r\n    }\r\n    _loadFrame(i, callback) {\r\n        // TODO implement max frameCache size, re-use arrays\r\n        const request = new XMLHttpRequest();\r\n        const url = TrajectoryDatasource.getFrameUrl(this.trajPath, i);\r\n        const params = TrajectoryDatasource.getFrameParams(this.trajPath, this.atomIndices);\r\n        request.open('POST', url, true);\r\n        request.responseType = 'arraybuffer';\r\n        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        request.addEventListener('load', () => {\r\n            const arrayBuffer = request.response;\r\n            if (!arrayBuffer) {\r\n                Log.error(`empty arrayBuffer for '${url}'`);\r\n                return;\r\n            }\r\n            const frameCount = new Int32Array(arrayBuffer, 0, 1)[0];\r\n            // const time = new Float32Array( arrayBuffer, 1 * 4, 1 )[ 0 ];\r\n            const box = new Float32Array(arrayBuffer, 2 * 4, 9);\r\n            const coords = new Float32Array(arrayBuffer, 11 * 4);\r\n            this._process(i, box, coords, frameCount);\r\n            if (typeof callback === 'function') {\r\n                callback();\r\n            }\r\n        }, false);\r\n        request.send(params);\r\n    }\r\n    _loadFrameCount() {\r\n        const request = new XMLHttpRequest();\r\n        const url = TrajectoryDatasource.getCountUrl(this.trajPath);\r\n        request.open('GET', url, true);\r\n        request.addEventListener('load', () => {\r\n            this._setFrameCount(parseInt(request.response));\r\n        }, false);\r\n        request.send();\r\n    }\r\n}\r\nexport default RemoteTrajectory;\r\n//# sourceMappingURL=remote-trajectory.js.map","/**\r\n * @file Trajectory Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Frames from './frames';\r\nimport FramesTrajectory from './frames-trajectory';\r\nimport StructureTrajectory from './structure-trajectory';\r\nimport RemoteTrajectory from './remote-trajectory';\r\nexport function makeTrajectory(trajSrc, structure, params) {\r\n    let traj;\r\n    if (trajSrc && trajSrc instanceof Frames) {\r\n        traj = new FramesTrajectory(trajSrc, structure, params);\r\n    }\r\n    else if (!trajSrc && structure.frames) {\r\n        traj = new StructureTrajectory(trajSrc, structure, params);\r\n    }\r\n    else {\r\n        traj = new RemoteTrajectory(trajSrc, structure, params);\r\n    }\r\n    return traj;\r\n}\r\n//# sourceMappingURL=trajectory-utils.js.map","/**\r\n * @file Structure View\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Box3 } from 'three';\r\nimport { Debug, Log } from '../globals';\r\nimport Structure from './structure';\r\nimport Selection from '../selection/selection';\r\nimport BitArray from '../utils/bitarray';\r\n/**\r\n * Get view on structure restricted to the selection\r\n * @param  {Selection} selection - the selection\r\n * @return {StructureView} the view on the structure\r\n */\r\nStructure.prototype.getView = function (selection) {\r\n    // added here to avoid cyclic import dependency\r\n    return new StructureView(this, selection);\r\n};\r\n/**\r\n * View on the structure, restricted to the selection\r\n */\r\nclass StructureView extends Structure {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Selection} selection - the selection\r\n     */\r\n    constructor(structure, selection) {\r\n        super();\r\n        this.structure = structure;\r\n        this.selection = selection;\r\n        this.center = new Vector3();\r\n        this.boundingBox = new Box3();\r\n        this._bp = this.getBondProxy();\r\n        this._ap = this.getAtomProxy();\r\n        this._rp = this.getResidueProxy();\r\n        this._cp = this.getChainProxy();\r\n        if (this.selection) {\r\n            this.selection.signals.stringChanged.add(this.refresh, this);\r\n        }\r\n        this.structure.signals.refreshed.add(this.refresh, this);\r\n        this.refresh();\r\n    }\r\n    init() { }\r\n    get type() { return 'StructureView'; }\r\n    get name() { return this.structure.name; }\r\n    get path() { return this.structure.path; }\r\n    get title() { return this.structure.title; }\r\n    get id() { return this.structure.id; }\r\n    get data() { return this.structure.data; }\r\n    get atomSetDict() { return this.structure.atomSetDict; }\r\n    get biomolDict() { return this.structure.biomolDict; }\r\n    get entityList() { return this.structure.entityList; }\r\n    get unitcell() { return this.structure.unitcell; }\r\n    get frames() { return this.structure.frames; }\r\n    get boxes() { return this.structure.boxes; }\r\n    get validation() { return this.structure.validation; }\r\n    get bondStore() { return this.structure.bondStore; }\r\n    get backboneBondStore() { return this.structure.backboneBondStore; }\r\n    get rungBondStore() { return this.structure.rungBondStore; }\r\n    get atomStore() { return this.structure.atomStore; }\r\n    get residueStore() { return this.structure.residueStore; }\r\n    get chainStore() { return this.structure.chainStore; }\r\n    get modelStore() { return this.structure.modelStore; }\r\n    get atomMap() { return this.structure.atomMap; }\r\n    get residueMap() { return this.structure.residueMap; }\r\n    get bondHash() { return this.structure.bondHash; }\r\n    get spatialHash() { return this.structure.spatialHash; }\r\n    get _hasCoords() { return this.structure._hasCoords; }\r\n    set _hasCoords(value) { this.structure._hasCoords = value; }\r\n    /**\r\n     * Updates atomSet, bondSet, atomSetCache, atomCount, bondCount, boundingBox, center.\r\n     * @emits {Structure.signals.refreshed} when refreshed\r\n     * @return {undefined}\r\n     */\r\n    refresh() {\r\n        if (Debug)\r\n            Log.time('StructureView.refresh');\r\n        this.atomSetCache = {};\r\n        const structure = this.structure;\r\n        if (this.selection.isAllSelection() &&\r\n            structure !== this && structure.atomSet && structure.bondSet) {\r\n            this.atomSet = structure.atomSet.clone();\r\n            this.bondSet = structure.bondSet.clone();\r\n            for (let name in this.atomSetDict) {\r\n                const atomSet = this.atomSetDict[name];\r\n                this.atomSetCache['__' + name] = atomSet.clone();\r\n            }\r\n            this.atomCount = structure.atomCount;\r\n            this.bondCount = structure.bondCount;\r\n            this.boundingBox.copy(structure.boundingBox);\r\n            this.center.copy(structure.center);\r\n        }\r\n        else if (this.selection.isNoneSelection() &&\r\n            structure !== this && structure.atomSet && structure.bondSet) {\r\n            this.atomSet = new BitArray(structure.atomCount);\r\n            this.bondSet = new BitArray(structure.bondCount);\r\n            for (let name in this.atomSetDict) {\r\n                this.atomSetCache['__' + name] = new BitArray(structure.atomCount);\r\n            }\r\n            this.atomCount = 0;\r\n            this.bondCount = 0;\r\n            this.boundingBox.makeEmpty();\r\n            this.center.set(0, 0, 0);\r\n        }\r\n        else {\r\n            this.atomSet = this.getAtomSet(this.selection, true);\r\n            if (structure.atomSet) {\r\n                this.atomSet = this.atomSet.intersection(structure.atomSet);\r\n            }\r\n            this.bondSet = this.getBondSet();\r\n            for (let name in this.atomSetDict) {\r\n                const atomSet = this.atomSetDict[name];\r\n                this.atomSetCache['__' + name] = atomSet.makeIntersection(this.atomSet);\r\n            }\r\n            this.atomCount = this.atomSet.getSize();\r\n            this.bondCount = this.bondSet.getSize();\r\n            this.boundingBox = this.getBoundingBox();\r\n            this.center = this.boundingBox.getCenter(new Vector3());\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('StructureView.refresh');\r\n        this.signals.refreshed.dispatch();\r\n    }\r\n    //\r\n    setSelection(selection) {\r\n        this.selection = selection;\r\n        this.refresh();\r\n    }\r\n    getSelection(selection) {\r\n        const seleList = [];\r\n        if (selection && selection.string) {\r\n            seleList.push(selection.string);\r\n        }\r\n        const parentSelection = this.structure.getSelection();\r\n        if (parentSelection && parentSelection.string) {\r\n            seleList.push(parentSelection.string);\r\n        }\r\n        if (this.selection && this.selection.string) {\r\n            seleList.push(this.selection.string);\r\n        }\r\n        let sele = '';\r\n        if (seleList.length > 0) {\r\n            sele = `( ${seleList.join(' ) AND ( ')} )`;\r\n        }\r\n        return new Selection(sele);\r\n    }\r\n    getStructure() {\r\n        return this.structure.getStructure();\r\n    }\r\n    //\r\n    eachBond(callback, selection) {\r\n        this.structure.eachBond(callback, this.getSelection(selection));\r\n    }\r\n    eachAtom(callback, selection) {\r\n        const ap = this.getAtomProxy();\r\n        const atomSet = this.getAtomSet(selection);\r\n        const n = this.atomStore.count;\r\n        if (atomSet.getSize() < n) {\r\n            atomSet.forEach(function (index) {\r\n                ap.index = index;\r\n                callback(ap);\r\n            });\r\n        }\r\n        else {\r\n            for (let i = 0; i < n; ++i) {\r\n                ap.index = i;\r\n                callback(ap);\r\n            }\r\n        }\r\n    }\r\n    eachResidue(callback, selection) {\r\n        this.structure.eachResidue(callback, this.getSelection(selection));\r\n    }\r\n    /**\r\n     * Not implemented\r\n     * @alias StructureView#eachResidueN\r\n     * @return {undefined}\r\n     */\r\n    eachResidueN(n, callback) {\r\n        console.error('StructureView.eachResidueN() not implemented');\r\n    }\r\n    eachChain(callback, selection) {\r\n        this.structure.eachChain(callback, this.getSelection(selection));\r\n    }\r\n    eachModel(callback, selection) {\r\n        this.structure.eachModel(callback, this.getSelection(selection));\r\n    }\r\n    //\r\n    getAtomSet(selection, ignoreView = false) {\r\n        let atomSet = this.structure.getAtomSet(selection);\r\n        if (!ignoreView && this.atomSet) {\r\n            atomSet = atomSet.makeIntersection(this.atomSet);\r\n        }\r\n        return atomSet;\r\n    }\r\n    //\r\n    getAtomIndices(selection) {\r\n        return this.structure.getAtomIndices(this.getSelection(selection));\r\n    }\r\n    refreshPosition() {\r\n        return this.structure.refreshPosition();\r\n    }\r\n    //\r\n    dispose() {\r\n        if (this.selection) {\r\n            this.selection.signals.stringChanged.remove(this.refresh, this);\r\n        }\r\n        this.structure.signals.refreshed.remove(this.refresh, this);\r\n        delete this.structure;\r\n        delete this.atomSet;\r\n        delete this.bondSet;\r\n        delete this.atomCount;\r\n        delete this.bondCount;\r\n    }\r\n}\r\nexport default StructureView;\r\n//# sourceMappingURL=structure-view.js.map","/**\r\n * @file Alignment\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log } from '../globals';\r\n// const nucleotides = 'ACTG';\r\nconst aminoacidsX = 'ACDEFGHIKLMNPQRSTVWY';\r\nconst aminoacids = 'ARNDCQEGHILKMFPSTWYVBZ?';\r\nconst blosum62x = [\r\n    [4, 0, -2, -1, -2, 0, -2, -1, -1, -1, -1, -2, -1, -1, -1, 1, 0, 0, -3, -2],\r\n    [0, 9, -3, -4, -2, -3, -3, -1, -3, -1, -1, -3, -3, -3, -3, -1, -1, -1, -2, -2],\r\n    [-2, -3, 6, 2, -3, -1, -1, -3, -1, -4, -3, 1, -1, 0, -2, 0, -1, -3, -4, -3],\r\n    [-1, -4, 2, 5, -3, -2, 0, -3, 1, -3, -2, 0, -1, 2, 0, 0, -1, -2, -3, -2],\r\n    [-2, -2, -3, -3, 6, -3, -1, 0, -3, 0, 0, -3, -4, -3, -3, -2, -2, -1, 1, 3],\r\n    [0, -3, -1, -2, -3, 6, -2, -4, -2, -4, -3, 0, -2, -2, -2, 0, -2, -3, -2, -3],\r\n    [-2, -3, -1, 0, -1, -2, 8, -3, -1, -3, -2, 1, -2, 0, 0, -1, -2, -3, -2, 2],\r\n    [-1, -1, -3, -3, 0, -4, -3, 4, -3, 2, 1, -3, -3, -3, -3, -2, -1, 3, -3, -1],\r\n    [-1, -3, -1, 1, -3, -2, -1, -3, 5, -2, -1, 0, -1, 1, 2, 0, -1, -2, -3, -2],\r\n    [-1, -1, -4, -3, 0, -4, -3, 2, -2, 4, 2, -3, -3, -2, -2, -2, -1, 1, -2, -1],\r\n    [-1, -1, -3, -2, 0, -3, -2, 1, -1, 2, 5, -2, -2, 0, -1, -1, -1, 1, -1, -1],\r\n    [-2, -3, 1, 0, -3, 0, 1, -3, 0, -3, -2, 6, -2, 0, 0, 1, 0, -3, -4, -2],\r\n    [-1, -3, -1, -1, -4, -2, -2, -3, -1, -3, -2, -2, 7, -1, -2, -1, -1, -2, -4, -3],\r\n    [-1, -3, 0, 2, -3, -2, 0, -3, 1, -2, 0, 0, -1, 5, 1, 0, -1, -2, -2, -1],\r\n    [-1, -3, -2, 0, -3, -2, 0, -3, 2, -2, -1, 0, -2, 1, 5, -1, -1, -3, -3, -2],\r\n    [1, -1, 0, 0, -2, 0, -1, -2, 0, -2, -1, 1, -1, 0, -1, 4, 1, -2, -3, -2],\r\n    [0, -1, -1, -1, -2, -2, -2, -1, -1, -1, -1, 0, -1, -1, -1, 1, 5, 0, -2, -2],\r\n    [0, -1, -3, -2, -1, -3, -3, 3, -2, 1, 1, -3, -2, -2, -3, -2, 0, 4, -3, -1],\r\n    [-3, -2, -4, -3, 1, -2, -2, -3, -3, -2, -1, -4, -4, -2, -3, -3, -2, -3, 11, 2],\r\n    [-2, -2, -3, -2, 3, -3, 2, -1, -2, -1, -1, -2, -3, -1, -2, -2, -2, -1, 2, 7] // Y\r\n];\r\nconst blosum62 = [\r\n    // A  R  N  D  C  Q  E  G  H  I  L  K  M  F  P  S  T  W  Y  V  B  Z  X\r\n    [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0],\r\n    [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1],\r\n    [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1],\r\n    [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1],\r\n    [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2],\r\n    [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1],\r\n    [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1],\r\n    [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1],\r\n    [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1],\r\n    [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1],\r\n    [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1],\r\n    [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1],\r\n    [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1],\r\n    [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1],\r\n    [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2],\r\n    [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0],\r\n    [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0],\r\n    [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2],\r\n    [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1],\r\n    [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1],\r\n    [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1],\r\n    [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1],\r\n    [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1] // X\r\n];\r\nfunction prepareMatrix(cellNames, mat) {\r\n    let j;\r\n    let i = 0;\r\n    const matDict = {};\r\n    mat.forEach(function (row) {\r\n        j = 0;\r\n        const rowDict = {};\r\n        row.forEach(function (elm) {\r\n            rowDict[cellNames[j++]] = elm;\r\n        });\r\n        matDict[cellNames[i++]] = rowDict;\r\n    });\r\n    return matDict;\r\n}\r\nconst SubstitutionMatrices = (function () {\r\n    return {\r\n        blosum62: prepareMatrix(aminoacids, blosum62),\r\n        blosum62x: prepareMatrix(aminoacidsX, blosum62x)\r\n    };\r\n}());\r\nclass Alignment {\r\n    constructor(seq1, seq2, gapPenalty = -10, gapExtensionPenalty = -1, substMatrix = 'blosum62') {\r\n        // TODO try encoding seqs as integers and use array subst matrix, maybe faster\r\n        this.seq1 = seq1;\r\n        this.seq2 = seq2;\r\n        this.gapPenalty = gapPenalty;\r\n        this.gapExtensionPenalty = gapExtensionPenalty;\r\n        if (substMatrix) {\r\n            this.substMatrix = SubstitutionMatrices[substMatrix];\r\n        }\r\n    }\r\n    initMatrices() {\r\n        this.n = this.seq1.length;\r\n        this.m = this.seq2.length;\r\n        // Log.log(this.n, this.m);\r\n        this.score = undefined;\r\n        this.ali = '';\r\n        this.S = [];\r\n        this.V = [];\r\n        this.H = [];\r\n        for (let i = 0; i <= this.n; ++i) {\r\n            this.S[i] = [];\r\n            this.V[i] = [];\r\n            this.H[i] = [];\r\n            for (let j = 0; j <= this.m; ++j) {\r\n                this.S[i][j] = 0;\r\n                this.V[i][j] = 0;\r\n                this.H[i][j] = 0;\r\n            }\r\n        }\r\n        for (let i = 0; i <= this.n; ++i) {\r\n            this.S[i][0] = this.gap(0);\r\n            this.H[i][0] = -Infinity;\r\n        }\r\n        for (let j = 0; j <= this.m; ++j) {\r\n            this.S[0][j] = this.gap(0);\r\n            this.V[0][j] = -Infinity;\r\n        }\r\n        this.S[0][0] = 0;\r\n        // Log.log(this.S, this.V, this.H);\r\n    }\r\n    gap(len) {\r\n        return this.gapPenalty + len * this.gapExtensionPenalty;\r\n    }\r\n    makeScoreFn() {\r\n        const seq1 = this.seq1;\r\n        const seq2 = this.seq2;\r\n        const substMatrix = this.substMatrix;\r\n        if (substMatrix) {\r\n            return function score(i, j) {\r\n                const c1 = seq1[i];\r\n                const c2 = seq2[j];\r\n                try {\r\n                    return substMatrix[c1][c2];\r\n                }\r\n                catch (e) {\r\n                    return -4;\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            Log.warn('Alignment: no subst matrix');\r\n            return function scoreNoSubstMat(i, j) {\r\n                const c1 = seq1[i];\r\n                const c2 = seq2[j];\r\n                return c1 === c2 ? 5 : -3;\r\n            };\r\n        }\r\n    }\r\n    calc() {\r\n        if (Debug)\r\n            Log.time('Alignment.calc');\r\n        this.initMatrices();\r\n        const gap0 = this.gap(0);\r\n        const scoreFn = this.makeScoreFn();\r\n        const gapExtensionPenalty = this.gapExtensionPenalty;\r\n        const V = this.V;\r\n        const H = this.H;\r\n        const S = this.S;\r\n        const n = this.n;\r\n        const m = this.m;\r\n        let Vi1, Si1, Vi, Hi, Si;\r\n        for (let i = 1; i <= n; ++i) {\r\n            Si1 = S[i - 1];\r\n            Vi1 = V[i - 1];\r\n            Vi = V[i];\r\n            Hi = H[i];\r\n            Si = S[i];\r\n            for (let j = 1; j <= m; ++j) {\r\n                Vi[j] = Math.max(Si1[j] + gap0, Vi1[j] + gapExtensionPenalty);\r\n                Hi[j] = Math.max(Si[j - 1] + gap0, Hi[j - 1] + gapExtensionPenalty);\r\n                Si[j] = Math.max(Si1[j - 1] + scoreFn(i - 1, j - 1), // match\r\n                Vi[j], // del\r\n                Hi[j] // ins\r\n                );\r\n            }\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('Alignment.calc');\r\n        if (Debug)\r\n            Log.log(this.S, this.V, this.H);\r\n    }\r\n    trace() {\r\n        if (Debug)\r\n            Log.time('Alignment.trace');\r\n        this.ali1 = '';\r\n        this.ali2 = '';\r\n        const scoreFn = this.makeScoreFn();\r\n        let i = this.n;\r\n        let j = this.m;\r\n        let mat;\r\n        if (this.S[i][j] >= this.V[i][j]) {\r\n            mat = 'S';\r\n            this.score = this.S[i][j];\r\n        }\r\n        else if (this.V[i][j] >= this.H[i][j]) {\r\n            mat = 'V';\r\n            this.score = this.V[i][j];\r\n        }\r\n        else {\r\n            mat = 'H';\r\n            this.score = this.H[i][j];\r\n        }\r\n        if (Debug)\r\n            Log.log('Alignment: SCORE', this.score);\r\n        if (Debug)\r\n            Log.log('Alignment: S, V, H', this.S[i][j], this.V[i][j], this.H[i][j]);\r\n        while (i > 0 && j > 0) {\r\n            if (mat === 'S') {\r\n                if (this.S[i][j] === this.S[i - 1][j - 1] + scoreFn(i - 1, j - 1)) {\r\n                    this.ali1 = this.seq1[i - 1] + this.ali1;\r\n                    this.ali2 = this.seq2[j - 1] + this.ali2;\r\n                    --i;\r\n                    --j;\r\n                    mat = 'S';\r\n                }\r\n                else if (this.S[i][j] === this.V[i][j]) {\r\n                    mat = 'V';\r\n                }\r\n                else if (this.S[i][j] === this.H[i][j]) {\r\n                    mat = 'H';\r\n                }\r\n                else {\r\n                    // Log.debug('Alignment: S');\r\n                    --i;\r\n                    --j;\r\n                }\r\n            }\r\n            else if (mat === 'V') {\r\n                if (this.V[i][j] === this.V[i - 1][j] + this.gapExtensionPenalty) {\r\n                    this.ali1 = this.seq1[i - 1] + this.ali1;\r\n                    this.ali2 = '-' + this.ali2;\r\n                    --i;\r\n                    mat = 'V';\r\n                }\r\n                else if (this.V[i][j] === this.S[i - 1][j] + this.gap(0)) {\r\n                    this.ali1 = this.seq1[i - 1] + this.ali1;\r\n                    this.ali2 = '-' + this.ali2;\r\n                    --i;\r\n                    mat = 'S';\r\n                }\r\n                else {\r\n                    // Log.debug('Alignment: V');\r\n                    --i;\r\n                }\r\n            }\r\n            else if (mat === 'H') {\r\n                if (this.H[i][j] === this.H[i][j - 1] + this.gapExtensionPenalty) {\r\n                    this.ali1 = '-' + this.ali1;\r\n                    this.ali2 = this.seq2[j - 1] + this.ali2;\r\n                    --j;\r\n                    mat = 'H';\r\n                }\r\n                else if (this.H[i][j] === this.S[i][j - 1] + this.gap(0)) {\r\n                    this.ali1 = '-' + this.ali1;\r\n                    this.ali2 = this.seq2[j - 1] + this.ali2;\r\n                    --j;\r\n                    mat = 'S';\r\n                }\r\n                else {\r\n                    // Log.debug('Alignment: H');\r\n                    --j;\r\n                }\r\n            }\r\n            else {\r\n                Log.error('Alignment: no matrix');\r\n            }\r\n        }\r\n        while (i > 0) {\r\n            this.ali1 = this.seq1[i - 1] + this.ali1;\r\n            this.ali2 = '-' + this.ali2;\r\n            --i;\r\n        }\r\n        while (j > 0) {\r\n            this.ali1 = '-' + this.ali1;\r\n            this.ali2 = this.seq2[j - 1] + this.ali2;\r\n            --j;\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('Alignment.trace');\r\n        if (Debug)\r\n            Log.log([this.ali1, this.ali2]);\r\n    }\r\n}\r\nexport default Alignment;\r\n//# sourceMappingURL=alignment.js.map","/**\r\n * @file Align Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Selection from '../selection/selection';\r\nimport Alignment from './alignment';\r\nimport Superposition from './superposition';\r\n/**\r\n * Perform structural superposition of two structures,\r\n * optionally guided by a sequence alignment\r\n * @param  {Structure|StructureView} s1 - structure 1 which is superposed onto structure 2\r\n * @param  {Structure|StructureView} s2 - structure 2 onto which structure 1 is superposed\r\n * @param  {Boolean} [align] - guide the superposition by a sequence alignment\r\n * @param  {String} [sele1] - selection string for structure 1\r\n * @param  {String} [sele2] - selection string for structure 2\r\n * @return {undefined}\r\n */\r\nfunction superpose(s1, s2, align = false, sele1 = '', sele2 = '') {\r\n    let i;\r\n    let j;\r\n    let n;\r\n    let atoms1;\r\n    let atoms2;\r\n    if (align) {\r\n        let _s1 = s1;\r\n        let _s2 = s2;\r\n        if (sele1 && sele2) {\r\n            _s1 = s1.getView(new Selection(sele1));\r\n            _s2 = s2.getView(new Selection(sele2));\r\n        }\r\n        const seq1 = _s1.getSequence();\r\n        const seq2 = _s2.getSequence();\r\n        // Log.log( seq1.join(\"\") );\r\n        // Log.log( seq2.join(\"\") );\r\n        const ali = new Alignment(seq1.join(''), seq2.join(''));\r\n        ali.calc();\r\n        ali.trace();\r\n        // Log.log( \"superpose alignment score\", ali.score );\r\n        // Log.log( ali.ali1 );\r\n        // Log.log( ali.ali2 );\r\n        let _i, _j;\r\n        i = 0;\r\n        j = 0;\r\n        n = ali.ali1.length;\r\n        const aliIdx1 = [];\r\n        const aliIdx2 = [];\r\n        for (let l = 0; l < n; ++l) {\r\n            const x = ali.ali1[l];\r\n            const y = ali.ali2[l];\r\n            _i = 0;\r\n            _j = 0;\r\n            if (x === '-') {\r\n                aliIdx2[j] = false;\r\n            }\r\n            else {\r\n                aliIdx2[j] = true;\r\n                _i = 1;\r\n            }\r\n            if (y === '-') {\r\n                aliIdx1[i] = false;\r\n            }\r\n            else {\r\n                aliIdx1[i] = true;\r\n                _j = 1;\r\n            }\r\n            i += _i;\r\n            j += _j;\r\n        }\r\n        // Log.log( i, j );\r\n        // Log.log( aliIdx1 );\r\n        // Log.log( aliIdx2 );\r\n        const _atoms1 = [];\r\n        const _atoms2 = [];\r\n        const ap1 = _s1.getAtomProxy();\r\n        const ap2 = _s2.getAtomProxy();\r\n        i = 0;\r\n        _s1.eachResidue(function (r) {\r\n            if (r.traceAtomIndex === undefined ||\r\n                r.traceAtomIndex !== r.getAtomIndexByName('CA'))\r\n                return;\r\n            if (aliIdx1[i]) {\r\n                ap1.index = r.getAtomIndexByName('CA'); // TODO\r\n                _atoms1.push(ap1.x, ap1.y, ap1.z);\r\n            }\r\n            i += 1;\r\n        });\r\n        i = 0;\r\n        _s2.eachResidue(function (r) {\r\n            if (r.traceAtomIndex === undefined ||\r\n                r.traceAtomIndex !== r.getAtomIndexByName('CA'))\r\n                return;\r\n            if (aliIdx2[i]) {\r\n                ap2.index = r.getAtomIndexByName('CA'); // TODO\r\n                _atoms2.push(ap2.x, ap2.y, ap2.z);\r\n            }\r\n            i += 1;\r\n        });\r\n        atoms1 = new Float32Array(_atoms1);\r\n        atoms2 = new Float32Array(_atoms2);\r\n    }\r\n    else {\r\n        const sviewCa1 = s1.getView(new Selection(`${sele1} and .CA`));\r\n        const sviewCa2 = s2.getView(new Selection(`${sele2} and .CA`));\r\n        atoms1 = sviewCa1;\r\n        atoms2 = sviewCa2;\r\n    }\r\n    const superpose = new Superposition(atoms1, atoms2);\r\n    const result = superpose.transform(s1);\r\n    s1.refreshPosition();\r\n    return result;\r\n}\r\nexport { superpose };\r\n//# sourceMappingURL=align-utils.js.map","/**\r\n * @file Sturucture Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Signal } from 'signals';\r\nimport { ComponentRegistry, MeasurementDefaultParams } from '../globals';\r\nimport { defaults, /*deepEqual, */ createRingBuffer, createSimpleDict } from '../utils';\r\nimport { smoothstep } from '../math/math-utils';\r\nimport Component, { ComponentDefaultParameters } from './component';\r\nimport RepresentationCollection from './representation-collection';\r\nimport TrajectoryElement from './trajectory-element';\r\nimport { makeTrajectory } from '../trajectory/trajectory-utils';\r\nimport Selection from '../selection/selection';\r\nimport StructureView from '../structure/structure-view';\r\nimport { superpose } from '../align/align-utils';\r\nexport const StructureComponentDefaultParameters = Object.assign({\r\n    sele: '',\r\n    defaultAssembly: ''\r\n}, ComponentDefaultParameters);\r\n/**\r\n * Component wrapping a {@link Structure} object\r\n *\r\n * @example\r\n * // get a structure component by loading a structure file into the stage\r\n * stage.loadFile( \"rcsb://4opj\" ).then( function( structureComponent ){\r\n *     structureComponent.addRepresentation( \"cartoon\" );\r\n *     structureComponent.autoView();\r\n * } );\r\n */\r\nclass StructureComponent extends Component {\r\n    constructor(stage, structure, params = {}) {\r\n        super(stage, structure, Object.assign({ name: structure.name }, params));\r\n        this.structure = structure;\r\n        this.trajList = [];\r\n        this.signals = Object.assign(this.signals, {\r\n            trajectoryAdded: new Signal(),\r\n            trajectoryRemoved: new Signal(),\r\n            defaultAssemblyChanged: new Signal()\r\n        });\r\n        this.initSelection(this.parameters.sele);\r\n        //\r\n        this.pickBuffer = createRingBuffer(4);\r\n        this.pickDict = createSimpleDict();\r\n        this.spacefillRepresentation = this.addRepresentation('spacefill', {\r\n            sele: 'none',\r\n            opacity: MeasurementDefaultParams.opacity,\r\n            color: MeasurementDefaultParams.color,\r\n            disablePicking: true,\r\n            radiusType: 'data'\r\n        }, true);\r\n        this.distanceRepresentation = this.addRepresentation('distance', MeasurementDefaultParams, true);\r\n        this.angleRepresentation = this.addRepresentation('angle', MeasurementDefaultParams, true);\r\n        this.dihedralRepresentation = this.addRepresentation('dihedral', MeasurementDefaultParams, true);\r\n        this.measureRepresentations = new RepresentationCollection([\r\n            this.spacefillRepresentation,\r\n            this.distanceRepresentation,\r\n            this.angleRepresentation,\r\n            this.dihedralRepresentation\r\n        ]);\r\n        //\r\n        this.setDefaultAssembly(this.parameters.defaultAssembly);\r\n    }\r\n    get defaultParameters() { return StructureComponentDefaultParameters; }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'structure'; }\r\n    /**\r\n     * Initialize selection\r\n     * @private\r\n     * @param {String} sele - selection string\r\n     * @return {undefined}\r\n     */\r\n    initSelection(sele) {\r\n        /**\r\n         * Selection for {@link StructureComponent#structureView}\r\n         * @private\r\n         * @type {Selection}\r\n         */\r\n        this.selection = new Selection(sele);\r\n        /**\r\n         * View on {@link StructureComponent#structure}.\r\n         * Change its selection via {@link StructureComponent#setSelection}.\r\n         * @type {StructureView}\r\n         */\r\n        this.structureView = new StructureView(this.structure, this.selection);\r\n        this.selection.signals.stringChanged.add(() => {\r\n            this.structureView.setSelection(this.selection);\r\n            this.rebuildRepresentations();\r\n            this.rebuildTrajectories();\r\n        });\r\n    }\r\n    /**\r\n     * Set selection of {@link StructureComponent#structureView}\r\n     * @param {String} string - selection string\r\n     * @return {StructureComponent} this object\r\n     */\r\n    setSelection(string) {\r\n        this.parameters.sele = string;\r\n        this.selection.setString(string);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the default assembly\r\n     * @param {String} value - assembly name\r\n     * @return {undefined}\r\n     */\r\n    setDefaultAssembly(value) {\r\n        // filter out non-exsisting assemblies\r\n        if (this.structure.biomolDict[value] === undefined)\r\n            value = '';\r\n        // only set default assembly when changed\r\n        if (this.parameters.defaultAssembly !== value) {\r\n            const reprParams = { defaultAssembly: value };\r\n            this.reprList.forEach(repr => repr.setParameters(reprParams));\r\n            this.measureRepresentations.setParameters(reprParams);\r\n            this.parameters.defaultAssembly = value;\r\n            this.signals.defaultAssemblyChanged.dispatch(value);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Rebuild all representations\r\n     * @return {undefined}\r\n     */\r\n    rebuildRepresentations() {\r\n        this.reprList.forEach((repr) => {\r\n            repr.build();\r\n        });\r\n        this.measureRepresentations.build();\r\n    }\r\n    /**\r\n     * Rebuild all trajectories\r\n     * @return {undefined}\r\n     */\r\n    rebuildTrajectories() {\r\n        this.trajList.forEach(trajComp => {\r\n            trajComp.trajectory.setStructure(this.structureView);\r\n        });\r\n    }\r\n    updateRepresentations(what) {\r\n        super.updateRepresentations(what);\r\n        this.measureRepresentations.update(what);\r\n    }\r\n    /**\r\n     * Overrides {@link Component.updateRepresentationMatrices}\r\n     * to also update matrix for measureRepresentations\r\n     */\r\n    updateRepresentationMatrices() {\r\n        super.updateRepresentationMatrices();\r\n        this.measureRepresentations.setParameters({ matrix: this.matrix });\r\n    }\r\n    addRepresentation(type, params = {}, hidden = false) {\r\n        params.defaultAssembly = this.parameters.defaultAssembly;\r\n        const reprComp = this._addRepresentation(type, this.structureView, params, hidden);\r\n        if (!hidden) {\r\n            reprComp.signals.parametersChanged.add(() => this.measureUpdate());\r\n        }\r\n        return reprComp;\r\n    }\r\n    /**\r\n     * Add a new trajectory component to the structure\r\n     */\r\n    addTrajectory(trajPath = '', params = {}) {\r\n        const traj = makeTrajectory(trajPath, this.structureView, params);\r\n        traj.signals.frameChanged.add(() => {\r\n            this.updateRepresentations({ 'position': true });\r\n        });\r\n        const trajComp = new TrajectoryElement(this.stage, traj, params);\r\n        this.trajList.push(trajComp);\r\n        this.signals.trajectoryAdded.dispatch(trajComp);\r\n        return trajComp;\r\n    }\r\n    removeTrajectory(traj) {\r\n        const idx = this.trajList.indexOf(traj);\r\n        if (idx !== -1) {\r\n            this.trajList.splice(idx, 1);\r\n        }\r\n        traj.dispose();\r\n        this.signals.trajectoryRemoved.dispatch(traj);\r\n    }\r\n    dispose() {\r\n        // copy via .slice because side effects may change trajList\r\n        this.trajList.slice().forEach(traj => traj.dispose());\r\n        this.trajList.length = 0;\r\n        this.structure.dispose();\r\n        this.measureRepresentations.dispose();\r\n        super.dispose();\r\n    }\r\n    autoView(sele, duration) {\r\n        if (typeof sele === 'number') {\r\n            duration = sele;\r\n            sele = '';\r\n        }\r\n        this.stage.animationControls.zoomMove(this.getCenter(sele), this.getZoom(sele), defaults(duration, 0));\r\n    }\r\n    getBoxUntransformed(sele) {\r\n        let bb;\r\n        if (sele) {\r\n            bb = this.structureView.getBoundingBox(new Selection(sele));\r\n        }\r\n        else {\r\n            bb = this.structureView.boundingBox;\r\n        }\r\n        return bb;\r\n    }\r\n    getCenterUntransformed(sele) {\r\n        if (sele && typeof sele === 'string') {\r\n            return this.structure.atomCenter(new Selection(sele));\r\n        }\r\n        else {\r\n            return this.structure.center;\r\n        }\r\n    }\r\n    superpose(component, align, sele1, sele2) {\r\n        superpose(this.structureView, component.structureView, align, sele1, sele2);\r\n        this.updateRepresentations({ 'position': true });\r\n        return this;\r\n    }\r\n    getMaxRepresentationRadius(atomIndex) {\r\n        let maxRadius = 0;\r\n        const atom = this.structure.getAtomProxy(atomIndex);\r\n        this.eachRepresentation(reprElem => {\r\n            if (reprElem.getVisibility()) {\r\n                const repr = reprElem.repr; // TODO\r\n                maxRadius = Math.max(repr.getAtomRadius(atom), maxRadius);\r\n            }\r\n        });\r\n        return maxRadius;\r\n    }\r\n    measurePick(atom) {\r\n        const pickCount = this.pickBuffer.count;\r\n        if (this.lastPick === atom.index && pickCount >= 1) {\r\n            if (pickCount > 1) {\r\n                const atomList = this.pickBuffer.data;\r\n                const atomListSorted = this.pickBuffer.data.sort();\r\n                if (this.pickDict.has(atomListSorted)) {\r\n                    this.pickDict.del(atomListSorted);\r\n                }\r\n                else {\r\n                    this.pickDict.add(atomListSorted, atomList);\r\n                }\r\n                if (pickCount === 2) {\r\n                    this.distanceRepresentation.setParameters({\r\n                        atomPair: this.pickDict.values.filter(l => l.length === 2)\r\n                    });\r\n                }\r\n                else if (pickCount === 3) {\r\n                    this.angleRepresentation.setParameters({\r\n                        atomTriple: this.pickDict.values.filter(l => l.length === 3)\r\n                    });\r\n                }\r\n                else if (pickCount === 4) {\r\n                    this.dihedralRepresentation.setParameters({\r\n                        atomQuad: this.pickDict.values.filter(l => l.length === 4)\r\n                    });\r\n                }\r\n            }\r\n            this.pickBuffer.clear();\r\n            this.lastPick = undefined;\r\n        }\r\n        else {\r\n            if (!this.pickBuffer.has(atom.index)) {\r\n                this.pickBuffer.push(atom.index);\r\n            }\r\n            this.lastPick = atom.index;\r\n        }\r\n        this.measureUpdate();\r\n    }\r\n    measureClear() {\r\n        this.pickBuffer.clear();\r\n        this.lastPick = undefined;\r\n        this.spacefillRepresentation.setSelection('none');\r\n    }\r\n    measureBuild() {\r\n        const md = this.measureData();\r\n        this.distanceRepresentation.setParameters({ atomPair: md.distance });\r\n        this.angleRepresentation.setParameters({ atomTriple: md.angle });\r\n        this.dihedralRepresentation.setParameters({ atomQuad: md.dihedral });\r\n    }\r\n    measureUpdate() {\r\n        const pickData = this.pickBuffer.data;\r\n        const radiusData = {};\r\n        pickData.forEach(ai => {\r\n            const r = Math.max(0.1, this.getMaxRepresentationRadius(ai));\r\n            radiusData[ai] = r * (2.3 - smoothstep(0.1, 2, r));\r\n        });\r\n        this.spacefillRepresentation.setSelection(pickData.length ? ('@' + pickData.join(',')) : 'none');\r\n        if (pickData.length)\r\n            this.spacefillRepresentation.setParameters({ radiusData });\r\n    }\r\n    measureData() {\r\n        const pv = this.pickDict.values;\r\n        return {\r\n            distance: pv.filter(l => l.length === 2),\r\n            angle: pv.filter(l => l.length === 3),\r\n            dihedral: pv.filter(l => l.length === 4)\r\n        };\r\n    }\r\n    /**\r\n     * Remove all measurements, optionally limit to distance, angle or dihedral\r\n     */\r\n    removeAllMeasurements(type) {\r\n        const pd = this.pickDict;\r\n        const pv = pd.values;\r\n        const remove = function (len) {\r\n            pv.filter(l => l.length === len).forEach(l => pd.del(l.slice().sort()));\r\n        };\r\n        if (!type || type & 1 /* Distance */)\r\n            remove(2);\r\n        if (!type || type & 2 /* Angle */)\r\n            remove(3);\r\n        if (!type || type & 4 /* Dihedral */)\r\n            remove(4);\r\n        this.measureBuild();\r\n    }\r\n    /**\r\n     * Remove a measurement given as a pair, triple, quad of atom indices\r\n     */\r\n    removeMeasurement(atomList) {\r\n        this.pickDict.del(atomList.slice().sort());\r\n        this.measureBuild();\r\n    }\r\n    /**\r\n     * Add a measurement given as a pair, triple, quad of atom indices\r\n     */\r\n    addMeasurement(atomList) {\r\n        if (atomList.length < 2 || atomList.length > 4)\r\n            return;\r\n        const atomListSorted = atomList.slice().sort();\r\n        if (!this.pickDict.has(atomListSorted)) {\r\n            this.pickDict.add(atomListSorted, atomList);\r\n        }\r\n        this.measureBuild();\r\n    }\r\n}\r\nComponentRegistry.add('structure', StructureComponent);\r\nComponentRegistry.add('structureview', StructureComponent);\r\nexport default StructureComponent;\r\n//# sourceMappingURL=structure-component.js.map","/**\r\n * @file Spline\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { AtomPicker } from '../utils/picker.js';\r\nimport RadiusFactory from '../utils/radius-factory.js';\r\nimport { copyArray } from '../math/array-utils.js';\r\nimport { spline } from '../math/math-utils';\r\nexport class Interpolator {\r\n    constructor(m, tension) {\r\n        this.m = m;\r\n        this.tension = tension;\r\n        this.dt = 1.0 / this.m;\r\n        this.delta = 0.0001;\r\n        this.vec1 = new Vector3();\r\n        this.vec2 = new Vector3();\r\n        this.vDir = new Vector3();\r\n        this.vTan = new Vector3();\r\n        this.vNorm = new Vector3();\r\n        this.vBin = new Vector3();\r\n        this.m2 = Math.ceil(this.m / 2);\r\n    }\r\n    interpolateToArr(v0, v1, v2, v3, t, arr, offset) {\r\n        arr[offset + 0] = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension);\r\n        arr[offset + 1] = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension);\r\n        arr[offset + 2] = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension);\r\n    }\r\n    interpolateToVec(v0, v1, v2, v3, t, vec) {\r\n        vec.x = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension);\r\n        vec.y = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension);\r\n        vec.z = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension);\r\n    }\r\n    interpolatePosition(v0, v1, v2, v3, pos, offset) {\r\n        for (var j = 0; j < this.m; ++j) {\r\n            var l = offset + j * 3;\r\n            var d = this.dt * j;\r\n            this.interpolateToArr(v0, v1, v2, v3, d, pos, l);\r\n        }\r\n    }\r\n    interpolateTangent(v0, v1, v2, v3, tan, offset) {\r\n        for (var j = 0; j < this.m; ++j) {\r\n            var d = this.dt * j;\r\n            var d1 = d - this.delta;\r\n            var d2 = d + this.delta;\r\n            var l = offset + j * 3;\r\n            // capping as a precaution\r\n            if (d1 < 0)\r\n                d1 = 0;\r\n            if (d2 > 1)\r\n                d2 = 1;\r\n            //\r\n            this.interpolateToVec(v0, v1, v2, v3, d1, this.vec1);\r\n            this.interpolateToVec(v0, v1, v2, v3, d2, this.vec2);\r\n            //\r\n            this.vec2.sub(this.vec1).normalize();\r\n            this.vec2.toArray(tan, l);\r\n        }\r\n    }\r\n    vectorSubdivide(interpolationFn, iterator, array, offset, isCyclic) {\r\n        let v0;\r\n        let v1 = iterator.next();\r\n        let v2 = iterator.next();\r\n        let v3 = iterator.next();\r\n        //\r\n        const n = iterator.size;\r\n        const n1 = n - 1;\r\n        let k = offset || 0;\r\n        for (let i = 0; i < n1; ++i) {\r\n            v0 = v1;\r\n            v1 = v2;\r\n            v2 = v3;\r\n            v3 = iterator.next();\r\n            interpolationFn.apply(this, [v0, v1, v2, v3, array, k]);\r\n            k += 3 * this.m;\r\n        }\r\n        if (isCyclic) {\r\n            v0 = iterator.get(n - 2);\r\n            v1 = iterator.get(n - 1);\r\n            v2 = iterator.get(0);\r\n            v3 = iterator.get(1);\r\n            interpolationFn.apply(this, [v0, v1, v2, v3, array, k]);\r\n            k += 3 * this.m;\r\n        }\r\n    }\r\n    //\r\n    getPosition(iterator, array, offset, isCyclic) {\r\n        iterator.reset();\r\n        this.vectorSubdivide(this.interpolatePosition, iterator, array, offset, isCyclic);\r\n        var n1 = iterator.size - 1;\r\n        var k = n1 * this.m * 3;\r\n        if (isCyclic)\r\n            k += this.m * 3;\r\n        var v = iterator.get(isCyclic ? 0 : n1);\r\n        array[k] = v.x;\r\n        array[k + 1] = v.y;\r\n        array[k + 2] = v.z;\r\n    }\r\n    getTangent(iterator, array, offset, isCyclic) {\r\n        iterator.reset();\r\n        this.vectorSubdivide(this.interpolateTangent, iterator, array, offset, isCyclic);\r\n        const n1 = iterator.size - 1;\r\n        let k = n1 * this.m * 3;\r\n        if (isCyclic)\r\n            k += this.m * 3;\r\n        copyArray(array, array, k - 3, k, 3);\r\n    }\r\n    interpolateNormalDir(u0, u1, u2, u3, v0, v1, v2, v3, tan, norm, bin, offset, shift) {\r\n        for (let j = 0; j < this.m; ++j) {\r\n            let l = offset + j * 3;\r\n            if (shift)\r\n                l += this.m2 * 3;\r\n            const d = this.dt * j;\r\n            this.interpolateToVec(u0, u1, u2, u3, d, this.vec1);\r\n            this.interpolateToVec(v0, v1, v2, v3, d, this.vec2);\r\n            this.vDir.subVectors(this.vec2, this.vec1).normalize();\r\n            this.vTan.fromArray(tan, l);\r\n            this.vBin.crossVectors(this.vDir, this.vTan).normalize();\r\n            this.vBin.toArray(bin, l);\r\n            this.vNorm.crossVectors(this.vTan, this.vBin).normalize();\r\n            this.vNorm.toArray(norm, l);\r\n        }\r\n    }\r\n    interpolateNormal(vDir, tan, norm, bin, offset) {\r\n        for (var j = 0; j < this.m; ++j) {\r\n            var l = offset + j * 3;\r\n            vDir.copy(this.vNorm);\r\n            this.vTan.fromArray(tan, l);\r\n            this.vBin.crossVectors(vDir, this.vTan).normalize();\r\n            this.vBin.toArray(bin, l);\r\n            this.vNorm.crossVectors(this.vTan, this.vBin).normalize();\r\n            this.vNorm.toArray(norm, l);\r\n        }\r\n    }\r\n    getNormal(size, tan, norm, bin, offset, isCyclic) {\r\n        this.vNorm.set(0, 0, 1);\r\n        const n = size;\r\n        const n1 = n - 1;\r\n        let k = offset || 0;\r\n        for (var i = 0; i < n1; ++i) {\r\n            this.interpolateNormal(this.vDir, tan, norm, bin, k);\r\n            k += 3 * this.m;\r\n        }\r\n        if (isCyclic) {\r\n            this.interpolateNormal(this.vDir, tan, norm, bin, k);\r\n            k += 3 * this.m;\r\n        }\r\n        this.vBin.toArray(bin, k);\r\n        this.vNorm.toArray(norm, k);\r\n    }\r\n    getNormalDir(iterDir1, iterDir2, tan, norm, bin, offset, isCyclic, shift) {\r\n        iterDir1.reset();\r\n        iterDir2.reset();\r\n        //\r\n        const vSub1 = new Vector3();\r\n        const vSub2 = new Vector3();\r\n        const vSub3 = new Vector3();\r\n        const vSub4 = new Vector3();\r\n        //\r\n        const d1v1 = new Vector3();\r\n        const d1v2 = new Vector3().copy(iterDir1.next());\r\n        const d1v3 = new Vector3().copy(iterDir1.next());\r\n        const d1v4 = new Vector3().copy(iterDir1.next());\r\n        const d2v1 = new Vector3();\r\n        const d2v2 = new Vector3().copy(iterDir2.next());\r\n        const d2v3 = new Vector3().copy(iterDir2.next());\r\n        const d2v4 = new Vector3().copy(iterDir2.next());\r\n        //\r\n        this.vNorm.set(0, 0, 1);\r\n        let n = iterDir1.size;\r\n        let n1 = n - 1;\r\n        let k = offset || 0;\r\n        for (var i = 0; i < n1; ++i) {\r\n            d1v1.copy(d1v2);\r\n            d1v2.copy(d1v3);\r\n            d1v3.copy(d1v4);\r\n            d1v4.copy(iterDir1.next());\r\n            d2v1.copy(d2v2);\r\n            d2v2.copy(d2v3);\r\n            d2v3.copy(d2v4);\r\n            d2v4.copy(iterDir2.next());\r\n            //\r\n            if (i === 0) {\r\n                vSub1.subVectors(d2v1, d1v1);\r\n                vSub2.subVectors(d2v2, d1v2);\r\n                if (vSub1.dot(vSub2) < 0) {\r\n                    vSub2.multiplyScalar(-1);\r\n                    d2v2.addVectors(d1v2, vSub2);\r\n                }\r\n                vSub3.subVectors(d2v3, d1v3);\r\n                if (vSub2.dot(vSub3) < 0) {\r\n                    vSub3.multiplyScalar(-1);\r\n                    d2v3.addVectors(d1v3, vSub3);\r\n                }\r\n            }\r\n            else {\r\n                vSub3.copy(vSub4);\r\n            }\r\n            vSub4.subVectors(d2v4, d1v4);\r\n            if (vSub3.dot(vSub4) < 0) {\r\n                vSub4.multiplyScalar(-1);\r\n                d2v4.addVectors(d1v4, vSub4);\r\n            }\r\n            this.interpolateNormalDir(d1v1, d1v2, d1v3, d1v4, d2v1, d2v2, d2v3, d2v4, tan, norm, bin, k, shift);\r\n            k += 3 * this.m;\r\n        }\r\n        if (isCyclic) {\r\n            d1v1.copy(iterDir1.get(n - 2));\r\n            d1v2.copy(iterDir1.get(n - 1));\r\n            d1v3.copy(iterDir1.get(0));\r\n            d1v4.copy(iterDir1.get(1));\r\n            d2v1.copy(iterDir2.get(n - 2));\r\n            d2v2.copy(iterDir2.get(n - 1));\r\n            d2v3.copy(iterDir2.get(0));\r\n            d2v4.copy(iterDir2.get(1));\r\n            //\r\n            vSub3.copy(vSub4);\r\n            vSub4.subVectors(d2v4, d1v4);\r\n            if (vSub3.dot(vSub4) < 0) {\r\n                vSub4.multiplyScalar(-1);\r\n                d2v4.addVectors(d1v4, vSub4);\r\n            }\r\n            this.interpolateNormalDir(d1v1, d1v2, d1v3, d1v4, d2v1, d2v2, d2v3, d2v4, tan, norm, bin, k, shift);\r\n            k += 3 * this.m;\r\n        }\r\n        if (shift) {\r\n            // FIXME shift requires data from one this.more preceeding residue\r\n            this.vBin.fromArray(bin, this.m2 * 3);\r\n            this.vNorm.fromArray(norm, this.m2 * 3);\r\n            for (var j = 0; j < this.m2; ++j) {\r\n                this.vBin.toArray(bin, j * 3);\r\n                this.vNorm.toArray(norm, j * 3);\r\n            }\r\n        }\r\n        else {\r\n            this.vBin.toArray(bin, k);\r\n            this.vNorm.toArray(norm, k);\r\n        }\r\n    }\r\n    //\r\n    interpolateColor(item1, item2, colFn, col, offset) {\r\n        var j, l;\r\n        for (j = 0; j < this.m2; ++j) {\r\n            l = offset + j * 3;\r\n            colFn.apply(this, [item1, col, l]); // itemColorToArray\r\n        }\r\n        for (j = this.m2; j < this.m; ++j) {\r\n            l = offset + j * 3;\r\n            colFn.apply(this, [item2, col, l]); // itemColorToArray\r\n        }\r\n    }\r\n    getColor(iterator, colFn, col, offset, isCyclic) {\r\n        iterator.reset();\r\n        iterator.next(); // first element not needed\r\n        let i0;\r\n        let i1 = iterator.next();\r\n        //\r\n        var n = iterator.size;\r\n        var n1 = n - 1;\r\n        var k = offset || 0;\r\n        for (var i = 0; i < n1; ++i) {\r\n            i0 = i1;\r\n            i1 = iterator.next();\r\n            this.interpolateColor(i0, i1, colFn, col, k);\r\n            k += 3 * this.m;\r\n        }\r\n        if (isCyclic) {\r\n            i0 = iterator.get(n - 1);\r\n            i1 = iterator.get(0);\r\n            this.interpolateColor(i0, i1, colFn, col, k);\r\n            k += 3 * this.m;\r\n        }\r\n        //\r\n        col[k] = col[k - 3];\r\n        col[k + 1] = col[k - 2];\r\n        col[k + 2] = col[k - 1];\r\n    }\r\n    //\r\n    interpolatePicking(item1, item2, pickFn, pick, offset) {\r\n        var j;\r\n        for (j = 0; j < this.m2; ++j) {\r\n            pick[offset + j] = pickFn.apply(this, [item1]);\r\n        }\r\n        for (j = this.m2; j < this.m; ++j) {\r\n            pick[offset + j] = pickFn.apply(this, [item2]);\r\n        }\r\n    }\r\n    getPicking(iterator, pickFn, pick, offset, isCyclic) {\r\n        iterator.reset();\r\n        iterator.next(); // first element not needed\r\n        let i0;\r\n        let i1 = iterator.next();\r\n        //\r\n        const n = iterator.size;\r\n        const n1 = n - 1;\r\n        let k = offset || 0;\r\n        for (var i = 0; i < n1; ++i) {\r\n            i0 = i1;\r\n            i1 = iterator.next();\r\n            this.interpolatePicking(i0, i1, pickFn, pick, k);\r\n            k += this.m;\r\n        }\r\n        if (isCyclic) {\r\n            i0 = iterator.get(n - 1);\r\n            i1 = iterator.get(0);\r\n            this.interpolatePicking(i0, i1, pickFn, pick, k);\r\n            k += this.m;\r\n        }\r\n        //\r\n        pick[k] = pick[k - 1];\r\n    }\r\n    //\r\n    interpolateSize(item1, item2, sizeFn, size, offset) {\r\n        const s1 = sizeFn.apply(this, [item1]);\r\n        const s2 = sizeFn.apply(this, [item2]);\r\n        for (let j = 0; j < this.m; ++j) {\r\n            // linear interpolation\r\n            let t = j / this.m;\r\n            size[offset + j] = (1 - t) * s1 + t * s2;\r\n        }\r\n    }\r\n    getSize(iterator, sizeFn, size, offset, isCyclic) {\r\n        iterator.reset();\r\n        iterator.next(); // first element not needed\r\n        let i0;\r\n        let i1 = iterator.next();\r\n        //\r\n        const n = iterator.size;\r\n        const n1 = n - 1;\r\n        let k = offset || 0;\r\n        for (var i = 0; i < n1; ++i) {\r\n            i0 = i1;\r\n            i1 = iterator.next();\r\n            this.interpolateSize(i0, i1, sizeFn, size, k);\r\n            k += this.m;\r\n        }\r\n        if (isCyclic) {\r\n            i0 = iterator.get(n - 1);\r\n            i1 = iterator.get(0);\r\n            this.interpolateSize(i0, i1, sizeFn, size, k);\r\n            k += this.m;\r\n        }\r\n        //\r\n        size[k] = size[k - 1];\r\n    }\r\n}\r\nclass Spline {\r\n    constructor(polymer, params) {\r\n        this.polymer = polymer;\r\n        this.size = polymer.residueCount;\r\n        var p = params || {};\r\n        this.directional = p.directional || false;\r\n        this.positionIterator = p.positionIterator || false;\r\n        this.subdiv = p.subdiv || 1;\r\n        this.smoothSheet = p.smoothSheet || false;\r\n        if (!p.tension) {\r\n            this.tension = this.polymer.isNucleic() ? 0.5 : 0.9;\r\n        }\r\n        else {\r\n            this.tension = p.tension;\r\n        }\r\n        this.interpolator = new Interpolator(this.subdiv, this.tension);\r\n    }\r\n    getAtomIterator(type, smooth) {\r\n        const polymer = this.polymer;\r\n        const structure = polymer.structure;\r\n        const n = polymer.residueCount;\r\n        let i = 0;\r\n        let j = -1;\r\n        const cache = [\r\n            structure.getAtomProxy(),\r\n            structure.getAtomProxy(),\r\n            structure.getAtomProxy(),\r\n            structure.getAtomProxy()\r\n        ];\r\n        const cache2 = [\r\n            new Vector3(),\r\n            new Vector3(),\r\n            new Vector3(),\r\n            new Vector3()\r\n        ];\r\n        function next() {\r\n            var atomProxy = get(j);\r\n            j += 1;\r\n            return atomProxy;\r\n        }\r\n        var apPrev = structure.getAtomProxy();\r\n        var apNext = structure.getAtomProxy();\r\n        function get(idx) {\r\n            var atomProxy = cache[i % 4];\r\n            atomProxy.index = polymer.getAtomIndexByType(idx, type);\r\n            if (smooth && idx > 0 && idx < n && atomProxy.sstruc === 'e') {\r\n                var vec = cache2[i % 4];\r\n                apPrev.index = polymer.getAtomIndexByType(idx + 1, type);\r\n                apNext.index = polymer.getAtomIndexByType(idx - 1, type);\r\n                vec.addVectors(apPrev, apNext)\r\n                    .add(atomProxy).add(atomProxy)\r\n                    .multiplyScalar(0.25);\r\n                i += 1;\r\n                return vec;\r\n            }\r\n            i += 1;\r\n            return atomProxy;\r\n        }\r\n        function reset() {\r\n            i = 0;\r\n            j = -1;\r\n        }\r\n        return {\r\n            size: n,\r\n            next: next,\r\n            get: get,\r\n            reset: reset\r\n        };\r\n    }\r\n    getSubdividedColor(params) {\r\n        var m = this.subdiv;\r\n        var polymer = this.polymer;\r\n        var n = polymer.residueCount;\r\n        var n1 = n - 1;\r\n        var nCol = n1 * m * 3 + 3;\r\n        if (polymer.isCyclic)\r\n            nCol += m * 3;\r\n        var col = new Float32Array(nCol);\r\n        var iterator = this.getAtomIterator('trace');\r\n        var p = params || {};\r\n        p.structure = polymer.structure;\r\n        var colormaker = ColormakerRegistry.getScheme(p);\r\n        function colFn(item, array, offset) {\r\n            colormaker.atomColorToArray(item, array, offset);\r\n        }\r\n        this.interpolator.getColor(iterator, colFn, col, 0, polymer.isCyclic);\r\n        return {\r\n            'color': col\r\n        };\r\n    }\r\n    getSubdividedPicking() {\r\n        var m = this.subdiv;\r\n        var polymer = this.polymer;\r\n        var n = polymer.residueCount;\r\n        var n1 = n - 1;\r\n        var nCol = n1 * m + 1;\r\n        if (polymer.isCyclic)\r\n            nCol += m;\r\n        var structure = polymer.structure;\r\n        var iterator = this.getAtomIterator('trace');\r\n        var pick = new Float32Array(nCol);\r\n        function pickFn(item) {\r\n            return item.index;\r\n        }\r\n        this.interpolator.getPicking(iterator, pickFn, pick, 0, polymer.isCyclic);\r\n        return {\r\n            'picking': new AtomPicker(pick, structure)\r\n        };\r\n    }\r\n    getSubdividedPosition() {\r\n        var pos = this.getPosition();\r\n        return {\r\n            'position': pos\r\n        };\r\n    }\r\n    getSubdividedOrientation() {\r\n        const tan = this.getTangent();\r\n        const normals = this.getNormals(tan);\r\n        return {\r\n            'tangent': tan,\r\n            'normal': normals.normal,\r\n            'binormal': normals.binormal\r\n        };\r\n    }\r\n    getSubdividedSize(params) {\r\n        var m = this.subdiv;\r\n        var polymer = this.polymer;\r\n        var n = polymer.residueCount;\r\n        var n1 = n - 1;\r\n        var nSize = n1 * m + 1;\r\n        if (polymer.isCyclic)\r\n            nSize += m;\r\n        var size = new Float32Array(nSize);\r\n        var iterator = this.getAtomIterator('trace');\r\n        var radiusFactory = new RadiusFactory(params);\r\n        function sizeFn(item) {\r\n            return radiusFactory.atomRadius(item);\r\n        }\r\n        this.interpolator.getSize(iterator, sizeFn, size, 0, polymer.isCyclic);\r\n        return {\r\n            'size': size\r\n        };\r\n    }\r\n    getPosition() {\r\n        const m = this.subdiv;\r\n        const polymer = this.polymer;\r\n        const n = polymer.residueCount;\r\n        const n1 = n - 1;\r\n        let nPos = n1 * m * 3 + 3;\r\n        if (polymer.isCyclic)\r\n            nPos += m * 3;\r\n        const pos = new Float32Array(nPos);\r\n        const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet);\r\n        this.interpolator.getPosition(iterator, pos, 0, polymer.isCyclic);\r\n        return pos;\r\n    }\r\n    getTangent() {\r\n        const m = this.subdiv;\r\n        const polymer = this.polymer;\r\n        const n = this.size;\r\n        const n1 = n - 1;\r\n        let nTan = n1 * m * 3 + 3;\r\n        if (polymer.isCyclic)\r\n            nTan += m * 3;\r\n        const tan = new Float32Array(nTan);\r\n        const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet);\r\n        this.interpolator.getTangent(iterator, tan, 0, polymer.isCyclic);\r\n        return tan;\r\n    }\r\n    getNormals(tan) {\r\n        const m = this.subdiv;\r\n        const polymer = this.polymer;\r\n        const isProtein = polymer.isProtein();\r\n        const n = this.size;\r\n        const n1 = n - 1;\r\n        let nNorm = n1 * m * 3 + 3;\r\n        if (polymer.isCyclic)\r\n            nNorm += m * 3;\r\n        const norm = new Float32Array(nNorm);\r\n        const bin = new Float32Array(nNorm);\r\n        if (this.directional && !this.polymer.isCg()) {\r\n            const iterDir1 = this.getAtomIterator('direction1');\r\n            const iterDir2 = this.getAtomIterator('direction2');\r\n            this.interpolator.getNormalDir(iterDir1, iterDir2, tan, norm, bin, 0, polymer.isCyclic, isProtein);\r\n        }\r\n        else {\r\n            this.interpolator.getNormal(n, tan, norm, bin, 0, polymer.isCyclic);\r\n        }\r\n        return {\r\n            'normal': norm,\r\n            'binormal': bin\r\n        };\r\n    }\r\n}\r\nexport default Spline;\r\n//# sourceMappingURL=spline.js.map","/**\r\n * @file Structure Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ExtensionFragDepth, Mobile } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { default as Representation } from './representation.js';\r\nimport Selection from '../selection/selection.js';\r\nimport RadiusFactory, { RadiusFactoryTypes } from '../utils/radius-factory.js';\r\n/**\r\n * Structure representation\r\n * @interface\r\n */\r\nclass StructureRepresentation extends Representation {\r\n    /**\r\n     * Create Structure representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {StructureRepresentationParameters} params - structure representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        const p = params || {};\r\n        super(structure, viewer, p);\r\n        this.type = 'structure';\r\n        this.parameters = Object.assign({\r\n            radiusType: {\r\n                type: 'select', options: RadiusFactory.types\r\n            },\r\n            radiusData: {\r\n                type: 'hidden'\r\n            },\r\n            radiusSize: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            radiusScale: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            assembly: null,\r\n            defaultAssembly: {\r\n                type: 'hidden'\r\n            }\r\n        }, this.parameters);\r\n        /**\r\n         * @type {Selection}\r\n         * @private\r\n         */\r\n        this.selection = new Selection(p.sele);\r\n        /**\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this.dataList = [];\r\n        /**\r\n         * @type {Structure}\r\n         */\r\n        this.structure = structure;\r\n        /**\r\n         * @type {StructureView}\r\n         */\r\n        this.structureView = this.structure.getView(this.selection);\r\n        if (structure.biomolDict) {\r\n            const biomolOptions = {\r\n                'default': 'default',\r\n                '': (structure.unitcell ? 'AU' : 'FULL')\r\n            };\r\n            Object.keys(structure.biomolDict).forEach(function (k) {\r\n                biomolOptions[k] = k;\r\n            });\r\n            this.parameters.assembly = {\r\n                type: 'select',\r\n                options: biomolOptions,\r\n                rebuild: true\r\n            };\r\n        }\r\n        else {\r\n            this.parameters.assembly = null;\r\n        }\r\n    }\r\n    get defaultScale() {\r\n        return {\r\n            'vdw': 1.0,\r\n            'covalent': 1.0,\r\n            'bfactor': 0.01,\r\n            'sstruc': 1.0\r\n        };\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'element');\r\n        this.setRadius(p.radius, p);\r\n        this.radiusType = defaults(p.radiusType, 'vdw');\r\n        this.radiusData = defaults(p.radiusData, {});\r\n        this.radiusSize = defaults(p.radiusSize, 1.0);\r\n        this.radiusScale = defaults(p.radiusScale, 1.0);\r\n        this.assembly = defaults(p.assembly, 'default');\r\n        this.defaultAssembly = defaults(p.defaultAssembly, '');\r\n        if (p.quality === 'auto') {\r\n            p.quality = this.getQuality();\r\n        }\r\n        super.init(p);\r\n        this.selection.signals.stringChanged.add(( /* sele */) => {\r\n            this.build();\r\n        });\r\n        this.build();\r\n    }\r\n    setRadius(value, p) {\r\n        const types = Object.keys(RadiusFactoryTypes);\r\n        if (typeof value === 'string' && types.includes(value.toLowerCase())) {\r\n            p.radiusType = value;\r\n        }\r\n        else if (value !== undefined) {\r\n            p.radiusType = 'size';\r\n            p.radiusSize = value;\r\n        }\r\n        return this;\r\n    }\r\n    getAssembly() {\r\n        const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly;\r\n        return this.structure.biomolDict[name];\r\n    }\r\n    getQuality() {\r\n        let atomCount;\r\n        const s = this.structureView;\r\n        const assembly = this.getAssembly();\r\n        if (assembly) {\r\n            atomCount = assembly.getAtomCount(s);\r\n        }\r\n        else {\r\n            atomCount = s.atomCount;\r\n        }\r\n        if (Mobile) {\r\n            atomCount *= 4;\r\n        }\r\n        const backboneOnly = s.atomStore.count / s.residueStore.count < 2;\r\n        if (backboneOnly) {\r\n            atomCount *= 10;\r\n        }\r\n        if (atomCount < 15000) {\r\n            return 'high';\r\n        }\r\n        else if (atomCount < 80000) {\r\n            return 'medium';\r\n        }\r\n        else {\r\n            return 'low';\r\n        }\r\n    }\r\n    create() {\r\n        if (this.structureView.atomCount === 0)\r\n            return;\r\n        if (!this.structureView.hasCoords()) {\r\n            this.needsBuild = true;\r\n            return;\r\n        }\r\n        else {\r\n            this.needsBuild = false;\r\n        }\r\n        const assembly = this.getAssembly();\r\n        if (assembly) {\r\n            assembly.partList.forEach((part, i) => {\r\n                const sview = part.getView(this.structureView);\r\n                if (sview.atomCount === 0)\r\n                    return;\r\n                const data = this.createData(sview, i);\r\n                if (data) {\r\n                    data.sview = sview;\r\n                    data.instanceList = part.getInstanceList();\r\n                    this.dataList.push(data);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            const data = this.createData(this.structureView, 0);\r\n            if (data) {\r\n                data.sview = this.structureView;\r\n                this.dataList.push(data);\r\n            }\r\n        }\r\n    }\r\n    update(what) {\r\n        if (this.lazy && !this.visible) {\r\n            Object.assign(this.lazyProps.what, what);\r\n            return;\r\n        }\r\n        if (this.needsBuild) {\r\n            this.build();\r\n            return;\r\n        }\r\n        this.dataList.forEach((data) => {\r\n            if (data.bufferList.length > 0) {\r\n                this.updateData(what, data);\r\n            }\r\n        }, this);\r\n    }\r\n    updateData(what, data) {\r\n        this.build();\r\n    }\r\n    getColorParams() {\r\n        return Object.assign(Object.assign({}, super.getColorParams()), { structure: this.structure });\r\n    }\r\n    getRadiusParams(param) {\r\n        return {\r\n            type: this.radiusType,\r\n            scale: this.radiusScale,\r\n            size: this.radiusSize,\r\n            data: this.radiusData\r\n        };\r\n    }\r\n    getAtomParams(what, params) {\r\n        return Object.assign({\r\n            what: what,\r\n            colorParams: this.getColorParams(),\r\n            radiusParams: this.getRadiusParams()\r\n        }, params);\r\n    }\r\n    getBondParams(what, params) {\r\n        return Object.assign({\r\n            what: what,\r\n            colorParams: this.getColorParams(),\r\n            radiusParams: this.getRadiusParams()\r\n        }, params);\r\n    }\r\n    getAtomRadius(atom) {\r\n        if (this.structureView.atomSet.isSet(atom.index)) {\r\n            const radiusFactory = new RadiusFactory(this.getRadiusParams());\r\n            return radiusFactory.atomRadius(atom);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Set representation parameters\r\n     * @alias StructureRepresentation#setSelection\r\n     * @param {String} string - selection string, see {@tutorial selection-language}\r\n     * @param {Boolean} [silent] - don't trigger a change event in the selection\r\n     * @return {StructureRepresentation} this object\r\n     */\r\n    setSelection(string, silent) {\r\n        this.selection.setString(string, silent);\r\n        return this;\r\n    }\r\n    /**\r\n     * Set representation parameters\r\n     * @alias StructureRepresentation#setParameters\r\n     * @param {StructureRepresentationParameters} params - structure parameter object\r\n     * @param {Object} [what] - buffer data attributes to be updated,\r\n     *                        note that this needs to be implemented in the\r\n     *                        derived classes. Generally it allows more\r\n     *                        fine-grained control over updating than\r\n     *                        forcing a rebuild.\r\n     * @param {Boolean} what.position - update position data\r\n     * @param {Boolean} what.color - update color data\r\n     * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n     * @return {StructureRepresentation} this object\r\n     */\r\n    setParameters(params, what = {}, rebuild = false) {\r\n        const p = params || {};\r\n        this.setRadius(p.radius, p);\r\n        if (p.radiusType !== undefined || p.radiusData !== undefined || p.radiusSize !== undefined || p.radiusScale !== undefined) {\r\n            what.radius = true;\r\n            if (!ExtensionFragDepth || this.disableImpostor) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        if (p.defaultAssembly !== undefined &&\r\n            p.defaultAssembly !== this.defaultAssembly &&\r\n            ((this.assembly === 'default' && p.assembly === undefined) ||\r\n                p.assembly === 'default')) {\r\n            rebuild = true;\r\n        }\r\n        super.setParameters(p, what, rebuild);\r\n        return this;\r\n    }\r\n    getParameters() {\r\n        const params = Object.assign(super.getParameters(), {\r\n            sele: this.selection ? this.selection.string : undefined,\r\n            defaultAssembly: this.defaultAssembly\r\n        });\r\n        return params;\r\n    }\r\n    attach(callback) {\r\n        const viewer = this.viewer;\r\n        const bufferList = this.bufferList;\r\n        this.dataList.forEach(function (data) {\r\n            data.bufferList.forEach(function (buffer) {\r\n                bufferList.push(buffer);\r\n                viewer.add(buffer, data.instanceList);\r\n            });\r\n        });\r\n        this.setVisibility(this.visible);\r\n        callback();\r\n    }\r\n    clear() {\r\n        this.dataList.length = 0;\r\n        super.clear();\r\n    }\r\n    dispose() {\r\n        this.structureView.dispose();\r\n        delete this.structure;\r\n        delete this.structureView;\r\n        super.dispose();\r\n    }\r\n}\r\nexport default StructureRepresentation;\r\n//# sourceMappingURL=structure-representation.js.map","/**\r\n * @file Tube Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Matrix4 required for declaration only\r\nimport { Vector3 } from 'three';\r\nimport { defaults, getUintArray } from '../utils';\r\nimport { serialArray } from '../math/array-utils';\r\nimport MeshBuffer from './mesh-buffer';\r\nimport { BufferDefaultParameters } from './buffer';\r\nimport { Log } from \"../globals\";\r\nconst vTangent = new Vector3();\r\nconst vMeshNormal = new Vector3();\r\nexport const TubeMeshBufferDefaultParameters = Object.assign({\r\n    radialSegments: 4,\r\n    capped: false,\r\n    aspectRatio: 1.0\r\n}, BufferDefaultParameters);\r\nfunction getData(data, params = {}) {\r\n    const radialSegments = defaults(params.radialSegments, 4);\r\n    const capped = defaults(params.capped, false);\r\n    const capVertices = capped ? radialSegments : 0;\r\n    const capTriangles = capped ? radialSegments - 2 : 0;\r\n    const n = data.position.length / 3;\r\n    const n1 = n - 1;\r\n    const x = n * radialSegments * 3 + 2 * capVertices * 3;\r\n    const xi = n1 * 2 * radialSegments * 3 + 2 * capTriangles * 3;\r\n    return {\r\n        position: new Float32Array(x),\r\n        color: new Float32Array(x),\r\n        index: getUintArray(xi, x / 3),\r\n        normal: new Float32Array(x),\r\n        picking: data.picking\r\n    };\r\n}\r\n/**\r\n * Tube mesh buffer. Draws a tube.\r\n */\r\nclass TubeMeshBuffer extends MeshBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.normal - normals\r\n     * @param  {Float32Array} data.binormal - binormals\r\n     * @param  {Float32Array} data.tangent - tangents\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(getData(data, params), params);\r\n        this.capVertices = this.parameters.capped ? this.parameters.radialSegments : 0;\r\n        this.capTriangles = this.parameters.capped ? this.parameters.radialSegments - 2 : 0;\r\n        this.size2 = data.position.length / 3;\r\n        data.primitiveId = serialArray(this.size2);\r\n        this.setAttributes(data);\r\n        this.makeIndex();\r\n    }\r\n    get defaultParameters() { return TubeMeshBufferDefaultParameters; }\r\n    setAttributes(data = {}) {\r\n        const aspectRatio = this.parameters.aspectRatio;\r\n        const n = this.size2;\r\n        const n1 = n - 1;\r\n        const radialSegments = this.parameters.radialSegments;\r\n        const attributes = this.geometry.attributes;\r\n        let position, normal, binormal, tangent, color, size, primitiveId;\r\n        let meshPosition, meshColor, meshNormal, meshPrimitiveId;\r\n        if (data.position) {\r\n            position = data.position;\r\n            normal = data.normal;\r\n            binormal = data.binormal;\r\n            tangent = data.tangent;\r\n            size = data.size;\r\n            meshPosition = attributes.position.array;\r\n            meshNormal = attributes.normal.array;\r\n            attributes.position.needsUpdate = true;\r\n            attributes.normal.needsUpdate = true;\r\n        }\r\n        if (data.color) {\r\n            color = data.color;\r\n            meshColor = attributes.color.array;\r\n            attributes.color.needsUpdate = true;\r\n        }\r\n        if (data.primitiveId) {\r\n            primitiveId = data.primitiveId;\r\n            meshPrimitiveId = attributes.primitiveId.array;\r\n            attributes.primitiveId.needsUpdate = true;\r\n        }\r\n        let k, l;\r\n        let radius = 0;\r\n        let normX = 0;\r\n        let normY = 0;\r\n        let normZ = 0;\r\n        let biX = 0;\r\n        let biY = 0;\r\n        let biZ = 0;\r\n        let posX = 0;\r\n        let posY = 0;\r\n        let posZ = 0;\r\n        const cxArr = [];\r\n        const cyArr = [];\r\n        const cx1Arr = [];\r\n        const cy1Arr = [];\r\n        const cx2Arr = [];\r\n        const cy2Arr = [];\r\n        if (position) {\r\n            for (let j = 0; j < radialSegments; ++j) {\r\n                const v = (j / radialSegments) * 2 * Math.PI;\r\n                cxArr[j] = aspectRatio * Math.cos(v);\r\n                cyArr[j] = Math.sin(v);\r\n                cx1Arr[j] = aspectRatio * Math.cos(v - 0.01);\r\n                cy1Arr[j] = Math.sin(v - 0.01);\r\n                cx2Arr[j] = aspectRatio * Math.cos(v + 0.01);\r\n                cy2Arr[j] = Math.sin(v + 0.01);\r\n            }\r\n        }\r\n        for (let i = 0; i < n; ++i) {\r\n            k = i * 3;\r\n            l = k * radialSegments;\r\n            if (position && tangent && normal && binormal && size) {\r\n                vTangent.set(tangent[k], tangent[k + 1], tangent[k + 2]);\r\n                normX = normal[k];\r\n                normY = normal[k + 1];\r\n                normZ = normal[k + 2];\r\n                biX = binormal[k];\r\n                biY = binormal[k + 1];\r\n                biZ = binormal[k + 2];\r\n                posX = position[k];\r\n                posY = position[k + 1];\r\n                posZ = position[k + 2];\r\n                radius = size[i];\r\n            }\r\n            for (let j = 0; j < radialSegments; ++j) {\r\n                const s = l + j * 3;\r\n                if (position) {\r\n                    const cx = -radius * cxArr[j]; // TODO: Hack: Negating it so it faces outside.\r\n                    const cy = radius * cyArr[j];\r\n                    const cx1 = -radius * cx1Arr[j];\r\n                    const cy1 = radius * cy1Arr[j];\r\n                    const cx2 = -radius * cx2Arr[j];\r\n                    const cy2 = radius * cy2Arr[j];\r\n                    meshPosition[s] = posX + cx * normX + cy * biX;\r\n                    meshPosition[s + 1] = posY + cx * normY + cy * biY;\r\n                    meshPosition[s + 2] = posZ + cx * normZ + cy * biZ;\r\n                    // TODO half of these are symmetric\r\n                    vMeshNormal.set(\r\n                    // ellipse tangent approximated as vector from/to adjacent points\r\n                    (cx2 * normX + cy2 * biX) - (cx1 * normX + cy1 * biX), (cx2 * normY + cy2 * biY) - (cx1 * normY + cy1 * biY), (cx2 * normZ + cy2 * biZ) - (cx1 * normZ + cy1 * biZ)).cross(vTangent);\r\n                    meshNormal[s] = vMeshNormal.x;\r\n                    meshNormal[s + 1] = vMeshNormal.y;\r\n                    meshNormal[s + 2] = vMeshNormal.z;\r\n                }\r\n                if (color) {\r\n                    meshColor[s] = color[k];\r\n                    meshColor[s + 1] = color[k + 1];\r\n                    meshColor[s + 2] = color[k + 2];\r\n                }\r\n                if (primitiveId) {\r\n                    meshPrimitiveId[i * radialSegments + j] = primitiveId[i];\r\n                }\r\n            }\r\n        }\r\n        // front cap\r\n        k = 0;\r\n        l = n * 3 * radialSegments;\r\n        for (let j = 0; j < radialSegments; ++j) {\r\n            const s = k + j * 3;\r\n            const t = l + j * 3;\r\n            if (position && tangent) {\r\n                meshPosition[t] = meshPosition[s];\r\n                meshPosition[t + 1] = meshPosition[s + 1];\r\n                meshPosition[t + 2] = meshPosition[s + 2];\r\n                meshNormal[t] = tangent[k];\r\n                meshNormal[t + 1] = tangent[k + 1];\r\n                meshNormal[t + 2] = tangent[k + 2];\r\n            }\r\n            if (color) {\r\n                meshColor[t] = meshColor[s];\r\n                meshColor[t + 1] = meshColor[s + 1];\r\n                meshColor[t + 2] = meshColor[s + 2];\r\n            }\r\n            if (primitiveId) {\r\n                meshPrimitiveId[n * radialSegments + j] = meshPrimitiveId[0 + j];\r\n            }\r\n        }\r\n        // back cap\r\n        k = (n - 1) * 3 * radialSegments;\r\n        l = (n + 1) * 3 * radialSegments;\r\n        for (let j = 0; j < radialSegments; ++j) {\r\n            const s = k + j * 3;\r\n            const t = l + j * 3;\r\n            if (position && tangent) {\r\n                meshPosition[t] = meshPosition[s];\r\n                meshPosition[t + 1] = meshPosition[s + 1];\r\n                meshPosition[t + 2] = meshPosition[s + 2];\r\n                meshNormal[t] = tangent[n1 * 3];\r\n                meshNormal[t + 1] = tangent[n1 * 3 + 1];\r\n                meshNormal[t + 2] = tangent[n1 * 3 + 2];\r\n            }\r\n            if (color) {\r\n                meshColor[t] = meshColor[s];\r\n                meshColor[t + 1] = meshColor[s + 1];\r\n                meshColor[t + 2] = meshColor[s + 2];\r\n            }\r\n            if (primitiveId) {\r\n                meshPrimitiveId[(n + 1) * radialSegments + j] = meshPrimitiveId[(n - 1) * radialSegments + j];\r\n            }\r\n        }\r\n    }\r\n    makeIndex() {\r\n        const index = this.geometry.getIndex();\r\n        if (!index) {\r\n            Log.error('Index is null');\r\n            return;\r\n        }\r\n        const meshIndex = index.array;\r\n        const n = this.size2;\r\n        const n1 = n - 1;\r\n        const capTriangles = this.capTriangles;\r\n        const radialSegments = this.parameters.radialSegments;\r\n        const radialSegments1 = this.parameters.radialSegments + 1;\r\n        let k, l;\r\n        for (let i = 0; i < n1; ++i) {\r\n            const k = i * radialSegments * 3 * 2;\r\n            const irs = i * radialSegments;\r\n            const irs1 = (i + 1) * radialSegments;\r\n            for (let j = 0; j < radialSegments; ++j) {\r\n                l = k + j * 3 * 2;\r\n                // meshIndex[ l + 0 ] = irs + ( ( j + 0 ) % radialSegments );\r\n                meshIndex[l] = irs + j;\r\n                meshIndex[l + 1] = irs + ((j + 1) % radialSegments);\r\n                // meshIndex[ l + 2 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n                meshIndex[l + 2] = irs1 + j;\r\n                // meshIndex[ l + 3 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n                meshIndex[l + 3] = irs1 + j;\r\n                meshIndex[l + 4] = irs + ((j + 1) % radialSegments);\r\n                meshIndex[l + 5] = irs1 + ((j + 1) % radialSegments);\r\n            }\r\n        }\r\n        // capping\r\n        const strip = [0];\r\n        for (let j = 1; j < radialSegments1 / 2; ++j) {\r\n            strip.push(j);\r\n            if (radialSegments - j !== j) {\r\n                strip.push(radialSegments - j);\r\n            }\r\n        }\r\n        // front cap\r\n        l = n1 * radialSegments * 3 * 2;\r\n        k = n * radialSegments;\r\n        for (let j = 0; j < strip.length - 2; ++j) {\r\n            if (j % 2 === 0) {\r\n                meshIndex[l + j * 3 + 0] = k + strip[j + 0];\r\n                meshIndex[l + j * 3 + 1] = k + strip[j + 1];\r\n                meshIndex[l + j * 3 + 2] = k + strip[j + 2];\r\n            }\r\n            else {\r\n                meshIndex[l + j * 3 + 0] = k + strip[j + 2];\r\n                meshIndex[l + j * 3 + 1] = k + strip[j + 1];\r\n                meshIndex[l + j * 3 + 2] = k + strip[j + 0];\r\n            }\r\n        }\r\n        // back cap\r\n        l = n1 * radialSegments * 3 * 2 + 3 * capTriangles;\r\n        k = n * radialSegments + radialSegments;\r\n        for (let j = 0; j < strip.length - 2; ++j) {\r\n            if (j % 2 === 0) {\r\n                meshIndex[l + j * 3 + 0] = k + strip[j + 0];\r\n                meshIndex[l + j * 3 + 1] = k + strip[j + 1];\r\n                meshIndex[l + j * 3 + 2] = k + strip[j + 2];\r\n            }\r\n            else {\r\n                meshIndex[l + j * 3 + 0] = k + strip[j + 2];\r\n                meshIndex[l + j * 3 + 1] = k + strip[j + 1];\r\n                meshIndex[l + j * 3 + 2] = k + strip[j + 0];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default TubeMeshBuffer;\r\n//# sourceMappingURL=tubemesh-buffer.js.map","/**\r\n * @file Cartoon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { Debug, Log, RepresentationRegistry } from '../globals';\r\nimport Spline from '../geometry/spline';\r\nimport StructureRepresentation from './structure-representation';\r\nimport TubeMeshBuffer from '../buffer/tubemesh-buffer';\r\n/**\r\n * Cartoon representation. Show a thick ribbon that\r\n * smoothly connecting backbone atoms in polymers.\r\n *\r\n * __Name:__ _cartoon_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass CartoonRepresentation extends StructureRepresentation {\r\n    /**\r\n     * Create Cartoon representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {StructureRepresentationParameters} params - representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'cartoon';\r\n        this.parameters = Object.assign({\r\n            aspectRatio: {\r\n                type: 'number', precision: 1, max: 10.0, min: 1.0, rebuild: true\r\n            },\r\n            subdiv: {\r\n                type: 'integer', max: 50, min: 1, rebuild: true\r\n            },\r\n            radialSegments: {\r\n                type: 'integer', max: 50, min: 1, rebuild: true\r\n            },\r\n            tension: {\r\n                type: 'number', precision: 1, max: 1.0, min: 0.1\r\n            },\r\n            capped: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            smoothSheet: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'chainname');\r\n        p.colorScale = defaults(p.colorScale, 'RdYlBu');\r\n        p.radiusType = defaults(p.radiusType, 'sstruc');\r\n        p.radiusScale = defaults(p.radiusScale, 0.7);\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.aspectRatio = defaults(p.aspectRatio, 5.0);\r\n        this.tension = defaults(p.tension, NaN);\r\n        this.capped = defaults(p.capped, true);\r\n        this.smoothSheet = defaults(p.smoothSheet, false);\r\n        if (p.quality === 'low') {\r\n            this.subdiv = 3;\r\n            this.radialSegments = 6;\r\n        }\r\n        else if (p.quality === 'medium') {\r\n            this.subdiv = 6;\r\n        }\r\n        else if (p.quality === 'high') {\r\n            this.subdiv = 12;\r\n        }\r\n        else {\r\n            this.subdiv = defaults(p.subdiv, 6);\r\n        }\r\n        super.init(p);\r\n    }\r\n    getSplineParams(params) {\r\n        return Object.assign({\r\n            subdiv: this.subdiv,\r\n            tension: this.tension,\r\n            directional: this.aspectRatio !== 1.0,\r\n            smoothSheet: this.smoothSheet\r\n        }, params);\r\n    }\r\n    getSpline(polymer) {\r\n        return new Spline(polymer, this.getSplineParams());\r\n    }\r\n    getAspectRatio(polymer) {\r\n        return polymer.isCg() ? 1.0 : this.aspectRatio;\r\n    }\r\n    getAtomRadius(atom) {\r\n        return atom.isTrace() ? super.getAtomRadius(atom) : 0;\r\n    }\r\n    createData(sview) {\r\n        let bufferList = [];\r\n        let polymerList = [];\r\n        this.structure.eachPolymer(polymer => {\r\n            if (polymer.residueCount < 4)\r\n                return;\r\n            polymerList.push(polymer);\r\n            const spline = this.getSpline(polymer);\r\n            const aspectRatio = this.getAspectRatio(polymer);\r\n            const subPos = spline.getSubdividedPosition();\r\n            const subOri = spline.getSubdividedOrientation();\r\n            const subCol = spline.getSubdividedColor(this.getColorParams());\r\n            const subPick = spline.getSubdividedPicking();\r\n            const subSize = spline.getSubdividedSize(this.getRadiusParams());\r\n            bufferList.push(new TubeMeshBuffer(Object.assign({}, subPos, subOri, subCol, subPick, subSize), this.getBufferParams({\r\n                radialSegments: this.radialSegments,\r\n                aspectRatio: aspectRatio,\r\n                capped: this.capped\r\n            })));\r\n        }, sview.getSelection());\r\n        return {\r\n            bufferList: bufferList,\r\n            polymerList: polymerList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        if (Debug)\r\n            Log.time(this.type + ' repr update');\r\n        what = what || {};\r\n        for (var i = 0, il = data.polymerList.length; i < il; ++i) {\r\n            var bufferData = {};\r\n            var polymer = data.polymerList[i];\r\n            var spline = this.getSpline(polymer);\r\n            var aspectRatio = this.getAspectRatio(polymer);\r\n            Object.assign(data.bufferList[i], { aspectRatio: aspectRatio });\r\n            if (what.position || what.radius) {\r\n                var subPos = spline.getSubdividedPosition();\r\n                var subOri = spline.getSubdividedOrientation();\r\n                var subSize = spline.getSubdividedSize(this.getRadiusParams(aspectRatio));\r\n                bufferData.position = subPos.position;\r\n                bufferData.normal = subOri.normal;\r\n                bufferData.binormal = subOri.binormal;\r\n                bufferData.tangent = subOri.tangent;\r\n                bufferData.size = subSize.size;\r\n            }\r\n            if (what.color) {\r\n                var subCol = spline.getSubdividedColor(this.getColorParams());\r\n                bufferData.color = subCol.color;\r\n            }\r\n            if (what.picking) {\r\n                var subPick = spline.getSubdividedPicking();\r\n                bufferData.picking = subPick.picking;\r\n            }\r\n            data.bufferList[i].setAttributes(bufferData);\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd(this.type + ' repr update');\r\n    }\r\n    setParameters(params) {\r\n        const rebuild = false;\r\n        var what = {};\r\n        if (params && params.aspectRatio) {\r\n            what.radius = true;\r\n        }\r\n        if (params && params.tension) {\r\n            what.position = true;\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('cartoon', CartoonRepresentation);\r\nexport default CartoonRepresentation;\r\n//# sourceMappingURL=cartoon-representation.js.map","/**\r\n * @file Cylinder Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Vector3, CylinderBufferGeometry } from 'three';\r\nimport { defaults } from '../utils';\r\nimport { calculateCenterArray, serialBlockArray } from '../math/array-utils.js';\r\nimport GeometryBuffer from './geometry-buffer.js';\r\nimport { BufferDefaultParameters } from './buffer';\r\nconst scale = new Vector3();\r\nconst eye = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3(0, 1, 0);\r\nexport const CylinderGeometryBufferDefaultParameters = Object.assign({\r\n    radialSegments: 1,\r\n    openEnded: true\r\n}, BufferDefaultParameters);\r\nfunction getData(data, params = {}) {\r\n    const geo = getGeo(params);\r\n    const n = data.position1.length;\r\n    const geoLength = geo.attributes.position.array.length / 3;\r\n    const count = n / 3;\r\n    const primitiveId = new Float32Array(count * 2 * geoLength);\r\n    serialBlockArray(count, geoLength, 0, primitiveId);\r\n    serialBlockArray(count, geoLength, count * geoLength, primitiveId);\r\n    const position = new Float32Array(n * 2);\r\n    const color = new Float32Array(n * 2);\r\n    return {\r\n        position, color, primitiveId, picking: data.picking\r\n    };\r\n}\r\nfunction getGeo(params = {}) {\r\n    const radialSegments = defaults(params.radialSegments, 10);\r\n    const openEnded = defaults(params.openEnded, true);\r\n    const matrix = new Matrix4().makeRotationX(Math.PI / 2);\r\n    const geo = new CylinderBufferGeometry(1, // radiusTop,\r\n    1, // radiusBottom,\r\n    1, // height,\r\n    radialSegments, // radialSegments,\r\n    1, // heightSegments,\r\n    openEnded // openEnded\r\n    );\r\n    geo.applyMatrix4(matrix);\r\n    return geo;\r\n}\r\n/**\r\n * Cylinder geometry buffer.\r\n *\r\n * @example\r\n * var cylinderGeometryBuffer = new CylinderGeometryBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderGeometryBuffer extends GeometryBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position1 - from positions\r\n     * @param {Float32Array} data.position2 - to positions\r\n     * @param {Float32Array} data.color - from colors\r\n     * @param {Float32Array} data.color2 - to colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(getData(data, params), params, getGeo(params));\r\n        this.updateNormals = true;\r\n        const n = data.position1.length;\r\n        const m = data.radius.length;\r\n        this.__center = new Float32Array(n);\r\n        this._position = new Float32Array(n * 2);\r\n        this._color = new Float32Array(n * 2);\r\n        this._from = new Float32Array(n * 2);\r\n        this._to = new Float32Array(n * 2);\r\n        this._radius = new Float32Array(m * 2);\r\n        this.setAttributes(data, true);\r\n    }\r\n    get defaultParameters() { return CylinderGeometryBufferDefaultParameters; }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        eye.fromArray(this._from, i3);\r\n        target.fromArray(this._to, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        const r = this._radius[i];\r\n        scale.set(r, r, eye.distanceTo(target));\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        const meshData = {};\r\n        if (data.position1 && data.position2) {\r\n            calculateCenterArray(data.position1, data.position2, this.__center);\r\n            calculateCenterArray(data.position1, this.__center, this._position);\r\n            calculateCenterArray(this.__center, data.position2, this._position, data.position1.length);\r\n            this._from.set(data.position1);\r\n            this._from.set(this.__center, data.position1.length);\r\n            this._to.set(this.__center);\r\n            this._to.set(data.position2, this.__center.length);\r\n            meshData.position = this._position;\r\n        }\r\n        if (data.color && data.color2) {\r\n            this._color.set(data.color);\r\n            this._color.set(data.color2, data.color.length);\r\n            meshData.color = this._color;\r\n        }\r\n        if (data.radius) {\r\n            this._radius.set(data.radius);\r\n            this._radius.set(data.radius, data.radius.length);\r\n            meshData.radius = this._radius;\r\n        }\r\n        super.setAttributes(meshData, initNormals);\r\n    }\r\n}\r\nexport default CylinderGeometryBuffer;\r\n//# sourceMappingURL=cylindergeometry-buffer.js.map","/**\r\n * @file Mapped Aligned Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport MappedBuffer from './mapped-buffer';\r\nconst mapping = new Float32Array([\r\n    -1.0, 1.0, -1.0,\r\n    -1.0, -1.0, -1.0,\r\n    1.0, 1.0, -1.0,\r\n    1.0, 1.0, 1.0,\r\n    1.0, -1.0, -1.0,\r\n    1.0, -1.0, 1.0\r\n]);\r\nconst mappingIndices = new Uint16Array([\r\n    0, 1, 2,\r\n    1, 4, 2,\r\n    2, 4, 3,\r\n    4, 5, 3\r\n]);\r\n/**\r\n * Mapped Aligned box buffer. Draws boxes where one side is always screen-space aligned.\r\n * Used to render cylinder imposters.\r\n * @interface\r\n */\r\nclass MappedAlignedBoxBuffer extends MappedBuffer {\r\n    constructor(data, params = {}) {\r\n        super('v3', data, params);\r\n    }\r\n    get mapping() { return mapping; }\r\n    get mappingIndices() { return mappingIndices; }\r\n    get mappingIndicesSize() { return 12; }\r\n    get mappingSize() { return 6; }\r\n    get mappingItemSize() { return 3; }\r\n}\r\nexport default MappedAlignedBoxBuffer;\r\n//# sourceMappingURL=mappedalignedbox-buffer.js.map","/**\r\n * @file Cylinder Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Matrix4 } from 'three';\r\nimport '../shader/CylinderImpostor.vert';\r\nimport '../shader/CylinderImpostor.frag';\r\nimport MappedAlignedBoxBuffer from './mappedalignedbox-buffer.js';\r\nimport { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nexport const CylinderImpostorBufferDefaultParameters = Object.assign({\r\n    openEnded: false\r\n}, BufferDefaultParameters);\r\nconst CylinderImpostorBufferParameterTypes = Object.assign({\r\n    openEnded: { updateShader: true }\r\n}, BufferParameterTypes);\r\n/**\r\n * Cylinder impostor buffer.\r\n *\r\n * @example\r\n * var cylinderimpostorBuffer = new CylinderImpostorBuffer({\r\n *     position1: new Float32Array([ 0, 0, 0 ]),\r\n *     position2: new Float32Array([ 1, 1, 1 ]),\r\n *     color: new Float32Array([ 1, 0, 0 ]),\r\n *     color2: new Float32Array([ 0, 1, 0 ]),\r\n *     radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderImpostorBuffer extends MappedAlignedBoxBuffer {\r\n    /**\r\n     * make cylinder impostor buffer\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position1 - from positions\r\n     * @param  {Float32Array} data.position2 - to positions\r\n     * @param  {Float32Array} data.color - from colors\r\n     * @param  {Float32Array} data.color2 - to colors\r\n     * @param  {Float32Array} data.radius - radii\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.parameterTypes = CylinderImpostorBufferParameterTypes;\r\n        this.isImpostor = true;\r\n        this.vertexShader = 'CylinderImpostor.vert';\r\n        this.fragmentShader = 'CylinderImpostor.frag';\r\n        this.addUniforms({\r\n            'modelViewMatrixInverse': { value: new Matrix4() },\r\n            'ortho': { value: 0.0 }\r\n        });\r\n        this.addAttributes({\r\n            'position1': { type: 'v3', value: null },\r\n            'position2': { type: 'v3', value: null },\r\n            'color2': { type: 'c', value: null },\r\n            'radius': { type: 'f', value: null }\r\n        });\r\n        this.setAttributes(data);\r\n        this.makeMapping();\r\n    }\r\n    get defaultParameters() { return CylinderImpostorBufferDefaultParameters; }\r\n    getDefines(type) {\r\n        const defines = MappedAlignedBoxBuffer.prototype.getDefines.call(this, type);\r\n        if (!this.parameters.openEnded) {\r\n            defines.CAP = 1;\r\n        }\r\n        return defines;\r\n    }\r\n}\r\nexport default CylinderImpostorBuffer;\r\n//# sourceMappingURL=cylinderimpostor-buffer.js.map","/**\r\n * @file Cylinder Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals';\r\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters } from './cylindergeometry-buffer';\r\nimport CylinderImpostorBuffer, { CylinderImpostorBufferDefaultParameters } from './cylinderimpostor-buffer';\r\nexport const CylinderBufferDefaultParameters = Object.assign({\r\n    disableImpostor: false\r\n}, CylinderGeometryBufferDefaultParameters, CylinderImpostorBufferDefaultParameters);\r\n/**\r\n * Cylinder buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link CylinderImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var cylinderBuffer = new CylinderBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderBuffer {\r\n    constructor(data, params = {}) {\r\n        if (!data.color2 && data.color)\r\n            data.color2 = data.color;\r\n        if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n            return new CylinderGeometryBuffer(data, params);\r\n        }\r\n        else {\r\n            return new CylinderImpostorBuffer(data, params);\r\n        }\r\n    }\r\n}\r\nBufferRegistry.add('cylinder', CylinderBuffer);\r\nexport default CylinderBuffer;\r\n//# sourceMappingURL=cylinder-buffer.js.map","/**\r\n * @file Wide Line Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Vector2, Matrix4 } from 'three';\r\nimport '../shader/WideLine.vert';\r\nimport '../shader/WideLine.frag';\r\nimport { BufferRegistry } from '../globals';\r\nimport MappedQuadBuffer from './mappedquad-buffer';\r\nimport { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nexport const WideLineBufferDefaultParameters = Object.assign({\r\n    linewidth: 2\r\n}, BufferDefaultParameters);\r\nconst WideLineBufferParameterTypes = Object.assign({\r\n    linewidth: { uniform: true }\r\n}, BufferParameterTypes);\r\n/**\r\n * Wide Line buffer. Draws lines with a fixed width in pixels.\r\n *\r\n * @example\r\n * var lineBuffer = new WideLineBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ])\r\n * });\r\n */\r\nclass WideLineBuffer extends MappedQuadBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.parameterTypes = WideLineBufferParameterTypes;\r\n        this.vertexShader = 'WideLine.vert';\r\n        this.fragmentShader = 'WideLine.frag';\r\n        if (!data.color2 && data.color)\r\n            data.color2 = data.color;\r\n        this.addUniforms({\r\n            'linewidth': { value: this.parameters.linewidth },\r\n            'resolution': { value: new Vector2() },\r\n            'projectionMatrixInverse': { value: new Matrix4() }\r\n        });\r\n        this.addAttributes({\r\n            'position1': { type: 'v3', value: null },\r\n            'position2': { type: 'v3', value: null },\r\n            'color2': { type: 'c', value: null }\r\n        });\r\n        this.setAttributes(data);\r\n        this.makeMapping();\r\n    }\r\n    get defaultParameters() { return WideLineBufferDefaultParameters; }\r\n    setParameters(params) {\r\n        super.setParameters(params);\r\n    }\r\n}\r\nBufferRegistry.add('wideline', WideLineBuffer);\r\nexport default WideLineBuffer;\r\n//# sourceMappingURL=wideline-buffer.js.map","/**\r\n * @file Ball And Stick Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { ExtensionFragDepth, RepresentationRegistry } from '../globals';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js';\r\n/**\r\n * Ball And Stick representation parameter object. Extends {@link RepresentationParameters} and\r\n * {@link StructureRepresentationParameters}.\r\n *\r\n * @typedef {Object} BallAndStickRepresentationParameters - ball and stick representation parameters\r\n *\r\n * @property {Integer} sphereDetail - sphere quality (icosahedron subdivisions)\r\n * @property {Integer} radialSegments - cylinder quality (number of segments)\r\n * @property {Boolean} openEnded - capped or not\r\n * @property {Boolean} disableImpostor - disable use of raycasted impostors for rendering\r\n * @property {Float} aspectRatio - size difference between atom and bond radii\r\n * @property {Boolean} lineOnly - render only bonds, and only as lines\r\n * @property {Integer} linewidth - width of lines\r\n * @property {Boolean} cylinderOnly - render only bonds (no atoms)\r\n * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n * @property {Float} bondSpacing - spacing for multiple bond rendering\r\n * @property {Float} bondScale - scale/radius for multiple bond rendering\r\n */\r\n/**\r\n * Ball And Stick representation. Show atoms as spheres and bonds as cylinders.\r\n *\r\n * __Name:__ _ball+stick_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BallAndStickRepresentation extends StructureRepresentation {\r\n    /**\r\n     * Create Ball And Stick representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'ball+stick';\r\n        this.parameters = Object.assign({\r\n            sphereDetail: true,\r\n            radialSegments: true,\r\n            openEnded: true,\r\n            disableImpostor: true,\r\n            aspectRatio: {\r\n                type: 'number', precision: 1, max: 10.0, min: 1.0\r\n            },\r\n            lineOnly: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            cylinderOnly: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            multipleBond: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'off': 'off',\r\n                    'symmetric': 'symmetric',\r\n                    'offset': 'offset'\r\n                }\r\n            },\r\n            bondScale: {\r\n                type: 'number', precision: 2, max: 1.0, min: 0.01\r\n            },\r\n            bondSpacing: {\r\n                type: 'number', precision: 2, max: 2.0, min: 0.5\r\n            },\r\n            linewidth: {\r\n                type: 'integer', max: 50, min: 1, buffer: true\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.radiusType = defaults(p.radiusType, 'size');\r\n        p.radiusSize = defaults(p.radiusSize, 0.15);\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.aspectRatio = defaults(p.aspectRatio, 2.0);\r\n        this.lineOnly = defaults(p.lineOnly, false);\r\n        this.cylinderOnly = defaults(p.cylinderOnly, false);\r\n        this.multipleBond = defaults(p.multipleBond, 'off');\r\n        this.bondSpacing = defaults(p.bondSpacing, 1.0);\r\n        this.bondScale = defaults(p.bondScale, 0.4);\r\n        this.linewidth = defaults(p.linewidth, 2);\r\n        super.init(p);\r\n    }\r\n    getAtomRadius(atom) {\r\n        return this.aspectRatio * super.getAtomRadius(atom);\r\n    }\r\n    getAtomParams(what, params) {\r\n        var p = super.getAtomParams(what, params);\r\n        p.radiusParams.scale *= this.aspectRatio;\r\n        return p;\r\n    }\r\n    getAtomData(sview, what, params) {\r\n        return sview.getAtomData(this.getAtomParams(what, params));\r\n    }\r\n    getBondParams(what, params) {\r\n        params = Object.assign({\r\n            multipleBond: this.multipleBond,\r\n            bondSpacing: this.bondSpacing,\r\n            bondScale: this.bondScale\r\n        }, params);\r\n        return super.getBondParams(what, params);\r\n    }\r\n    getBondData(sview, what, params) {\r\n        return sview.getBondData(this.getBondParams(what, params));\r\n    }\r\n    createData(sview) {\r\n        const bufferList = [];\r\n        if (this.lineOnly) {\r\n            this.lineBuffer = new WideLineBuffer(this.getBondData(sview, { position: true, color: true, picking: true }), this.getBufferParams({ linewidth: this.linewidth }));\r\n            bufferList.push(this.lineBuffer);\r\n        }\r\n        else {\r\n            const cylinderBuffer = new CylinderBuffer(this.getBondData(sview), this.getBufferParams({\r\n                openEnded: this.openEnded,\r\n                radialSegments: this.radialSegments,\r\n                disableImpostor: this.disableImpostor,\r\n                dullInterior: true\r\n            }));\r\n            bufferList.push(cylinderBuffer);\r\n            if (!this.cylinderOnly) {\r\n                const sphereBuffer = new SphereBuffer(this.getAtomData(sview), this.getBufferParams({\r\n                    sphereDetail: this.sphereDetail,\r\n                    disableImpostor: this.disableImpostor,\r\n                    dullInterior: true\r\n                }));\r\n                bufferList.push(sphereBuffer);\r\n            }\r\n        }\r\n        return {\r\n            bufferList: bufferList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        if (this.multipleBond !== 'off' && what && what.radius) {\r\n            what.position = true;\r\n        }\r\n        const bondData = this.getBondData(data.sview, what);\r\n        if (this.lineOnly) {\r\n            const lineData = {};\r\n            if (!what || what.position) {\r\n                Object.assign(lineData, {\r\n                    position1: bondData.position1,\r\n                    position2: bondData.position2\r\n                });\r\n            }\r\n            if (!what || what.color) {\r\n                Object.assign(lineData, {\r\n                    color: bondData.color,\r\n                    color2: bondData.color2\r\n                });\r\n            }\r\n            data.bufferList[0].setAttributes(lineData);\r\n        }\r\n        else {\r\n            var cylinderData = {};\r\n            if (!what || what.position) {\r\n                Object.assign(cylinderData, {\r\n                    position1: bondData.position1,\r\n                    position2: bondData.position2\r\n                });\r\n            }\r\n            if (!what || what.color) {\r\n                Object.assign(cylinderData, {\r\n                    color: bondData.color,\r\n                    color2: bondData.color2\r\n                });\r\n            }\r\n            if (!what || what.radius) {\r\n                Object.assign(cylinderData, {\r\n                    radius: bondData.radius\r\n                });\r\n            }\r\n            data.bufferList[0].setAttributes(cylinderData);\r\n            if (!this.cylinderOnly) {\r\n                var atomData = this.getAtomData(data.sview, what);\r\n                var sphereData = {};\r\n                if (!what || what.position) {\r\n                    Object.assign(sphereData, {\r\n                        position: atomData.position\r\n                    });\r\n                }\r\n                if (!what || what.color) {\r\n                    Object.assign(sphereData, {\r\n                        color: atomData.color\r\n                    });\r\n                }\r\n                if (!what || what.radius) {\r\n                    Object.assign(sphereData, {\r\n                        radius: atomData.radius\r\n                    });\r\n                }\r\n                data.bufferList[1].setAttributes(sphereData);\r\n            }\r\n        }\r\n    }\r\n    setParameters(params = {}) {\r\n        let rebuild = false;\r\n        const what = {};\r\n        if (params.aspectRatio || params.bondSpacing || params.bondScale) {\r\n            Object.assign(what, { radius: true });\r\n            if (!ExtensionFragDepth || this.disableImpostor) {\r\n                rebuild = true;\r\n            }\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('ball+stick', BallAndStickRepresentation);\r\nexport default BallAndStickRepresentation;\r\n//# sourceMappingURL=ballandstick-representation.js.map","/**\r\n *\r\n */\r\nimport StructureComponent from \"../component/structure-component\";\r\nimport CartoonRepresentation from \"../representation/cartoon-representation\";\r\nimport BallAndStickRepresentation from \"../representation/ballandstick-representation\";\r\n//import StructureBuilder from \"../structure/structure-builder\";\r\nclass TestModification {\r\n    // Initialize member variables\r\n    constructor( /* Maybe have some input*/) {\r\n        // Maybe do some stuff...\r\n    }\r\n    hover(stage, pickingProxy) {\r\n        if (pickingProxy) {\r\n            //console.log(\"Hovered over some structure!\");\r\n        }\r\n    }\r\n    clickPick_left(stage, pickingProxy) {\r\n        if (pickingProxy && pickingProxy.atom) {\r\n            let text = \"You've picked an atom!\";\r\n            text += \"! Here's its component and also the stage:\";\r\n            console.log(text);\r\n            console.log(pickingProxy.component);\r\n            console.log(stage);\r\n            if (pickingProxy.component instanceof StructureComponent) {\r\n                let component = pickingProxy.component;\r\n                let structure = component.object;\r\n                //let atomStore: AtomStore = structure.atomStore; // Atom data is stored here!\r\n                //let bondStore: BondStore = structure.bondStore; // Bond data is stored here!\r\n                //console.log(\"And now the AtomStore and BondStore:\");\r\n                //console.log(atomStore);\r\n                //console.log(bondStore);\r\n                console.assert(stage === component.stage);\r\n                console.assert(stage.viewer === component.viewer);\r\n                //let sb: StructureBuilder = new StructureBuilder(structure);\r\n                //sb.addAtom(0, '', '', '', 0, false);\r\n                let id = structure.atomMap.add('Steve', 'Johnson');\r\n                console.log(\"ID of newly added atom/element pair: \" + id);\r\n                TestModification.addSomething(stage, component, pickingProxy.atom.index, id);\r\n                /*structure.atomStore._fields.forEach((field: StoreField) => {\r\n                    let fieldName: string = field[0];\r\n                    console.log(fieldName);\r\n                    console.log(structure.atomStore[fieldName]);\r\n                }) ;*/\r\n                console.log(\"And now some representations of this component\");\r\n                component.reprList.forEach((value) => {\r\n                    let reprName = value.parameters.name;\r\n                    let repr = value.repr;\r\n                    if (reprName === 'cartoon') {\r\n                        console.assert(repr instanceof CartoonRepresentation);\r\n                        console.log(repr);\r\n                    }\r\n                    else if (reprName === 'ball+stick') {\r\n                        console.assert(repr instanceof BallAndStickRepresentation);\r\n                        console.log(repr);\r\n                        //let basRepr: BallAndStickRepresentation = <BallAndStickRepresentation> repr;\r\n                        //const what: BondDataFields | AtomDataFields = { color: true };\r\n                        //basRepr.update(what);\r\n                    }\r\n                    // Update everything (TODO: ...for now)\r\n                    repr.update({ position: true, color: true, radius: true, picking: true, index: true });\r\n                });\r\n            }\r\n        }\r\n        else if (pickingProxy) {\r\n            if (pickingProxy.bond) {\r\n                console.log(\"You've picked a bond!\");\r\n            }\r\n            else {\r\n                console.log(\"You've picked... something!\");\r\n            }\r\n        }\r\n    }\r\n    static addSomething(stage, component, atomIndex, atomTypeId) {\r\n        let structure = component.structure;\r\n        let atomStore = structure.atomStore;\r\n        let bondStore = structure.bondStore;\r\n        let x = atomStore.x[atomIndex];\r\n        let y = atomStore.y[atomIndex];\r\n        let z = atomStore.z[atomIndex];\r\n        //let offset = new Vector3(x, y, z);\r\n        //let componentTransformation: Matrix4 = component.matrix;\r\n        //let camPos: Vector3 = stage.viewer.camera.position;\r\n        let camMat = stage.viewer.camera.matrix;\r\n        console.log(\"Camera matrix:\");\r\n        console.log(camMat);\r\n        let atomCount = atomStore.count;\r\n        let bondCount = bondStore.count;\r\n        {\r\n            atomStore.growIfFull();\r\n            atomStore.x[atomCount] = x;\r\n            atomStore.y[atomCount] = y;\r\n            atomStore.z[atomCount] = z + 10;\r\n            atomStore.altloc[atomCount] = 0;\r\n            atomStore.atomTypeId[atomCount] = atomTypeId;\r\n            atomStore.bfactor[atomCount] = Math.random() * 40; // TODO: No idea what a good dummy value would be here...\r\n            if (atomStore.formalCharge)\r\n                atomStore.formalCharge[atomCount] = 0;\r\n            if (atomStore.partialCharge)\r\n                atomStore.partialCharge[atomCount] = 0;\r\n            atomStore.residueIndex[atomCount] = 1000; // TODO: No idea what a good dummy value would be here...\r\n            atomStore.serial[atomCount] = atomCount + 1;\r\n            atomStore.occupancy[atomCount] = 1;\r\n            bondStore.growIfFull();\r\n            bondStore.atomIndex1[bondCount] = atomIndex;\r\n            bondStore.atomIndex2[bondCount] = atomCount;\r\n            bondStore.bondOrder[bondCount] = 1; // TODO: No idea what a good dummy value would be here...\r\n        }\r\n        ++atomStore.count;\r\n        ++bondStore.count;\r\n        console.log(\"AtomStore and BondStore\");\r\n        console.log(atomStore);\r\n        console.log(bondStore);\r\n    }\r\n}\r\nexport default TestModification;\r\n//# sourceMappingURL=TEST.js.map","/**\r\n * @file Mouse Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { almostIdentity } from '../math/math-utils';\r\nimport SurfaceRepresentation from '../representation/surface-representation';\r\n// Added by Lucas Melo\r\nimport TestModification from './TEST';\r\nexport let testModification = new TestModification();\r\n/**\r\n * Mouse actions provided as static methods\r\n */\r\nclass MouseActions {\r\n    /**\r\n     * Zoom scene based on scroll-delta\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} delta - amount to zoom\r\n     * @return {undefined}\r\n     */\r\n    static zoomScroll(stage, delta) {\r\n        stage.trackballControls.zoom(delta);\r\n    }\r\n    /**\r\n     * Move near clipping plane based on scroll-delta\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} delta - amount to move clipping plane\r\n     * @return {undefined}\r\n     */\r\n    static clipNearScroll(stage, delta) {\r\n        const sp = stage.getParameters();\r\n        stage.setParameters({ clipNear: sp.clipNear + delta / 10 });\r\n    }\r\n    /**\r\n     * Move clipping planes based on scroll-delta.\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} delta - direction to move planes\r\n     * @return {undefined}\r\n     */\r\n    static focusScroll(stage, delta) {\r\n        const focus = stage.getFocus();\r\n        const sign = Math.sign(delta);\r\n        const step = sign * almostIdentity((100 - focus) / 10, 5, 0.2);\r\n        stage.setFocus(focus + step);\r\n    }\r\n    /**\r\n     * Zoom scene based on scroll-delta and\r\n     * move focus planes based on camera position (zoom)\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} delta - amount to move focus planes and zoom\r\n     * @return {undefined}\r\n     */\r\n    static zoomFocusScroll(stage, delta) {\r\n        stage.trackballControls.zoom(delta);\r\n        const z = stage.viewer.camera.position.z;\r\n        stage.setFocus(100 - Math.abs(z / 8));\r\n    }\r\n    /**\r\n     * Change isolevel of volume surfaces based on scroll-delta\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} delta - amount to change isolevel\r\n     * @return {undefined}\r\n     */\r\n    static isolevelScroll(stage, delta) {\r\n        const d = Math.sign(delta) / 10;\r\n        stage.eachRepresentation((reprElem, comp) => {\r\n            if (reprElem.repr instanceof SurfaceRepresentation) {\r\n                const p = reprElem.getParameters(); // TODO\r\n                if (p.isolevelScroll) {\r\n                    reprElem.setParameters({ isolevel: p.isolevel + d });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Pan scene based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to pan in x direction\r\n     * @param {Number} dy - amount to pan in y direction\r\n     * @return {undefined}\r\n     */\r\n    static panDrag(stage, dx, dy) {\r\n        stage.trackballControls.pan(dx, dy);\r\n    }\r\n    /**\r\n     * Rotate scene based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to rotate in x direction\r\n     * @param {Number} dy - amount to rotate in y direction\r\n     * @return {undefined}\r\n     */\r\n    static rotateDrag(stage, dx, dy) {\r\n        stage.trackballControls.rotate(dx, dy);\r\n    }\r\n    /**\r\n     * Rotate scene around z axis based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to rotate in x direction\r\n     * @param {Number} dy - amount to rotate in y direction\r\n     * @return {undefined}\r\n     */\r\n    static zRotateDrag(stage, dx, dy) {\r\n        stage.trackballControls.zRotate(dx, dy);\r\n    }\r\n    /**\r\n     * Zoom scene based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to zoom\r\n     * @param {Number} dy - amount to zoom\r\n     * @return {undefined}\r\n     */\r\n    static zoomDrag(stage, dx, dy) {\r\n        stage.trackballControls.zoom((dx + dy) / -2);\r\n    }\r\n    /**\r\n     * Zoom scene based on mouse coordinate changes and\r\n     * move focus planes based on camera position (zoom)\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to zoom and focus\r\n     * @param {Number} dy - amount to zoom and focus\r\n     * @return {undefined}\r\n     */\r\n    static zoomFocusDrag(stage, dx, dy) {\r\n        stage.trackballControls.zoom((dx + dy) / -2);\r\n        const z = stage.viewer.camera.position.z;\r\n        stage.setFocus(100 - Math.abs(z / 8));\r\n    }\r\n    /**\r\n     * Pan picked component based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to pan in x direction\r\n     * @param {Number} dy - amount to pan in y direction\r\n     * @return {undefined}\r\n     */\r\n    static panComponentDrag(stage, dx, dy) {\r\n        stage.trackballControls.panComponent(dx, dy);\r\n    }\r\n    /**\r\n     * Pan picked atom based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to pan in x direction\r\n     * @param {Number} dy - amount to pan in y direction\r\n     * @return {undefined}\r\n     */\r\n    static panAtomDrag(stage, dx, dy) {\r\n        stage.trackballControls.panAtom(dx, dy);\r\n    }\r\n    /**\r\n     * Rotate picked component based on mouse coordinate changes\r\n     * @param {Stage} stage - the stage\r\n     * @param {Number} dx - amount to rotate in x direction\r\n     * @param {Number} dy - amount to rotate in y direction\r\n     * @return {undefined}\r\n     */\r\n    static rotateComponentDrag(stage, dx, dy) {\r\n        stage.trackballControls.rotateComponent(dx, dy);\r\n    }\r\n    /**\r\n     * Move picked element to the center of the screen\r\n     * @param {Stage} stage - the stage\r\n     * @param {PickingProxy} pickingProxy - the picking data object\r\n     * @return {undefined}\r\n     */\r\n    static movePick(stage, pickingProxy) {\r\n        if (pickingProxy) {\r\n            stage.animationControls.move(pickingProxy.position.clone());\r\n        }\r\n    }\r\n    /**\r\n     * Show tooltip with information of picked element\r\n     * @param {Stage} stage - the stage\r\n     * @param {PickingProxy} pickingProxy - the picking data object\r\n     * @return {undefined}\r\n     */\r\n    static tooltipPick(stage, pickingProxy) {\r\n        const tt = stage.tooltip;\r\n        const sp = stage.getParameters();\r\n        if (sp.tooltip && pickingProxy) {\r\n            const mp = pickingProxy.mouse.position;\r\n            tt.innerText = pickingProxy.getLabel();\r\n            tt.style.bottom = (window.innerHeight - mp.y + 3) + 'px';\r\n            tt.style.left = (mp.x + 3) + 'px';\r\n            tt.style.display = 'block';\r\n        }\r\n        else {\r\n            tt.style.display = 'none';\r\n        }\r\n    }\r\n    static measurePick(stage, pickingProxy) {\r\n        if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)) {\r\n            const atom = pickingProxy.atom || pickingProxy.closestBondAtom;\r\n            const sc = pickingProxy.component;\r\n            sc.measurePick(atom);\r\n        }\r\n        else {\r\n            stage.measureClear();\r\n        }\r\n    }\r\n}\r\nexport const MouseActionPresets = {\r\n    default: [\r\n        ['scroll', MouseActions.zoomScroll],\r\n        ['scroll-shift', MouseActions.focusScroll],\r\n        ['scroll-ctrl', MouseActions.isolevelScroll],\r\n        ['scroll-shift-ctrl', MouseActions.zoomFocusScroll],\r\n        ['drag-left', MouseActions.rotateDrag],\r\n        ['drag-right', MouseActions.panDrag],\r\n        ['drag-ctrl-left', MouseActions.panDrag],\r\n        ['drag-ctrl-right', MouseActions.zRotateDrag],\r\n        ['drag-shift-left', MouseActions.zoomDrag],\r\n        ['drag-middle', MouseActions.zoomFocusDrag],\r\n        ['drag-ctrl-shift-right', MouseActions.panComponentDrag],\r\n        ['drag-ctrl-shift-left', MouseActions.rotateComponentDrag],\r\n        ['clickPick-right', MouseActions.measurePick],\r\n        ['clickPick-ctrl-left', MouseActions.measurePick],\r\n        ['clickPick-middle', MouseActions.movePick],\r\n        //[ 'clickPick-left', MouseActions.movePick ],\r\n        ['clickPick-left', testModification.clickPick_left],\r\n        ['hoverPick', MouseActions.tooltipPick],\r\n        ['hoverPick', testModification.hover]\r\n    ],\r\n    pymol: [\r\n        ['drag-left', MouseActions.rotateDrag],\r\n        ['drag-middle', MouseActions.panDrag],\r\n        ['drag-right', MouseActions.zoomDrag],\r\n        ['drag-shift-right', MouseActions.focusScroll],\r\n        ['clickPick-ctrl+shift-middle', MouseActions.movePick],\r\n        ['hoverPick', MouseActions.tooltipPick]\r\n    ],\r\n    coot: [\r\n        ['scroll', MouseActions.isolevelScroll],\r\n        ['drag-left', MouseActions.rotateDrag],\r\n        ['drag-middle', MouseActions.panDrag],\r\n        ['drag-ctrl-left', MouseActions.panDrag],\r\n        ['drag-right', MouseActions.zoomFocusDrag],\r\n        ['drag-ctrl-right', MouseActions.focusScroll],\r\n        ['clickPick-middle', MouseActions.movePick],\r\n        ['hoverPick', MouseActions.tooltipPick]\r\n    ],\r\n    astexviewer: [\r\n        ['drag-left', MouseActions.rotateDrag],\r\n        ['drag-ctrl-left', MouseActions.panDrag],\r\n        ['drag-shift-left', MouseActions.zoomDrag],\r\n        ['scroll', MouseActions.focusScroll],\r\n        ['clickPick-middle', MouseActions.movePick],\r\n        ['hoverPick', MouseActions.tooltipPick]\r\n    ]\r\n};\r\nexport default MouseActions;\r\n//# sourceMappingURL=mouse-actions.js.map","/**\r\n * @file Mouse Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { MouseActionPresets } from './mouse-actions.js';\r\n/**\r\n * Strings to describe mouse events (including optional keyboard modifiers).\r\n * Must contain an event type: \"scroll\", \"drag\", \"click\", \"doubleClick\",\r\n * \"hover\", \"clickPick\" or \"hoverPick\". Optionally contain one or more\r\n * (seperated by plus signs) keyboard modifiers: \"alt\", \"ctrl\", \"meta\" or\r\n * \"shift\". Can contain the mouse button performing the event: \"left\",\r\n * \"middle\" or \"right\". The type, key and button parts must be seperated by\r\n * dashes.\r\n *\r\n * @example\r\n * // triggered on scroll event (no key or button)\r\n * \"scroll\"\r\n *\r\n * @example\r\n * // triggered on scroll event while shift key is pressed\r\n * \"scroll-shift\"\r\n *\r\n * @example\r\n * // triggered on drag event with left mouse button\r\n * \"drag-left\"\r\n *\r\n * @example\r\n * // triggered on drag event with right mouse button\r\n * // while ctrl and shift keys are pressed\r\n * \"drag-right-ctrl+shift\"\r\n *\r\n * @typedef {String} TriggerString\r\n */\r\n/**\r\n * Get event type, key and button\r\n * @param  {TriggerString} str - input trigger string\r\n * @return {Array} event type, key and button\r\n */\r\nfunction triggerFromString(str) {\r\n    const tokens = str.split(/[-+]/);\r\n    let type = '';\r\n    if (tokens.includes('scroll'))\r\n        type = 'scroll';\r\n    if (tokens.includes('drag'))\r\n        type = 'drag';\r\n    if (tokens.includes('click'))\r\n        type = 'click';\r\n    if (tokens.includes('doubleClick'))\r\n        type = 'doubleClick';\r\n    if (tokens.includes('hover'))\r\n        type = 'hover';\r\n    if (tokens.includes('clickPick'))\r\n        type = 'clickPick';\r\n    if (tokens.includes('hoverPick'))\r\n        type = 'hoverPick';\r\n    let key = 0;\r\n    if (tokens.includes('alt'))\r\n        key += 1;\r\n    if (tokens.includes('ctrl'))\r\n        key += 2;\r\n    if (tokens.includes('meta'))\r\n        key += 4;\r\n    if (tokens.includes('shift'))\r\n        key += 8;\r\n    let button = 0;\r\n    if (tokens.includes('left'))\r\n        button += 1;\r\n    if (tokens.includes('right'))\r\n        button += 2;\r\n    if (tokens.includes('middle'))\r\n        button += 4;\r\n    return [type, key, button];\r\n}\r\n/**\r\n * Mouse controls\r\n */\r\nclass MouseControls {\r\n    /**\r\n     * @param {Stage} stage - the stage object\r\n     * @param {Object} [params] - the parameters\r\n     * @param {String} params.preset - one of \"default\", \"pymol\", \"coot\"\r\n     * @param {String} params.disabled - flag to disable all actions\r\n     */\r\n    constructor(stage, params = {}) {\r\n        this.stage = stage;\r\n        this.actionList = [];\r\n        this.mouse = stage.mouseObserver;\r\n        this.disabled = params.disabled || false;\r\n        this.preset(params.preset || 'default');\r\n    }\r\n    run(type, ...args) {\r\n        if (this.disabled)\r\n            return;\r\n        const key = this.mouse.key || 0;\r\n        const button = this.mouse.buttons || 0;\r\n        this.actionList.forEach(a => {\r\n            if (a.type === type && a.key === key && a.button === button) {\r\n                a.callback(this.stage, ...args); // TODO\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Add a new mouse action triggered by an event, key and button combination.\r\n     * The {@link MouseActions} class provides a number of static methods for\r\n     * use as callback functions.\r\n     *\r\n     * @example\r\n     * // change ambient light intensity on mouse scroll\r\n     * // while the ctrl and shift keys are pressed\r\n     * stage.mouseControls.add( \"scroll-ctrl+shift\", function( stage, delta ){\r\n     *     var ai = stage.getParameters().ambientIntensity;\r\n     *     stage.setParameters( { ambientIntensity: Math.max( 0, ai + delta / 50 ) } );\r\n     * } );\r\n     *\r\n     * @example\r\n     * // Call the MouseActions.zoomDrag method on mouse drag events\r\n     * // with left and right mouse buttons simultaneous\r\n     * stage.mouseControls.add( \"drag-left+right\", MouseActions.zoomDrag );\r\n     *\r\n     * @param {TriggerString} triggerStr - the trigger for the action\r\n     * @param {function(stage: Stage, ...args: Any)} callback - the callback function for the action\r\n     * @return {undefined}\r\n     */\r\n    add(triggerStr, callback) {\r\n        const [type, key, button] = triggerFromString(triggerStr);\r\n        this.actionList.push({ type, key, button, callback });\r\n    }\r\n    /**\r\n     * Remove a mouse action. The trigger string can contain an asterix (*)\r\n     * as a wildcard for any key or mouse button. When the callback function\r\n     * is given, only actions that call that function are removed.\r\n     *\r\n     * @example\r\n     * // remove actions triggered solely by a scroll event\r\n     * stage.mouseControls.remove( \"scroll\" );\r\n     *\r\n     * @example\r\n     * // remove actions triggered by a scroll event, including\r\n     * // those requiring a key pressed or mouse button used\r\n     * stage.mouseControls.remove( \"scroll-*\" );\r\n     *\r\n     * @example\r\n     * // remove actions triggered by a scroll event\r\n     * // while the shift key is pressed\r\n     * stage.mouseControls.remove( \"scroll-shift\" );\r\n     *\r\n     * @param {TriggerString} triggerStr - the trigger for the action\r\n     * @param {Function} [callback] - the callback function for the action\r\n     * @return {undefined}\r\n     */\r\n    remove(triggerStr, callback) {\r\n        const wildcard = triggerStr.includes('*');\r\n        const [type, key, button] = triggerFromString(triggerStr);\r\n        const actionList = this.actionList.filter(function (a) {\r\n            return !((a.type === type || (wildcard && type === '')) &&\r\n                (a.key === key || (wildcard && key === 0)) &&\r\n                (a.button === button || (wildcard && button === 0)) &&\r\n                (a.callback === callback || callback === undefined));\r\n        });\r\n        this.actionList = actionList;\r\n    }\r\n    /**\r\n     * Set mouse action preset\r\n     * @param  {String} name - one of \"default\", \"pymol\", \"coot\"\r\n     * @return {undefined}\r\n     */\r\n    preset(name) {\r\n        this.clear();\r\n        const list = MouseActionPresets[name] || [];\r\n        list.forEach(action => this.add(action[0], action[1]));\r\n    }\r\n    /**\r\n     * Remove all mouse actions\r\n     * @return {undefined}\r\n     */\r\n    clear() {\r\n        this.actionList.length = 0;\r\n    }\r\n}\r\nexport default MouseControls;\r\n//# sourceMappingURL=mouse-controls.js.map","/**\r\n * @file Key Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n/**\r\n * Key actions provided as static methods\r\n */\r\nclass KeyActions {\r\n    /**\r\n     * Stage auto view\r\n     */\r\n    static autoView(stage) {\r\n        stage.autoView(1000);\r\n    }\r\n    /**\r\n     * Toggle stage animations\r\n     */\r\n    static toggleAnimations(stage) {\r\n        stage.animationControls.toggle();\r\n    }\r\n    /**\r\n     * Toggle stage rocking\r\n     */\r\n    static toggleRock(stage) {\r\n        stage.toggleRock();\r\n    }\r\n    /**\r\n     * Toggle stage spinning\r\n     */\r\n    static toggleSpin(stage) {\r\n        stage.toggleSpin();\r\n    }\r\n    /**\r\n     * Toggle anti-aliasing\r\n     */\r\n    static toggleAntialiasing(stage) {\r\n        const p = stage.getParameters();\r\n        stage.setParameters({ sampleLevel: p.sampleLevel === -1 ? 0 : -1 });\r\n    }\r\n}\r\nexport const KeyActionPresets = {\r\n    default: [\r\n        ['i', KeyActions.toggleSpin],\r\n        ['k', KeyActions.toggleRock],\r\n        ['p', KeyActions.toggleAnimations],\r\n        ['a', KeyActions.toggleAntialiasing],\r\n        ['r', KeyActions.autoView]\r\n    ]\r\n};\r\nexport default KeyActions;\r\n//# sourceMappingURL=key-actions.js.map","/**\r\n * @file Key Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { KeyActionPresets } from './key-actions';\r\n/**\r\n * Mouse controls\r\n */\r\nclass KeyControls {\r\n    /**\r\n     * @param {Stage} stage - the stage object\r\n     * @param {Object} [params] - the parameters\r\n     * @param {String} params.preset - one of \"default\"\r\n     * @param {String} params.disabled - flag to disable all actions\r\n     */\r\n    constructor(stage, params = {}) {\r\n        this.stage = stage;\r\n        this.actionList = [];\r\n        this.disabled = params.disabled || false;\r\n        this.preset(params.preset || 'default');\r\n    }\r\n    run(key) {\r\n        if (this.disabled)\r\n            return;\r\n        this.actionList.forEach(a => {\r\n            if (a.key === key) {\r\n                a.callback(this.stage);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Add a key action triggered by pressing the given character.\r\n     * The {@link KeyActions} class provides a number of static methods for\r\n     * use as callback functions.\r\n     *\r\n     * @example\r\n     * // call KeyActions.toggleRock when \"k\" is pressed\r\n     * stage.keyControls.remove( \"k\", KeyActions.toggleRock );\r\n     *\r\n     * @param {Char} char - the key/character\r\n     * @param {Function} callback - the callback function for the action\r\n     * @return {undefined}\r\n     */\r\n    add(char, callback) {\r\n        this.actionList.push({ key: char, callback });\r\n    }\r\n    /**\r\n     * Remove a key action. When the callback function\r\n     * is given, only actions that call that function are removed.\r\n     *\r\n     * @example\r\n     * // remove all actions triggered by pressing \"k\"\r\n     * stage.keyControls.remove( \"k\" );\r\n     *\r\n     * @example\r\n     * // remove action `toggleRock` triggered by pressing \"k\"\r\n     * stage.keyControls.remove( \"k\", toggleRock );\r\n     *\r\n     * @param {Char} char - the key/character\r\n     * @param {Function} [callback] - the callback function for the action\r\n     * @return {undefined}\r\n     */\r\n    remove(char, callback) {\r\n        const actionList = this.actionList.filter(function (a) {\r\n            return !((a.key === char) &&\r\n                (a.callback === callback || callback === undefined));\r\n        });\r\n        this.actionList = actionList;\r\n    }\r\n    /**\r\n     * Set key action preset\r\n     * @param  {String} name - one of \"default\"\r\n     * @return {undefined}\r\n     */\r\n    preset(name) {\r\n        this.clear();\r\n        const list = KeyActionPresets[name] || [];\r\n        list.forEach(action => this.add(action[0], action[1]));\r\n    }\r\n    /**\r\n     * Remove all key actions\r\n     * @return {undefined}\r\n     */\r\n    clear() {\r\n        this.actionList.length = 0;\r\n    }\r\n}\r\nexport default KeyControls;\r\n//# sourceMappingURL=key-controls.js.map","/**\r\n * @file Picking Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass PickingBehavior {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.stage = stage;\r\n        this.mouse = stage.mouseObserver;\r\n        this.controls = stage.mouseControls;\r\n        this.mouse.signals.clicked.add(this._onClick, this);\r\n        this.mouse.signals.hovered.add(this._onHover, this);\r\n    }\r\n    _onClick(x, y) {\r\n        const pickingProxy = this.stage.pickingControls.pick(x, y);\r\n        this.stage.signals.clicked.dispatch(pickingProxy);\r\n        this.controls.run('clickPick', pickingProxy);\r\n    }\r\n    _onHover(x, y) {\r\n        const pickingProxy = this.stage.pickingControls.pick(x, y);\r\n        if (pickingProxy && this.mouse.down.equals(this.mouse.position)) {\r\n            this.stage.transformComponent = pickingProxy.component;\r\n            this.stage.transformAtom = pickingProxy.atom;\r\n        }\r\n        this.stage.signals.hovered.dispatch(pickingProxy);\r\n        this.controls.run('hoverPick', pickingProxy);\r\n    }\r\n    dispose() {\r\n        this.mouse.signals.clicked.remove(this._onClick, this);\r\n        this.mouse.signals.hovered.remove(this._onHover, this);\r\n    }\r\n}\r\nexport default PickingBehavior;\r\n//# sourceMappingURL=picking-behavior.js.map","/**\r\n * @file Mouse Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass MouseBehavior {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.stage = stage;\r\n        this.mouse = stage.mouseObserver;\r\n        this.controls = stage.mouseControls;\r\n        this.mouse.signals.moved.add(this._onMove, this);\r\n        this.mouse.signals.scrolled.add(this._onScroll, this);\r\n        this.mouse.signals.dragged.add(this._onDrag, this);\r\n        this.mouse.signals.clicked.add(this._onClick, this);\r\n        this.mouse.signals.hovered.add(this._onHover, this);\r\n        this.mouse.signals.doubleClicked.add(this._onDblclick, this);\r\n    }\r\n    _onMove( /* x, y */) {\r\n        this.stage.tooltip.style.display = 'none';\r\n    }\r\n    _onScroll(delta) {\r\n        this.controls.run('scroll', delta);\r\n    }\r\n    _onDrag(dx, dy) {\r\n        this.controls.run('drag', dx, dy);\r\n    }\r\n    _onClick(x, y) {\r\n        this.controls.run('click', x, y);\r\n    }\r\n    _onDblclick(x, y) {\r\n        this.controls.run('doubleClick', x, y);\r\n    }\r\n    _onHover(x, y) {\r\n        this.controls.run('hover', x, y);\r\n    }\r\n    dispose() {\r\n        this.mouse.signals.moved.remove(this._onMove, this);\r\n        this.mouse.signals.scrolled.remove(this._onScroll, this);\r\n        this.mouse.signals.dragged.remove(this._onDrag, this);\r\n        this.mouse.signals.clicked.remove(this._onClick, this);\r\n        this.mouse.signals.hovered.remove(this._onHover, this);\r\n    }\r\n}\r\nexport default MouseBehavior;\r\n//# sourceMappingURL=mouse-behavior.js.map","/**\r\n * @file Animation Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nclass AnimationBehavior {\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.viewer = stage.viewer;\r\n        this.animationControls = stage.animationControls;\r\n        this.viewer.signals.ticked.add(this._onTick, this);\r\n    }\r\n    _onTick(stats) {\r\n        this.animationControls.run(stats);\r\n    }\r\n    dispose() {\r\n        this.viewer.signals.ticked.remove(this._onTick, this);\r\n    }\r\n}\r\nexport default AnimationBehavior;\r\n//# sourceMappingURL=animation-behavior.js.map","/**\r\n * @file Key Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { SupportsPassiveEventHandler } from '../globals';\r\nconst passive = SupportsPassiveEventHandler ? { passive: true } : false;\r\nclass KeyBehavior {\r\n    /**\r\n     * @param {Stage} stage - the stage object\r\n     */\r\n    constructor(stage) {\r\n        this.stage = stage;\r\n        this.stage = stage;\r\n        this.controls = stage.keyControls;\r\n        this.domElement = stage.viewer.renderer.domElement;\r\n        // ensure the domElement is focusable\r\n        this.domElement.setAttribute('tabIndex', '-1');\r\n        this.domElement.style.outline = 'none';\r\n        this._focusDomElement = this._focusDomElement.bind(this);\r\n        this._onKeydown = this._onKeydown.bind(this);\r\n        this._onKeyup = this._onKeyup.bind(this);\r\n        this._onKeypress = this._onKeypress.bind(this);\r\n        this.domElement.addEventListener('mousedown', this._focusDomElement);\r\n        this.domElement.addEventListener('touchstart', this._focusDomElement, passive); // TODO\r\n        this.domElement.addEventListener('keydown', this._onKeydown);\r\n        this.domElement.addEventListener('keyup', this._onKeyup);\r\n        this.domElement.addEventListener('keypress', this._onKeypress);\r\n    }\r\n    /**\r\n     * handle key down\r\n     * @param  {Event} event - key event\r\n     * @return {undefined}\r\n     */\r\n    _onKeydown( /* event */) {\r\n        // console.log( \"down\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n    }\r\n    /**\r\n     * handle key up\r\n     * @param  {Event} event - key event\r\n     * @return {undefined}\r\n     */\r\n    _onKeyup( /* event */) {\r\n        // console.log( \"up\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n    }\r\n    /**\r\n     * handle key press\r\n     * @param  {Event} event - key event\r\n     * @return {undefined}\r\n     */\r\n    _onKeypress(event) {\r\n        // console.log( \"press\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n        let pressedKey;\r\n        if (\"key\" in KeyboardEvent.prototype) {\r\n            pressedKey = event.key;\r\n            // some mobile browsers don't support this attribute\r\n        }\r\n        else {\r\n            pressedKey = String.fromCharCode(event.which || event.keyCode);\r\n        }\r\n        this.controls.run(pressedKey);\r\n    }\r\n    _focusDomElement() {\r\n        this.domElement.focus();\r\n    }\r\n    dispose() {\r\n        this.domElement.removeEventListener('mousedown', this._focusDomElement);\r\n        this.domElement.removeEventListener('touchstart', this._focusDomElement, passive); // TODO\r\n        this.domElement.removeEventListener('keydown', this._onKeypress);\r\n        this.domElement.removeEventListener('keyup', this._onKeypress);\r\n        this.domElement.removeEventListener('keypress', this._onKeypress);\r\n    }\r\n}\r\nexport default KeyBehavior;\r\n//# sourceMappingURL=key-behavior.js.map","/**\r\n * @file Surface Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ComponentRegistry } from '../globals';\r\nimport Component from './component';\r\n/**\r\n * Component wrapping a {@link Surface} object\r\n *\r\n * @example\r\n * // get a surface component by loading a surface file into the stage\r\n * stage.loadFile( \"url/for/surface\" ).then( function( surfaceComponent ){\r\n *     surfaceComponent.addRepresentation( \"surface\" );\r\n *     surfaceComponent.autoView();\r\n * } );\r\n */\r\nclass SurfaceComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Surface} surface - surface object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n    constructor(stage, surface, params = {}) {\r\n        super(stage, surface, Object.assign({ name: surface.name }, params));\r\n        this.surface = surface;\r\n    }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'surface'; }\r\n    /**\r\n     * Add a new surface representation to the component\r\n     * @param {String} type - the name of the representation, one of:\r\n     *                        surface, dot.\r\n     * @param {SurfaceRepresentationParameters} params - representation parameters\r\n     * @return {RepresentationComponent} the created representation wrapped into\r\n     *                                   a representation component object\r\n     */\r\n    addRepresentation(type, params = {}) {\r\n        return this._addRepresentation(type, this.surface, params);\r\n    }\r\n    getBoxUntransformed() {\r\n        return this.surface.boundingBox;\r\n    }\r\n    getCenterUntransformed() {\r\n        return this.surface.center;\r\n    }\r\n    dispose() {\r\n        this.surface.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\nComponentRegistry.add('surface', SurfaceComponent);\r\nexport default SurfaceComponent;\r\n//# sourceMappingURL=surface-component.js.map","/**\r\n * @file Volume Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ComponentRegistry } from '../globals';\r\nimport Component from './component';\r\n/**\r\n * Component wrapping a {@link Volume} object\r\n *\r\n * @example\r\n * // get a volume component by loading a volume file into the stage\r\n * stage.loadFile( \"url/for/volume\" ).then(function(volumeComponent){\r\n *   volumeComponent.addRepresentation('surface');\r\n *   volumeComponent.autoView();\r\n * });\r\n */\r\nclass VolumeComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Volume} volume - volume object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n    constructor(stage, volume, params = {}) {\r\n        super(stage, volume, Object.assign({ name: volume.name }, params));\r\n        this.volume = volume;\r\n    }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'volume'; }\r\n    /**\r\n     * Add a new volume representation to the component\r\n     */\r\n    addRepresentation(type, params = {}) {\r\n        return this._addRepresentation(type, this.volume, params);\r\n    }\r\n    getBoxUntransformed() {\r\n        return this.volume.boundingBox;\r\n    }\r\n    getCenterUntransformed() {\r\n        return this.volume.center;\r\n    }\r\n    dispose() {\r\n        this.volume.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\nComponentRegistry.add('volume', VolumeComponent);\r\nexport default VolumeComponent;\r\n//# sourceMappingURL=volume-component.js.map","/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Collection from './collection';\r\nclass ComponentCollection extends Collection {\r\n    addRepresentation(name, params) {\r\n        return this.forEach((comp) => comp.addRepresentation(name, params));\r\n    }\r\n    autoView(duration) {\r\n        return this.forEach((comp) => comp.autoView(duration));\r\n    }\r\n}\r\nexport default ComponentCollection;\r\n//# sourceMappingURL=component-collection.js.map","/**\r\n * @file Stage\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { Signal } from 'signals';\r\nimport { Debug, Log, Mobile, ComponentRegistry, ParserRegistry } from '../globals';\r\nimport { defaults, createParams, updateParams } from '../utils';\r\nimport { degToRad, clamp, pclamp } from '../math/math-utils';\r\nimport Counter from '../utils/counter';\r\nimport Viewer from '../viewer/viewer';\r\nimport MouseObserver from './mouse-observer';\r\nimport TrackballControls from '../controls/trackball-controls';\r\nimport PickingControls from '../controls/picking-controls';\r\nimport ViewerControls from '../controls/viewer-controls';\r\nimport AnimationControls from '../controls/animation-controls';\r\nimport MouseControls from '../controls/mouse-controls';\r\nimport KeyControls from '../controls/key-controls';\r\nimport PickingBehavior from './picking-behavior';\r\nimport MouseBehavior from './mouse-behavior';\r\nimport AnimationBehavior from './animation-behavior';\r\nimport KeyBehavior from './key-behavior';\r\nimport StructureComponent from '../component/structure-component';\r\nimport SurfaceComponent from '../component/surface-component';\r\nimport VolumeComponent from '../component/volume-component';\r\nimport ComponentCollection from '../component/component-collection';\r\nimport RepresentationCollection from '../component/representation-collection';\r\nimport { autoLoad, getFileInfo } from '../loader/loader-utils';\r\nimport Selection from '../selection/selection';\r\nfunction matchName(name, object) {\r\n    if (name instanceof RegExp) {\r\n        return object.name.match(name) !== null;\r\n    }\r\n    else {\r\n        return object.name === name;\r\n    }\r\n}\r\nconst tmpZoomVector = new Vector3();\r\nexport const StageDefaultParameters = {\r\n    impostor: true,\r\n    quality: 'medium',\r\n    workerDefault: true,\r\n    sampleLevel: 0,\r\n    backgroundColor: 'black',\r\n    rotateSpeed: 2.0,\r\n    zoomSpeed: 1.2,\r\n    panSpeed: 1.0,\r\n    clipNear: 0,\r\n    clipFar: 100,\r\n    clipDist: 10,\r\n    clipMode: 'scene',\r\n    clipScale: 'relative',\r\n    fogNear: 50,\r\n    fogFar: 100,\r\n    cameraFov: 40,\r\n    cameraEyeSep: 0.3,\r\n    cameraType: 'perspective',\r\n    lightColor: 0xdddddd,\r\n    lightIntensity: 1.0,\r\n    ambientColor: 0xdddddd,\r\n    ambientIntensity: 0.2,\r\n    hoverTimeout: 0,\r\n    tooltip: true,\r\n    mousePreset: 'default'\r\n};\r\n/**\r\n * Stage class, central for creating molecular scenes with NGL.\r\n *\r\n * @example\r\n * var stage = new Stage( \"elementId\", { backgroundColor: \"white\" } );\r\n */\r\nclass Stage {\r\n    constructor(idOrElement, params = {}) {\r\n        this.signals = {\r\n            parametersChanged: new Signal(),\r\n            fullscreenChanged: new Signal(),\r\n            componentAdded: new Signal(),\r\n            componentRemoved: new Signal(),\r\n            clicked: new Signal(),\r\n            hovered: new Signal()\r\n        };\r\n        /**\r\n         * Counter that keeps track of various potentially long-running tasks,\r\n         * including file loading and surface calculation.\r\n         */\r\n        this.tasks = new Counter();\r\n        this.compList = [];\r\n        this.defaultFileParams = {};\r\n        this.logList = [];\r\n        this.viewer = new Viewer(idOrElement);\r\n        if (!this.viewer.renderer)\r\n            return;\r\n        this.tooltip = document.createElement('div');\r\n        Object.assign(this.tooltip.style, {\r\n            display: 'none',\r\n            position: 'fixed',\r\n            zIndex: '1000000',\r\n            pointerEvents: 'none',\r\n            backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n            color: 'lightgrey',\r\n            padding: '8px',\r\n            fontFamily: 'sans-serif'\r\n        });\r\n        this.viewer.container.appendChild(this.tooltip);\r\n        this.mouseObserver = new MouseObserver(this.viewer.renderer.domElement, this);\r\n        this.viewerControls = new ViewerControls(this);\r\n        this.trackballControls = new TrackballControls(this);\r\n        this.pickingControls = new PickingControls(this);\r\n        this.animationControls = new AnimationControls(this);\r\n        this.mouseControls = new MouseControls(this);\r\n        this.keyControls = new KeyControls(this);\r\n        this.pickingBehavior = new PickingBehavior(this);\r\n        this.mouseBehavior = new MouseBehavior(this);\r\n        this.animationBehavior = new AnimationBehavior(this);\r\n        this.keyBehavior = new KeyBehavior(this);\r\n        this.spinAnimation = this.animationControls.spin([0, 1, 0], 0.005);\r\n        this.spinAnimation.pause(true);\r\n        this.rockAnimation = this.animationControls.rock([0, 1, 0], 0.005);\r\n        this.rockAnimation.pause(true);\r\n        // must come after the viewer has been instantiated\r\n        this.parameters = createParams(params, StageDefaultParameters);\r\n        this.setParameters(this.parameters);\r\n        this.viewer.animate();\r\n    }\r\n    /**\r\n     * Set stage parameters\r\n     */\r\n    setParameters(params = {}) {\r\n        updateParams(this.parameters, params);\r\n        const p = params;\r\n        const tp = this.parameters;\r\n        const viewer = this.viewer;\r\n        const controls = this.trackballControls;\r\n        // apply parameters\r\n        if (p.quality !== undefined)\r\n            this.setQuality(tp.quality);\r\n        if (p.impostor !== undefined)\r\n            this.setImpostor(tp.impostor);\r\n        if (p.rotateSpeed !== undefined)\r\n            controls.rotateSpeed = tp.rotateSpeed;\r\n        if (p.zoomSpeed !== undefined)\r\n            controls.zoomSpeed = tp.zoomSpeed;\r\n        if (p.panSpeed !== undefined)\r\n            controls.panSpeed = tp.panSpeed;\r\n        if (p.mousePreset !== undefined)\r\n            this.mouseControls.preset(tp.mousePreset);\r\n        this.mouseObserver.setParameters({ hoverTimeout: tp.hoverTimeout });\r\n        viewer.setClip(tp.clipNear, tp.clipFar, tp.clipDist, tp.clipMode, tp.clipScale);\r\n        viewer.setFog(undefined, tp.fogNear, tp.fogFar);\r\n        viewer.setCamera(tp.cameraType, tp.cameraFov, tp.cameraEyeSep);\r\n        viewer.setSampling(tp.sampleLevel);\r\n        viewer.setBackground(tp.backgroundColor);\r\n        viewer.setLight(tp.lightColor, tp.lightIntensity, tp.ambientColor, tp.ambientIntensity);\r\n        this.signals.parametersChanged.dispatch(this.getParameters());\r\n        return this;\r\n    }\r\n    log(msg) {\r\n        console.log('STAGE LOG', msg);\r\n        this.logList.push(msg);\r\n    }\r\n    /**\r\n     * Get stage parameters\r\n     */\r\n    getParameters() {\r\n        return Object.assign({}, this.parameters);\r\n    }\r\n    /**\r\n     * Create default representations for the given component\r\n     * @param  {StructureComponent|SurfaceComponent} object - component to create the representations for\r\n     * @return {undefined}\r\n     */\r\n    defaultFileRepresentation(component) {\r\n        if (component instanceof StructureComponent) {\r\n            component.setSelection('/0');\r\n            let atomCount, residueCount, instanceCount;\r\n            const structure = component.structure;\r\n            if (structure.biomolDict.BU1) {\r\n                const assembly = structure.biomolDict.BU1;\r\n                atomCount = assembly.getAtomCount(structure);\r\n                residueCount = assembly.getResidueCount(structure);\r\n                instanceCount = assembly.getInstanceCount();\r\n                component.setDefaultAssembly('BU1');\r\n            }\r\n            else {\r\n                atomCount = structure.getModelProxy(0).atomCount;\r\n                residueCount = structure.getModelProxy(0).residueCount;\r\n                instanceCount = 1;\r\n            }\r\n            let sizeScore = atomCount;\r\n            if (Mobile) {\r\n                sizeScore *= 4;\r\n            }\r\n            const backboneOnly = structure.atomStore.count / structure.residueStore.count < 2;\r\n            if (backboneOnly) {\r\n                sizeScore *= 10;\r\n            }\r\n            let colorScheme = 'chainname';\r\n            let colorScale = 'RdYlBu';\r\n            let colorReverse = false;\r\n            if (structure.getChainnameCount(new Selection('polymer and /0')) === 1) {\r\n                colorScheme = 'residueindex';\r\n                colorScale = 'spectral';\r\n                colorReverse = true;\r\n            }\r\n            if (Debug)\r\n                console.log(sizeScore, atomCount, instanceCount, backboneOnly);\r\n            if (residueCount / instanceCount < 4) {\r\n                component.addRepresentation('ball+stick', {\r\n                    colorScheme: 'element',\r\n                    radiusScale: 2.0,\r\n                    aspectRatio: 1.5,\r\n                    bondScale: 0.3,\r\n                    bondSpacing: 0.75,\r\n                    quality: 'auto'\r\n                });\r\n            }\r\n            else if ((instanceCount > 5 && sizeScore > 15000) || sizeScore > 700000) {\r\n                let scaleFactor = (Math.min(1.5, Math.max(0.1, 2000 / (sizeScore / instanceCount))));\r\n                if (backboneOnly)\r\n                    scaleFactor = Math.min(scaleFactor, 0.15);\r\n                component.addRepresentation('surface', {\r\n                    colorScheme, colorScale, colorReverse,\r\n                    sele: 'polymer',\r\n                    surfaceType: 'sas',\r\n                    probeRadius: 1.4,\r\n                    scaleFactor: scaleFactor,\r\n                    useWorker: false\r\n                });\r\n            }\r\n            else if (sizeScore > 250000) {\r\n                component.addRepresentation('backbone', {\r\n                    colorScheme, colorScale, colorReverse,\r\n                    lineOnly: true\r\n                });\r\n            }\r\n            else if (sizeScore > 100000) {\r\n                component.addRepresentation('backbone', {\r\n                    colorScheme, colorScale, colorReverse,\r\n                    quality: 'low',\r\n                    disableImpostor: true,\r\n                    radiusScale: 2.0\r\n                });\r\n            }\r\n            else if (sizeScore > 80000) {\r\n                component.addRepresentation('backbone', {\r\n                    colorScheme, colorScale, colorReverse,\r\n                    radiusScale: 2.0\r\n                });\r\n            }\r\n            else {\r\n                component.addRepresentation('cartoon', {\r\n                    colorScheme, colorScale, colorReverse,\r\n                    radiusScale: 0.7,\r\n                    aspectRatio: 5,\r\n                    quality: 'auto'\r\n                });\r\n                if (sizeScore < 50000) {\r\n                    component.addRepresentation('base', {\r\n                        colorScheme, colorScale, colorReverse,\r\n                        quality: 'auto'\r\n                    });\r\n                }\r\n                component.addRepresentation('ball+stick', {\r\n                    sele: 'ligand',\r\n                    colorScheme: 'element',\r\n                    radiusScale: 2.0,\r\n                    aspectRatio: 1.5,\r\n                    bondScale: 0.3,\r\n                    bondSpacing: 0.75,\r\n                    quality: 'auto'\r\n                });\r\n            }\r\n            // add frames as trajectory\r\n            if (component.structure.frames.length) {\r\n                component.addTrajectory();\r\n            }\r\n        }\r\n        else if (component instanceof SurfaceComponent) {\r\n            component.addRepresentation('surface');\r\n        }\r\n        else if (component instanceof VolumeComponent) {\r\n            component.addRepresentation('surface');\r\n        }\r\n        this.tasks.onZeroOnce(this.autoView, this);\r\n    }\r\n    /**\r\n     * Load a file onto the stage\r\n     *\r\n     * @example\r\n     * // load from URL\r\n     * stage.loadFile( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n     *\r\n     * @example\r\n     * // load binary data in CCP4 format via a Blob\r\n     * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n     * stage.loadFile( binaryBlob, { ext: \"ccp4\" } );\r\n     *\r\n     * @example\r\n     * // load string data in PDB format via a Blob\r\n     * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n     * stage.loadFile( stringBlob, { ext: \"pdb\" } );\r\n     *\r\n     * @example\r\n     * // load a File object\r\n     * stage.loadFile( file );\r\n     *\r\n     * @example\r\n     * // load from URL and add a 'ball+stick' representation with double/triple bonds\r\n     * stage.loadFile( \"http://files.rcsb.org/download/1crn.cif\" ).then( function( comp ){\r\n     *     comp.addRepresentation( \"ball+stick\", { multipleBond: true } );\r\n     * } );\r\n     *\r\n     * @param  {String|File|Blob} path - either a URL or an object containing the file data\r\n     * @param  {LoaderParameters} params - loading parameters\r\n     * @param  {Boolean} params.asTrajectory - load multi-model structures as a trajectory\r\n     * @return {Promise} A Promise object that resolves to a {@link StructureComponent},\r\n     *                   a {@link SurfaceComponent} or a {@link ScriptComponent} object,\r\n     *                   depending on the type of the loaded file.\r\n     */\r\n    loadFile(path, params = {}) {\r\n        const p = Object.assign({}, this.defaultFileParams, params);\r\n        const name = getFileInfo(path).name;\r\n        this.tasks.increment();\r\n        this.log(`loading file '${name}'`);\r\n        const onLoadFn = (object) => {\r\n            this.log(`loaded '${name}'`);\r\n            const component = this.addComponentFromObject(object, p);\r\n            if (p.defaultRepresentation) {\r\n                this.defaultFileRepresentation(component);\r\n            }\r\n            this.tasks.decrement();\r\n            return component;\r\n        };\r\n        const onErrorFn = (e) => {\r\n            this.tasks.decrement();\r\n            const errorMsg = `error loading file: '${e}'`;\r\n            this.log(errorMsg);\r\n            throw errorMsg; // throw so it can be catched\r\n        };\r\n        const ext = defaults(p.ext, getFileInfo(path).ext);\r\n        let promise;\r\n        if (ParserRegistry.isTrajectory(ext)) {\r\n            promise = Promise.reject(new Error(`loadFile: ext '${ext}' is a trajectory and must be loaded into a structure component`));\r\n        }\r\n        else {\r\n            promise = autoLoad(path, p);\r\n        }\r\n        return promise.then(onLoadFn, onErrorFn);\r\n    }\r\n    loadScript(path) {\r\n        const name = getFileInfo(path).name;\r\n        this.log(`loading script '${name}'`);\r\n        return autoLoad(path).then((script) => {\r\n            this.tasks.increment();\r\n            this.log(`running script '${name}'`);\r\n            script.run(this).then(() => {\r\n                this.tasks.decrement();\r\n                this.log(`finished script '${name}'`);\r\n            });\r\n            this.log(`called script '${name}'`);\r\n        }, (error) => {\r\n            this.tasks.decrement();\r\n            const errorMsg = `errored script '${name}' \"${error}\"`;\r\n            this.log(errorMsg);\r\n            throw errorMsg; // throw so it can be catched\r\n        });\r\n    }\r\n    /**\r\n     * Add the given component to the stage\r\n     * @param {Component} component - the component to add\r\n     * @return {undefined}\r\n     */\r\n    addComponent(component) {\r\n        if (!component) {\r\n            Log.warn('Stage.addComponent: no component given');\r\n            return;\r\n        }\r\n        this.compList.push(component);\r\n        this.signals.componentAdded.dispatch(component);\r\n    }\r\n    /**\r\n     * Create a component from the given object and add to the stage\r\n     */\r\n    addComponentFromObject(object, params = {}) {\r\n        const CompClass = ComponentRegistry.get(object.type);\r\n        if (CompClass) {\r\n            const component = new CompClass(this, object, params);\r\n            this.addComponent(component);\r\n            return component;\r\n        }\r\n        Log.warn('no component for object type', object.type);\r\n    }\r\n    /**\r\n     * Remove the given component\r\n     * @param  {Component} component - the component to remove\r\n     * @return {undefined}\r\n     */\r\n    removeComponent(component) {\r\n        const idx = this.compList.indexOf(component);\r\n        if (idx !== -1) {\r\n            this.compList.splice(idx, 1);\r\n            component.dispose();\r\n            this.signals.componentRemoved.dispatch(component);\r\n        }\r\n    }\r\n    /**\r\n     * Remove all components from the stage\r\n     */\r\n    removeAllComponents() {\r\n        this.compList.slice().forEach(o => this.removeComponent(o));\r\n    }\r\n    /**\r\n     * Handle any size-changes of the container element\r\n     * @return {undefined}\r\n     */\r\n    handleResize() {\r\n        this.viewer.handleResize();\r\n    }\r\n    /**\r\n     * Set width and height\r\n     * @param {String} width - CSS width value\r\n     * @param {String} height - CSS height value\r\n     * @return {undefined}\r\n     */\r\n    setSize(width, height) {\r\n        const container = this.viewer.container;\r\n        if (container !== document.body) {\r\n            if (width !== undefined)\r\n                container.style.width = width;\r\n            if (height !== undefined)\r\n                container.style.height = height;\r\n            this.handleResize();\r\n        }\r\n    }\r\n    /**\r\n     * Toggle fullscreen\r\n     * @param  {Element} [element] - document element to put into fullscreen,\r\n     *                               defaults to the viewer container\r\n     * @return {undefined}\r\n     */\r\n    toggleFullscreen(element) {\r\n        if (!document.fullscreenEnabled && !document.mozFullScreenEnabled &&\r\n            !document.webkitFullscreenEnabled && !document.msFullscreenEnabled) {\r\n            Log.log('fullscreen mode (currently) not possible');\r\n            return;\r\n        }\r\n        const self = this;\r\n        element = element || this.viewer.container;\r\n        this.lastFullscreenElement = element;\r\n        //\r\n        function getFullscreenElement() {\r\n            return document.fullscreenElement || document.mozFullScreenElement ||\r\n                document.webkitFullscreenElement || document.msFullscreenElement;\r\n        }\r\n        function resizeElement() {\r\n            if (!getFullscreenElement() && self.lastFullscreenElement) {\r\n                const element = self.lastFullscreenElement;\r\n                element.style.width = element.dataset.normalWidth || '';\r\n                element.style.height = element.dataset.normalHeight || '';\r\n                document.removeEventListener('fullscreenchange', resizeElement);\r\n                document.removeEventListener('mozfullscreenchange', resizeElement);\r\n                document.removeEventListener('webkitfullscreenchange', resizeElement);\r\n                document.removeEventListener('MSFullscreenChange', resizeElement);\r\n                self.handleResize();\r\n                self.signals.fullscreenChanged.dispatch(false);\r\n            }\r\n        }\r\n        //\r\n        if (!getFullscreenElement()) {\r\n            element.dataset.normalWidth = element.style.width || '';\r\n            element.dataset.normalHeight = element.style.height || '';\r\n            element.style.width = window.screen.width + 'px';\r\n            element.style.height = window.screen.height + 'px';\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n            }\r\n            else if (element.msRequestFullscreen) {\r\n                element.msRequestFullscreen();\r\n            }\r\n            else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            }\r\n            else if (element.webkitRequestFullscreen) {\r\n                element.webkitRequestFullscreen();\r\n            }\r\n            document.addEventListener('fullscreenchange', resizeElement);\r\n            document.addEventListener('mozfullscreenchange', resizeElement);\r\n            document.addEventListener('webkitfullscreenchange', resizeElement);\r\n            document.addEventListener('MSFullscreenChange', resizeElement);\r\n            this.handleResize();\r\n            this.signals.fullscreenChanged.dispatch(true);\r\n            // workaround for Safari\r\n            setTimeout(function () { self.handleResize(); }, 100);\r\n        }\r\n        else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n            else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Set spin\r\n     * @param {Boolean} flag - if true start rocking and stop spinning\r\n     * @return {undefined}\r\n     */\r\n    setSpin(flag) {\r\n        if (flag) {\r\n            this.spinAnimation.resume(true);\r\n            this.rockAnimation.pause(true);\r\n        }\r\n        else {\r\n            this.spinAnimation.pause(true);\r\n        }\r\n    }\r\n    /**\r\n     * Set rock\r\n     * @param {Boolean} flag - if true start rocking and stop spinning\r\n     * @return {undefined}\r\n     */\r\n    setRock(flag) {\r\n        if (flag) {\r\n            this.rockAnimation.resume(true);\r\n            this.spinAnimation.pause(true);\r\n        }\r\n        else {\r\n            this.rockAnimation.pause(true);\r\n        }\r\n    }\r\n    /**\r\n     * Toggle spin\r\n     * @return {undefined}\r\n     */\r\n    toggleSpin() {\r\n        this.setSpin(this.spinAnimation.paused);\r\n    }\r\n    /**\r\n     * Toggle rock\r\n     * @return {undefined}\r\n     */\r\n    toggleRock() {\r\n        this.setRock(this.rockAnimation.paused);\r\n    }\r\n    /**\r\n     * Get the current focus from the current clipNear value expressed\r\n     * as 0 (full view) to 100 (completely clipped)\r\n     * Negative values may be returned in some cases.\r\n     *\r\n     * In 'camera' clipMode focus isn't applicable, this method returns 0.0\r\n     *\r\n     * @return {number} focus\r\n     */\r\n    getFocus() {\r\n        const p = this.parameters;\r\n        if (p.clipMode !== 'scene')\r\n            return 0.0;\r\n        let clipNear = p.clipNear;\r\n        if (p.clipScale === 'absolute') {\r\n            clipNear = this.viewer.absoluteToRelative(clipNear);\r\n        }\r\n        return clipNear * 2;\r\n    }\r\n    /**\r\n     * Set the focus, a value of 0 sets clipping planes to show full scene,\r\n     * while a value of 100 will compltely clip the scene.\r\n     *\r\n     * @param {number} value focus\r\n     */\r\n    setFocus(value) {\r\n        if (this.parameters.clipMode !== 'scene')\r\n            return;\r\n        let clipNear;\r\n        let clipFar;\r\n        let fogNear;\r\n        let fogFar;\r\n        if (this.parameters.clipScale === 'relative') {\r\n            clipNear = clamp(value / 2.0, 0.0, 49.9);\r\n            clipFar = 100 - clipNear;\r\n            fogNear = 50;\r\n            fogFar = pclamp(2 * clipFar - 50);\r\n        }\r\n        else {\r\n            clipNear = this.viewer.relativeToAbsolute(value / 2.0);\r\n            clipFar = clipNear;\r\n            fogNear = 0;\r\n            fogFar = 2 * clipFar;\r\n        }\r\n        this.setParameters({ clipNear, clipFar, fogNear, fogFar });\r\n    }\r\n    getZoomForBox(boundingBox) {\r\n        const bbSize = boundingBox.getSize(tmpZoomVector);\r\n        const maxSize = Math.max(bbSize.x, bbSize.y, bbSize.z);\r\n        const minSize = Math.min(bbSize.x, bbSize.y, bbSize.z);\r\n        let distance = maxSize + Math.sqrt(minSize);\r\n        const fov = degToRad(this.viewer.perspectiveCamera.fov);\r\n        const width = this.viewer.width;\r\n        const height = this.viewer.height;\r\n        const aspect = width / height;\r\n        const aspectFactor = (height < width ? 1 : aspect);\r\n        distance = Math.abs(((distance * 0.5) / aspectFactor) / Math.sin(fov / 2));\r\n        distance += this.parameters.clipDist;\r\n        return -distance;\r\n    }\r\n    getBox() {\r\n        return this.viewer.boundingBox;\r\n    }\r\n    getZoom() {\r\n        return this.getZoomForBox(this.getBox());\r\n    }\r\n    getCenter(optionalTarget) {\r\n        return this.getBox().getCenter(optionalTarget || new Vector3());\r\n    }\r\n    /**\r\n     * Add a zoom and a move animation with automatic targets\r\n     * @param  {Integer} duration - animation time in milliseconds\r\n     * @return {undefined}\r\n     */\r\n    autoView(duration) {\r\n        this.animationControls.zoomMove(this.getCenter(), this.getZoom(), defaults(duration, 0));\r\n    }\r\n    /**\r\n     * Make image from what is shown in a viewer canvas\r\n     */\r\n    makeImage(params = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            this.tasks.onZeroOnce(() => {\r\n                this.tasks.increment();\r\n                this.viewer.makeImage(params).then(blob => {\r\n                    this.tasks.decrement();\r\n                    resolve(blob);\r\n                }).catch(e => {\r\n                    this.tasks.decrement();\r\n                    reject(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    setImpostor(value) {\r\n        this.parameters.impostor = value;\r\n        const types = [\r\n            'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n            'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n            'dot'\r\n        ];\r\n        this.eachRepresentation(function (reprElem) {\r\n            if (!types.includes(reprElem.getType()))\r\n                return;\r\n            const p = reprElem.getParameters(); // TODO\r\n            p.disableImpostor = !value;\r\n            reprElem.build(p);\r\n        });\r\n    }\r\n    setQuality(value) {\r\n        this.parameters.quality = value;\r\n        const types = [\r\n            'tube', 'cartoon', 'ribbon', 'trace', 'rope'\r\n        ];\r\n        const impostorTypes = [\r\n            'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n            'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n            'dot'\r\n        ];\r\n        this.eachRepresentation(function (repr) {\r\n            const p = repr.getParameters(); // TODO\r\n            if (!types.includes(repr.getType())) {\r\n                if (!impostorTypes.includes(repr.getType()))\r\n                    return;\r\n                if (!p.disableImpostor) {\r\n                    repr.repr.quality = value; // TODO\r\n                    return;\r\n                }\r\n            }\r\n            p.quality = value;\r\n            repr.build(p);\r\n        });\r\n    }\r\n    /**\r\n     * Iterator over each component and executing the callback\r\n     */\r\n    eachComponent(callback, type) {\r\n        this.compList.slice().forEach(comp => {\r\n            if (type === undefined || type === comp.type)\r\n                callback(comp);\r\n        });\r\n    }\r\n    /**\r\n     * Iterator over each representation and executing the callback\r\n     */\r\n    eachRepresentation(callback, type) {\r\n        this.eachComponent(comp => {\r\n            comp.reprList.slice().forEach(reprElem => {\r\n                if (type === undefined || type === reprElem.getType())\r\n                    callback(reprElem, comp);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Get collection of components by name\r\n     */\r\n    getComponentsByName(name) {\r\n        const compList = [];\r\n        this.eachComponent(comp => {\r\n            if (name === undefined || matchName(name, comp))\r\n                compList.push(comp);\r\n        });\r\n        return new ComponentCollection(compList);\r\n    }\r\n    /**\r\n     * Get collection of components by object\r\n     */\r\n    getComponentsByObject(object) {\r\n        const compList = [];\r\n        this.eachComponent(comp => {\r\n            if (comp.object === object)\r\n                compList.push(comp);\r\n        });\r\n        return new ComponentCollection(compList);\r\n    }\r\n    /**\r\n     * Get collection of representations by name\r\n     */\r\n    getRepresentationsByName(name) {\r\n        const reprList = [];\r\n        this.eachRepresentation((repr, comp) => {\r\n            if (name === undefined || matchName(name, repr))\r\n                reprList.push(repr);\r\n        });\r\n        return new RepresentationCollection(reprList);\r\n    }\r\n    measureClear() {\r\n        this.eachComponent((sc) => sc.measureClear(), 'structure');\r\n    }\r\n    measureUpdate() {\r\n        this.eachComponent((sc) => sc.measureUpdate(), 'structure');\r\n    }\r\n    /**\r\n     * Cleanup when disposing of a stage object\r\n     */\r\n    dispose() {\r\n        this.tasks.dispose();\r\n        this.viewer.dispose();\r\n    }\r\n}\r\nexport default Stage;\r\n//# sourceMappingURL=stage.js.map","/**\r\n * @file Shape Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ComponentRegistry } from '../globals';\r\nimport Component from './component';\r\n/**\r\n * Component wrapping a {@link Shape} object\r\n *\r\n * @example\r\n * // get a shape component by adding a shape object to the stage\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * shape.addSphere( [ 0, 0, 0 ], [ 1, 0, 0 ], 1.5 );\r\n * var shapeComponent = stage.addComponentFromObject( shape );\r\n * shapeComponent.addRepresentation( \"buffer\" );\r\n */\r\nclass ShapeComponent extends Component {\r\n    constructor(stage, shape, params = {}) {\r\n        super(stage, shape, Object.assign({ name: shape.name }, params));\r\n        this.shape = shape;\r\n    }\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n    get type() { return 'shape'; }\r\n    /**\r\n     * Add a new shape representation to the component\r\n     * @param {String} type - the name of the representation, one of:\r\n     *                        buffer.\r\n     * @param {BufferRepresentationParameters} params - representation parameters\r\n     * @return {RepresentationComponent} the created representation wrapped into\r\n     *                                   a representation component object\r\n     */\r\n    addRepresentation(type, params = {}) {\r\n        return this._addRepresentation(type, this.shape, params);\r\n    }\r\n    getBoxUntransformed() {\r\n        return this.shape.boundingBox;\r\n    }\r\n    getCenterUntransformed() {\r\n        return this.shape.center;\r\n    }\r\n    dispose() {\r\n        this.shape.dispose();\r\n        super.dispose();\r\n    }\r\n}\r\nComponentRegistry.add('shape', ShapeComponent);\r\nexport default ShapeComponent;\r\n//# sourceMappingURL=shape-component.js.map","/**\r\n * @file Atomindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by atom index. The {@link AtomProxy.index} property is used for coloring.\r\n * Each {@link ModelProxy} of a {@link Structure} is colored seperately. The\r\n * `params.domain` parameter is ignored.\r\n *\r\n * __Name:__ _atomindex_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"atomindex\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass AtomindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'rainbow';\r\n            this.parameters.reverse = defaults(params.reverse, true);\r\n        }\r\n        this.scalePerModel = {};\r\n        params.structure.eachModel((mp) => {\r\n            this.parameters.domain = [mp.atomOffset, mp.atomEnd];\r\n            this.scalePerModel[mp.index] = this.getScale(); // TODO\r\n        });\r\n    }\r\n    /**\r\n     * get color for an atom\r\n     * @param  {AtomProxy} atom - atom to get color for\r\n     * @return {Integer} hex atom color\r\n     */\r\n    atomColor(atom) {\r\n        return this.scalePerModel[atom.modelIndex](atom.index);\r\n    }\r\n}\r\nColormakerRegistry.add('atomindex', AtomindexColormaker); // TODO\r\nexport default AtomindexColormaker;\r\n//# sourceMappingURL=atomindex-colormaker.js.map","/**\r\n * @file Bfactor Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport Selection from '../selection/selection';\r\n/**\r\n * Color by b-factor. The {@link AtomProxy.bfactor} property is used for coloring.\r\n * By default the min and max b-factor values are used for the scale`s domain.\r\n *\r\n * __Name:__ _bfactor_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"bfactor\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BfactorColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'OrRd';\r\n        }\r\n        if (!params.domain) {\r\n            let selection;\r\n            let min = Infinity;\r\n            let max = -Infinity;\r\n            if (params.sele) {\r\n                selection = new Selection(params.sele);\r\n            }\r\n            params.structure.eachAtom(function (a) {\r\n                const bfactor = a.bfactor;\r\n                min = Math.min(min, bfactor);\r\n                max = Math.max(max, bfactor);\r\n            }, selection);\r\n            this.parameters.domain = [min, max];\r\n        }\r\n        this.bfactorScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.bfactorScale(a.bfactor);\r\n    }\r\n}\r\nColormakerRegistry.add('bfactor', BfactorColormaker);\r\nexport default BfactorColormaker;\r\n//# sourceMappingURL=bfactor-colormaker.js.map","/**\r\n * @file Chainid Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by chain id\r\n */\r\nclass ChainidColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.chainidDictPerModel = {};\r\n        this.scalePerModel = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'Spectral';\r\n        }\r\n        params.structure.eachModel((mp) => {\r\n            let i = 0;\r\n            const chainidDict = {};\r\n            mp.eachChain(function (cp) {\r\n                if (chainidDict[cp.chainid] === undefined) {\r\n                    chainidDict[cp.chainid] = i;\r\n                    i += 1;\r\n                }\r\n            });\r\n            this.parameters.domain = [0, i - 1];\r\n            this.chainidDictPerModel[mp.index] = chainidDict;\r\n            this.scalePerModel[mp.index] = this.getScale();\r\n        });\r\n    }\r\n    atomColor(a) {\r\n        const chainidDict = this.chainidDictPerModel[a.modelIndex];\r\n        return this.scalePerModel[a.modelIndex](chainidDict[a.chainid]);\r\n    }\r\n}\r\nColormakerRegistry.add('chainid', ChainidColormaker);\r\nexport default ChainidColormaker;\r\n//# sourceMappingURL=chainid-colormaker.js.map","/**\r\n * @file Chainindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by chain index\r\n */\r\nclass ChainindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.scalePerModel = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'Spectral';\r\n        }\r\n        params.structure.eachModel((mp) => {\r\n            this.parameters.domain = [mp.chainOffset, mp.chainEnd];\r\n            this.scalePerModel[mp.index] = this.getScale();\r\n        });\r\n    }\r\n    atomColor(a) {\r\n        return this.scalePerModel[a.modelIndex](a.chainIndex);\r\n    }\r\n}\r\nColormakerRegistry.add('chainindex', ChainindexColormaker);\r\nexport default ChainindexColormaker;\r\n//# sourceMappingURL=chainindex-colormaker.js.map","/**\r\n * @file Chainname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by chain name\r\n */\r\nclass ChainnameColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.chainnameDictPerModel = {};\r\n        this.scalePerModel = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'Spectral';\r\n        }\r\n        params.structure.eachModel((mp) => {\r\n            let i = 0;\r\n            const chainnameDict = {};\r\n            mp.eachChain(function (cp) {\r\n                if (chainnameDict[cp.chainname] === undefined) {\r\n                    chainnameDict[cp.chainname] = i;\r\n                    i += 1;\r\n                }\r\n            });\r\n            this.parameters.domain = [0, i - 1];\r\n            this.chainnameDictPerModel[mp.index] = chainnameDict;\r\n            this.scalePerModel[mp.index] = this.getScale();\r\n        });\r\n    }\r\n    atomColor(a) {\r\n        const chainnameDict = this.chainnameDictPerModel[a.modelIndex];\r\n        return this.scalePerModel[a.modelIndex](chainnameDict[a.chainname]);\r\n    }\r\n}\r\nColormakerRegistry.add('chainname', ChainnameColormaker);\r\nexport default ChainnameColormaker;\r\n//# sourceMappingURL=chainname-colormaker.js.map","/**\r\n * @file Densityfit Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by validation density fit\r\n */\r\nclass DensityfitColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.rsrzDict = {};\r\n        this.rsccDict = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'RdYlBu';\r\n        }\r\n        this.rsrzScale = this.getScale({ domain: [2, 0] });\r\n        this.rsccScale = this.getScale({ domain: [0.678, 1.0] });\r\n        const val = params.structure.validation;\r\n        if (val) {\r\n            this.rsrzDict = val.rsrzDict;\r\n            this.rsccDict = val.rsccDict;\r\n        }\r\n    }\r\n    atomColor(atom) {\r\n        let sele = atom.resno + '';\r\n        if (atom.inscode)\r\n            sele += '^' + atom.inscode;\r\n        if (atom.chainname)\r\n            sele += ':' + atom.chainname;\r\n        sele += '/' + atom.modelIndex;\r\n        const rsrz = this.rsrzDict[sele];\r\n        if (rsrz !== undefined) {\r\n            return this.rsrzScale(rsrz);\r\n        }\r\n        const rscc = this.rsccDict[sele];\r\n        if (rscc !== undefined) {\r\n            return this.rsccScale(rscc);\r\n        }\r\n        return 0x909090;\r\n    }\r\n}\r\nColormakerRegistry.add('densityfit', DensityfitColormaker);\r\nexport default DensityfitColormaker;\r\n//# sourceMappingURL=densityfit-colormaker.js.map","/**\r\n * @file Atomindex Colormaker\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport SpatialHash from '../geometry/spatial-hash';\r\n// from CHARMM\r\nconst partialCharges = {\r\n    'ARG': {\r\n        'CD': 0.1,\r\n        'CZ': 0.5,\r\n        'NE': -0.1\r\n    },\r\n    'ASN': {\r\n        'CG': 0.55,\r\n        'OD1': -0.55\r\n    },\r\n    'ASP': {\r\n        'CB': -0.16,\r\n        'CG': 0.36,\r\n        'OD1': -0.6,\r\n        'OD2': -0.6\r\n    },\r\n    'CYS': {\r\n        'CB': 0.19,\r\n        'SG': -0.19\r\n    },\r\n    'GLN': {\r\n        'CD': 0.55,\r\n        'OE1': -0.55\r\n    },\r\n    'GLU': {\r\n        'CD': 0.36,\r\n        'CG': -0.16,\r\n        'OE1': -0.6,\r\n        'OE2': -0.6\r\n    },\r\n    'HIS': {\r\n        'CB': 0.1,\r\n        'CD2': 0.2,\r\n        'CE1': 0.45,\r\n        'CG': 0.15,\r\n        'ND1': 0.05,\r\n        'NE2': 0.05\r\n    },\r\n    'LYS': {\r\n        'CE': 0.25,\r\n        'NZ': 0.75\r\n    },\r\n    'MET': {\r\n        'CE': 0.06,\r\n        'CG': 0.06,\r\n        'SD': -0.12\r\n    },\r\n    'PTR': {\r\n        'C': 0.55,\r\n        'CA': 0.1,\r\n        'CZ': 0.25,\r\n        'N': -0.35,\r\n        'O': -0.55,\r\n        'O1P': -0.85,\r\n        'O2P': -0.85,\r\n        'O3P': -0.85,\r\n        'OG1': -1.1,\r\n        'P': 1.4\r\n    },\r\n    'SEP': {\r\n        'C': 0.55,\r\n        'CA': 0.1,\r\n        'CB': 0.25,\r\n        'N': -0.35,\r\n        'O': -0.55,\r\n        'O1P': -0.85,\r\n        'O2P': -0.85,\r\n        'O3P': -0.85,\r\n        'OG1': -1.1,\r\n        'P': 1.4\r\n    },\r\n    'SER': {\r\n        'CB': 0.25,\r\n        'OG': -0.25\r\n    },\r\n    'THR': {\r\n        'CB': 0.25,\r\n        'OG1': -0.25\r\n    },\r\n    'TPO': {\r\n        'C': 0.55,\r\n        'CA': 0.1,\r\n        'CB': 0.25,\r\n        'N': -0.35,\r\n        'O': -0.55,\r\n        'OG1': -1.1,\r\n        'O1P': -0.85,\r\n        'O2P': -0.85,\r\n        'O3P': -0.85,\r\n        'P': 1.4\r\n    },\r\n    'TRP': {\r\n        'CD1': 0.06,\r\n        'CD2': 0.1,\r\n        'CE2': -0.04,\r\n        'CE3': -0.03,\r\n        'CG': -0.03,\r\n        'NE1': -0.06\r\n    },\r\n    'TYR': {\r\n        'CZ': 0.25,\r\n        'OH': -0.25\r\n    },\r\n    'backbone': {\r\n        'C': 0.55,\r\n        'O': -0.55,\r\n        'N': -0.35,\r\n        'CA': 0.1\r\n    }\r\n};\r\nconst maxRadius = 12.0;\r\nconst nHBondDistance = 1.04;\r\nconst nHCharge = 0.25;\r\n/**\r\n * Populates position vector with location of implicit or explicit H\r\n * Returns position or undefined if not able to locate H\r\n *\r\n * @param {AtomProxy} ap - the nitrogen atom\r\n * @param {Vector3} [position] - optional target\r\n * @return {Vectors|undefined} the hydrogen atom position\r\n */\r\nfunction backboneNHPosition(ap, position = new Vector3()) {\r\n    let h = false;\r\n    let ca = false;\r\n    let c = false;\r\n    position.set(2 * ap.x, 2 * ap.y, 2 * ap.z);\r\n    ap.eachBondedAtom(function (a2) {\r\n        // Any time we detect H, reset position and skip\r\n        // future tests\r\n        if (h)\r\n            return;\r\n        if (a2.atomname === 'H') {\r\n            position.set(a2.x, a2.y, a2.z);\r\n            h = true;\r\n            return;\r\n        }\r\n        if (!ca && a2.atomname === 'CA') {\r\n            position.sub(a2); // TODO\r\n            ca = true;\r\n        }\r\n        else if (!c && a2.atomname === 'C') {\r\n            c = true;\r\n            position.sub(a2); // TODO\r\n        }\r\n    });\r\n    if (h) {\r\n        return position;\r\n    }\r\n    if (ca && c) {\r\n        position.normalize();\r\n        position.multiplyScalar(nHBondDistance);\r\n        position.add(ap);\r\n        return position;\r\n    }\r\n}\r\n/**\r\n * Takes an array of Vector3 objects and\r\n * converts to an object that looks like an AtomStore\r\n *\r\n * @param {Vector3[]} positions - array of positions\r\n * @return {Object} AtomStore-like object\r\n */\r\nfunction buildStoreLike(positions) {\r\n    const n = positions.length;\r\n    const x = new Float32Array(n);\r\n    const y = new Float32Array(n);\r\n    const z = new Float32Array(n);\r\n    for (let i = 0; i < positions.length; i++) {\r\n        const v = positions[i];\r\n        x[i] = v.x;\r\n        y[i] = v.y;\r\n        z[i] = v.z;\r\n    }\r\n    return { x: x, y: y, z: z, count: n };\r\n}\r\nfunction chargeForAtom(a) {\r\n    if (a.partialCharge !== null)\r\n        return a.partialCharge;\r\n    if (!a.isProtein()) {\r\n        return 0.0;\r\n    }\r\n    return ((partialCharges[a.resname] &&\r\n        partialCharges[a.resname][a.atomname]) ||\r\n        partialCharges['backbone'][a.atomname] || 0.0);\r\n}\r\n/**\r\n * Color a surface by electrostatic charge. This is a highly approximate\r\n * calculation! The partial charges are CHARMM with hydrogens added to heavy\r\n * atoms and hydrogen positions generated for amides.\r\n *\r\n * __Name:__ _electrostatic_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3dqb\" ).then( function( o ){\r\n *     o.addRepresentation( \"surface\", { colorScheme: \"electrostatic\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass ElectrostaticColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.delta = new Vector3();\r\n        this.hCharges = [];\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'rwb';\r\n        }\r\n        if (!params.domain) {\r\n            this.parameters.domain = [-50, 50];\r\n        }\r\n        this.scale = this.getScale();\r\n        this.charges = new Float32Array(params.structure.atomCount);\r\n        const hPositions = [];\r\n        params.structure.eachAtom((ap) => {\r\n            this.charges[ap.index] = chargeForAtom(ap) * ap.occupancy;\r\n            if (ap.atomname === 'N') {\r\n                // In the specific case where N forms two bonds to\r\n                // CA and C, try and place a dummy hydrogen\r\n                if (ap.bondCount >= 3)\r\n                    return; // Skip if 3 bonds already (e.g. PRO)\r\n                if (ap.bondToElementCount(1))\r\n                    return; // Skip if any H specificed\r\n                const hPos = backboneNHPosition(ap);\r\n                if (hPos !== undefined) {\r\n                    hPositions.push(hPos);\r\n                    this.hCharges.push(nHCharge * ap.occupancy);\r\n                }\r\n            }\r\n        });\r\n        const bbox = params.structure.getBoundingBox();\r\n        bbox.expandByScalar(nHBondDistance); // Worst case\r\n        // SpatialHash requires x,y,z and count\r\n        this.hStore = buildStoreLike(hPositions);\r\n        this.hHash = new SpatialHash(this.hStore, bbox); // TODO\r\n        this.hash = new SpatialHash(params.structure.atomStore, bbox);\r\n    }\r\n    positionColor(v) {\r\n        const charges = this.charges;\r\n        const hCharges = this.hCharges;\r\n        let p = 0.0;\r\n        this.hash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\r\n            const charge = charges[atomIndex];\r\n            if (charge === 0.0)\r\n                return;\r\n            p += charge / dSq;\r\n        });\r\n        this.hHash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\r\n            const charge = hCharges[atomIndex];\r\n            if (charge === 0.0)\r\n                return;\r\n            p += charge / dSq;\r\n        });\r\n        return this.scale(p * 332); // 332 to convert to kcal/mol\r\n    }\r\n}\r\nColormakerRegistry.add('electrostatic', ElectrostaticColormaker);\r\nexport default ElectrostaticColormaker;\r\n//# sourceMappingURL=electrostatic-colormaker.js.map","/**\r\n * @file Element Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Colormaker from './colormaker';\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\r\nconst ElementColors = {\r\n    'H': 0xFFFFFF,\r\n    'HE': 0xD9FFFF,\r\n    'LI': 0xCC80FF,\r\n    'BE': 0xC2FF00,\r\n    'B': 0xFFB5B5,\r\n    'C': 0x909090,\r\n    'N': 0x3050F8,\r\n    'O': 0xFF0D0D,\r\n    'F': 0x90E050,\r\n    'NE': 0xB3E3F5,\r\n    'NA': 0xAB5CF2,\r\n    'MG': 0x8AFF00,\r\n    'AL': 0xBFA6A6,\r\n    'SI': 0xF0C8A0,\r\n    'P': 0xFF8000,\r\n    'S': 0xFFFF30,\r\n    'CL': 0x1FF01F,\r\n    'AR': 0x80D1E3,\r\n    'K': 0x8F40D4,\r\n    'CA': 0x3DFF00,\r\n    'SC': 0xE6E6E6,\r\n    'TI': 0xBFC2C7,\r\n    'V': 0xA6A6AB,\r\n    'CR': 0x8A99C7,\r\n    'MN': 0x9C7AC7,\r\n    'FE': 0xE06633,\r\n    'CO': 0xF090A0,\r\n    'NI': 0x50D050,\r\n    'CU': 0xC88033,\r\n    'ZN': 0x7D80B0,\r\n    'GA': 0xC28F8F,\r\n    'GE': 0x668F8F,\r\n    'AS': 0xBD80E3,\r\n    'SE': 0xFFA100,\r\n    'BR': 0xA62929,\r\n    'KR': 0x5CB8D1,\r\n    'RB': 0x702EB0,\r\n    'SR': 0x00FF00,\r\n    'Y': 0x94FFFF,\r\n    'ZR': 0x94E0E0,\r\n    'NB': 0x73C2C9,\r\n    'MO': 0x54B5B5,\r\n    'TC': 0x3B9E9E,\r\n    'RU': 0x248F8F,\r\n    'RH': 0x0A7D8C,\r\n    'PD': 0x006985,\r\n    'AG': 0xC0C0C0,\r\n    'CD': 0xFFD98F,\r\n    'IN': 0xA67573,\r\n    'SN': 0x668080,\r\n    'SB': 0x9E63B5,\r\n    'TE': 0xD47A00,\r\n    'I': 0x940094,\r\n    'XE': 0x940094,\r\n    'CS': 0x57178F,\r\n    'BA': 0x00C900,\r\n    'LA': 0x70D4FF,\r\n    'CE': 0xFFFFC7,\r\n    'PR': 0xD9FFC7,\r\n    'ND': 0xC7FFC7,\r\n    'PM': 0xA3FFC7,\r\n    'SM': 0x8FFFC7,\r\n    'EU': 0x61FFC7,\r\n    'GD': 0x45FFC7,\r\n    'TB': 0x30FFC7,\r\n    'DY': 0x1FFFC7,\r\n    'HO': 0x00FF9C,\r\n    'ER': 0x00E675,\r\n    'TM': 0x00D452,\r\n    'YB': 0x00BF38,\r\n    'LU': 0x00AB24,\r\n    'HF': 0x4DC2FF,\r\n    'TA': 0x4DA6FF,\r\n    'W': 0x2194D6,\r\n    'RE': 0x267DAB,\r\n    'OS': 0x266696,\r\n    'IR': 0x175487,\r\n    'PT': 0xD0D0E0,\r\n    'AU': 0xFFD123,\r\n    'HG': 0xB8B8D0,\r\n    'TL': 0xA6544D,\r\n    'PB': 0x575961,\r\n    'BI': 0x9E4FB5,\r\n    'PO': 0xAB5C00,\r\n    'AT': 0x754F45,\r\n    'RN': 0x428296,\r\n    'FR': 0x420066,\r\n    'RA': 0x007D00,\r\n    'AC': 0x70ABFA,\r\n    'TH': 0x00BAFF,\r\n    'PA': 0x00A1FF,\r\n    'U': 0x008FFF,\r\n    'NP': 0x0080FF,\r\n    'PU': 0x006BFF,\r\n    'AM': 0x545CF2,\r\n    'CM': 0x785CE3,\r\n    'BK': 0x8A4FE3,\r\n    'CF': 0xA136D4,\r\n    'ES': 0xB31FD4,\r\n    'FM': 0xB31FBA,\r\n    'MD': 0xB30DA6,\r\n    'NO': 0xBD0D87,\r\n    'LR': 0xC70066,\r\n    'RF': 0xCC0059,\r\n    'DB': 0xD1004F,\r\n    'SG': 0xD90045,\r\n    'BH': 0xE00038,\r\n    'HS': 0xE6002E,\r\n    'MT': 0xEB0026,\r\n    'DS': 0xFFFFFF,\r\n    'RG': 0xFFFFFF,\r\n    'CN': 0xFFFFFF,\r\n    'UUT': 0xFFFFFF,\r\n    'FL': 0xFFFFFF,\r\n    'UUP': 0xFFFFFF,\r\n    'LV': 0xFFFFFF,\r\n    'UUH': 0xFFFFFF,\r\n    'D': 0xFFFFC0,\r\n    'T': 0xFFFFA0\r\n};\r\nconst DefaultElementColor = 0xFFFFFF;\r\n/**\r\n * Color by element\r\n */\r\nclass ElementColormaker extends Colormaker {\r\n    constructor(params) {\r\n        params.value = defaults(params.value, ElementColors.C);\r\n        super(params);\r\n    }\r\n    atomColor(a) {\r\n        const element = a.element;\r\n        if (element === 'C') {\r\n            return this.parameters.value;\r\n        }\r\n        else {\r\n            return ElementColors[element] || DefaultElementColor;\r\n        }\r\n    }\r\n}\r\nColormakerRegistry.add('element', ElementColormaker);\r\nexport default ElementColormaker;\r\n//# sourceMappingURL=element-colormaker.js.map","/**\r\n * @file Entityindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by entity index\r\n */\r\nclass EntityindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'Spectral';\r\n        }\r\n        if (!params.domain) {\r\n            this.parameters.domain = [0, params.structure.entityList.length - 1];\r\n        }\r\n        this.entityindexScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.entityindexScale(a.entityIndex);\r\n    }\r\n}\r\nColormakerRegistry.add('entityindex', EntityindexColormaker);\r\nexport default EntityindexColormaker;\r\n//# sourceMappingURL=entityindex-colormaker.js.map","/**\r\n * @file Entitytype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport { PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity } from '../structure/structure-constants';\r\n/**\r\n * Color by entity type\r\n */\r\nclass EntitytypeColormaker extends Colormaker {\r\n    atomColor(a) {\r\n        const e = a.entity;\r\n        const et = e ? e.entityType : undefined;\r\n        switch (et) {\r\n            case PolymerEntity:\r\n                return 0x7fc97f;\r\n            case NonPolymerEntity:\r\n                return 0xfdc086;\r\n            case MacrolideEntity:\r\n                return 0xbeaed4;\r\n            case WaterEntity:\r\n                return 0x386cb0;\r\n            default:\r\n                return 0xffff99;\r\n        }\r\n    }\r\n}\r\nColormakerRegistry.add('entitytype', EntitytypeColormaker);\r\nexport default EntitytypeColormaker;\r\n//# sourceMappingURL=entitytype-colormaker.js.map","/**\r\n * @file Geoquality Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport { countSetBits } from '../math/math-utils';\r\n/**\r\n * Color by validation gometry quality\r\n */\r\nclass GeoqualityColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.geoAtomDict = {};\r\n        this.geoDict = {};\r\n        const val = params.structure.validation;\r\n        if (val) {\r\n            this.geoAtomDict = val.geoAtomDict;\r\n            this.geoDict = val.geoDict;\r\n        }\r\n    }\r\n    atomColor(atom) {\r\n        let sele = atom.resno + '';\r\n        if (atom.inscode)\r\n            sele += '^' + atom.inscode;\r\n        if (atom.chainname)\r\n            sele += ':' + atom.chainname;\r\n        sele += '/' + atom.modelIndex;\r\n        let geoProblemCount;\r\n        const geoAtom = this.geoAtomDict[sele];\r\n        if (geoAtom !== undefined) {\r\n            const atomProblems = geoAtom[atom.atomname] || 0;\r\n            geoProblemCount = countSetBits(atomProblems);\r\n        }\r\n        else {\r\n            geoProblemCount = this.geoDict[sele] || 0;\r\n        }\r\n        if (geoProblemCount === 0) {\r\n            return 0x2166ac;\r\n        }\r\n        else if (geoProblemCount === 1) {\r\n            return 0xfee08b;\r\n        }\r\n        else if (geoProblemCount === 2) {\r\n            return 0xf46d43;\r\n        }\r\n        else if (geoProblemCount >= 3) {\r\n            return 0xa50026;\r\n        }\r\n        return 0x909090;\r\n    }\r\n}\r\nColormakerRegistry.add('geoquality', GeoqualityColormaker);\r\nexport default GeoqualityColormaker;\r\n//# sourceMappingURL=geoquality-colormaker.js.map","/**\r\n * @file Hydrophobicity Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport { ResidueHydrophobicity, DefaultResidueHydrophobicity } from '../structure/structure-constants';\r\n/**\r\n * Color by hydrophobicity\r\n */\r\nclass HydrophobicityColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.resHF = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'RdYlGn';\r\n        }\r\n        const idx = 0; // 0: DGwif, 1: DGwoct, 2: Oct-IF\r\n        for (const name in ResidueHydrophobicity) {\r\n            this.resHF[name] = ResidueHydrophobicity[name][idx];\r\n        }\r\n        this.defaultResidueHydrophobicity = DefaultResidueHydrophobicity[idx];\r\n        if (!params.domain) {\r\n            let min = Infinity;\r\n            let max = -Infinity;\r\n            for (const name in this.resHF) {\r\n                const val = this.resHF[name];\r\n                min = Math.min(min, val);\r\n                max = Math.max(max, val);\r\n            }\r\n            this.parameters.domain = [min, 0, max];\r\n        }\r\n        this.hfScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.hfScale(this.resHF[a.resname] || this.defaultResidueHydrophobicity);\r\n    }\r\n}\r\nColormakerRegistry.add('hydrophobicity', HydrophobicityColormaker);\r\nexport default HydrophobicityColormaker;\r\n//# sourceMappingURL=hydrophobicity-colormaker.js.map","/**\r\n * @file Modelindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by model index\r\n */\r\nclass ModelindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'rainbow';\r\n        }\r\n        if (!params.domain) {\r\n            this.parameters.domain = [0, params.structure.modelStore.count];\r\n        }\r\n        this.modelindexScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.modelindexScale(a.modelIndex);\r\n    }\r\n}\r\nColormakerRegistry.add('modelindex', ModelindexColormaker);\r\nexport default ModelindexColormaker;\r\n//# sourceMappingURL=modelindex-colormaker.js.map","/**\r\n * @file Moleculetype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nimport { WaterType, IonType, ProteinType, RnaType, DnaType, SaccharideType } from '../structure/structure-constants';\r\n/**\r\n * Color by molecule type\r\n */\r\nclass MoleculetypeColormaker extends Colormaker {\r\n    atomColor(a) {\r\n        switch (a.residueType.moleculeType) {\r\n            case WaterType:\r\n                return 0x386cb0;\r\n            case IonType:\r\n                return 0xf0027f;\r\n            case ProteinType:\r\n                return 0xbeaed4;\r\n            case RnaType:\r\n                return 0xfdc086;\r\n            case DnaType:\r\n                return 0xbf5b17;\r\n            case SaccharideType:\r\n                return 0x7fc97f;\r\n            default:\r\n                return 0xffff99;\r\n        }\r\n    }\r\n}\r\nColormakerRegistry.add('moleculetype', MoleculetypeColormaker);\r\nexport default MoleculetypeColormaker;\r\n//# sourceMappingURL=moleculetype-colormaker.js.map","/**\r\n * @file Occupancy Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by occupancy\r\n */\r\nclass OccupancyColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'PuBu';\r\n        }\r\n        if (!params.domain) {\r\n            this.parameters.domain = [0.0, 1.0];\r\n        }\r\n        this.occupancyScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.occupancyScale(a.occupancy);\r\n    }\r\n}\r\nColormakerRegistry.add('occupancy', OccupancyColormaker);\r\nexport default OccupancyColormaker;\r\n//# sourceMappingURL=occupancy-colormaker.js.map","/**\r\n * @file Partialcharge Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by partial charge. The {@link AtomProxy.partialCharge} property is used for coloring.\r\n * The default domain is [-1, 1].\r\n *\r\n * __Name:__ _partialCharge_\r\n *\r\n * @example\r\n * stage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n *   o.addRepresentation(\"ball+stick\", {colorScheme: \"partialCharge\"});\r\n *   o.autoView();\r\n * });\r\n */\r\nclass PartialchargeColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'rwb';\r\n        }\r\n        if (!params.domain) {\r\n            this.parameters.domain = [-1, 1];\r\n        }\r\n        this.partialchargeScale = this.getScale();\r\n    }\r\n    atomColor(a) {\r\n        return this.partialchargeScale(a.partialCharge || 0);\r\n    }\r\n}\r\nColormakerRegistry.add('partialcharge', PartialchargeColormaker);\r\nexport default PartialchargeColormaker;\r\n//# sourceMappingURL=partialcharge-colormaker.js.map","/**\r\n * @file Random Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\nfunction randomColor() {\r\n    return Math.random() * 0xFFFFFF;\r\n}\r\n/**\r\n * Class by random color\r\n */\r\nclass RandomColormaker extends Colormaker {\r\n    /**\r\n     * get color for an atom\r\n     * @return {Integer} random hex color\r\n     */\r\n    atomColor() {\r\n        return randomColor();\r\n    }\r\n    /**\r\n     * get color for volume cell\r\n     * @return {Integer} random hex color\r\n     */\r\n    volumeColor() {\r\n        return randomColor();\r\n    }\r\n    /**\r\n     * get color for coordinates in space\r\n     * @return {Integer} random hex color\r\n     */\r\n    positionColor() {\r\n        return randomColor();\r\n    }\r\n}\r\nColormakerRegistry.add('random', RandomColormaker);\r\nexport default RandomColormaker;\r\n//# sourceMappingURL=random-colormaker.js.map","/**\r\n * @file Randomcoilindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by random coil index\r\n */\r\nclass RandomcoilindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.rciDict = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'RdYlBu';\r\n        }\r\n        this.rciScale = this.getScale({ domain: [0.6, 0] });\r\n        const val = params.structure.validation;\r\n        if (val)\r\n            this.rciDict = val.rciDict;\r\n    }\r\n    atomColor(atom) {\r\n        let sele = `[${atom.resname}]${atom.resno}`;\r\n        if (atom.chainname)\r\n            sele += ':' + atom.chainname;\r\n        const rci = this.rciDict[sele];\r\n        return rci !== undefined ? this.rciScale(rci) : 0x909090;\r\n    }\r\n}\r\nColormakerRegistry.add('randomcoilindex', RandomcoilindexColormaker);\r\nexport default RandomcoilindexColormaker;\r\n//# sourceMappingURL=randomcoilindex-colormaker.js.map","/**\r\n * @file Residueindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by residue index\r\n */\r\nclass ResidueindexColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.scalePerChain = {};\r\n        if (!params.scale) {\r\n            this.parameters.scale = 'rainbow';\r\n            this.parameters.reverse = defaults(params.reverse, true);\r\n        }\r\n        params.structure.eachChain((cp) => {\r\n            this.parameters.domain = [cp.residueOffset, cp.residueEnd];\r\n            this.scalePerChain[cp.index] = this.getScale();\r\n        });\r\n    }\r\n    atomColor(a) {\r\n        return this.scalePerChain[a.chainIndex](a.residueIndex);\r\n    }\r\n}\r\nColormakerRegistry.add('residueindex', ResidueindexColormaker);\r\nexport default ResidueindexColormaker;\r\n//# sourceMappingURL=residueindex-colormaker.js.map","/**\r\n * @file Resname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n// protein colors from Jmol http://jmol.sourceforge.net/jscolors/\r\nconst ResidueColors = {\r\n    'ALA': 0x8CFF8C,\r\n    'ARG': 0x00007C,\r\n    'ASN': 0xFF7C70,\r\n    'ASP': 0xA00042,\r\n    'CYS': 0xFFFF70,\r\n    'GLN': 0xFF4C4C,\r\n    'GLU': 0x660000,\r\n    'GLY': 0xFFFFFF,\r\n    'HIS': 0x7070FF,\r\n    'ILE': 0x004C00,\r\n    'LEU': 0x455E45,\r\n    'LYS': 0x4747B8,\r\n    'MET': 0xB8A042,\r\n    'PHE': 0x534C52,\r\n    'PRO': 0x525252,\r\n    'SER': 0xFF7042,\r\n    'THR': 0xB84C00,\r\n    'TRP': 0x4F4600,\r\n    'TYR': 0x8C704C,\r\n    'VAL': 0xFF8CFF,\r\n    'ASX': 0xFF00FF,\r\n    'GLX': 0xFF00FF,\r\n    'ASH': 0xFF00FF,\r\n    'GLH': 0xFF00FF,\r\n    'A': 0xDC143C,\r\n    'G': 0x32CD32,\r\n    'I': 0x9ACD32,\r\n    'X': 0x7CFC00,\r\n    'C': 0xFFD700,\r\n    'T': 0x4169E1,\r\n    'U': 0x40E0D0,\r\n    'D': 0x008B8B,\r\n    'DA': 0xDC143C,\r\n    'DG': 0x32CD32,\r\n    'DI': 0x9ACD32,\r\n    'DX': 0x7CFC00,\r\n    'DC': 0xFFD700,\r\n    'DT': 0x4169E1,\r\n    'DU': 0x40E0D0,\r\n    'DD': 0x008B8B\r\n};\r\nconst DefaultResidueColor = 0xFF00FF;\r\n/**\r\n * Color by residue name\r\n */\r\nclass ResnameColormaker extends Colormaker {\r\n    atomColor(a) {\r\n        return ResidueColors[a.resname] || DefaultResidueColor;\r\n    }\r\n}\r\nColormakerRegistry.add('resname', ResnameColormaker);\r\nexport default ResnameColormaker;\r\n//# sourceMappingURL=resname-colormaker.js.map","/**\r\n * @file Sstruc Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (shapely)\r\nconst StructureColors = {\r\n    'alphaHelix': 0xFF0080,\r\n    'threeTenHelix': 0xA00080,\r\n    'piHelix': 0x600080,\r\n    'betaStrand': 0xFFC800,\r\n    'betaTurn': 0x6080FF,\r\n    'coil': 0xFFFFFF,\r\n    'dna': 0xAE00FE,\r\n    'rna': 0xFD0162,\r\n    'carbohydrate': 0xA6A6FA\r\n};\r\nconst DefaultStructureColor = 0x808080;\r\n/**\r\n * Color by secondary structure\r\n */\r\nclass SstrucColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.residueProxy = params.structure.getResidueProxy();\r\n    }\r\n    atomColor(ap) {\r\n        const sstruc = ap.sstruc;\r\n        const rp = this.residueProxy;\r\n        if (sstruc === 'h') {\r\n            return StructureColors.alphaHelix;\r\n        }\r\n        else if (sstruc === 'g') {\r\n            return StructureColors.threeTenHelix;\r\n        }\r\n        else if (sstruc === 'i') {\r\n            return StructureColors.piHelix;\r\n        }\r\n        else if (sstruc === 'e' || sstruc === 'b') {\r\n            return StructureColors.betaStrand;\r\n        }\r\n        else if (sstruc === 't') {\r\n            return StructureColors.betaTurn;\r\n        }\r\n        else {\r\n            rp.index = ap.residueIndex;\r\n            if (rp.isDna()) {\r\n                return StructureColors.dna;\r\n            }\r\n            else if (rp.isRna()) {\r\n                return StructureColors.rna;\r\n            }\r\n            else if (rp.isSaccharide()) {\r\n                return StructureColors.carbohydrate;\r\n            }\r\n            else if (rp.isProtein() || sstruc === 's' || sstruc === 'l') {\r\n                return StructureColors.coil;\r\n            }\r\n            else {\r\n                return DefaultStructureColor;\r\n            }\r\n        }\r\n    }\r\n}\r\nColormakerRegistry.add('sstruc', SstrucColormaker);\r\nexport default SstrucColormaker;\r\n//# sourceMappingURL=sstruc-colormaker.js.map","/**\r\n * @file Uniform Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by uniform color\r\n */\r\nclass UniformColormaker extends Colormaker {\r\n    atomColor() {\r\n        return this.parameters.value;\r\n    }\r\n    bondColor() {\r\n        return this.parameters.value;\r\n    }\r\n    valueColor() {\r\n        return this.parameters.value;\r\n    }\r\n    volumeColor() {\r\n        return this.parameters.value;\r\n    }\r\n}\r\nColormakerRegistry.add('uniform', UniformColormaker);\r\nexport default UniformColormaker;\r\n//# sourceMappingURL=uniform-colormaker.js.map","/**\r\n * @file Value Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by volume value\r\n */\r\nclass ValueColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.valueScale = this.getScale();\r\n    }\r\n    /**\r\n     * return the color for a volume cell\r\n     * @param  {Integer} index - volume cell index\r\n     * @return {Integer} hex cell color\r\n     */\r\n    volumeColor(index) {\r\n        return this.valueScale(this.parameters.volume.data[index]); // TODO\r\n    }\r\n}\r\nColormakerRegistry.add('value', ValueColormaker);\r\nexport default ValueColormaker;\r\n//# sourceMappingURL=value-colormaker.js.map","/**\r\n * @file Volume Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3 } from 'three';\r\nimport { lerp } from '../math/math-utils';\r\nimport { ColormakerRegistry } from '../globals';\r\nimport Colormaker from './colormaker';\r\n/**\r\n * Color by volume position\r\n */\r\nclass VolumeColormaker extends Colormaker {\r\n    constructor(params) {\r\n        super(params);\r\n        this.vec = new Vector3();\r\n        this.valueScale = this.getScale();\r\n    }\r\n    /**\r\n     * return the color for coordinates in space\r\n     * @param  {Vector3} coords - xyz coordinates\r\n     * @return {Integer} hex coords color\r\n     */\r\n    positionColor(coords) {\r\n        const volume = this.parameters.volume; // TODO\r\n        if (!volume || !volume.inverseMatrix) {\r\n            return this.parameters.value;\r\n        }\r\n        const vec = this.vec;\r\n        const data = volume.data;\r\n        const nx = volume.nx;\r\n        const ny = volume.ny;\r\n        const nxy = nx * ny;\r\n        vec.copy(coords);\r\n        vec.applyMatrix4(volume.inverseMatrix);\r\n        // position of grid cell\r\n        const x0 = Math.floor(vec.x);\r\n        const y0 = Math.floor(vec.y);\r\n        const z0 = Math.floor(vec.z);\r\n        // Indices\r\n        const i = ((((z0 * ny) + y0) * nx) + x0);\r\n        const i1 = i + 1;\r\n        const iy = i + nx;\r\n        const iz = i + nxy;\r\n        const i1y = iy + 1;\r\n        const i1z = iz + 1;\r\n        const iyz = iy + nxy;\r\n        const i1yz = iyz + 1;\r\n        // Values\r\n        const v = data[i];\r\n        const v1 = data[i1];\r\n        const vy = data[iy];\r\n        const vz = data[iz];\r\n        const v1y = data[i1y];\r\n        const v1z = data[i1z];\r\n        const vyz = data[iyz];\r\n        const v1yz = data[i1yz];\r\n        // Position of point in fraction of grid\r\n        const xd = vec.x - x0;\r\n        const yd = vec.y - y0;\r\n        const zd = vec.z - z0;\r\n        // 1st Dimension\r\n        const c00 = lerp(v, v1, xd);\r\n        const c01 = lerp(vz, v1z, xd);\r\n        const c10 = lerp(vy, v1y, xd);\r\n        const c11 = lerp(vyz, v1yz, xd);\r\n        // 2nd Dimension\r\n        const c0 = lerp(c00, c10, yd);\r\n        const c1 = lerp(c01, c11, yd);\r\n        // 3rd Dimension\r\n        const c = lerp(c0, c1, zd);\r\n        return this.valueScale(c);\r\n    }\r\n}\r\nColormakerRegistry.add('volume', VolumeColormaker);\r\nexport default VolumeColormaker;\r\n//# sourceMappingURL=volume-colormaker.js.map","/**\r\n * @file Measurement Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color } from 'three';\r\nimport Selection from '../selection/selection';\r\nimport { Browser } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureRepresentation from './structure-representation';\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils';\r\n/**\r\n * Measurement representation\r\n * @interface\r\n */\r\nclass MeasurementRepresentation extends StructureRepresentation {\r\n    /**\r\n     * Handles common label settings and position logic for\r\n     * distance, angle and dihedral representations\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.n = 0; // Subclass create sets value\r\n        this.parameters = Object.assign({\r\n            labelVisible: {\r\n                type: 'boolean'\r\n            },\r\n            labelSize: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            labelColor: {\r\n                type: 'color'\r\n            },\r\n            labelFontFamily: {\r\n                type: 'select',\r\n                options: {\r\n                    'sans-serif': 'sans-serif',\r\n                    'monospace': 'monospace',\r\n                    'serif': 'serif'\r\n                },\r\n                buffer: 'fontFamily'\r\n            },\r\n            labelFontStyle: {\r\n                type: 'select',\r\n                options: {\r\n                    'normal': 'normal',\r\n                    'italic': 'italic'\r\n                },\r\n                buffer: 'fontStyle'\r\n            },\r\n            labelFontWeight: {\r\n                type: 'select',\r\n                options: {\r\n                    'normal': 'normal',\r\n                    'bold': 'bold'\r\n                },\r\n                buffer: 'fontWeight'\r\n            },\r\n            labelsdf: {\r\n                type: 'boolean', buffer: 'sdf'\r\n            },\r\n            labelXOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: 'xOffset'\r\n            },\r\n            labelYOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: 'yOffset'\r\n            },\r\n            labelZOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: 'zOffset'\r\n            },\r\n            labelAttachment: {\r\n                type: 'select',\r\n                options: {\r\n                    'bottom-left': 'bottom-left',\r\n                    'bottom-center': 'bottom-center',\r\n                    'bottom-right': 'bottom-right',\r\n                    'middle-left': 'middle-left',\r\n                    'middle-center': 'middle-center',\r\n                    'middle-right': 'middle-right',\r\n                    'top-left': 'top-left',\r\n                    'top-center': 'top-center',\r\n                    'top-right': 'top-right'\r\n                },\r\n                rebuild: true\r\n            },\r\n            labelBorder: {\r\n                type: 'boolean', buffer: 'showBorder'\r\n            },\r\n            labelBorderColor: {\r\n                type: 'color', buffer: 'borderColor'\r\n            },\r\n            labelBorderWidth: {\r\n                type: 'number', precision: 2, max: 0.3, min: 0, buffer: 'borderWidth'\r\n            },\r\n            labelBackground: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            labelBackgroundColor: {\r\n                type: 'color', buffer: 'backgroundColor'\r\n            },\r\n            labelBackgroundMargin: {\r\n                type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n            },\r\n            labelBackgroundOpacity: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: 'backgroundOpacity'\r\n            },\r\n            labelFixedSize: {\r\n                type: 'boolean', buffer: 'fixedSize'\r\n            },\r\n            lineOpacity: {\r\n                type: 'range', min: 0.0, max: 1.0, step: 0.01\r\n            },\r\n            linewidth: {\r\n                type: 'integer', max: 50, min: 1, buffer: true\r\n            }\r\n        }, this.parameters, {\r\n            flatShaded: null\r\n        });\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        this.labelVisible = defaults(p.labelVisible, true);\r\n        this.labelSize = defaults(p.labelSize, 2.0);\r\n        this.labelColor = defaults(p.labelColor, 0xFFFFFF);\r\n        this.labelFontFamily = defaults(p.labelFontFamily, 'sans-serif');\r\n        this.labelFontStyle = defaults(p.labelFontstyle, 'normal');\r\n        this.labelFontWeight = defaults(p.labelFontWeight, 'bold');\r\n        this.labelsdf = defaults(p.labelsdf, Browser === 'Chrome');\r\n        this.labelXOffset = defaults(p.labelXOffset, 0.0);\r\n        this.labelYOffset = defaults(p.labelYOffset, 0.0);\r\n        this.labelZOffset = defaults(p.labelZOffset, 0.5);\r\n        this.labelAttachment = defaults(p.labelAttachment, 'bottom-left');\r\n        this.labelBorder = defaults(p.labelBorder, false);\r\n        this.labelBorderColor = defaults(p.labelBorderColor, 'lightgrey');\r\n        this.labelBorderWidth = defaults(p.labelBorderWidth, 0.15);\r\n        this.labelBackground = defaults(p.labelBackground, false);\r\n        this.labelBackgroundColor = defaults(p.labelBackgroundColor, 'lightgrey');\r\n        this.labelBackgroundMargin = defaults(p.labelBackgroundMargin, 0.5);\r\n        this.labelBackgroundOpacity = defaults(p.labelBackgroundOpacity, 1.0);\r\n        this.labelFixedSize = defaults(p.labelFixedSize, false);\r\n        this.lineOpacity = defaults(p.lineOpacity, 1.0);\r\n        this.linewidth = defaults(p.linewidth, 2);\r\n        super.init(p);\r\n    }\r\n    // All measurements need to rebuild on position change\r\n    update(what) {\r\n        if (what.position) {\r\n            this.build();\r\n        }\r\n        else {\r\n            super.update(what);\r\n        }\r\n    }\r\n    updateData(what, data) {\r\n        const textData = {};\r\n        if (!what || what.labelSize) {\r\n            Object.assign(textData, { size: uniformArray(this.n, this.labelSize) });\r\n        }\r\n        if (!what || what.labelColor) {\r\n            const c = new Color(this.labelColor);\r\n            Object.assign(textData, { color: uniformArray3(this.n, c.r, c.g, c.b) });\r\n        }\r\n        this.textBuffer.setAttributes(textData);\r\n    }\r\n    setParameters(params, what = {}, rebuild = false) {\r\n        if (params && params.labelSize) {\r\n            what.labelSize = true;\r\n        }\r\n        if (params && (params.labelColor || params.labelColor === 0x000000)) {\r\n            what.labelColor = true;\r\n            rebuild = true;\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        if (params && params.opacity !== undefined) {\r\n            this.textBuffer.setParameters({ opacity: 1.0 }); // only opaque labels\r\n        }\r\n        if (params && params.labelVisible !== undefined) {\r\n            this.setVisibility(this.visible);\r\n        }\r\n        return this;\r\n    }\r\n    setVisibility(value, noRenderRequest) {\r\n        super.setVisibility(value, true);\r\n        if (this.textBuffer) {\r\n            this.textBuffer.setVisibility(this.labelVisible && this.visible);\r\n        }\r\n        if (!noRenderRequest)\r\n            this.viewer.requestRender();\r\n        return this;\r\n    }\r\n    getLabelBufferParams(params = {}) {\r\n        return super.getBufferParams(Object.assign({\r\n            fontFamily: this.labelFontFamily,\r\n            fontStyle: this.labelFontStyle,\r\n            fontWeight: this.labelFontWeight,\r\n            sdf: this.labelsdf,\r\n            xOffset: this.labelXOffset,\r\n            yOffset: this.labelYOffset,\r\n            zOffset: this.labelZOffset,\r\n            attachment: this.labelAttachment,\r\n            showBorder: this.labelBorder,\r\n            borderColor: this.labelBorderColor,\r\n            borderWidth: this.labelBorderWidth,\r\n            showBackground: this.labelBackground,\r\n            backgroundColor: this.labelBackgroundColor,\r\n            backgroundMargin: this.labelBackgroundMargin,\r\n            backgroundOpacity: this.labelBackgroundOpacity,\r\n            fixedSize: this.labelFixedSize,\r\n            disablePicking: true,\r\n            visible: this.labelVisible\r\n        }, params, {\r\n            opacity: 1.0 // only opaque labels\r\n        }));\r\n    }\r\n    getAtomRadius() {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * MeasurementRepresentations take atom[Pair|Triple|Quad] parameters.\r\n *\r\n * Parses nested array of either integer atom indices or selection\r\n * expressions into a flat array of coordinates.\r\n *\r\n * @param  {Structure} sview The structure to which the atoms refer\r\n * @param  {Array} atoms Nested array of atom pairs|triples|quads as\r\n *   Integer indices or selection expressions\r\n * @return {Float32Array} Flattened array of position coordinates\r\n */\r\nfunction parseNestedAtoms(sview, atoms) {\r\n    const ap = sview.getAtomProxy();\r\n    const sele = new Selection();\r\n    const nSets = atoms.length;\r\n    if (nSets === 0)\r\n        return new Float32Array(0);\r\n    // Peek-ahead at first item to determine order and parse mode\r\n    const order = atoms[0].length;\r\n    const selected = sview.getAtomSet();\r\n    const a = new Float32Array(nSets * order * 3);\r\n    let p = 0;\r\n    atoms.forEach(function (group) {\r\n        let _break = false;\r\n        for (let j = 0; j < order; j++) {\r\n            const value = group[j];\r\n            if (typeof (value) === 'number' && Number.isInteger(value)) {\r\n                if (selected.get(value)) {\r\n                    ap.index = value;\r\n                }\r\n                else {\r\n                    _break = true;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                sele.setString(value);\r\n                const atomIndices = sview.getAtomIndices(sele);\r\n                if (atomIndices.length) {\r\n                    ap.index = atomIndices[0];\r\n                }\r\n                else {\r\n                    _break = true;\r\n                    break;\r\n                }\r\n            }\r\n            let offset = p + j * 3;\r\n            a[offset++] = ap.x;\r\n            a[offset++] = ap.y;\r\n            a[offset++] = ap.z;\r\n        }\r\n        if (!_break)\r\n            p += 3 * order;\r\n    });\r\n    return a.subarray(0, p);\r\n}\r\n/* out = v1 * cos(angle) + v2 * sin(angle) */\r\nfunction calcArcPoint(out, center, v1, v2, angle) {\r\n    const x = Math.cos(angle);\r\n    const y = Math.sin(angle);\r\n    out[0] = center[0] + v1[0] * x + v2[0] * y;\r\n    out[1] = center[1] + v1[1] * x + v2[1] * y;\r\n    out[2] = center[2] + v1[2] * x + v2[2] * y;\r\n}\r\nexport { MeasurementRepresentation as default, calcArcPoint, parseNestedAtoms };\r\n//# sourceMappingURL=measurement-representation.js.map","/**\r\n * @file Edt\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\nexport function edt(data, width, height, f, d, v, z) {\r\n    for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n            f[y] = data[y * width + x];\r\n        }\r\n        edt1d(f, d, v, z, height);\r\n        for (let y = 0; y < height; y++) {\r\n            data[y * width + x] = d[y];\r\n        }\r\n    }\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            f[x] = data[y * width + x];\r\n        }\r\n        edt1d(f, d, v, z, width);\r\n        for (let x = 0; x < width; x++) {\r\n            data[y * width + x] = Math.sqrt(d[x]);\r\n        }\r\n    }\r\n}\r\n// 1D squared distance transform\r\nfunction edt1d(f, d, v, z, n) {\r\n    v[0] = 0;\r\n    z[0] = Number.MIN_SAFE_INTEGER;\r\n    z[1] = Number.MAX_SAFE_INTEGER;\r\n    for (let q = 1, k = 0; q < n; q++) {\r\n        let s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n        while (s <= z[k]) {\r\n            k--;\r\n            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n        }\r\n        k++;\r\n        v[k] = q;\r\n        z[k] = s;\r\n        z[k + 1] = Number.MAX_SAFE_INTEGER;\r\n    }\r\n    for (let q = 0, k = 0; q < n; q++) {\r\n        while (z[k + 1] < q)\r\n            k++;\r\n        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n    }\r\n}\r\n//# sourceMappingURL=edt.js.map","/**\r\n * @file Text Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color, CanvasTexture } from 'three';\r\nimport '../shader/SDFFont.vert';\r\nimport '../shader/SDFFont.frag';\r\nimport { BufferRegistry } from '../globals';\r\nimport { createParams } from '../utils';\r\nimport MappedQuadBuffer from './mappedquad-buffer';\r\nimport { IgnorePicker } from '../utils/picker';\r\nimport { edt } from '../utils/edt';\r\nimport { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nconst TextAtlasCache = {};\r\nfunction getTextAtlas(params) {\r\n    const hash = JSON.stringify(params);\r\n    if (TextAtlasCache[hash] === undefined) {\r\n        TextAtlasCache[hash] = new TextAtlas(params);\r\n    }\r\n    return TextAtlasCache[hash];\r\n}\r\nexport const TextAtlasDefaultParams = {\r\n    font: 'sans-serif',\r\n    size: 36,\r\n    style: 'normal',\r\n    variant: 'normal',\r\n    weight: 'normal',\r\n    outline: 3,\r\n    width: 1024,\r\n    height: 1024\r\n};\r\nexport class TextAtlas {\r\n    constructor(params = {}) {\r\n        this.gamma = 1;\r\n        this.mapped = {};\r\n        this.scratchW = 0;\r\n        this.scratchH = 0;\r\n        this.currentX = 0;\r\n        this.currentY = 0;\r\n        this.cutoff = 0.25;\r\n        this.parameters = createParams(params, TextAtlasDefaultParams);\r\n        const p = this.parameters;\r\n        this.radius = p.size / 8;\r\n        this.padding = p.size / 3;\r\n        // Prepare line-height with room for outline and descenders/ascenders\r\n        const lineHeight = this.lineHeight = p.size + 2 * p.outline + Math.round(p.size / 4);\r\n        const maxWidth = this.maxWidth = p.width / 4;\r\n        // Prepare scratch canvas\r\n        const canvas = this.canvas = document.createElement('canvas');\r\n        canvas.width = maxWidth;\r\n        canvas.height = lineHeight;\r\n        const ctx = this.context = this.canvas.getContext('2d');\r\n        ctx.font = `${p.style} ${p.variant} ${p.weight} ${p.size}px ${p.font}`;\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'bottom';\r\n        ctx.lineJoin = 'round';\r\n        // temporary arrays for the distance transform\r\n        this.gridOuter = new Float64Array(lineHeight * maxWidth);\r\n        this.gridInner = new Float64Array(lineHeight * maxWidth);\r\n        this.f = new Float64Array(Math.max(lineHeight, maxWidth));\r\n        this.d = new Float64Array(Math.max(lineHeight, maxWidth));\r\n        this.z = new Float64Array(Math.max(lineHeight, maxWidth) + 1);\r\n        this.v = new Int16Array(Math.max(lineHeight, maxWidth));\r\n        //\r\n        this.data = new Uint8Array(p.width * p.height * 4);\r\n        this.canvas2 = document.createElement('canvas');\r\n        this.canvas2.width = p.width;\r\n        this.canvas2.height = p.height;\r\n        this.context2 = this.canvas2.getContext('2d');\r\n        // Replacement Character\r\n        this.placeholder = this.map(String.fromCharCode(0xFFFD));\r\n        // Basic Latin (subset)\r\n        for (let i = 0x0020; i <= 0x007E; ++i) {\r\n            this.map(String.fromCharCode(i));\r\n        }\r\n        // TODO: to slow to always prepare them\r\n        // // Latin-1 Supplement (subset)\r\n        // for (let i = 0x00A1; i <= 0x00FF; ++i) {\r\n        //   this.map(String.fromCharCode(i))\r\n        // }\r\n        // Degree sign\r\n        this.map(String.fromCharCode(0x00B0));\r\n        // // Greek and Coptic (subset)\r\n        // for (let i = 0x0391; i <= 0x03C9; ++i) {\r\n        //   this.map(String.fromCharCode(i))\r\n        // }\r\n        // // Cyrillic (subset)\r\n        // for (let i = 0x0400; i <= 0x044F; ++i) {\r\n        //   this.map(String.fromCharCode(i))\r\n        // }\r\n        // Angstrom Sign\r\n        this.map(String.fromCharCode(0x212B));\r\n        this.texture = new CanvasTexture(this.canvas2);\r\n        this.texture.flipY = false;\r\n        this.texture.needsUpdate = true;\r\n    }\r\n    map(text) {\r\n        const p = this.parameters;\r\n        if (this.mapped[text] === undefined) {\r\n            this.draw(text);\r\n            if (this.currentX + this.scratchW > p.width) {\r\n                this.currentX = 0;\r\n                this.currentY += this.scratchH;\r\n            }\r\n            if (this.currentY + this.scratchH > p.height) {\r\n                console.warn('canvas to small');\r\n            }\r\n            this.mapped[text] = {\r\n                x: this.currentX,\r\n                y: this.currentY,\r\n                w: this.scratchW,\r\n                h: this.scratchH\r\n            };\r\n            this.context2.drawImage(this.canvas, 0, 0, this.scratchW, this.scratchH, this.currentX, this.currentY, this.scratchW, this.scratchH);\r\n            this.currentX += this.scratchW;\r\n        }\r\n        return this.mapped[text];\r\n    }\r\n    get(text) {\r\n        return this.mapped[text] || this.placeholder;\r\n    }\r\n    draw(text) {\r\n        const p = this.parameters;\r\n        const h = this.lineHeight;\r\n        const o = p.outline;\r\n        const ctx = this.context;\r\n        // const dst = this.scratch\r\n        const max = this.maxWidth;\r\n        // const colors = this.colors\r\n        // Bottom aligned, take outline into account\r\n        const x = o;\r\n        const y = h - p.outline;\r\n        // Measure text\r\n        const m = ctx.measureText(text);\r\n        const w = Math.min(max, Math.ceil(m.width + 2 * x + 1));\r\n        const n = w * h;\r\n        // Clear scratch area\r\n        ctx.clearRect(0, 0, w, h);\r\n        // Draw text\r\n        ctx.fillText(text, x, y);\r\n        const imageData = ctx.getImageData(0, 0, w, h);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < n; i++) {\r\n            const a = imageData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? Number.MAX_SAFE_INTEGER : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? Number.MAX_SAFE_INTEGER : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n        edt(this.gridOuter, w, h, this.f, this.d, this.v, this.z);\r\n        edt(this.gridInner, w, h, this.f, this.d, this.v, this.z);\r\n        for (let i = 0; i < n; i++) {\r\n            const d = this.gridOuter[i] - this.gridInner[i];\r\n            data[i * 4 + 3] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        this.scratchW = w;\r\n        this.scratchH = h;\r\n    }\r\n}\r\nexport const TextBufferDefaultParameters = Object.assign({\r\n    fontFamily: 'sans-serif',\r\n    fontStyle: 'normal',\r\n    fontWeight: 'bold',\r\n    fontSize: 36,\r\n    xOffset: 0.0,\r\n    yOffset: 0.0,\r\n    zOffset: 0.5,\r\n    attachment: 'bottom-left',\r\n    showBorder: false,\r\n    borderColor: 'lightgrey',\r\n    borderWidth: 0.15,\r\n    showBackground: false,\r\n    backgroundColor: 'lightgrey',\r\n    backgroundMargin: 0.5,\r\n    backgroundOpacity: 1.0,\r\n    forceTransparent: true,\r\n    fixedSize: false\r\n}, BufferDefaultParameters);\r\nconst TextBufferParameterTypes = Object.assign({\r\n    fontFamily: { uniform: true },\r\n    fontStyle: { uniform: true },\r\n    fontWeight: { uniform: true },\r\n    fontSize: { uniform: true },\r\n    xOffset: { uniform: true },\r\n    yOffset: { uniform: true },\r\n    zOffset: { uniform: true },\r\n    showBorder: { uniform: true },\r\n    borderColor: { uniform: true },\r\n    borderWidth: { uniform: true },\r\n    backgroundColor: { uniform: true },\r\n    backgroundOpacity: { uniform: true },\r\n    fixedSize: { updateShader: true }\r\n}, BufferParameterTypes);\r\nfunction getCharCount(data, params) {\r\n    const n = data.position.length / 3;\r\n    let charCount = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n        charCount += data.text[i].length;\r\n    }\r\n    if (params.showBackground)\r\n        charCount += n;\r\n    return charCount;\r\n}\r\n/**\r\n * Text buffer. Renders screen-aligned text strings.\r\n *\r\n * @example\r\n * var textBuffer = new TextBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   size: new Float32Array([ 2 ]),\r\n *   text: [ \"Hello\" ]\r\n * });\r\n */\r\nclass TextBuffer extends MappedQuadBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {String[]} data.text - text strings\r\n     * @param  {TextBufferParameters} params - parameters object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super({\r\n            position: new Float32Array(getCharCount(data, params) * 3),\r\n            color: new Float32Array(getCharCount(data, params) * 3),\r\n            picking: new IgnorePicker()\r\n        }, params);\r\n        this.parameterTypes = TextBufferParameterTypes;\r\n        this.alwaysTransparent = true;\r\n        this.hasWireframe = false;\r\n        this.isText = true;\r\n        this.vertexShader = 'SDFFont.vert';\r\n        this.fragmentShader = 'SDFFont.frag';\r\n        this.text = data.text;\r\n        this.positionCount = data.position.length / 3;\r\n        this.addUniforms({\r\n            'fontTexture': { value: null },\r\n            'xOffset': { value: this.parameters.xOffset },\r\n            'yOffset': { value: this.parameters.yOffset },\r\n            'zOffset': { value: this.parameters.zOffset },\r\n            'ortho': { value: false },\r\n            'showBorder': { value: this.parameters.showBorder },\r\n            'borderColor': { value: new Color(this.parameters.borderColor) },\r\n            'borderWidth': { value: this.parameters.borderWidth },\r\n            'backgroundColor': { value: new Color(this.parameters.backgroundColor) },\r\n            'backgroundOpacity': { value: this.parameters.backgroundOpacity },\r\n            'canvasHeight': { value: 1.0 },\r\n            'pixelRatio': { value: 1.0 }\r\n        });\r\n        this.addAttributes({\r\n            'inputTexCoord': { type: 'v2', value: null },\r\n            'inputSize': { type: 'f', value: null }\r\n        });\r\n        this.setAttributes(data);\r\n        this.makeTexture();\r\n        this.makeMapping();\r\n    }\r\n    get defaultParameters() { return TextBufferDefaultParameters; }\r\n    makeMaterial() {\r\n        super.makeMaterial();\r\n        const tex = this.texture;\r\n        const m = this.material;\r\n        m.transparent = true;\r\n        m.extensions.derivatives = true;\r\n        m.lights = false;\r\n        m.uniforms.fontTexture.value = tex;\r\n        m.needsUpdate = true;\r\n        const wm = this.wireframeMaterial;\r\n        wm.transparent = true;\r\n        wm.extensions.derivatives = true;\r\n        wm.lights = false;\r\n        wm.uniforms.fontTexture.value = tex;\r\n        wm.needsUpdate = true;\r\n        const pm = this.pickingMaterial;\r\n        pm.extensions.derivatives = true;\r\n        pm.lights = false;\r\n        pm.uniforms.fontTexture.value = tex;\r\n        pm.needsUpdate = true;\r\n    }\r\n    setAttributes(data = {}) {\r\n        let position, size, color;\r\n        let aPosition, inputSize, aColor;\r\n        const text = this.text;\r\n        const attributes = this.geometry.attributes; // TODO\r\n        if (data.position) {\r\n            position = data.position;\r\n            aPosition = attributes.position.array;\r\n            attributes.position.needsUpdate = true;\r\n        }\r\n        if (data.size) {\r\n            size = data.size;\r\n            inputSize = attributes.inputSize.array;\r\n            attributes.inputSize.needsUpdate = true;\r\n        }\r\n        if (data.color) {\r\n            color = data.color;\r\n            aColor = attributes.color.array;\r\n            attributes.color.needsUpdate = true;\r\n        }\r\n        const n = this.positionCount;\r\n        let j, o;\r\n        let iCharAll = 0;\r\n        let txt, iChar, nChar;\r\n        for (let v = 0; v < n; ++v) {\r\n            o = 3 * v;\r\n            txt = text[v];\r\n            nChar = txt.length;\r\n            if (this.parameters.showBackground)\r\n                nChar += 1;\r\n            for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n                for (let m = 0; m < 4; m++) {\r\n                    j = iCharAll * 4 * 3 + (3 * m);\r\n                    if (position) {\r\n                        aPosition[j] = position[o];\r\n                        aPosition[j + 1] = position[o + 1];\r\n                        aPosition[j + 2] = position[o + 2];\r\n                    }\r\n                    if (size) {\r\n                        inputSize[(iCharAll * 4) + m] = size[v];\r\n                    }\r\n                    if (color) {\r\n                        aColor[j] = color[o];\r\n                        aColor[j + 1] = color[o + 1];\r\n                        aColor[j + 2] = color[o + 2];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    makeTexture() {\r\n        this.textAtlas = getTextAtlas({\r\n            font: this.parameters.fontFamily,\r\n            style: this.parameters.fontStyle,\r\n            weight: this.parameters.fontWeight,\r\n            size: this.parameters.fontSize\r\n        });\r\n        this.texture = this.textAtlas.texture;\r\n    }\r\n    makeMapping() {\r\n        const ta = this.textAtlas;\r\n        const text = this.text;\r\n        const attachment = this.parameters.attachment;\r\n        const margin = (ta.lineHeight * this.parameters.backgroundMargin * 0.1) - 10;\r\n        const attribs = this.geometry.attributes; // TODO\r\n        const inputTexCoord = attribs.inputTexCoord.array;\r\n        const inputMapping = attribs.mapping.array;\r\n        const n = this.positionCount;\r\n        let iCharAll = 0;\r\n        let c, i, txt, xadvance, iChar, nChar, xShift, yShift;\r\n        for (let v = 0; v < n; ++v) {\r\n            txt = text[v];\r\n            xadvance = 0;\r\n            nChar = txt.length;\r\n            // calculate width\r\n            for (iChar = 0; iChar < nChar; ++iChar) {\r\n                c = ta.get(txt[iChar]);\r\n                xadvance += c.w - 2 * ta.parameters.outline;\r\n            }\r\n            // attachment\r\n            if (attachment.startsWith('top')) {\r\n                yShift = ta.lineHeight / 1.25;\r\n            }\r\n            else if (attachment.startsWith('middle')) {\r\n                yShift = ta.lineHeight / 2.5;\r\n            }\r\n            else {\r\n                yShift = 0; // \"bottom\"\r\n            }\r\n            if (attachment.endsWith('right')) {\r\n                xShift = xadvance;\r\n            }\r\n            else if (attachment.endsWith('center')) {\r\n                xShift = xadvance / 2;\r\n            }\r\n            else {\r\n                xShift = 0; // \"left\"\r\n            }\r\n            xShift += ta.parameters.outline;\r\n            yShift += ta.parameters.outline;\r\n            // background\r\n            if (this.parameters.showBackground) {\r\n                i = iCharAll * 2 * 4;\r\n                inputMapping[i + 0] = -ta.lineHeight / 6 - xShift - margin; // top left\r\n                inputMapping[i + 1] = ta.lineHeight - yShift + margin;\r\n                inputMapping[i + 2] = -ta.lineHeight / 6 - xShift - margin; // bottom left\r\n                inputMapping[i + 3] = 0 - yShift - margin;\r\n                inputMapping[i + 4] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin; // top right\r\n                inputMapping[i + 5] = ta.lineHeight - yShift + margin;\r\n                inputMapping[i + 6] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin; // bottom right\r\n                inputMapping[i + 7] = 0 - yShift - margin;\r\n                inputTexCoord[i + 0] = 10;\r\n                inputTexCoord[i + 2] = 10;\r\n                inputTexCoord[i + 4] = 10;\r\n                inputTexCoord[i + 6] = 10;\r\n                iCharAll += 1;\r\n            }\r\n            xadvance = 0;\r\n            for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n                c = ta.get(txt[iChar]);\r\n                i = iCharAll * 2 * 4;\r\n                inputMapping[i + 0] = xadvance - xShift; // top left\r\n                inputMapping[i + 1] = c.h - yShift;\r\n                inputMapping[i + 2] = xadvance - xShift; // bottom left\r\n                inputMapping[i + 3] = 0 - yShift;\r\n                inputMapping[i + 4] = xadvance + c.w - xShift; // top right\r\n                inputMapping[i + 5] = c.h - yShift;\r\n                inputMapping[i + 6] = xadvance + c.w - xShift; // bottom right\r\n                inputMapping[i + 7] = 0 - yShift;\r\n                const texWidth = ta.parameters.width;\r\n                const texHeight = ta.parameters.height;\r\n                const texCoords = [\r\n                    c.x / texWidth, c.y / texHeight,\r\n                    c.x / texWidth, (c.y + c.h) / texHeight,\r\n                    (c.x + c.w) / texWidth, c.y / texHeight,\r\n                    (c.x + c.w) / texWidth, (c.y + c.h) / texHeight // bottom right\r\n                ];\r\n                inputTexCoord.set(texCoords, i);\r\n                xadvance += c.w - 2 * ta.parameters.outline;\r\n            }\r\n        }\r\n        attribs.inputTexCoord.needsUpdate = true;\r\n        attribs.mapping.needsUpdate = true;\r\n    }\r\n    getDefines(type) {\r\n        const defines = super.getDefines(type);\r\n        if (this.parameters.fixedSize) {\r\n            defines.FIXED_SIZE = 1;\r\n        }\r\n        return defines;\r\n    }\r\n    setUniforms(data) {\r\n        if (data && (data.fontFamily !== undefined ||\r\n            data.fontStyle !== undefined ||\r\n            data.fontWeight !== undefined ||\r\n            data.fontSize !== undefined)) {\r\n            this.makeTexture();\r\n            this.makeMapping();\r\n            this.texture.needsUpdate = true;\r\n            data.fontTexture = this.texture;\r\n        }\r\n        super.setUniforms(data);\r\n    }\r\n}\r\nBufferRegistry.add('text', TextBuffer);\r\nexport default TextBuffer;\r\n//# sourceMappingURL=text-buffer.js.map","/**\r\n * @file Angle Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport MeasurementRepresentation, { parseNestedAtoms, calcArcPoint } from './measurement-representation';\r\nimport { defaults } from '../utils';\r\nimport MeshBuffer from '../buffer/mesh-buffer';\r\nimport TextBuffer from '../buffer/text-buffer';\r\nimport WideLineBuffer from '../buffer/wideline-buffer';\r\nimport { v3add, v3cross, v3dot, v3fromArray, v3length, v3new, v3normalize, v3sub, v3toArray } from '../math/vector-utils';\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils';\r\nimport { RAD2DEG } from '../math/math-constants';\r\nimport { getFixedLengthWrappedDashData } from '../geometry/dash';\r\n/**\r\n * Angle representation object\r\n *\r\n * Reperesentation consists of four parts, visibility can be set for each\r\n * label - the text label with the angle size\r\n * vectors - lines joining the three points\r\n * sector - triangles representing the angle\r\n * arc - line bordering the sector\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass AngleRepresentation extends MeasurementRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'angle';\r\n        this.parameters = Object.assign({\r\n            atomTriple: {\r\n                type: 'hidden', rebuild: true\r\n            },\r\n            vectorVisible: {\r\n                type: 'boolean', default: true\r\n            },\r\n            arcVisible: {\r\n                type: 'boolean', default: true\r\n            },\r\n            sectorVisible: {\r\n                type: 'boolean', default: true\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.side = defaults(p.side, 'double');\r\n        p.opacity = defaults(p.opacity, 0.5);\r\n        this.atomTriple = defaults(p.atomTriple, []);\r\n        this.arcVisible = defaults(p.arcVisible, true);\r\n        this.sectorVisible = defaults(p.sectorVisible, true);\r\n        this.vectorVisible = defaults(p.vectorVisible, true);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        if (!sview.atomCount || !this.atomTriple.length)\r\n            return;\r\n        const atomPosition = atomTriplePositions(sview, this.atomTriple);\r\n        const angleData = getAngleData(atomPosition);\r\n        const n = this.n = angleData.labelPosition.length / 3;\r\n        const labelColor = new Color(this.labelColor);\r\n        // Create buffers\r\n        this.textBuffer = new TextBuffer({\r\n            position: angleData.labelPosition,\r\n            size: uniformArray(n, this.labelSize),\r\n            color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n            text: angleData.labelText\r\n        }, this.getLabelBufferParams());\r\n        const c = new Color(this.colorValue);\r\n        this.vectorBuffer = new WideLineBuffer(getFixedLengthWrappedDashData({\r\n            position1: angleData.vectorPosition1,\r\n            position2: angleData.vectorPosition2,\r\n            color: uniformArray3(2 * n, c.r, c.g, c.b),\r\n            color2: uniformArray3(2 * n, c.r, c.g, c.b)\r\n        }), this.getBufferParams({\r\n            linewidth: this.linewidth,\r\n            visible: this.vectorVisible,\r\n            opacity: this.lineOpacity\r\n        }));\r\n        this.arcLength = angleData.arcPosition1.length / 3;\r\n        this.arcBuffer = new WideLineBuffer(getFixedLengthWrappedDashData({\r\n            position1: angleData.arcPosition1,\r\n            position2: angleData.arcPosition2,\r\n            color: uniformArray3(this.arcLength, c.r, c.g, c.b),\r\n            color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n        }), this.getBufferParams({\r\n            linewidth: this.linewidth,\r\n            visible: this.arcVisible,\r\n            opacity: this.lineOpacity\r\n        }));\r\n        this.sectorLength = angleData.sectorPosition.length / 3;\r\n        this.sectorBuffer = new MeshBuffer({\r\n            position: angleData.sectorPosition,\r\n            color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n        }, this.getBufferParams({\r\n            visible: this.sectorVisible\r\n        }));\r\n        return {\r\n            bufferList: [\r\n                this.textBuffer,\r\n                this.vectorBuffer,\r\n                this.arcBuffer,\r\n                this.sectorBuffer\r\n            ]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        super.updateData(what, data);\r\n        const vectorData = {};\r\n        const arcData = {};\r\n        const sectorData = {};\r\n        if (what.color) {\r\n            const c = new Color(this.colorValue);\r\n            Object.assign(vectorData, {\r\n                color: uniformArray3(this.n * 2, c.r, c.g, c.b),\r\n                color2: uniformArray3(this.n * 2, c.r, c.g, c.b)\r\n            });\r\n            Object.assign(arcData, {\r\n                color: uniformArray3(this.arcLength, c.r, c.g, c.b),\r\n                color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n            });\r\n            Object.assign(sectorData, {\r\n                color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n            });\r\n        }\r\n        // if (what.sectorOpacity) {\r\n        //   this.sectorBuffer.opacity = what.sectorOpacity\r\n        // }\r\n        this.vectorBuffer.setAttributes(vectorData);\r\n        this.arcBuffer.setAttributes(arcData);\r\n        this.sectorBuffer.setAttributes(sectorData);\r\n    }\r\n    setParameters(params) {\r\n        var rebuild = false;\r\n        var what = {};\r\n        super.setParameters(params, what, rebuild);\r\n        if (params && (params.vectorVisible !== undefined ||\r\n            params.arcVisible !== undefined ||\r\n            params.sectorVisible !== undefined)) {\r\n            this.setVisibility(this.visible);\r\n        }\r\n        if (params && params.lineOpacity) {\r\n            this.vectorBuffer.setParameters({ opacity: params.lineOpacity });\r\n            this.arcBuffer.setParameters({ opacity: params.lineOpacity });\r\n        }\r\n        if (params && params.opacity !== undefined) {\r\n            this.vectorBuffer.setParameters({ opacity: this.lineOpacity });\r\n            this.arcBuffer.setParameters({ opacity: this.lineOpacity });\r\n        }\r\n        if (params && params.linewidth) {\r\n            this.vectorBuffer.setParameters({ linewidth: params.linewidth });\r\n            this.arcBuffer.setParameters({ linewidth: params.linewidth });\r\n        }\r\n        return this;\r\n    }\r\n    setVisibility(value, noRenderRequest) {\r\n        super.setVisibility(value, true);\r\n        if (this.vectorBuffer) {\r\n            this.vectorBuffer.setVisibility(this.vectorVisible && this.visible);\r\n        }\r\n        if (this.arcBuffer) {\r\n            this.arcBuffer.setVisibility(this.arcVisible && this.visible);\r\n        }\r\n        if (this.sectorBuffer) {\r\n            this.sectorBuffer.setVisibility(this.sectorVisible && this.visible);\r\n        }\r\n        if (!noRenderRequest)\r\n            this.viewer.requestRender();\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Ensure mid point does not coincide with first or second\r\n * @param  {Float32Array} position 9*nAngle array of coordinates\r\n * @return {Float32Array}          Filtered position array, may be shorter\r\n */\r\nfunction validatePositions(position) {\r\n    const include = [];\r\n    const n = position.length / 9;\r\n    for (let i = 0; i < n; i++) {\r\n        // Check that first point not same as second and that second not same as third\r\n        let okay = true;\r\n        for (let j = i; j < i + 3; j += 3) {\r\n            if (position[j] === position[j + 3] &&\r\n                position[j + 1] === position[j + 4] &&\r\n                position[j + 2] === position[j + 5]) {\r\n                okay = false;\r\n            }\r\n        }\r\n        if (okay)\r\n            include.push(i);\r\n    }\r\n    const outPosition = new Float32Array(include.length * 9);\r\n    let outIdx = 0;\r\n    include.forEach(function (i) {\r\n        copyArray(position, outPosition, i * 9, outIdx * 9, 9);\r\n        outIdx++;\r\n    });\r\n    return outPosition;\r\n}\r\nfunction atomTriplePositions(sview, atomTriple) {\r\n    return validatePositions(parseNestedAtoms(sview, atomTriple));\r\n}\r\n/**\r\n * Converts triple positions into data required to build various buffers.\r\n */\r\nfunction getAngleData(position, params = {}) {\r\n    const angleStep = defaults(params.angleStep, Math.PI / 90);\r\n    const n = position.length / 9;\r\n    const angles = new Float32Array(n);\r\n    const labelPosition = new Float32Array(n * 3);\r\n    const labelText = new Array(n);\r\n    const vectorPosition1 = new Float32Array(n * 6); // Two lines per angle\r\n    const vectorPosition2 = new Float32Array(n * 6);\r\n    const arcPositionTmp1 = new Array(n); // Start points for arc lines\r\n    const arcPositionTmp2 = new Array(n); // End points for arc lines\r\n    const sectorPositionTmp = new Array(n); // Triangle points\r\n    let totalSegments = 0;\r\n    // Re-used vectors etc\r\n    const p1 = v3new(); // Positions of points for each angel\r\n    const p2 = v3new();\r\n    const p3 = v3new();\r\n    const v21 = v3new(); // Vectors\r\n    const v23 = v3new();\r\n    const cross = v3new(); // Cross product v21xv23\r\n    const cross2 = v3new(); // In-plane cross product v21 x (v21 x v23)\r\n    const labelTmp = v3new();\r\n    const arcPoint = v3new();\r\n    for (var i = 0; i < n; i++) {\r\n        let p = 9 * i;\r\n        v3fromArray(p1, position, p);\r\n        v3fromArray(p2, position, p + 3);\r\n        v3fromArray(p3, position, p + 6);\r\n        let v = 6 * i;\r\n        v3toArray(p1, vectorPosition1, v);\r\n        v3toArray(p2, vectorPosition2, v);\r\n        v3toArray(p2, vectorPosition1, v + 3);\r\n        v3toArray(p3, vectorPosition2, v + 3);\r\n        v3sub(v21, p1, p2);\r\n        v3sub(v23, p3, p2);\r\n        v3normalize(v21, v21); // validatePositions ensures valid\r\n        v3normalize(v23, v23);\r\n        v3cross(cross, v21, v23);\r\n        const crossLength = v3length(cross);\r\n        const dot = v3dot(v21, v23);\r\n        const angle = angles[i] = Math.atan2(crossLength, dot);\r\n        labelText[i] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0);\r\n        if (v3length(cross) === 0.0) {\r\n            // Angle exactly 0/180, pick an arbitrary direction\r\n            cross[0] = 1.0;\r\n            cross[1] = 0.0;\r\n            cross[2] = 0.0;\r\n        }\r\n        v3cross(cross2, cross, v21);\r\n        v3normalize(cross2, cross2);\r\n        calcArcPoint(labelTmp, p2, v21, cross2, angle / 2.0);\r\n        // TODO: Scale label position?\r\n        v3toArray(labelTmp, labelPosition, 3 * i);\r\n        // Build the arc and sector\r\n        const nSegments = Math.ceil(angle / angleStep);\r\n        const sectorVertices = new Float32Array(nSegments * 9);\r\n        sectorPositionTmp[i] = sectorVertices;\r\n        const arcVertices1 = new Float32Array(nSegments * 3);\r\n        const arcVertices2 = new Float32Array(nSegments * 3);\r\n        arcPositionTmp1[i] = arcVertices1;\r\n        arcPositionTmp2[i] = arcVertices2;\r\n        v3add(arcPoint, p2, v21); // Our initial arc point\r\n        const appendArcSection = function (a, j) {\r\n            const si = j * 9;\r\n            const ai = j * 3;\r\n            v3toArray(p2, sectorVertices, si);\r\n            v3toArray(arcPoint, sectorVertices, si + 3);\r\n            v3toArray(arcPoint, arcVertices1, ai);\r\n            calcArcPoint(arcPoint, p2, v21, cross2, a);\r\n            v3toArray(arcPoint, sectorVertices, si + 6);\r\n            v3toArray(arcPoint, arcVertices2, ai);\r\n        };\r\n        let j = 0;\r\n        for (let a = angleStep; a < angle; a += angleStep) {\r\n            appendArcSection(a, j);\r\n            j++;\r\n        }\r\n        appendArcSection(angle, j);\r\n        totalSegments += nSegments;\r\n    }\r\n    // Flatten nested arrays of arc/segment points\r\n    const arcSize = totalSegments * 3;\r\n    const sectorSize = totalSegments * 9;\r\n    const arcPosition1 = new Float32Array(arcSize);\r\n    const arcPosition2 = new Float32Array(arcSize);\r\n    const sectorPosition = new Float32Array(sectorSize);\r\n    let sectorOffset = 0;\r\n    let arcOffset = 0;\r\n    for (let i = 0; i < n; i++) {\r\n        const ap1 = arcPositionTmp1[i];\r\n        const ap2 = arcPositionTmp2[i];\r\n        copyArray(ap1, arcPosition1, 0, arcOffset, ap1.length);\r\n        copyArray(ap2, arcPosition2, 0, arcOffset, ap2.length);\r\n        arcOffset += ap1.length; // === ap2.length\r\n        const sp = sectorPositionTmp[i];\r\n        copyArray(sp, sectorPosition, 0, sectorOffset, sp.length);\r\n        sectorOffset += sp.length;\r\n    }\r\n    return {\r\n        labelPosition,\r\n        labelText,\r\n        vectorPosition1,\r\n        vectorPosition2,\r\n        arcPosition1,\r\n        arcPosition2,\r\n        sectorPosition\r\n    };\r\n}\r\nRepresentationRegistry.add('angle', AngleRepresentation);\r\nexport default AngleRepresentation;\r\n//# sourceMappingURL=angle-representation.js.map","/**\r\n * @file Axes Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color, Vector3 } from 'three';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { AxesPicker } from '../utils/picker.js';\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils.js';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\n/**\r\n * Axes representation. Show principal axes and/or a box aligned with them\r\n * that fits the structure or selection.\r\n *\r\n * __Name:__ _axes_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3pqr\", {\r\n *     assembly: \"BU1\"\r\n * } ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \"RET\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     o.addRepresentation( \"ball+stick\", { sele: \"RET\" } );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \":B and backbone\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     stage.autoView();\r\n *     var pa = o.structure.getPrincipalAxes();\r\n *     stage.animationControls.rotate( pa.getRotationQuaternion(), 1500 );\r\n * } );\r\n */\r\nclass AxesRepresentation extends StructureRepresentation {\r\n    /**\r\n     * @param  {Structure} structure - the structure object\r\n     * @param  {Viewer} viewer - the viewer object\r\n     * @param  {StructureRepresentationParameters} params - parameters object\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'axes';\r\n        this.parameters = Object.assign({\r\n            radiusSize: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            sphereDetail: true,\r\n            radialSegments: true,\r\n            disableImpostor: true,\r\n            showAxes: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            showBox: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            assembly: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.radiusSize = defaults(p.radiusSize, 0.5);\r\n        p.colorValue = defaults(p.colorValue, 'lightgreen');\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.showAxes = defaults(p.showAxes, true);\r\n        this.showBox = defaults(p.showBox, false);\r\n        super.init(p);\r\n    }\r\n    getPrincipalAxes() {\r\n        let selection;\r\n        const assembly = this.getAssembly();\r\n        if (assembly) {\r\n            selection = assembly.partList[0].getSelection();\r\n        }\r\n        return this.structureView.getPrincipalAxes(selection);\r\n    }\r\n    getAxesData(sview) {\r\n        const pa = this.getPrincipalAxes();\r\n        const c = new Color(this.colorValue);\r\n        let vn = 0;\r\n        let en = 0;\r\n        if (this.showAxes) {\r\n            vn += 6;\r\n            en += 3;\r\n        }\r\n        if (this.showBox) {\r\n            vn += 8;\r\n            en += 12;\r\n        }\r\n        const vertexPosition = new Float32Array(3 * vn);\r\n        const vertexColor = uniformArray3(vn, c.r, c.g, c.b);\r\n        const vertexRadius = uniformArray(vn, this.radiusSize);\r\n        const edgePosition1 = new Float32Array(3 * en);\r\n        const edgePosition2 = new Float32Array(3 * en);\r\n        const edgeColor = uniformArray3(en, c.r, c.g, c.b);\r\n        const edgeRadius = uniformArray(en, this.radiusSize);\r\n        let offset = 0;\r\n        if (this.showAxes) {\r\n            const addAxis = function (v1, v2) {\r\n                v1.toArray(vertexPosition, offset * 2);\r\n                v2.toArray(vertexPosition, offset * 2 + 3);\r\n                v1.toArray(edgePosition1, offset);\r\n                v2.toArray(edgePosition2, offset);\r\n                offset += 3;\r\n            };\r\n            addAxis(pa.begA, pa.endA);\r\n            addAxis(pa.begB, pa.endB);\r\n            addAxis(pa.begC, pa.endC);\r\n        }\r\n        if (this.showBox) {\r\n            const v = new Vector3();\r\n            const { d1a, d2a, d3a, d1b, d2b, d3b } = pa.getProjectedScaleForAtoms(sview);\r\n            // console.log(d1a, d2a, d3a, d1b, d2b, d3b)\r\n            let offset2 = offset * 2;\r\n            const addCorner = function (d1, d2, d3) {\r\n                v.copy(pa.center)\r\n                    .addScaledVector(pa.normVecA, d1)\r\n                    .addScaledVector(pa.normVecB, d2)\r\n                    .addScaledVector(pa.normVecC, d3);\r\n                v.toArray(vertexPosition, offset2);\r\n                offset2 += 3;\r\n            };\r\n            addCorner(d1a, d2a, d3a);\r\n            addCorner(d1a, d2a, d3b);\r\n            addCorner(d1a, d2b, d3b);\r\n            addCorner(d1a, d2b, d3a);\r\n            addCorner(d1b, d2b, d3b);\r\n            addCorner(d1b, d2b, d3a);\r\n            addCorner(d1b, d2a, d3a);\r\n            addCorner(d1b, d2a, d3b);\r\n            let edgeOffset = offset;\r\n            const addEdge = function (a, b) {\r\n                v.fromArray(vertexPosition, offset * 2 + a * 3)\r\n                    .toArray(edgePosition1, edgeOffset);\r\n                v.fromArray(vertexPosition, offset * 2 + b * 3)\r\n                    .toArray(edgePosition2, edgeOffset);\r\n                edgeOffset += 3;\r\n            };\r\n            addEdge(0, 1);\r\n            addEdge(0, 3);\r\n            addEdge(0, 6);\r\n            addEdge(1, 2);\r\n            addEdge(1, 7);\r\n            addEdge(2, 3);\r\n            addEdge(2, 4);\r\n            addEdge(3, 5);\r\n            addEdge(4, 5);\r\n            addEdge(4, 7);\r\n            addEdge(5, 6);\r\n            addEdge(6, 7);\r\n        }\r\n        const picker = new AxesPicker(pa);\r\n        return {\r\n            vertex: {\r\n                position: vertexPosition,\r\n                color: vertexColor,\r\n                radius: vertexRadius,\r\n                picking: picker\r\n            },\r\n            edge: {\r\n                position1: edgePosition1,\r\n                position2: edgePosition2,\r\n                color: edgeColor,\r\n                color2: edgeColor,\r\n                radius: edgeRadius,\r\n                picking: picker\r\n            }\r\n        };\r\n    }\r\n    create() {\r\n        const axesData = this.getAxesData(this.structureView);\r\n        this.sphereBuffer = new SphereBuffer(axesData.vertex, this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        this.cylinderBuffer = new CylinderBuffer(axesData.edge, this.getBufferParams({\r\n            openEnded: true,\r\n            radialSegments: this.radialSegments,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        this.dataList.push({\r\n            sview: this.structureView,\r\n            bufferList: [this.sphereBuffer, this.cylinderBuffer]\r\n        });\r\n    }\r\n    createData(sview) {\r\n        return;\r\n    }\r\n    updateData(what, data) {\r\n        const axesData = this.getAxesData(data.sview);\r\n        const sphereData = {};\r\n        const cylinderData = {};\r\n        if (!what || what.position) {\r\n            Object.assign(sphereData, {\r\n                position: axesData.vertex.position\r\n            });\r\n            Object.assign(cylinderData, {\r\n                position1: axesData.edge.position1,\r\n                position2: axesData.edge.position2\r\n            });\r\n        }\r\n        if (!what || what.color) {\r\n            Object.assign(sphereData, {\r\n                color: axesData.vertex.color\r\n            });\r\n            Object.assign(cylinderData, {\r\n                color: axesData.edge.color,\r\n                color2: axesData.edge.color\r\n            });\r\n        }\r\n        if (!what || what.radius) {\r\n            Object.assign(sphereData, {\r\n                radius: axesData.vertex.radius\r\n            });\r\n            Object.assign(cylinderData, {\r\n                radius: axesData.edge.radius\r\n            });\r\n        }\r\n        this.sphereBuffer.setAttributes(sphereData);\r\n        this.cylinderBuffer.setAttributes(cylinderData);\r\n    }\r\n}\r\nRepresentationRegistry.add('axes', AxesRepresentation);\r\nexport default AxesRepresentation;\r\n//# sourceMappingURL=axes-representation.js.map","/**\r\n * @file Backbone Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport BallAndStickRepresentation from './ballandstick-representation.js';\r\n/**\r\n * Backbone representation. Show cylinders (or lines) connecting .CA (protein)\r\n * or .C4'/.C3' (RNA/DNA) of polymers.\r\n *\r\n * __Name:__ _backbone_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1sfi\" ).then( function( o ){\r\n *     o.addRepresentation( \"backbone\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BackboneRepresentation extends BallAndStickRepresentation {\r\n    /**\r\n     * @param  {Structure} structure - the structure object\r\n     * @param  {Viewer} viewer - the viewer object\r\n     * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'backbone';\r\n        this.parameters = Object.assign({}, this.parameters, {\r\n            multipleBond: null,\r\n            bondSpacing: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.aspectRatio = defaults(p.aspectRatio, 1.0);\r\n        p.radiusSize = defaults(p.radiusSize, 0.25);\r\n        super.init(p);\r\n    }\r\n    getAtomRadius(atom) {\r\n        return atom.isTrace() ? super.getAtomRadius(atom) : 0;\r\n    }\r\n    getAtomData(sview, what, params) {\r\n        return sview.getBackboneAtomData(this.getAtomParams(what, params));\r\n    }\r\n    getBondData(sview, what, params) {\r\n        return sview.getBackboneBondData(this.getBondParams(what, params));\r\n    }\r\n}\r\nRepresentationRegistry.add('backbone', BackboneRepresentation);\r\nexport default BackboneRepresentation;\r\n//# sourceMappingURL=backbone-representation.js.map","/**\r\n * @file Base Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport BallAndStickRepresentation from './ballandstick-representation.js';\r\n/**\r\n * Base representation. Show cylinders for RNA/DNA ladders.\r\n *\r\n * __Name:__ _base_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1d66\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\", { sele: \"nucleic\" } );\r\n *     o.addRepresentation( \"base\", { color: \"resname\" } );\r\n *     o.autoView( \"nucleic\" );\r\n * } );\r\n */\r\nclass BaseRepresentation extends BallAndStickRepresentation {\r\n    /**\r\n     * @param  {Structure} structure - the structure object\r\n     * @param  {Viewer} viewer - the viewer object\r\n     * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'base';\r\n        this.parameters = Object.assign({}, this.parameters, {\r\n            multipleBond: null,\r\n            bondSpacing: null\r\n        });\r\n    }\r\n    init(params) {\r\n        let p = params || {};\r\n        p.aspectRatio = defaults(p.aspectRatio, 1.0);\r\n        p.radiusSize = defaults(p.radiusSize, 0.3);\r\n        super.init(p);\r\n    }\r\n    getAtomData(sview, what, params) {\r\n        return sview.getRungAtomData(this.getAtomParams(what, params));\r\n    }\r\n    getBondData(sview, what, params) {\r\n        let p = this.getBondParams(what, params);\r\n        Object.assign(p.colorParams, { rung: true });\r\n        return sview.getRungBondData(p);\r\n    }\r\n}\r\nRepresentationRegistry.add('base', BaseRepresentation);\r\nexport default BaseRepresentation;\r\n//# sourceMappingURL=base-representation.js.map","/**\r\n * @file Contact Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport { calculateContacts, getContactData, getLabelData } from '../chemistry/interactions/contact';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\nimport TextBuffer from '../buffer/text-buffer.js';\r\nimport { getFixedCountDashData } from '../geometry/dash';\r\n/**\r\n * Contact representation.\r\n */\r\nclass ContactRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'contact';\r\n        this.parameters = Object.assign({\r\n            hydrogenBond: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            weakHydrogenBond: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            waterHydrogenBond: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            backboneHydrogenBond: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            hydrophobic: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            halogenBond: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            ionicInteraction: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            metalCoordination: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            cationPi: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            piStacking: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            filterSele: {\r\n                type: 'text', rebuild: true\r\n            },\r\n            labelVisible: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            labelFixedSize: {\r\n                type: 'boolean', buffer: 'fixedSize'\r\n            },\r\n            labelSize: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001, rebuild: true\r\n            },\r\n            labelUnit: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: { '': '', angstrom: 'angstrom', nm: 'nm' }\r\n            },\r\n            maxHydrophobicDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxHbondDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxHbondSulfurDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxHbondAccAngle: {\r\n                type: 'integer', max: 180, min: 0, rebuild: true\r\n            },\r\n            maxHbondDonAngle: {\r\n                type: 'integer', max: 180, min: 0, rebuild: true\r\n            },\r\n            maxHbondAccPlaneAngle: {\r\n                type: 'integer', max: 90, min: 0, rebuild: true\r\n            },\r\n            maxHbondDonPlaneAngle: {\r\n                type: 'integer', max: 90, min: 0, rebuild: true\r\n            },\r\n            maxPiStackingDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxPiStackingOffset: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxPiStackingAngle: {\r\n                type: 'integer', max: 180, min: 0, rebuild: true\r\n            },\r\n            maxCationPiDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxCationPiOffset: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxIonicDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxHalogenBondDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            maxHalogenBondAngle: {\r\n                type: 'integer', max: 180, min: 0, rebuild: true\r\n            },\r\n            maxMetalDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n            },\r\n            refineSaltBridges: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            masterModelIndex: {\r\n                type: 'integer', max: 1000, min: -1, rebuild: true\r\n            },\r\n            lineOfSightDistFactor: {\r\n                type: 'number', precision: 1, max: 10, min: 0.0, rebuild: true\r\n            },\r\n            radialSegments: true,\r\n            disableImpostor: true\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.radiusSize = defaults(p.radiusSize, 0.05);\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.hydrogenBond = defaults(p.hydrogenBond, true);\r\n        this.weakHydrogenBond = defaults(p.weakHydrogenBond, false);\r\n        this.waterHydrogenBond = defaults(p.waterHydrogenBond, false);\r\n        this.backboneHydrogenBond = defaults(p.backboneHydrogenBond, false);\r\n        this.hydrophobic = defaults(p.hydrophobic, false);\r\n        this.halogenBond = defaults(p.halogenBond, true);\r\n        this.ionicInteraction = defaults(p.ionicInteraction, true);\r\n        this.metalCoordination = defaults(p.metalCoordination, true);\r\n        this.cationPi = defaults(p.cationPi, true);\r\n        this.piStacking = defaults(p.piStacking, true);\r\n        this.filterSele = defaults(p.filterSele, '');\r\n        this.labelVisible = defaults(p.labelVisible, false);\r\n        this.labelFixedSize = defaults(p.labelFixedSize, false);\r\n        this.labelSize = defaults(p.labelSize, 2.0);\r\n        this.labelUnit = defaults(p.labelUnit, '');\r\n        this.maxHydrophobicDist = defaults(p.maxHydrophobicDist, 4.0);\r\n        this.maxHbondDist = defaults(p.maxHbondDist, 3.5);\r\n        this.maxHbondSulfurDist = defaults(p.maxHbondSulfurDist, 4.1);\r\n        this.maxHbondAccAngle = defaults(p.maxHbondAccAngle, 45);\r\n        this.maxHbondDonAngle = defaults(p.maxHbondDonAngle, 45);\r\n        this.maxHbondAccPlaneAngle = defaults(p.maxHbondAccPlaneAngle, 90);\r\n        this.maxHbondDonPlaneAngle = defaults(p.maxHbondDonPlaneAngle, 30);\r\n        this.maxPiStackingDist = defaults(p.maxPiStackingDist, 5.5);\r\n        this.maxPiStackingOffset = defaults(p.maxPiStackingOffset, 2.0);\r\n        this.maxPiStackingAngle = defaults(p.maxPiStackingAngle, 30);\r\n        this.maxCationPiDist = defaults(p.maxCationPiDist, 6.0);\r\n        this.maxCationPiOffset = defaults(p.maxCationPiOffset, 2.0);\r\n        this.maxIonicDist = defaults(p.maxIonicDist, 5.0);\r\n        this.maxHalogenBondDist = defaults(p.maxHalogenBondDist, 3.5);\r\n        this.maxHalogenBondAngle = defaults(p.maxHalogenBondAngle, 30);\r\n        this.maxMetalDist = defaults(p.maxMetalDist, 3.0);\r\n        this.refineSaltBridges = defaults(p.refineSaltBridges, true);\r\n        this.masterModelIndex = defaults(p.masterModelIndex, -1);\r\n        this.lineOfSightDistFactor = defaults(p.lineOfSightDistFactor, 1.0);\r\n        super.init(p);\r\n    }\r\n    getAtomRadius() {\r\n        return 0;\r\n    }\r\n    getContactData(sview) {\r\n        const params = {\r\n            maxHydrophobicDist: this.maxHydrophobicDist,\r\n            maxHbondDist: this.maxHbondDist,\r\n            maxHbondSulfurDist: this.maxHbondSulfurDist,\r\n            maxHbondAccAngle: this.maxHbondAccAngle,\r\n            maxHbondDonAngle: this.maxHbondDonAngle,\r\n            maxHbondAccPlaneAngle: this.maxHbondAccPlaneAngle,\r\n            maxHbondDonPlaneAngle: this.maxHbondDonPlaneAngle,\r\n            maxPiStackingDist: this.maxPiStackingDist,\r\n            maxPiStackingOffset: this.maxPiStackingOffset,\r\n            maxPiStackingAngle: this.maxPiStackingAngle,\r\n            maxCationPiDist: this.maxCationPiDist,\r\n            maxCationPiOffset: this.maxCationPiOffset,\r\n            maxIonicDist: this.maxIonicDist,\r\n            maxHalogenBondDist: this.maxHalogenBondDist,\r\n            maxHalogenBondAngle: this.maxHalogenBondAngle,\r\n            maxMetalDist: this.maxMetalDist,\r\n            refineSaltBridges: this.refineSaltBridges,\r\n            masterModelIndex: this.masterModelIndex,\r\n            lineOfSightDistFactor: this.lineOfSightDistFactor\r\n        };\r\n        const dataParams = {\r\n            hydrogenBond: this.hydrogenBond,\r\n            weakHydrogenBond: this.weakHydrogenBond,\r\n            waterHydrogenBond: this.waterHydrogenBond,\r\n            backboneHydrogenBond: this.backboneHydrogenBond,\r\n            hydrophobic: this.hydrophobic,\r\n            halogenBond: this.halogenBond,\r\n            ionicInteraction: this.ionicInteraction,\r\n            metalCoordination: this.metalCoordination,\r\n            cationPi: this.cationPi,\r\n            piStacking: this.piStacking,\r\n            radius: this.radiusSize * this.radiusScale,\r\n            filterSele: this.filterSele\r\n        };\r\n        const contacts = calculateContacts(sview, params);\r\n        return getContactData(contacts, sview, dataParams);\r\n    }\r\n    createData(sview) {\r\n        const contactData = this.getContactData(sview);\r\n        const bufferList = [\r\n            new CylinderBuffer(getFixedCountDashData(contactData), this.getBufferParams({\r\n                sphereDetail: 1,\r\n                dullInterior: true,\r\n                disableImpostor: this.disableImpostor\r\n            }))\r\n        ];\r\n        if (this.labelVisible) {\r\n            const labelParams = {\r\n                size: this.labelSize,\r\n                unit: this.labelUnit\r\n            };\r\n            bufferList.push(new TextBuffer(getLabelData(contactData, labelParams), this.getBufferParams({ fixedSize: this.labelFixedSize })));\r\n        }\r\n        return { bufferList };\r\n    }\r\n}\r\nRepresentationRegistry.add('contact', ContactRepresentation);\r\nexport default ContactRepresentation;\r\n//# sourceMappingURL=contact-representation.js.map","/**\r\n * @file Dihedral Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport MeasurementRepresentation, { calcArcPoint, parseNestedAtoms } from './measurement-representation';\r\nimport { defaults } from '../utils';\r\nimport MeshBuffer from '../buffer/mesh-buffer';\r\nimport TextBuffer from '../buffer/text-buffer';\r\nimport WideLineBuffer from '../buffer/wideline-buffer';\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils';\r\nimport { v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray, v3length, v3negate, v3new, v3normalize, v3sub, v3toArray } from '../math/vector-utils';\r\nimport { RAD2DEG } from '../math/math-constants';\r\nimport { getFixedLengthWrappedDashData } from '../geometry/dash';\r\n/**\r\n * Dihedral representation object\r\n *\r\n * Reperesentation consists of three parts, visibility can be set for each\r\n * label - text label indicating dihedral angle\r\n * line - line indicating four positions that define the dihedral\r\n * sector - filled arc section\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass DihedralRepresentation extends MeasurementRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'dihedral';\r\n        this.parameters = Object.assign({\r\n            atomQuad: {\r\n                type: 'hidden', rebuild: true\r\n            },\r\n            extendLine: {\r\n                type: 'boolean', rebuild: true, default: true\r\n            },\r\n            lineVisible: {\r\n                type: 'boolean', default: true\r\n            },\r\n            planeVisible: {\r\n                type: 'boolean', default: true\r\n            },\r\n            sectorVisible: {\r\n                type: 'boolean', default: true\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.side = defaults(p.side, 'double');\r\n        p.opacity = defaults(p.opacity, 0.5);\r\n        this.atomQuad = defaults(p.atomQuad, []);\r\n        this.extendLine = defaults(p.extendLine, true);\r\n        this.lineVisible = defaults(p.lineVisible, true);\r\n        this.planeVisible = defaults(p.planeVisible, true);\r\n        this.sectorVisible = defaults(p.sectorVisible, true);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        if (!sview.atomCount || !this.atomQuad.length)\r\n            return;\r\n        const atomPosition = parseNestedAtoms(sview, this.atomQuad);\r\n        const dihedralData = getDihedralData(atomPosition, {\r\n            extendLine: this.extendLine\r\n        });\r\n        const n = this.n = dihedralData.labelText.length;\r\n        const labelColor = new Color(this.labelColor);\r\n        this.textBuffer = new TextBuffer({\r\n            position: dihedralData.labelPosition,\r\n            size: uniformArray(n, this.labelSize),\r\n            color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n            text: dihedralData.labelText\r\n        }, this.getLabelBufferParams());\r\n        const c = new Color(this.colorValue);\r\n        this.lineLength = dihedralData.linePosition1.length / 3;\r\n        const lineColor = uniformArray3(this.lineLength, c.r, c.g, c.b);\r\n        this.lineBuffer = new WideLineBuffer(getFixedLengthWrappedDashData({\r\n            position1: dihedralData.linePosition1,\r\n            position2: dihedralData.linePosition2,\r\n            color: lineColor,\r\n            color2: lineColor\r\n        }), this.getBufferParams({\r\n            linewidth: this.linewidth,\r\n            visible: this.lineVisible,\r\n            opacity: this.lineOpacity\r\n        }));\r\n        this.planeLength = dihedralData.planePosition.length / 3;\r\n        this.planeBuffer = new MeshBuffer({\r\n            position: dihedralData.planePosition,\r\n            color: uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n        }, this.getBufferParams({\r\n            visible: this.planeVisible\r\n        }));\r\n        this.sectorLength = dihedralData.sectorPosition.length / 3;\r\n        this.sectorBuffer = new MeshBuffer({\r\n            position: dihedralData.sectorPosition,\r\n            color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n        }, this.getBufferParams({\r\n            visible: this.sectorVisible\r\n        }));\r\n        return {\r\n            bufferList: [\r\n                this.textBuffer,\r\n                this.lineBuffer,\r\n                this.planeBuffer,\r\n                this.sectorBuffer\r\n            ]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        super.updateData(what, data);\r\n        const lineData = {};\r\n        const planeData = {};\r\n        const sectorData = {};\r\n        if (what.color) {\r\n            const c = new Color(this.colorValue);\r\n            Object.assign(lineData, {\r\n                color: uniformArray3(this.lineLength, c.r, c.g, c.b),\r\n                color2: uniformArray3(this.lineLength, c.r, c.g, c.b)\r\n            });\r\n            Object.assign(planeData, {\r\n                color: uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n            });\r\n            Object.assign(sectorData, {\r\n                color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n            });\r\n        }\r\n        this.lineBuffer.setAttributes(lineData);\r\n        this.planeBuffer.setAttributes(planeData);\r\n        this.sectorBuffer.setAttributes(sectorData);\r\n    }\r\n    setParameters(params) {\r\n        var rebuild = false;\r\n        var what = {};\r\n        super.setParameters(params, what, rebuild);\r\n        if (params && (params.lineVisible !== undefined ||\r\n            params.sectorVisible !== undefined ||\r\n            params.planeVisible !== undefined)) {\r\n            this.setVisibility(this.visible);\r\n        }\r\n        if (params && params.lineOpacity) {\r\n            this.lineBuffer.setParameters({ opacity: params.lineOpacity });\r\n        }\r\n        if (params && params.opacity !== undefined) {\r\n            this.lineBuffer.setParameters({ opacity: this.lineOpacity });\r\n        }\r\n        if (params && params.linewidth) {\r\n            this.lineBuffer.setParameters({ linewidth: params.linewidth });\r\n        }\r\n        return this;\r\n    }\r\n    setVisibility(value, noRenderRequest) {\r\n        super.setVisibility(value, true);\r\n        if (this.lineBuffer) {\r\n            this.lineBuffer.setVisibility(this.lineVisible && this.visible);\r\n        }\r\n        if (this.planeBuffer) {\r\n            this.planeBuffer.setVisibility(this.planeVisible && this.visible);\r\n        }\r\n        if (this.sectorBuffer) {\r\n            this.sectorBuffer.setVisibility(this.sectorVisible && this.visible);\r\n        }\r\n        if (!noRenderRequest)\r\n            this.viewer.requestRender();\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Build the data required to create {Buffer} objects, given positions\r\n * @param  {Float32Array} atomPosition 3*4*nDihedral array of coordinates\r\n * @return {Object}              Arrays for building buffers\r\n */\r\nfunction getDihedralData(position, params = {}) {\r\n    const angleStep = defaults(params.angleStep, Math.PI / 90);\r\n    const nPos = position.length;\r\n    const n = position.length / 12;\r\n    const angles = new Float32Array(n);\r\n    const labelPosition = new Float32Array(n * 3);\r\n    const labelText = new Array(n);\r\n    // Temporary arrays as don't know output length yet\r\n    const lineTmp1 = new Array(n);\r\n    const lineTmp2 = new Array(n);\r\n    const sectorTmp = new Array(n);\r\n    const planeTmp = new Array(n);\r\n    // Eventual sizes of output arrays\r\n    let totalLines = 0;\r\n    let totalSegments = 0;\r\n    let totalPlanes = 0;\r\n    const p1 = v3new();\r\n    const p2 = v3new();\r\n    const p3 = v3new();\r\n    const p4 = v3new();\r\n    const v21 = v3new();\r\n    const v23 = v3new();\r\n    const v34 = v3new();\r\n    const tmp = v3new();\r\n    const mid = v3new();\r\n    const inPlane1 = v3new();\r\n    const inPlane2 = v3new();\r\n    const start = v3new();\r\n    const end = v3new();\r\n    const cross = v3new();\r\n    const arcPoint = v3new();\r\n    let i = 0; // Actual output index (after skipping inappropriate)\r\n    for (var p = 0; p < nPos; p += 12) {\r\n        // Set Positions\r\n        v3fromArray(p1, position, p);\r\n        v3fromArray(p2, position, p + 3);\r\n        v3fromArray(p3, position, p + 6);\r\n        v3fromArray(p4, position, p + 9);\r\n        // Vectors between points\r\n        v3sub(v21, p1, p2);\r\n        v3sub(v23, p3, p2);\r\n        if (v3length(v23) === 0.0) {\r\n            continue; // Can't define axis\r\n        }\r\n        v3sub(v34, p4, p3);\r\n        v3multiplyScalar(tmp, v23, 0.5);\r\n        v3add(mid, p2, tmp);\r\n        v3normalize(v21, v21);\r\n        v3normalize(v23, v23);\r\n        v3normalize(v34, v34);\r\n        // Which side of plane are p1, p4 (are we measuring something that\r\n        // looks more like an improper? e.g. C, CA, CB, N)\r\n        v3sub(tmp, p1, mid);\r\n        const improperStart = v3dot(tmp, v23) > 0.0;\r\n        v3sub(tmp, p4, mid);\r\n        const improperEnd = v3dot(tmp, v23) < 0.0;\r\n        // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\r\n        v3multiplyScalar(tmp, v23, v3dot(v23, v21));\r\n        v3sub(inPlane1, v21, tmp);\r\n        v3multiplyScalar(tmp, v23, v3dot(v23, v34));\r\n        v3sub(inPlane2, v34, tmp);\r\n        if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\r\n            continue; // Indeterminate angle\r\n        }\r\n        v3normalize(inPlane1, inPlane1);\r\n        v3normalize(inPlane2, inPlane2);\r\n        // Can use acos as normalized and non-zero\r\n        const angle = angles[i] = Math.acos(v3dot(inPlane1, inPlane2));\r\n        labelText[i] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0);\r\n        v3cross(cross, inPlane1, v23);\r\n        v3normalize(cross, cross);\r\n        if (v3dot(cross, inPlane2) < 0.0) {\r\n            v3negate(cross, cross); // Ensure cp faces correct way\r\n        }\r\n        calcArcPoint(tmp, mid, inPlane1, cross, angle / 2.0);\r\n        v3toArray(tmp, labelPosition, 3 * i);\r\n        const nSegments = Math.ceil(angle / angleStep);\r\n        // For extended display mode, 4 straight lines plus arc/segment edge\r\n        // For non-extended, 2 straight lines plus segment edge\r\n        const nLines = nSegments + ((params.extendLine) ? 4 : 2);\r\n        // Don't draw planes if not extending lines\r\n        const nPlanes = params.extendLine ? 36 : 0;\r\n        const line1 = new Float32Array(nLines * 3);\r\n        const line2 = new Float32Array(nLines * 3);\r\n        const sector = new Float32Array(nSegments * 9);\r\n        // 2 planes, 2 triangles each per dihedral (2*2*9)\r\n        const plane = new Float32Array(nPlanes);\r\n        lineTmp1[i] = line1;\r\n        lineTmp2[i] = line2;\r\n        sectorTmp[i] = sector;\r\n        planeTmp[i] = plane;\r\n        // Start points for lines/planes, only required\r\n        // if extending lines\r\n        if (params.extendLine) {\r\n            if (improperStart) { // We'll start on the v3->1 line (tmp)\r\n                v3sub(tmp, p1, p3);\r\n                v3normalize(tmp, tmp);\r\n                v3multiplyScalar(start, tmp, 1.0 / v3dot(inPlane1, tmp));\r\n                v3add(start, start, p3);\r\n            }\r\n            else { // start on the 2->1 line\r\n                v3multiplyScalar(start, v21, 1.0 / v3dot(inPlane1, v21));\r\n                v3add(start, start, p2);\r\n            }\r\n            if (improperEnd) { // Finish on 2->4 line\r\n                v3sub(tmp, p4, p2);\r\n                v3normalize(tmp, tmp);\r\n                v3multiplyScalar(end, tmp, 1.0 / v3dot(inPlane2, tmp));\r\n                v3add(end, end, p2);\r\n            }\r\n            else { // end on the 3->4 line\r\n                v3multiplyScalar(end, v34, 1.0 / v3dot(inPlane2, v34));\r\n                v3add(end, end, p3);\r\n            }\r\n        }\r\n        v3add(arcPoint, mid, inPlane1);\r\n        // index into line1, line2\r\n        let li = 0;\r\n        // If extending lines, there's a bit of stuff to do here\r\n        // figuring out start and end positions\r\n        if (params.extendLine) {\r\n            v3toArray(p1, line1, li);\r\n            v3toArray(start, line2, li);\r\n            li += 3;\r\n            v3toArray(start, line1, li);\r\n            v3toArray(arcPoint, line2, li);\r\n            li += 3;\r\n            // Construct plane at start, if not extening lines\r\n            // this is skipped\r\n            v3toArray(start, plane, 0);\r\n            v3toArray(arcPoint, plane, 3);\r\n            v3toArray(improperStart ? p3 : p2, plane, 6);\r\n            v3toArray(improperStart ? p3 : p2, plane, 9);\r\n            v3toArray(arcPoint, plane, 12);\r\n            v3toArray(mid, plane, 15);\r\n        }\r\n        else {\r\n            // Not extending lines\r\n            v3toArray(mid, line1, li);\r\n            v3toArray(arcPoint, line2, li);\r\n            li += 3;\r\n        }\r\n        const appendArcSection = function (a, j) {\r\n            const si = j * 9;\r\n            v3toArray(mid, sector, si);\r\n            v3toArray(arcPoint, sector, si + 3);\r\n            v3toArray(arcPoint, line1, li);\r\n            calcArcPoint(arcPoint, mid, inPlane1, cross, a);\r\n            v3toArray(arcPoint, sector, si + 6);\r\n            v3toArray(arcPoint, line2, li);\r\n            li += 3;\r\n        };\r\n        let j = 0;\r\n        for (let a = angleStep; a < angle; a += angleStep) {\r\n            appendArcSection(a, j++);\r\n        }\r\n        appendArcSection(angle, j++);\r\n        if (params.extendLine) {\r\n            v3toArray(arcPoint, line1, (nLines - 2) * 3);\r\n            v3toArray(end, line2, (nLines - 2) * 3);\r\n            v3toArray(end, line1, (nLines - 1) * 3);\r\n            v3toArray(p4, line2, (nLines - 1) * 3);\r\n            // Construct plane at end\r\n            v3toArray(end, plane, 18);\r\n            v3toArray(arcPoint, plane, 21);\r\n            v3toArray(improperEnd ? p2 : p3, plane, 24);\r\n            v3toArray(improperEnd ? p2 : p3, plane, 27);\r\n            v3toArray(arcPoint, plane, 30);\r\n            v3toArray(mid, plane, 33);\r\n        }\r\n        else {\r\n            v3toArray(arcPoint, line1, li);\r\n            v3toArray(mid, line2, li);\r\n            li += 3;\r\n        }\r\n        totalLines += nLines * 3;\r\n        totalSegments += nSegments * 9;\r\n        totalPlanes += nPlanes;\r\n        i += 1;\r\n    }\r\n    const nSuccess = i;\r\n    const linePosition1 = new Float32Array(totalLines);\r\n    const linePosition2 = new Float32Array(totalLines);\r\n    const sectorPosition = new Float32Array(totalSegments);\r\n    const planePosition = new Float32Array(totalPlanes);\r\n    let lineOffset = 0;\r\n    let sectorOffset = 0;\r\n    let planeOffset = 0;\r\n    for (let i = 0; i < nSuccess; i++) {\r\n        const lp1 = lineTmp1[i];\r\n        const lp2 = lineTmp2[i];\r\n        const sp = sectorTmp[i];\r\n        const pp = planeTmp[i];\r\n        copyArray(lp1, linePosition1, 0, lineOffset, lp1.length);\r\n        copyArray(lp2, linePosition2, 0, lineOffset, lp2.length);\r\n        copyArray(sp, sectorPosition, 0, sectorOffset, sp.length);\r\n        copyArray(pp, planePosition, 0, planeOffset, pp.length);\r\n        lineOffset += lp1.length;\r\n        sectorOffset += sp.length;\r\n        planeOffset += pp.length;\r\n    }\r\n    return {\r\n        labelPosition: labelPosition.subarray(0, nSuccess * 3),\r\n        labelText: labelText.slice(0, nSuccess),\r\n        linePosition1,\r\n        linePosition2,\r\n        planePosition,\r\n        sectorPosition\r\n    };\r\n}\r\nRepresentationRegistry.add('dihedral', DihedralRepresentation);\r\nexport default DihedralRepresentation;\r\n//# sourceMappingURL=dihedral-representation.js.map","/**\r\n * @file Dihedral Histogram Representation\r\n * @author Rudolfs Petrovs <rudolfs.petrovs@astx.com>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport { calcArcPoint, parseNestedAtoms } from './measurement-representation';\r\nimport StructureRepresentation from './structure-representation';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport MeshBuffer from '../buffer/mesh-buffer';\r\nimport WideLineBuffer from '../buffer/wideline-buffer';\r\nimport { copyArray, uniformArray3, arraySum } from '../math/array-utils';\r\nimport { v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray, v3negate, v3new, v3normalize, v3sub, v3toArray, v3length } from '../math/vector-utils';\r\nconst pointLength = 3; // One Point Length (number of coordinates of one point in 3D)\r\nconst pointsInTriangle = 3;\r\nfunction createUpdatedObject(o, updateSource) {\r\n    function hasKey(obj, key) {\r\n        return key in obj;\r\n    }\r\n    const result = Object.assign({}, o); // Shallow copy\r\n    for (const key in result) {\r\n        if (hasKey(result, key) && hasKey(updateSource, key)) {\r\n            result[key] = defaults(updateSource[key], result[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createColorArray(color, arrayLength) {\r\n    const colorValue = new Color(color);\r\n    const targetArray = new Float32Array(arrayLength * 3);\r\n    uniformArray3(arrayLength, colorValue.r, colorValue.g, colorValue.b, targetArray);\r\n    return targetArray;\r\n}\r\n/**\r\n * Dihedral Histogram representation object\r\n *\r\n * Reperesentation consists of several parts:\r\n * opaqueMiddleDisc - opaque disc in the middle of the dihedral between front and back histograms\r\n * frontHistogram - circular histogram from the adjacent bond viewpoint\r\n * backHistogram - circular histogram from the distant bond viewpoint\r\n * histogramBinBorder - lines, which separate histogram bins\r\n * bondArrows - lines, which show the actual angle on the histogram disc\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {DihedralHistogramRepresentationParameters} params - Dihedral histogram representation parameters\r\n */\r\nclass DihedralHistogramRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'dihedral-histogram';\r\n        this.parameters = Object.assign({\r\n            histogramsData: {\r\n                type: 'hidden', rebuild: true\r\n            },\r\n            histogramBinBorderVisible: {\r\n                type: 'boolean', default: true\r\n            },\r\n            scaleBinToSectorArea: {\r\n                type: 'boolean',\r\n                rebuild: true,\r\n                default: false\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        const defaultColorData = {\r\n            histogramBinBorderColor: 'grey',\r\n            adjacentBondArrowColor: 'black',\r\n            distantBondArrowColor: 'magenta',\r\n            frontHistogramColor: 'green',\r\n            backHistogramColor: 'blue',\r\n            opaqueMiddleDiscColor: 'white'\r\n        };\r\n        const colorData = createUpdatedObject(defaultColorData, p);\r\n        Object.assign(this, colorData);\r\n        const defaultParameters = {\r\n            histogramsData: [],\r\n            histogramOpacity: 1.0,\r\n            opaqueMiddleDiscVisible: true,\r\n            opaqueMiddleDiscOpacity: 1.0,\r\n            histogramBinBorderVisible: true,\r\n            histogramBinBorderWidth: 1,\r\n            histogramBinBorderOpacity: 0.5,\r\n            bondArrowVisible: true,\r\n            bondArrowWidth: 2,\r\n            bondArrowOpacity: 1.0,\r\n            scaleBinToSectorArea: false,\r\n        };\r\n        const parameters = createUpdatedObject(defaultParameters, p);\r\n        Object.assign(this, parameters);\r\n        this.histogramsData.forEach(x => {\r\n            const specificColorData = createUpdatedObject(colorData, x);\r\n            Object.assign(x, specificColorData);\r\n        });\r\n        p.side = defaults(p.side, 'double');\r\n        p.opacity = defaults(p.opacity, 0.5);\r\n        p.radiusType = defaults(p.radiusType, 'size');\r\n        p.radiusSize = defaults(p.radiusSize, 0.15);\r\n        super.init(p);\r\n    }\r\n    getHistogramBinBorderBufferParameters() {\r\n        return this.getBufferParams({\r\n            linewidth: this.histogramBinBorderWidth,\r\n            visible: this.histogramBinBorderVisible,\r\n            opacity: this.histogramBinBorderOpacity,\r\n        });\r\n    }\r\n    getBondArrowsBufferParameters() {\r\n        return this.getBufferParams({\r\n            linewidth: this.bondArrowWidth,\r\n            visible: this.bondArrowVisible,\r\n            opacity: this.bondArrowOpacity,\r\n        });\r\n    }\r\n    getOpaqueMiddleDiscBufferParameters() {\r\n        return this.getBufferParams({\r\n            visible: this.opaqueMiddleDiscVisible,\r\n            opacity: this.opaqueMiddleDiscOpacity\r\n        });\r\n    }\r\n    getHistogramBufferParameters() {\r\n        return this.getBufferParams({\r\n            visible: true,\r\n            opacity: this.histogramOpacity,\r\n            side: \"double\"\r\n        });\r\n    }\r\n    createData(sview) {\r\n        if (!sview.atomCount || !this.histogramsData.length)\r\n            return;\r\n        this.histogramsData.forEach(x => x.atomPositions = parseNestedAtoms(sview, [x.atomQuad]));\r\n        const scaleData = this.scaleBinToSectorArea ? function (y) { return Math.sqrt(y); } : function (y) { return y; };\r\n        this.histogramsData.forEach(x => x.histogram360Scaled = x.histogram360.map(scaleData));\r\n        function Float32Concat(arrays) {\r\n            const lengths = arrays.map(x => x.length);\r\n            const result = new Float32Array(arraySum(lengths));\r\n            let accumulatedOffset = 0;\r\n            for (let i = 0; i < arrays.length; i++) {\r\n                result.set(arrays[i], accumulatedOffset);\r\n                accumulatedOffset += arrays[i].length;\r\n            }\r\n            return result;\r\n        }\r\n        function createWideLineBuffer(linesList, params) {\r\n            return new WideLineBuffer({\r\n                position1: Float32Concat(linesList.map(x => x.startPoints)),\r\n                position2: Float32Concat(linesList.map(x => x.endPoints)),\r\n                color: Float32Concat(linesList.map(x => x.startColors)),\r\n                color2: Float32Concat(linesList.map(x => x.endColors)),\r\n            }, params);\r\n        }\r\n        function createMeshBuffer(mesh, params) {\r\n            return new MeshBuffer({\r\n                position: Float32Concat(mesh.map(x => x.triangles)),\r\n                color: Float32Concat(mesh.map(x => x.triangleColors))\r\n            }, params);\r\n        }\r\n        const dihedralDataArray = [];\r\n        for (let i = 0; i < this.histogramsData.length; i++) {\r\n            let dihedralData = undefined;\r\n            let currentHistogramData = this.histogramsData[i];\r\n            let currentHistogram360 = currentHistogramData.histogram360;\r\n            if (currentHistogram360.length >= 3) {\r\n                dihedralData = calculateDihedralHistogram(currentHistogramData);\r\n            }\r\n            if (typeof dihedralData === \"undefined\")\r\n                continue;\r\n            dihedralDataArray.push(dihedralData);\r\n        }\r\n        this.frontHistogramBinBordersBuffer = createWideLineBuffer(dihedralDataArray.map(x => x.frontHistogramBinBorders), this.getHistogramBinBorderBufferParameters());\r\n        this.backHistogramBinBordersBuffer = createWideLineBuffer(dihedralDataArray.map(x => x.backHistogramBinBorders), this.getHistogramBinBorderBufferParameters());\r\n        this.adjacentBondArrowsBuffer = createWideLineBuffer(dihedralDataArray.map(x => x.adjacentBondArrows), this.getBondArrowsBufferParameters());\r\n        this.distantBondArrowsBuffer = createWideLineBuffer(dihedralDataArray.map(x => x.distantBondArrows), this.getBondArrowsBufferParameters());\r\n        this.opaqueMiddleDiscBuffer = createMeshBuffer(dihedralDataArray.map(x => x.opaqueMiddleDisc), this.getOpaqueMiddleDiscBufferParameters());\r\n        this.frontHistogramBuffer = createMeshBuffer(dihedralDataArray.map(x => x.frontHistogram), this.getHistogramBufferParameters());\r\n        this.backHistogramBuffer = createMeshBuffer(dihedralDataArray.map(x => x.backHistogram), this.getHistogramBufferParameters());\r\n        return {\r\n            bufferList: [].concat(this.frontHistogramBinBordersBuffer, this.backHistogramBinBordersBuffer, this.adjacentBondArrowsBuffer, this.distantBondArrowsBuffer, this.opaqueMiddleDiscBuffer, this.frontHistogramBuffer, this.backHistogramBuffer)\r\n        };\r\n    }\r\n    setParameters(params) {\r\n        const rebuild = false;\r\n        const what = {};\r\n        super.setParameters(params, what, rebuild);\r\n        if (params && (params.histogramBinBorderVisible !== undefined)) {\r\n            this.setVisibility(this.visible);\r\n        }\r\n        return this;\r\n    }\r\n    setVisibility(value, noRenderRequest) {\r\n        super.setVisibility(value, true);\r\n        if (this.frontHistogramBinBordersBuffer) {\r\n            this.frontHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible);\r\n        }\r\n        if (this.backHistogramBinBordersBuffer) {\r\n            this.backHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible);\r\n        }\r\n        if (!noRenderRequest)\r\n            this.viewer.requestRender();\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * Calculates the data required to create {Buffer} objects for one histogram, given positions\r\n * @param  Float32Array positionOfDihedralAtoms 3*4 array of coordinates\r\n * @param  NumberArray histogram array of coordinates\r\n * @return Arrays for building buffers\r\n */\r\nfunction calculateDihedralHistogram(histogramData) {\r\n    const positionOfDihedralAtoms = histogramData.atomPositions;\r\n    const histogram = histogramData.histogram360Scaled;\r\n    const totalSectorTrianglesInOpaqueMiddleDisc = histogram.length <= 180 ? 360 : histogram.length * 2;\r\n    const frontAndBack = 2;\r\n    const opaqueMiddleDisc = {\r\n        triangles: new Float32Array(totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle * pointLength),\r\n        triangleColors: createColorArray(histogramData.opaqueMiddleDiscColor, totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle)\r\n    };\r\n    const frontHistogram = {\r\n        triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\r\n        triangleColors: createColorArray(histogramData.frontHistogramColor, histogram.length * pointsInTriangle)\r\n    };\r\n    const backHistogram = {\r\n        triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\r\n        triangleColors: createColorArray(histogramData.backHistogramColor, histogram.length * pointsInTriangle)\r\n    };\r\n    const frontHistogramBinBorders = {\r\n        startPoints: new Float32Array(histogram.length * pointLength),\r\n        endPoints: new Float32Array(histogram.length * pointLength),\r\n        startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\r\n        endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\r\n    };\r\n    const backHistogramBinBorders = {\r\n        startPoints: new Float32Array(histogram.length * pointLength),\r\n        endPoints: new Float32Array(histogram.length * pointLength),\r\n        startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\r\n        endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\r\n    };\r\n    const adjacentBondArrows = {\r\n        startPoints: new Float32Array(frontAndBack * pointLength),\r\n        endPoints: new Float32Array(frontAndBack * pointLength),\r\n        startColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length),\r\n        endColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length)\r\n    };\r\n    const distantBondArrows = {\r\n        startPoints: new Float32Array(frontAndBack * pointLength),\r\n        endPoints: new Float32Array(frontAndBack * pointLength),\r\n        startColors: createColorArray(histogramData.distantBondArrowColor, histogram.length),\r\n        endColors: createColorArray(histogramData.distantBondArrowColor, histogram.length)\r\n    };\r\n    const p1 = v3new();\r\n    const p2 = v3new();\r\n    const p3 = v3new();\r\n    const p4 = v3new();\r\n    const v21 = v3new();\r\n    const v23 = v3new();\r\n    const v32 = v3new();\r\n    const v34 = v3new();\r\n    const mid = v3new();\r\n    const inPlane1 = v3new();\r\n    const inPlane2 = v3new();\r\n    const cross1 = v3new();\r\n    const cross2 = v3new();\r\n    const arcPoint = v3new();\r\n    const tmp = v3new();\r\n    const tmp2 = v3new();\r\n    // Set Atom Coordinates\r\n    const dihedralAtomVectors = [p1, p2, p3, p4];\r\n    for (let i = 0; i < dihedralAtomVectors.length; i++) {\r\n        v3fromArray(dihedralAtomVectors[i], positionOfDihedralAtoms, i * pointLength);\r\n    }\r\n    // Vectors between points\r\n    v3sub(v21, p1, p2);\r\n    v3sub(v23, p3, p2);\r\n    v3sub(v34, p4, p3);\r\n    if (v3length(v23) === 0.0) {\r\n        return; // Can't define axis\r\n    }\r\n    v3multiplyScalar(tmp, v23, 0.5);\r\n    v3add(mid, p2, tmp);\r\n    v3normalize(v21, v21);\r\n    v3normalize(v23, v23);\r\n    v3normalize(v34, v34);\r\n    v3negate(v32, v23);\r\n    // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\r\n    v3multiplyScalar(tmp, v32, v3dot(v32, v21));\r\n    v3sub(inPlane1, v21, tmp);\r\n    v3multiplyScalar(tmp, v23, v3dot(v23, v34));\r\n    v3sub(inPlane2, v34, tmp);\r\n    if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\r\n        return; // Indeterminate angle\r\n    }\r\n    v3normalize(inPlane1, inPlane1);\r\n    v3normalize(inPlane2, inPlane2);\r\n    // Can use acos as normalized and non-zero\r\n    const absAngle = Math.acos(v3dot(inPlane1, inPlane2));\r\n    v3cross(cross1, v32, inPlane1);\r\n    v3cross(cross2, v23, inPlane2);\r\n    v3normalize(cross1, cross1);\r\n    v3normalize(cross2, cross2);\r\n    let angle = absAngle;\r\n    if (v3dot(cross1, inPlane2) < 0.0) {\r\n        angle = -absAngle;\r\n    }\r\n    v3add(arcPoint, mid, inPlane1);\r\n    // Calculate necessary constants\r\n    const maxHist = Math.max.apply(null, histogram);\r\n    const histBinAngleStep = (Math.PI * 2) / histogram.length;\r\n    function setHistogramBinCoordinates(out, ind, zeroDegreeVector, crossVector, histBinAngleStep) {\r\n        const startOffset = ind * pointsInTriangle * pointLength;\r\n        v3toArray(mid, out, startOffset);\r\n        const scalingFactor = Number(histogram[ind]) / maxHist;\r\n        v3multiplyScalar(tmp, zeroDegreeVector, scalingFactor);\r\n        v3multiplyScalar(tmp2, crossVector, scalingFactor);\r\n        calcArcPoint(arcPoint, mid, tmp, tmp2, ind * histBinAngleStep);\r\n        v3toArray(arcPoint, out, startOffset + 1 * pointLength);\r\n        calcArcPoint(arcPoint, mid, tmp, tmp2, (ind + 1) * histBinAngleStep);\r\n        v3toArray(arcPoint, out, startOffset + 2 * pointLength);\r\n    }\r\n    function setOneSideHistogram(discHistogram, binBorders, ind, zeroDegreeVector, crossVector) {\r\n        // Set Bond Arrows\r\n        copyArray(mid, adjacentBondArrows.startPoints, 0, ind * pointLength, mid.length);\r\n        calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * 0);\r\n        copyArray(tmp, adjacentBondArrows.endPoints, 0, ind * pointLength, mid.length);\r\n        copyArray(mid, distantBondArrows.startPoints, 0, ind * pointLength, mid.length);\r\n        calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, angle);\r\n        copyArray(tmp, distantBondArrows.endPoints, 0, ind * pointLength, mid.length);\r\n        // Set Histogram Bin Borders\r\n        for (let i = 0; i < histogram.length; i++) {\r\n            copyArray(mid, binBorders.startPoints, 0, i * 3, mid.length);\r\n            calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * i);\r\n            copyArray(tmp, binBorders.endPoints, 0, i * 3, tmp.length);\r\n        }\r\n        // Set Histogram Bins\r\n        for (let sectionIndex = 0; sectionIndex < histogram.length; sectionIndex++) {\r\n            setHistogramBinCoordinates(discHistogram.triangles, sectionIndex, zeroDegreeVector, crossVector, histBinAngleStep);\r\n        }\r\n    }\r\n    // Opaque disc\r\n    const opaqueCircleSectorAngleStep = Math.PI * 2 / totalSectorTrianglesInOpaqueMiddleDisc;\r\n    for (let sectionIndex = 0; sectionIndex < totalSectorTrianglesInOpaqueMiddleDisc; sectionIndex++) {\r\n        const startOffset = sectionIndex * pointsInTriangle * pointLength;\r\n        v3toArray(mid, opaqueMiddleDisc.triangles, startOffset);\r\n        calcArcPoint(arcPoint, mid, inPlane1, cross1, sectionIndex * opaqueCircleSectorAngleStep);\r\n        v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 1 * pointLength);\r\n        calcArcPoint(arcPoint, mid, inPlane1, cross1, (sectionIndex + 1) * opaqueCircleSectorAngleStep);\r\n        v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 2 * pointLength);\r\n    }\r\n    // Front Histogram\r\n    const distanceToOpaqueDisc = 0.01;\r\n    v3multiplyScalar(tmp, v23, -distanceToOpaqueDisc); // Get a vector to move \"mid\" just a bit from opaque disc\r\n    v3add(mid, mid, tmp);\r\n    setOneSideHistogram(frontHistogram, frontHistogramBinBorders, 0, inPlane1, cross1);\r\n    // Back Histogram\r\n    v3multiplyScalar(tmp, v23, 2 * distanceToOpaqueDisc); // Get a vector to move \"mid\" back and plus just a bit from opaque disc the other way\r\n    v3add(mid, mid, tmp);\r\n    setOneSideHistogram(backHistogram, backHistogramBinBorders, 1, inPlane2, cross2);\r\n    return {\r\n        opaqueMiddleDisc,\r\n        frontHistogram,\r\n        backHistogram,\r\n        frontHistogramBinBorders,\r\n        backHistogramBinBorders,\r\n        adjacentBondArrows,\r\n        distantBondArrows\r\n    };\r\n}\r\nRepresentationRegistry.add('dihedral-histogram', DihedralHistogramRepresentation);\r\nexport default DihedralHistogramRepresentation;\r\n//# sourceMappingURL=dihedral-histogram-representation.js.map","/**\r\n * @file Distance Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { Color } from 'three';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { DistancePicker } from '../utils/picker';\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils';\r\nimport BitArray from '../utils/bitarray';\r\nimport MeasurementRepresentation from './measurement-representation';\r\nimport Selection from '../selection/selection';\r\nimport BondStore from '../store/bond-store';\r\nimport TextBuffer from '../buffer/text-buffer';\r\nimport WideLineBuffer from '../buffer/wideline-buffer';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer';\r\nimport { getFixedLengthDashData } from '../geometry/dash';\r\n/**\r\n * Distance representation\r\n */\r\nclass DistanceRepresentation extends MeasurementRepresentation {\r\n    /**\r\n     * Create Distance representation object\r\n     * @example\r\n     * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n     *     o.addRepresentation( \"cartoon\" );\r\n     *     // either give selections (uses first selected atom) ...\r\n     *     var atomPair = [ [ \"1.CA\", \"4.CA\" ], [ \"7.CA\", \"13.CA\" ] ];\r\n     *     // or atom indices\r\n     *     var atomPair = [ [ 8, 28 ], [ 173, 121 ] ];\r\n     *     o.addRepresentation( \"distance\", { atomPair: atomPair } );\r\n     *     stage.autoView();\r\n     * } );\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {DistanceRepresentationParameters} params - distance representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'distance';\r\n        this.parameters = Object.assign({\r\n            radialSegments: true,\r\n            openEnded: true,\r\n            disableImpostor: true,\r\n            labelUnit: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: { '': '', angstrom: 'angstrom', nm: 'nm' }\r\n            },\r\n            useCylinder: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            atomPair: {\r\n                type: 'hidden', rebuild: true\r\n            }\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.linewidth = defaults(p.linewidth, 5.0);\r\n        p.radiusType = defaults(p.radiusType, 'size');\r\n        p.radiusSize = defaults(p.radiusSize, 0.2);\r\n        this.labelUnit = defaults(p.labelUnit, '');\r\n        this.useCylinder = defaults(p.useCylinder, false);\r\n        this.atomPair = defaults(p.atomPair, []);\r\n        super.init(p);\r\n    }\r\n    getDistanceData(sview, atomPair) {\r\n        let n = atomPair.length;\r\n        const text = new Array(n);\r\n        let position = new Float32Array(n * 3);\r\n        const sele1 = new Selection();\r\n        const sele2 = new Selection();\r\n        const bondStore = new BondStore();\r\n        const ap1 = sview.getAtomProxy();\r\n        const ap2 = sview.getAtomProxy();\r\n        let j = 0; // Skipped pairs\r\n        const selected = sview.getAtomSet();\r\n        atomPair.forEach((pair, i) => {\r\n            let v1 = pair[0];\r\n            let v2 = pair[1];\r\n            if (typeof (v1) === 'number' && Number.isInteger(v1) && typeof (v2) === 'number' && Number.isInteger(v2)) {\r\n                if (selected.get(v1) && selected.get(v2)) {\r\n                    ap1.index = v1;\r\n                    ap2.index = v2;\r\n                }\r\n                else {\r\n                    j += 1;\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                sele1.setString(v1);\r\n                sele2.setString(v2);\r\n                var atomIndices1 = sview.getAtomIndices(sele1);\r\n                var atomIndices2 = sview.getAtomIndices(sele2);\r\n                if (atomIndices1.length && atomIndices2.length) {\r\n                    ap1.index = atomIndices1[0];\r\n                    ap2.index = atomIndices2[0];\r\n                }\r\n                else {\r\n                    j += 1;\r\n                    return;\r\n                }\r\n            }\r\n            bondStore.addBond(ap1, ap2, 1);\r\n            i -= j;\r\n            var d = ap1.distanceTo(ap2);\r\n            switch (this.labelUnit) {\r\n                case 'angstrom':\r\n                    text[i] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B);\r\n                    break;\r\n                case 'nm':\r\n                    text[i] = (d / 10).toFixed(2) + ' nm';\r\n                    break;\r\n                default:\r\n                    text[i] = d.toFixed(2);\r\n                    break;\r\n            }\r\n            var i3 = i * 3;\r\n            position[i3 + 0] = (ap1.x + ap2.x) / 2;\r\n            position[i3 + 1] = (ap1.y + ap2.y) / 2;\r\n            position[i3 + 2] = (ap1.z + ap2.z) / 2;\r\n        });\r\n        if (j > 0) {\r\n            n -= j;\r\n            position = position.subarray(0, n * 3);\r\n        }\r\n        var bondSet = new BitArray(bondStore.count, true);\r\n        return {\r\n            text: text,\r\n            position: position,\r\n            bondSet: bondSet,\r\n            bondStore: bondStore\r\n        };\r\n    }\r\n    getBondData(sview, what, params) {\r\n        const bondData = sview.getBondData(this.getBondParams(what, params));\r\n        if (bondData.picking) {\r\n            bondData.picking = new DistancePicker(bondData.picking.array, bondData.picking.structure, params.bondStore);\r\n        }\r\n        return bondData;\r\n    }\r\n    createData(sview) {\r\n        if (!sview.atomCount || !this.atomPair.length)\r\n            return;\r\n        const n = this.atomPair.length;\r\n        const c = new Color(this.labelColor);\r\n        const distanceData = this.getDistanceData(sview, this.atomPair);\r\n        this.textBuffer = new TextBuffer({\r\n            position: distanceData.position,\r\n            size: uniformArray(n, this.labelSize),\r\n            color: uniformArray3(n, c.r, c.g, c.b),\r\n            text: distanceData.text\r\n        }, this.getLabelBufferParams());\r\n        const bondParams = {\r\n            bondSet: distanceData.bondSet,\r\n            bondStore: distanceData.bondStore\r\n        };\r\n        const bondData = this.getBondData(sview, { position: true, color: true, picking: true, radius: this.useCylinder }, bondParams);\r\n        if (this.useCylinder) {\r\n            this.distanceBuffer = new CylinderBuffer(bondData, this.getBufferParams({\r\n                openEnded: this.openEnded,\r\n                radialSegments: this.radialSegments,\r\n                disableImpostor: this.disableImpostor,\r\n                dullInterior: true\r\n            }));\r\n        }\r\n        else {\r\n            this.distanceBuffer = new WideLineBuffer(getFixedLengthDashData(bondData), this.getBufferParams({\r\n                linewidth: this.linewidth,\r\n                visible: this.lineVisible,\r\n                opacity: this.lineOpacity\r\n            }));\r\n        }\r\n        return {\r\n            bondSet: distanceData.bondSet,\r\n            bondStore: distanceData.bondStore,\r\n            position: distanceData.position,\r\n            bufferList: [this.textBuffer, this.distanceBuffer]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        super.updateData(what, data);\r\n        const bondParams = {\r\n            bondSet: data.bondSet,\r\n            bondStore: data.bondStore\r\n        };\r\n        const bondData = this.getBondData(data.sview, what, bondParams);\r\n        const distanceData = {};\r\n        if (!what || what.color) {\r\n            Object.assign(distanceData, {\r\n                color: bondData.color,\r\n                color2: bondData.color2\r\n            });\r\n        }\r\n        if (!what || what.radius) {\r\n            Object.assign(distanceData, { radius: bondData.radius });\r\n        }\r\n        this.distanceBuffer.setAttributes(distanceData);\r\n    }\r\n    setParameters(params) {\r\n        let rebuild = false;\r\n        const what = {};\r\n        super.setParameters(params, what, rebuild);\r\n        if (!this.useCylinder) {\r\n            if (params && params.lineOpacity) {\r\n                this.distanceBuffer.setParameters({ opacity: params.lineOpacity });\r\n            }\r\n            if (params && params.opacity !== undefined) {\r\n                this.distanceBuffer.setParameters({ opacity: this.lineOpacity });\r\n            }\r\n            if (params && params.linewidth) {\r\n                this.distanceBuffer.setParameters({ linewidth: params.linewidth });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('distance', DistanceRepresentation);\r\nexport default DistanceRepresentation;\r\n//# sourceMappingURL=distance-representation.js.map","/**\r\n * @file Vector Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color } from 'three';\r\nimport '../shader/Line.vert';\r\nimport '../shader/Line.frag';\r\nimport { uniformArray3 } from '../math/array-utils';\r\nimport Buffer, { BufferDefaultParameters } from './buffer';\r\nfunction getSize(data) {\r\n    const n = data.position.length / 3;\r\n    return n * 2 * 3;\r\n}\r\nexport const VectorBufferDefaultParameters = Object.assign({\r\n    scale: 1,\r\n    color: 'grey'\r\n}, BufferDefaultParameters);\r\n/**\r\n * Vector buffer. Draws vectors as lines.\r\n */\r\nclass VectorBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.vector - vectors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super({\r\n            position: new Float32Array(getSize(data)),\r\n            color: new Float32Array(getSize(data))\r\n        }, params);\r\n        this.isLine = true;\r\n        this.vertexShader = 'Line.vert';\r\n        this.fragmentShader = 'Line.frag';\r\n        const color = new Color(this.parameters.color);\r\n        const attributes = this.geometry.attributes; // TODO\r\n        uniformArray3(getSize(data) / 3, color.r, color.g, color.b, attributes.color.array);\r\n        this.setAttributes(data);\r\n    }\r\n    get defaultParameters() { return VectorBufferDefaultParameters; }\r\n    setAttributes(data = {}) {\r\n        const attributes = this.geometry.attributes; // TODO\r\n        let position, vector;\r\n        let aPosition;\r\n        if (data.position && data.vector) {\r\n            position = data.position;\r\n            vector = data.vector;\r\n            aPosition = attributes.position.array;\r\n            attributes.position.needsUpdate = true;\r\n        }\r\n        const n = this.size / 2;\r\n        const scale = this.parameters.scale;\r\n        if (position && vector) {\r\n            for (let v = 0; v < n; v++) {\r\n                const i = v * 2 * 3;\r\n                const j = v * 3;\r\n                aPosition[i + 0] = position[j + 0];\r\n                aPosition[i + 1] = position[j + 1];\r\n                aPosition[i + 2] = position[j + 2];\r\n                aPosition[i + 3] = position[j + 0] + vector[j + 0] * scale;\r\n                aPosition[i + 4] = position[j + 1] + vector[j + 1] * scale;\r\n                aPosition[i + 5] = position[j + 2] + vector[j + 2] * scale;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default VectorBuffer;\r\n//# sourceMappingURL=vector-buffer.js.map","/**\r\n * @file Helixorient Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Helixorient from '../geometry/helixorient.js';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport VectorBuffer from '../buffer/vector-buffer.js';\r\n/**\r\n * Helixorient Representation\r\n */\r\nclass HelixorientRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'helixorient';\r\n        this.parameters = Object.assign({\r\n            sphereDetail: true,\r\n            disableImpostor: true\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'sstruc');\r\n        p.radiusType = defaults(p.radiusType, 'size');\r\n        p.radiusSize = defaults(p.radiusSize, 0.15);\r\n        p.radiusScale = defaults(p.radiusScale, 1.0);\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        const bufferList = [];\r\n        const polymerList = [];\r\n        this.structure.eachPolymer(polymer => {\r\n            if (polymer.residueCount < 4)\r\n                return;\r\n            polymerList.push(polymer);\r\n            const helixorient = new Helixorient(polymer);\r\n            const position = helixorient.getPosition();\r\n            const color = helixorient.getColor(this.getColorParams());\r\n            const size = helixorient.getSize(this.getRadiusParams());\r\n            const picking = helixorient.getPicking();\r\n            bufferList.push(new SphereBuffer({\r\n                position: position.center,\r\n                color: color.color,\r\n                radius: size.size,\r\n                picking: picking.picking\r\n            }, this.getBufferParams({\r\n                sphereDetail: this.sphereDetail,\r\n                disableImpostor: this.disableImpostor,\r\n                dullInterior: true\r\n            })), new VectorBuffer({\r\n                position: position.center,\r\n                vector: position.axis\r\n            }, this.getBufferParams({\r\n                color: 'skyblue',\r\n                scale: 1\r\n            })), new VectorBuffer({\r\n                position: position.center,\r\n                vector: position.resdir\r\n            }, this.getBufferParams({\r\n                color: 'lightgreen',\r\n                scale: 1\r\n            })));\r\n        }, sview.getSelection());\r\n        return {\r\n            bufferList: bufferList,\r\n            polymerList: polymerList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        if (Debug)\r\n            Log.time(this.type + ' repr update');\r\n        what = what || {};\r\n        for (let i = 0, il = data.polymerList.length; i < il; ++i) {\r\n            const j = i * 3;\r\n            const bufferData = {};\r\n            const polymer = data.polymerList[i];\r\n            const helixorient = new Helixorient(polymer);\r\n            if (what.position) {\r\n                const position = helixorient.getPosition();\r\n                Object.assign(bufferData, { position: position.center });\r\n                data.bufferList[j + 1].setAttributes({\r\n                    'position': position.center,\r\n                    'vector': position.axis\r\n                });\r\n                data.bufferList[j + 2].setAttributes({\r\n                    'position': position.center,\r\n                    'vector': position.resdir\r\n                });\r\n            }\r\n            data.bufferList[j].setAttributes(bufferData);\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd(this.type + ' repr update');\r\n    }\r\n}\r\nRepresentationRegistry.add('helixorient', HelixorientRepresentation);\r\nexport default HelixorientRepresentation;\r\n//# sourceMappingURL=helixorient-representation.js.map","/**\r\n * @file Licorice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport BallAndStickRepresentation from './ballandstick-representation.js';\r\n/**\r\n * Licorice representation object ({@link BallAndStickRepresentation} with `aspectRatio` fixed at 1.0)\r\n */\r\nclass LicoriceRepresentation extends BallAndStickRepresentation {\r\n    /**\r\n     * Create Licorice representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'licorice';\r\n        this.parameters = Object.assign({}, this.parameters, { aspectRatio: null });\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.aspectRatio = 1.0;\r\n        super.init(p);\r\n    }\r\n}\r\nRepresentationRegistry.add('licorice', LicoriceRepresentation);\r\nexport default LicoriceRepresentation;\r\n//# sourceMappingURL=licorice-representation.js.map","/**\r\n * @file Mapped Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport MappedBuffer from './mapped-buffer';\r\nconst mapping = new Float32Array([\r\n    -1.0, -1.0, -1.0,\r\n    1.0, -1.0, -1.0,\r\n    1.0, -1.0, 1.0,\r\n    -1.0, -1.0, 1.0,\r\n    -1.0, 1.0, -1.0,\r\n    1.0, 1.0, -1.0,\r\n    1.0, 1.0, 1.0,\r\n    -1.0, 1.0, 1.0\r\n]);\r\nconst mappingIndices = new Uint16Array([\r\n    0, 1, 2,\r\n    0, 2, 3,\r\n    1, 5, 6,\r\n    1, 6, 2,\r\n    4, 6, 5,\r\n    4, 7, 6,\r\n    0, 7, 4,\r\n    0, 3, 7,\r\n    0, 5, 1,\r\n    0, 4, 5,\r\n    3, 2, 6,\r\n    3, 6, 7\r\n]);\r\n/**\r\n * Mapped Box buffer. Draws boxes. Used to render general imposters.\r\n * @interface\r\n */\r\nclass MappedBoxBuffer extends MappedBuffer {\r\n    constructor(data, params = {}) {\r\n        super('v3', data, params);\r\n    }\r\n    get mapping() { return mapping; }\r\n    get mappingIndices() { return mappingIndices; }\r\n    get mappingIndicesSize() { return 36; }\r\n    get mappingSize() { return 8; }\r\n    get mappingItemSize() { return 3; }\r\n}\r\nexport default MappedBoxBuffer;\r\n//# sourceMappingURL=mappedbox-buffer.js.map","/**\r\n * @file Hyperball Stick Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Matrix4 } from 'three';\r\nimport '../shader/HyperballStickImpostor.vert';\r\nimport '../shader/HyperballStickImpostor.frag';\r\nimport MappedBoxBuffer from './mappedbox-buffer';\r\nimport { BufferDefaultParameters, BufferParameterTypes } from './buffer';\r\nexport const HyperballStickImpostorBufferDefaultParameters = Object.assign({\r\n    shrink: 0.14\r\n}, BufferDefaultParameters);\r\nconst HyperballStickImpostorBufferParameterTypes = Object.assign({\r\n    shrink: { uniform: true }\r\n}, BufferParameterTypes);\r\n/**\r\n * Hyperball stick impostor buffer.\r\n *\r\n * @example\r\n * var hyperballStickImpostorBuffer = new HyperballStickImpostorBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 2, 2, 2 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   radius2: new Float32Array([ 2 ])\r\n * });\r\n */\r\nclass HyperballStickImpostorBuffer extends MappedBoxBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params);\r\n        this.parameterTypes = HyperballStickImpostorBufferParameterTypes;\r\n        this.isImpostor = true;\r\n        this.vertexShader = 'HyperballStickImpostor.vert';\r\n        this.fragmentShader = 'HyperballStickImpostor.frag';\r\n        this.addUniforms({\r\n            'modelViewProjectionMatrix': { value: new Matrix4() },\r\n            'modelViewProjectionMatrixInverse': { value: new Matrix4() },\r\n            'modelViewMatrixInverseTranspose': { value: new Matrix4() },\r\n            'shrink': { value: this.parameters.shrink }\r\n        });\r\n        this.addAttributes({\r\n            'position1': { type: 'v3', value: null },\r\n            'position2': { type: 'v3', value: null },\r\n            'color2': { type: 'c', value: null },\r\n            'radius': { type: 'f', value: null },\r\n            'radius2': { type: 'f', value: null }\r\n        });\r\n        this.setAttributes(data);\r\n        this.makeMapping();\r\n    }\r\n    get defaultParameters() { return HyperballStickImpostorBufferDefaultParameters; }\r\n}\r\nexport default HyperballStickImpostorBuffer;\r\n//# sourceMappingURL=hyperballstickimpostor-buffer.js.map","/**\r\n * @file Hyperball Stick Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ExtensionFragDepth } from '../globals';\r\nimport { calculateMinArray } from '../math/array-utils';\r\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters } from './cylindergeometry-buffer';\r\nimport HyperballStickImpostorBuffer, { HyperballStickImpostorBufferDefaultParameters } from './hyperballstickimpostor-buffer';\r\nexport const HyperballStickBufferDefaultParameters = Object.assign({\r\n    disableImpostor: false\r\n}, CylinderGeometryBufferDefaultParameters, HyperballStickImpostorBufferDefaultParameters);\r\n/**\r\n * Hyperball stick buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link HyperballStickImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var hyperballStickBuffer = new HyperballStickBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 2, 2, 2 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   radius2: new Float32Array([ 2 ])\r\n * });\r\n */\r\nclass HyperballStickBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position1 - from positions\r\n     * @param  {Float32Array} data.position2 - to positions\r\n     * @param  {Float32Array} data.color - from colors\r\n     * @param  {Float32Array} data.color2 - to colors\r\n     * @param  {Float32Array} data.radius - from radii\r\n     * @param  {Float32Array} data.radius2 - to radii\r\n     * @param  {Float32Array} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n            data.radius = calculateMinArray(data.radius, data.radius2);\r\n            return new CylinderGeometryBuffer(data, params);\r\n        }\r\n        else {\r\n            return new HyperballStickImpostorBuffer(data, params);\r\n        }\r\n    }\r\n}\r\nexport default HyperballStickBuffer;\r\n//# sourceMappingURL=hyperballstick-buffer.js.map","/**\r\n * @file Hyperball Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { calculateCenterArray } from '../math/array-utils.js';\r\nimport LicoriceRepresentation from './licorice-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport HyperballStickBuffer from '../buffer/hyperballstick-buffer.js';\r\n/**\r\n * Hyperball Representation\r\n */\r\nclass HyperballRepresentation extends LicoriceRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'hyperball';\r\n        this.parameters = Object.assign({\r\n            shrink: {\r\n                type: 'number', precision: 3, max: 1.0, min: 0.001, buffer: true\r\n            }\r\n        }, this.parameters, {\r\n            multipleBond: null,\r\n            bondSpacing: null\r\n        });\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.radiusScale = defaults(p.radiusScale, 0.2);\r\n        p.radiusType = defaults(p.radiusType, 'vdw');\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.shrink = defaults(p.shrink, 0.12);\r\n        super.init(p);\r\n    }\r\n    getBondParams(what, params) {\r\n        if (!what || what.radius) {\r\n            params = Object.assign({ radius2: true }, params);\r\n        }\r\n        return super.getBondParams(what, params);\r\n    }\r\n    createData(sview) {\r\n        var sphereBuffer = new SphereBuffer(sview.getAtomData(this.getAtomParams()), this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        this.__center = new Float32Array(sview.bondCount * 3);\r\n        var stickBuffer = new HyperballStickBuffer(sview.getBondData(this.getBondParams()), this.getBufferParams({\r\n            shrink: this.shrink,\r\n            radialSegments: this.radialSegments,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        return {\r\n            bufferList: [sphereBuffer, stickBuffer]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        var atomData = data.sview.getAtomData(this.getAtomParams());\r\n        var bondData = data.sview.getBondData(this.getBondParams());\r\n        var sphereData = {};\r\n        var stickData = {};\r\n        if (!what || what.position) {\r\n            Object.assign(sphereData, { position: atomData.position });\r\n            var from = bondData.position1;\r\n            var to = bondData.position2;\r\n            Object.assign(stickData, {\r\n                position: calculateCenterArray(from, to, this.__center),\r\n                position1: from,\r\n                position2: to\r\n            });\r\n        }\r\n        if (!what || what.color) {\r\n            Object.assign(sphereData, { color: atomData.color });\r\n            Object.assign(stickData, {\r\n                color: bondData.color,\r\n                color2: bondData.color2\r\n            });\r\n        }\r\n        if (!what || what.radius) {\r\n            Object.assign(sphereData, { radius: atomData.radius });\r\n            Object.assign(stickData, {\r\n                radius: bondData.radius,\r\n                radius2: bondData.radius2\r\n            });\r\n        }\r\n        data.bufferList[0].setAttributes(sphereData);\r\n        data.bufferList[1].setAttributes(stickData);\r\n    }\r\n}\r\nRepresentationRegistry.add('hyperball', HyperballRepresentation);\r\nexport default HyperballRepresentation;\r\n//# sourceMappingURL=hyperball-representation.js.map","/**\r\n * @file Label Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { AA1 } from '../structure/structure-constants';\r\nimport { sprintf } from 'sprintf-js';\r\nexport const LabelFactoryTypes = {\r\n    '': '',\r\n    'atomname': 'atom name',\r\n    'atomindex': 'atom index',\r\n    'occupancy': 'occupancy',\r\n    'bfactor': 'b-factor',\r\n    'serial': 'serial',\r\n    'element': 'element',\r\n    'atom': 'atom name + index',\r\n    'resname': 'residue name',\r\n    'resno': 'residue no',\r\n    'res': 'one letter code + no',\r\n    'residue': '[residue name] + no + inscode',\r\n    'text': 'text',\r\n    'format': 'format',\r\n    'qualified': 'qualified name'\r\n};\r\nclass LabelFactory {\r\n    constructor(type, text = {}, format = '') {\r\n        this.type = type;\r\n        this.text = text;\r\n        this.format = format;\r\n    }\r\n    atomLabel(a) {\r\n        const type = this.type;\r\n        let l;\r\n        switch (type) {\r\n            case 'atomname':\r\n                l = a.atomname;\r\n                break;\r\n            case 'atomindex':\r\n                l = `${a.index}`;\r\n                break;\r\n            case 'occupancy':\r\n                l = a.occupancy.toFixed(2);\r\n                break;\r\n            case 'bfactor':\r\n                l = a.bfactor.toFixed(2);\r\n                break;\r\n            case 'serial':\r\n                l = `${a.serial}`;\r\n                break;\r\n            case 'element':\r\n                l = a.element;\r\n                break;\r\n            case 'atom':\r\n                l = `${a.atomname}|${a.index}`;\r\n                break;\r\n            case 'resname':\r\n                l = a.resname;\r\n                break;\r\n            case 'resno':\r\n                l = `${a.resno}`;\r\n                break;\r\n            case 'res':\r\n                l = `${(AA1[a.resname.toUpperCase()] || a.resname)}${a.resno}`;\r\n                break;\r\n            case 'residue':\r\n                const aa1 = AA1[a.resname.toUpperCase()];\r\n                if (aa1 && !a.inscode) {\r\n                    l = `${aa1}${a.resno}`;\r\n                }\r\n                else {\r\n                    l = `[${a.resname}]${a.resno}${a.inscode}`;\r\n                }\r\n                break;\r\n            case 'text':\r\n                l = this.text[a.index];\r\n                break;\r\n            case 'format':\r\n                l = sprintf(this.format, a);\r\n                break;\r\n            // case \"qualified\":\r\n            default:\r\n                l = a.qualifiedName();\r\n                break;\r\n        }\r\n        return l === undefined ? '' : l;\r\n    }\r\n}\r\nLabelFactory.types = LabelFactoryTypes;\r\nexport default LabelFactory;\r\n//# sourceMappingURL=label-factory.js.map","/**\r\n * @file Label Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry, ColormakerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport LabelFactory from '../utils/label-factory';\r\nimport RadiusFactory from '../utils/radius-factory';\r\nimport StructureRepresentation from './structure-representation';\r\nimport TextBuffer from '../buffer/text-buffer';\r\n/**\r\n * Label representation\r\n */\r\nclass LabelRepresentation extends StructureRepresentation {\r\n    /**\r\n     * Create Label representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {LabelRepresentationParameters} params - label representation parameters\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'label';\r\n        this.parameters = Object.assign({\r\n            labelType: {\r\n                type: 'select', options: LabelFactory.types, rebuild: true\r\n            },\r\n            labelText: {\r\n                type: 'hidden', rebuild: true\r\n            },\r\n            labelFormat: {\r\n                type: 'text', rebuild: true\r\n            },\r\n            labelGrouping: {\r\n                type: 'select',\r\n                options: {\r\n                    'atom': 'atom',\r\n                    'residue': 'residue'\r\n                },\r\n                rebuild: true\r\n            },\r\n            fontFamily: {\r\n                type: 'select',\r\n                options: {\r\n                    'sans-serif': 'sans-serif',\r\n                    'monospace': 'monospace',\r\n                    'serif': 'serif'\r\n                },\r\n                buffer: true\r\n            },\r\n            fontStyle: {\r\n                type: 'select',\r\n                options: {\r\n                    'normal': 'normal',\r\n                    'italic': 'italic'\r\n                },\r\n                buffer: true\r\n            },\r\n            fontWeight: {\r\n                type: 'select',\r\n                options: {\r\n                    'normal': 'normal',\r\n                    'bold': 'bold'\r\n                },\r\n                buffer: true\r\n            },\r\n            xOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n            },\r\n            yOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n            },\r\n            zOffset: {\r\n                type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n            },\r\n            attachment: {\r\n                type: 'select',\r\n                options: {\r\n                    'bottom-left': 'bottom-left',\r\n                    'bottom-center': 'bottom-center',\r\n                    'bottom-right': 'bottom-right',\r\n                    'middle-left': 'middle-left',\r\n                    'middle-center': 'middle-center',\r\n                    'middle-right': 'middle-right',\r\n                    'top-left': 'top-left',\r\n                    'top-center': 'top-center',\r\n                    'top-right': 'top-right'\r\n                },\r\n                rebuild: true\r\n            },\r\n            showBorder: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            borderColor: {\r\n                type: 'color', buffer: true\r\n            },\r\n            borderWidth: {\r\n                type: 'number', precision: 2, max: 0.3, min: 0, buffer: true\r\n            },\r\n            showBackground: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            backgroundColor: {\r\n                type: 'color', buffer: true\r\n            },\r\n            backgroundMargin: {\r\n                type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n            },\r\n            backgroundOpacity: {\r\n                type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n            },\r\n            fixedSize: {\r\n                type: 'boolean', buffer: true\r\n            }\r\n        }, this.parameters, {\r\n            side: null,\r\n            flatShaded: null,\r\n            wireframe: null,\r\n            linewidth: null,\r\n            roughness: null,\r\n            metalness: null,\r\n            diffuse: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        this.labelType = defaults(p.labelType, 'res');\r\n        this.labelText = defaults(p.labelText, {});\r\n        this.labelFormat = defaults(p.labelFormat, '');\r\n        this.labelGrouping = defaults(p.labelGrouping, 'atom');\r\n        this.fontFamily = defaults(p.fontFamily, 'sans-serif');\r\n        this.fontStyle = defaults(p.fontStyle, 'normal');\r\n        this.fontWeight = defaults(p.fontWeight, 'bold');\r\n        this.xOffset = defaults(p.xOffset, 0.0);\r\n        this.yOffset = defaults(p.yOffset, 0.0);\r\n        this.zOffset = defaults(p.zOffset, 0.5);\r\n        this.attachment = defaults(p.attachment, 'bottom-left');\r\n        this.showBorder = defaults(p.showBorder, false);\r\n        this.borderColor = defaults(p.borderColor, 'lightgrey');\r\n        this.borderWidth = defaults(p.borderWidth, 0.15);\r\n        this.showBackground = defaults(p.showBackground, false);\r\n        this.backgroundColor = defaults(p.backgroundColor, 'lightgrey');\r\n        this.backgroundMargin = defaults(p.backgroundMargin, 0.5);\r\n        this.backgroundOpacity = defaults(p.backgroundOpacity, 1.0);\r\n        this.fixedSize = defaults(p.fixedSize, false);\r\n        super.init(p);\r\n    }\r\n    getTextData(sview, what) {\r\n        const p = this.getAtomParams(what);\r\n        const labelFactory = new LabelFactory(this.labelType, this.labelText, this.labelFormat);\r\n        let position, size, color, text, positionN, sizeN, colorN;\r\n        if (this.labelGrouping === 'atom') {\r\n            const atomData = sview.getAtomData(p);\r\n            position = atomData.position;\r\n            size = atomData.radius;\r\n            color = atomData.color;\r\n            if (!what || what.text) {\r\n                text = [];\r\n                sview.eachAtom(ap => text.push(labelFactory.atomLabel(ap)));\r\n            }\r\n        }\r\n        else if (this.labelGrouping === 'residue') {\r\n            if (!what || what.position)\r\n                positionN = [];\r\n            if (!what || what.color)\r\n                colorN = [];\r\n            if (!what || what.radius)\r\n                sizeN = [];\r\n            if (!what || what.text)\r\n                text = [];\r\n            if (p.colorParams)\r\n                p.colorParams.structure = sview.getStructure();\r\n            const colormaker = ColormakerRegistry.getScheme(p.colorParams);\r\n            const radiusFactory = new RadiusFactory(p.radiusParams);\r\n            const ap1 = sview.getAtomProxy();\r\n            let i = 0;\r\n            sview.eachResidue(rp => {\r\n                const i3 = i * 3;\r\n                if (rp.isProtein() || rp.isNucleic()) {\r\n                    ap1.index = rp.traceAtomIndex;\r\n                    if (!what || what.position) {\r\n                        ap1.positionToArray(positionN, i3);\r\n                    }\r\n                }\r\n                else {\r\n                    ap1.index = rp.atomOffset;\r\n                    if (!what || what.position) {\r\n                        rp.positionToArray(positionN, i3);\r\n                    }\r\n                }\r\n                if (!what || what.color) {\r\n                    colormaker.atomColorToArray(ap1, colorN, i3);\r\n                }\r\n                if (!what || what.radius) {\r\n                    sizeN[i] = radiusFactory.atomRadius(ap1);\r\n                }\r\n                if (!what || what.text) {\r\n                    text.push(labelFactory.atomLabel(ap1));\r\n                }\r\n                ++i;\r\n            });\r\n            if (!what || what.position)\r\n                position = new Float32Array(positionN);\r\n            if (!what || what.color)\r\n                color = new Float32Array(colorN);\r\n            if (!what || what.radius)\r\n                size = new Float32Array(sizeN);\r\n        }\r\n        return { position: position, size: size, color: color, text: text };\r\n    }\r\n    createData(sview) {\r\n        const what = { position: true, color: true, radius: true, text: true };\r\n        const textBuffer = new TextBuffer(this.getTextData(sview, what), this.getBufferParams({\r\n            fontFamily: this.fontFamily,\r\n            fontStyle: this.fontStyle,\r\n            fontWeight: this.fontWeight,\r\n            xOffset: this.xOffset,\r\n            yOffset: this.yOffset,\r\n            zOffset: this.zOffset,\r\n            attachment: this.attachment,\r\n            showBorder: this.showBorder,\r\n            borderColor: this.borderColor,\r\n            borderWidth: this.borderWidth,\r\n            showBackground: this.showBackground,\r\n            backgroundColor: this.backgroundColor,\r\n            backgroundMargin: this.backgroundMargin,\r\n            backgroundOpacity: this.backgroundOpacity,\r\n            fixedSize: this.fixedSize\r\n        }));\r\n        return { bufferList: [textBuffer] };\r\n    }\r\n    updateData(what, data) {\r\n        data.bufferList[0].setAttributes(this.getTextData(data.sview, what));\r\n    }\r\n    getAtomRadius() {\r\n        return 0;\r\n    }\r\n}\r\nRepresentationRegistry.add('label', LabelRepresentation);\r\nexport default LabelRepresentation;\r\n//# sourceMappingURL=label-representation.js.map","/**\r\n * @file Line Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js';\r\nimport { AtomPicker } from '../utils/picker.js';\r\n/**\r\n * Determine which atoms in  a Structure[View] form no bonds to any other atoms\r\n * in that Structure.\r\n *\r\n * This differs from setting the selection to \"nonbonded\" as it finds atoms\r\n * that have no bonds within the current selection.\r\n * @param  {Structure} structure - The Structure or StructureView object\r\n * @return {AtomSet} AtomSet of lone atoms\r\n */\r\nfunction getLoneAtomSet(structure) {\r\n    const atomSet = structure.getAtomSet();\r\n    const bondSet = structure.getBondSet();\r\n    const bp = structure.getBondProxy();\r\n    bondSet.forEach(function (idx) {\r\n        bp.index = idx;\r\n        atomSet.clear(bp.atomIndex1);\r\n        atomSet.clear(bp.atomIndex2);\r\n    });\r\n    return atomSet;\r\n}\r\n/**\r\n * Line representation\r\n */\r\nclass LineRepresentation extends StructureRepresentation {\r\n    /**\r\n     * Create Line representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {RepresentationParameters} params - representation parameters, plus the properties listed below\r\n     * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n     * @param {Float} params.bondSpacing - spacing for multiple bond rendering\r\n     * @param {Integer} params.linewidth - width of lines\r\n     * @param {Boolean} params.lines - render bonds as lines\r\n     * @param {String} params.crosses - render atoms as crosses: \"off\", \"all\" or \"lone\" (default)\r\n     * @param {Float} params.crossSize - size of cross\r\n     * @param {null} params.flatShaded - not available\r\n     * @param {null} params.side - not available\r\n     * @param {null} params.wireframe - not available\r\n     * @param {null} params.roughness - not available\r\n     * @param {null} params.metalness - not available\r\n     * @param {null} params.diffuse - not available\r\n     */\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'line';\r\n        this.parameters = Object.assign({\r\n            multipleBond: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'off': 'off',\r\n                    'symmetric': 'symmetric',\r\n                    'offset': 'offset'\r\n                }\r\n            },\r\n            bondSpacing: {\r\n                type: 'number', precision: 2, max: 2.0, min: 0.5\r\n            },\r\n            linewidth: {\r\n                type: 'integer', max: 50, min: 1, buffer: true\r\n            },\r\n            lines: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            crosses: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'off': 'off',\r\n                    'lone': 'lone',\r\n                    'all': 'all'\r\n                }\r\n            },\r\n            crossSize: {\r\n                type: 'number', precision: 2, max: 2.0, min: 0.1\r\n            }\r\n        }, this.parameters, {\r\n            flatShaded: null,\r\n            side: null,\r\n            wireframe: null,\r\n            roughness: null,\r\n            metalness: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        this.multipleBond = defaults(p.multipleBond, 'off');\r\n        this.bondSpacing = defaults(p.bondSpacing, 1.0);\r\n        this.linewidth = defaults(p.linewidth, 2);\r\n        this.lines = defaults(p.lines, true);\r\n        this.crosses = defaults(p.crosses, 'lone');\r\n        this.crossSize = defaults(p.crossSize, 0.4);\r\n        super.init(p);\r\n    }\r\n    getAtomRadius(atom) {\r\n        return 0.1;\r\n    }\r\n    getBondParams(what, params) {\r\n        params = Object.assign({\r\n            multipleBond: this.multipleBond,\r\n            bondSpacing: this.bondSpacing,\r\n            radiusParams: { 'type': 'size', 'size': 0.1, 'scale': 1 }\r\n        }, params);\r\n        return super.getBondParams(what, params);\r\n    }\r\n    _crossData(what, sview) {\r\n        if (what) {\r\n            if (!what.position && !what.color)\r\n                return;\r\n        }\r\n        const p = {};\r\n        if (this.crosses === 'lone') {\r\n            Object.assign(p, { atomSet: getLoneAtomSet(sview) });\r\n        }\r\n        const atomData = sview.getAtomData(this.getAtomParams(what, p));\r\n        const crossData = {};\r\n        const position = atomData.position;\r\n        const color = atomData.color;\r\n        const picking = atomData.picking;\r\n        const size = (position || color).length;\r\n        const attrSize = size * 3;\r\n        let cPosition1 = new Float32Array(0);\r\n        let cPosition2 = new Float32Array(0);\r\n        let cColor = new Float32Array(0);\r\n        let cColor2 = new Float32Array(0);\r\n        let cOffset = 0;\r\n        let pickingArray = new Float32Array(0);\r\n        if (!what || what.position) {\r\n            cPosition1 = crossData.position1 = new Float32Array(attrSize);\r\n            cPosition2 = crossData.position2 = new Float32Array(attrSize);\r\n            cOffset = this.crossSize / 2;\r\n        }\r\n        if (!what || what.color) {\r\n            cColor = crossData.color = new Float32Array(attrSize);\r\n            cColor2 = crossData.color2 = new Float32Array(attrSize);\r\n        }\r\n        if (!what || what.picking) {\r\n            pickingArray = new Float32Array(atomData.picking.array.length * 3); // Needs padding??\r\n        }\r\n        for (let v = 0; v < size; v++) {\r\n            const j = v * 3;\r\n            const i = j * 3;\r\n            if (!what || what.position) {\r\n                const x = position[j];\r\n                const y = position[j + 1];\r\n                const z = position[j + 2];\r\n                cPosition1[i] = x - cOffset;\r\n                cPosition1[i + 1] = y;\r\n                cPosition1[i + 2] = z;\r\n                cPosition2[i] = x + cOffset;\r\n                cPosition2[i + 1] = y;\r\n                cPosition2[i + 2] = z;\r\n                cPosition1[i + 3] = x;\r\n                cPosition1[i + 4] = y - cOffset;\r\n                cPosition1[i + 5] = z;\r\n                cPosition2[i + 3] = x;\r\n                cPosition2[i + 4] = y + cOffset;\r\n                cPosition2[i + 5] = z;\r\n                cPosition1[i + 6] = x;\r\n                cPosition1[i + 7] = y;\r\n                cPosition1[i + 8] = z - cOffset;\r\n                cPosition2[i + 6] = x;\r\n                cPosition2[i + 7] = y;\r\n                cPosition2[i + 8] = z + cOffset;\r\n            }\r\n            if (!what || what.color) {\r\n                const cimax = i + 9;\r\n                for (let ci = i; ci < cimax; ci += 3) {\r\n                    cColor[ci] = cColor2[ci] = color[j];\r\n                    cColor[ci + 1] = cColor2[ci + 1] = color[j + 1];\r\n                    cColor[ci + 2] = cColor2[ci + 2] = color[j + 2];\r\n                }\r\n            }\r\n            if (!what || what.picking) {\r\n                pickingArray[j] =\r\n                    pickingArray[j + 1] =\r\n                        pickingArray[j + 2] = picking.array[v];\r\n            }\r\n        }\r\n        if (!what || what.picking) {\r\n            crossData.picking = new AtomPicker(pickingArray, picking.structure);\r\n        }\r\n        return crossData;\r\n    }\r\n    createData(sview) {\r\n        const what = { position: true, color: true, picking: true };\r\n        const bufferList = [];\r\n        if (this.lines) {\r\n            const bondData = sview.getBondData(this.getBondParams(what));\r\n            const lineBuffer = new WideLineBuffer(bondData, this.getBufferParams({ linewidth: this.linewidth }));\r\n            bufferList.push(lineBuffer);\r\n        }\r\n        if (this.crosses !== 'off') {\r\n            const crossBuffer = new WideLineBuffer(this._crossData(what, sview), this.getBufferParams({ linewidth: this.linewidth }));\r\n            bufferList.push(crossBuffer);\r\n        }\r\n        return {\r\n            bufferList: bufferList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        let bufferIdx = 0;\r\n        if (this.lines) {\r\n            const bondData = data.sview.getBondData(this.getBondParams(what));\r\n            const lineAttributes = {};\r\n            if (!what || what.position) {\r\n                Object.assign(lineAttributes, {\r\n                    position1: bondData.position1,\r\n                    position2: bondData.position2\r\n                });\r\n            }\r\n            if (!what || what.color) {\r\n                Object.assign(lineAttributes, {\r\n                    color: bondData.color,\r\n                    color2: bondData.color2\r\n                });\r\n            }\r\n            data.bufferList[bufferIdx++].setAttributes(lineAttributes);\r\n        }\r\n        if (this.crosses !== 'off') {\r\n            const crossData = this._crossData(what, data.sview);\r\n            const crossAttributes = {};\r\n            if (!what || what.position) {\r\n                Object.assign(crossAttributes, {\r\n                    position1: crossData.position1,\r\n                    position2: crossData.position2\r\n                });\r\n            }\r\n            if (!what || what.color) {\r\n                Object.assign(crossAttributes, {\r\n                    color: crossData.color,\r\n                    color2: crossData.color2\r\n                });\r\n            }\r\n            data.bufferList[bufferIdx++].setAttributes(crossAttributes);\r\n        }\r\n    }\r\n    setParameters(params) {\r\n        var rebuild = false;\r\n        var what = {};\r\n        if (params && (params.bondSpacing || params.crossSize)) {\r\n            Object.assign(what, { position: true });\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('line', LineRepresentation);\r\nexport default LineRepresentation;\r\n//# sourceMappingURL=line-representation.js.map","function makeGrid(length, width, height, DataCtor, elemSize) {\r\n    DataCtor = DataCtor || Int32Array;\r\n    elemSize = elemSize || 1;\r\n    const data = new DataCtor(length * width * height * elemSize);\r\n    function index(x, y, z) {\r\n        return ((((x * width) + y) * height) + z) * elemSize;\r\n    }\r\n    function set(x, y, z, ...args) {\r\n        const i = index(x, y, z);\r\n        for (let j = 0; j < elemSize; ++j) {\r\n            data[i + j] = args[j];\r\n        }\r\n    }\r\n    function toArray(x, y, z, array = [], offset = 0) {\r\n        const i = index(x, y, z);\r\n        for (let j = 0; j < elemSize; ++j) {\r\n            array[offset + j] = data[i + j];\r\n        }\r\n    }\r\n    function fromArray(x, y, z, array, offset = 0) {\r\n        const i = index(x, y, z);\r\n        for (let j = 0; j < elemSize; ++j) {\r\n            data[i + j] = array[offset + j];\r\n        }\r\n    }\r\n    function copy(grid) {\r\n        data.set(grid.data);\r\n    }\r\n    // function clone() {\r\n    //   return makeGrid(\r\n    //     length, width, height, DataCtor, elemSize\r\n    //   ).copy(this)\r\n    // }\r\n    return { data, index, set, toArray, fromArray, copy };\r\n}\r\nexport { makeGrid };\r\n//# sourceMappingURL=grid.js.map","/**\r\n * @file EDT Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { VolumeSurface } from './volume.js';\r\nimport { makeGrid } from '../geometry/grid';\r\nimport { computeBoundingBox } from '../math/vector-utils.js';\r\nimport { getRadiusDict, getSurfaceGrid } from './surface-utils.js';\r\nfunction EDTSurface(coordList, radiusList, indexList) {\r\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n    //\r\n    // Permission to use, copy, modify, and distribute this program for\r\n    // any purpose, with or without fee, is hereby granted, provided that\r\n    // the notices on the head, the reference information, and this\r\n    // copyright notice appear in all copies or substantial portions of\r\n    // the Software. It is provided \"as is\" without express or implied\r\n    // warranty.\r\n    //\r\n    // ported to JavaScript by biochem_fan (http://webglmol.sourceforge.jp/)\r\n    // refactored by dkoes (https://github.com/dkoes)\r\n    //\r\n    // adapted to NGL by Alexander Rose\r\n    var radiusDict = getRadiusDict(radiusList);\r\n    var bbox = computeBoundingBox(coordList);\r\n    if (coordList.length === 0) {\r\n        bbox[0].set([0, 0, 0]);\r\n        bbox[1].set([0, 0, 0]);\r\n    }\r\n    var min = bbox[0];\r\n    var max = bbox[1];\r\n    var probeRadius, scaleFactor, cutoff;\r\n    var pLength, pWidth, pHeight;\r\n    var matrix, ptran;\r\n    var depty, widxz;\r\n    var cutRadius;\r\n    var setAtomID;\r\n    var vpBits, vpDistance, vpAtomID;\r\n    function init(btype, _probeRadius, _scaleFactor, _cutoff, _setAtomID) {\r\n        probeRadius = _probeRadius || 1.4;\r\n        scaleFactor = _scaleFactor || 2.0;\r\n        setAtomID = _setAtomID || true;\r\n        var maxRadius = 0;\r\n        for (var radius in radiusDict) {\r\n            maxRadius = Math.max(maxRadius, radius);\r\n        }\r\n        var grid = getSurfaceGrid(min, max, maxRadius, scaleFactor, btype ? probeRadius : 0);\r\n        pLength = grid.dim[0];\r\n        pWidth = grid.dim[1];\r\n        pHeight = grid.dim[2];\r\n        matrix = grid.matrix;\r\n        ptran = grid.tran;\r\n        scaleFactor = grid.scaleFactor;\r\n        // boundingatom caches\r\n        depty = {};\r\n        widxz = {};\r\n        boundingatom(btype);\r\n        cutRadius = probeRadius * scaleFactor;\r\n        if (_cutoff) {\r\n            cutoff = _cutoff;\r\n        }\r\n        else {\r\n            // cutoff = Math.max( 0.1, -1.2 + scaleFactor * probeRadius );\r\n            cutoff = probeRadius / scaleFactor;\r\n        }\r\n        vpBits = new Uint8Array(pLength * pWidth * pHeight);\r\n        if (btype) {\r\n            vpDistance = new Float64Array(pLength * pWidth * pHeight);\r\n        }\r\n        if (setAtomID) {\r\n            vpAtomID = new Int32Array(pLength * pWidth * pHeight);\r\n        }\r\n    }\r\n    // constants for vpBits bitmasks\r\n    var INOUT = 1;\r\n    var ISDONE = 2;\r\n    var ISBOUND = 4;\r\n    var nb = [\r\n        new Int32Array([1, 0, 0]), new Int32Array([-1, 0, 0]),\r\n        new Int32Array([0, 1, 0]), new Int32Array([0, -1, 0]),\r\n        new Int32Array([0, 0, 1]), new Int32Array([0, 0, -1]),\r\n        new Int32Array([1, 1, 0]), new Int32Array([1, -1, 0]),\r\n        new Int32Array([-1, 1, 0]), new Int32Array([-1, -1, 0]),\r\n        new Int32Array([1, 0, 1]), new Int32Array([1, 0, -1]),\r\n        new Int32Array([-1, 0, 1]), new Int32Array([-1, 0, -1]),\r\n        new Int32Array([0, 1, 1]), new Int32Array([0, 1, -1]),\r\n        new Int32Array([0, -1, 1]), new Int32Array([0, -1, -1]),\r\n        new Int32Array([1, 1, 1]), new Int32Array([1, 1, -1]),\r\n        new Int32Array([1, -1, 1]), new Int32Array([-1, 1, 1]),\r\n        new Int32Array([1, -1, -1]), new Int32Array([-1, -1, 1]),\r\n        new Int32Array([-1, 1, -1]), new Int32Array([-1, -1, -1])\r\n    ];\r\n    //\r\n    this.getVolume = function (type, probeRadius, scaleFactor, cutoff, setAtomID) {\r\n        console.time('EDTSurface.getVolume');\r\n        var btype = type !== 'vws';\r\n        init(btype, probeRadius, scaleFactor, cutoff, setAtomID);\r\n        fillvoxels(btype);\r\n        buildboundary();\r\n        if (type === 'ms' || type === 'ses') {\r\n            fastdistancemap();\r\n        }\r\n        if (type === 'ses') {\r\n            boundingatom(false);\r\n            fillvoxelswaals();\r\n        }\r\n        marchingcubeinit(type);\r\n        // set atomindex in the volume data\r\n        for (var i = 0, il = vpAtomID.length; i < il; ++i) {\r\n            vpAtomID[i] = indexList[vpAtomID[i]];\r\n        }\r\n        console.timeEnd('EDTSurface.getVolume');\r\n        return {\r\n            data: vpBits,\r\n            nx: pHeight,\r\n            ny: pWidth,\r\n            nz: pLength,\r\n            atomindex: vpAtomID\r\n        };\r\n    };\r\n    this.getSurface = function (type, probeRadius, scaleFactor, cutoff, setAtomID, smooth, contour) {\r\n        var vd = this.getVolume(type, probeRadius, scaleFactor, cutoff, setAtomID);\r\n        var volsurf = new VolumeSurface(vd.data, vd.nx, vd.ny, vd.nz, vd.atomindex);\r\n        return volsurf.getSurface(1, smooth, undefined, matrix, contour);\r\n    };\r\n    function boundingatom(btype) {\r\n        var r;\r\n        var j;\r\n        var k;\r\n        var txz;\r\n        var tdept;\r\n        var sradius;\r\n        var tradius;\r\n        var widxzR;\r\n        var deptyName;\r\n        var indx;\r\n        for (var name in radiusDict) {\r\n            r = parseFloat(name);\r\n            if (depty[name])\r\n                continue;\r\n            if (!btype) {\r\n                tradius = r * scaleFactor + 0.5;\r\n            }\r\n            else {\r\n                tradius = (r + probeRadius) * scaleFactor + 0.5;\r\n            }\r\n            sradius = tradius * tradius;\r\n            widxzR = Math.floor(tradius) + 1;\r\n            deptyName = new Int32Array(widxzR * widxzR);\r\n            indx = 0;\r\n            for (j = 0; j < widxzR; ++j) {\r\n                for (k = 0; k < widxzR; ++k) {\r\n                    txz = j * j + k * k;\r\n                    if (txz > sradius) {\r\n                        deptyName[indx] = -1;\r\n                    }\r\n                    else {\r\n                        tdept = Math.sqrt(sradius - txz);\r\n                        deptyName[indx] = Math.floor(tdept);\r\n                    }\r\n                    ++indx;\r\n                }\r\n            }\r\n            widxz[name] = widxzR;\r\n            depty[name] = deptyName;\r\n        }\r\n    }\r\n    function fillatom(idx) {\r\n        var ci = idx * 3;\r\n        var ri = idx;\r\n        var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk;\r\n        var ii, jj, kk;\r\n        cx = Math.floor(0.5 + scaleFactor * (coordList[ci] + ptran[0]));\r\n        cy = Math.floor(0.5 + scaleFactor * (coordList[ci + 1] + ptran[1]));\r\n        cz = Math.floor(0.5 + scaleFactor * (coordList[ci + 2] + ptran[2]));\r\n        var at = radiusList[ri];\r\n        var deptyAt = depty[at];\r\n        var nind = 0;\r\n        var pWH = pWidth * pHeight;\r\n        var n = widxz[at];\r\n        var deptyAtNind;\r\n        for (i = 0; i < n; ++i) {\r\n            for (j = 0; j < n; ++j) {\r\n                deptyAtNind = deptyAt[nind];\r\n                if (deptyAtNind !== -1) {\r\n                    for (ii = -1; ii < 2; ++ii) {\r\n                        for (jj = -1; jj < 2; ++jj) {\r\n                            for (kk = -1; kk < 2; ++kk) {\r\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                                    mi = ii * i;\r\n                                    mk = kk * j;\r\n                                    for (k = 0; k <= deptyAtNind; ++k) {\r\n                                        mj = k * jj;\r\n                                        si = cx + mi;\r\n                                        sj = cy + mj;\r\n                                        sk = cz + mk;\r\n                                        if (si < 0 || sj < 0 || sk < 0 ||\r\n                                            si >= pLength || sj >= pWidth || sk >= pHeight) {\r\n                                            continue;\r\n                                        }\r\n                                        var index = si * pWH + sj * pHeight + sk;\r\n                                        if (!setAtomID) {\r\n                                            vpBits[index] |= INOUT;\r\n                                        }\r\n                                        else {\r\n                                            if (!(vpBits[index] & INOUT)) {\r\n                                                vpBits[index] |= INOUT;\r\n                                                vpAtomID[index] = idx;\r\n                                            }\r\n                                            else if (vpBits[index] & INOUT) {\r\n                                                var ci2 = vpAtomID[index];\r\n                                                if (ci2 !== ci) {\r\n                                                    ox = cx + mi - Math.floor(0.5 + scaleFactor * (coordList[ci2] + ptran[0]));\r\n                                                    oy = cy + mj - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 1] + ptran[1]));\r\n                                                    oz = cz + mk - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 2] + ptran[2]));\r\n                                                    if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                                                        vpAtomID[index] = idx;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    } // k\r\n                                } // if\r\n                            } // kk\r\n                        } // jj\r\n                    } // ii\r\n                } // if\r\n                nind++;\r\n            } // j\r\n        } // i\r\n    }\r\n    function fillvoxels(btype) {\r\n        console.time('EDTSurface fillvoxels');\r\n        var i, il;\r\n        for (i = 0, il = vpBits.length; i < il; ++i) {\r\n            vpBits[i] = 0;\r\n            if (btype)\r\n                vpDistance[i] = -1.0;\r\n            if (setAtomID)\r\n                vpAtomID[i] = -1;\r\n        }\r\n        for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n            fillatom(i);\r\n        }\r\n        for (i = 0, il = vpBits.length; i < il; ++i) {\r\n            if (vpBits[i] & INOUT) {\r\n                vpBits[i] |= ISDONE;\r\n            }\r\n        }\r\n        console.timeEnd('EDTSurface fillvoxels');\r\n    }\r\n    function fillAtomWaals(idx) {\r\n        var ci = idx * 3;\r\n        var ri = idx;\r\n        var cx;\r\n        var cy;\r\n        var cz;\r\n        var ox;\r\n        var oy;\r\n        var oz;\r\n        var nind = 0;\r\n        var mi;\r\n        var mj;\r\n        var mk;\r\n        var si;\r\n        var sj;\r\n        var sk;\r\n        var i;\r\n        var j;\r\n        var k;\r\n        var ii;\r\n        var jj;\r\n        var kk;\r\n        var n;\r\n        cx = Math.floor(0.5 + scaleFactor * (coordList[ci] + ptran[0]));\r\n        cy = Math.floor(0.5 + scaleFactor * (coordList[ci + 1] + ptran[1]));\r\n        cz = Math.floor(0.5 + scaleFactor * (coordList[ci + 2] + ptran[2]));\r\n        var at = radiusList[ri];\r\n        var pWH = pWidth * pHeight;\r\n        for (i = 0, n = widxz[at]; i < n; ++i) {\r\n            for (j = 0; j < n; ++j) {\r\n                if (depty[at][nind] !== -1) {\r\n                    for (ii = -1; ii < 2; ++ii) {\r\n                        for (jj = -1; jj < 2; ++jj) {\r\n                            for (kk = -1; kk < 2; ++kk) {\r\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                                    mi = ii * i;\r\n                                    mk = kk * j;\r\n                                    for (k = 0; k <= depty[at][nind]; ++k) {\r\n                                        mj = k * jj;\r\n                                        si = cx + mi;\r\n                                        sj = cy + mj;\r\n                                        sk = cz + mk;\r\n                                        if (si < 0 || sj < 0 || sk < 0 ||\r\n                                            si >= pLength || sj >= pWidth || sk >= pHeight) {\r\n                                            continue;\r\n                                        }\r\n                                        var index = si * pWH + sj * pHeight + sk;\r\n                                        if (!(vpBits[index] & ISDONE)) {\r\n                                            vpBits[index] |= ISDONE;\r\n                                            if (setAtomID)\r\n                                                vpAtomID[index] = idx;\r\n                                        }\r\n                                        else if (setAtomID) {\r\n                                            var ci2 = vpAtomID[index];\r\n                                            ox = Math.floor(0.5 + scaleFactor * (coordList[ci2] + ptran[0]));\r\n                                            oy = Math.floor(0.5 + scaleFactor * (coordList[ci2 + 1] + ptran[1]));\r\n                                            oz = Math.floor(0.5 + scaleFactor * (coordList[ci2 + 2] + ptran[2]));\r\n                                            if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                                                vpAtomID[index] = idx;\r\n                                            }\r\n                                        }\r\n                                    } // k\r\n                                } // if\r\n                            } // kk\r\n                        } // jj\r\n                    } // ii\r\n                } // if\r\n                nind++;\r\n            } // j\r\n        } // i\r\n    }\r\n    function fillvoxelswaals() {\r\n        var i, il;\r\n        for (i = 0, il = vpBits.length; i < il; ++i) {\r\n            vpBits[i] &= ~ISDONE; // not isdone\r\n        }\r\n        for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n            fillAtomWaals(i);\r\n        }\r\n    }\r\n    function buildboundary() {\r\n        var i, j, k;\r\n        var pWH = pWidth * pHeight;\r\n        for (i = 0; i < pLength; ++i) {\r\n            for (j = 0; j < pHeight; ++j) {\r\n                for (k = 0; k < pWidth; ++k) {\r\n                    var index = i * pWH + k * pHeight + j;\r\n                    if (vpBits[index] & INOUT) {\r\n                        // var flagbound = false;\r\n                        var ii = 0;\r\n                        // while( !flagbound && ii < 26 ){\r\n                        while (ii < 26) {\r\n                            var ti = i + nb[ii][0];\r\n                            var tj = j + nb[ii][2];\r\n                            var tk = k + nb[ii][1];\r\n                            if (ti > -1 && ti < pLength &&\r\n                                tk > -1 && tk < pWidth &&\r\n                                tj > -1 && tj < pHeight &&\r\n                                !(vpBits[ti * pWH + tk * pHeight + tj] & INOUT)) {\r\n                                vpBits[index] |= ISBOUND;\r\n                                // flagbound = true;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                ii++;\r\n                            }\r\n                        }\r\n                    }\r\n                } // k\r\n            } // j\r\n        } // i\r\n    }\r\n    function fastdistancemap() {\r\n        console.time('EDTSurface fastdistancemap');\r\n        var i, j, k, n;\r\n        var boundPoint = makeGrid(pLength, pWidth, pHeight, Uint16Array, 3);\r\n        var pWH = pWidth * pHeight;\r\n        var cutRSq = cutRadius * cutRadius;\r\n        var totalsurfacevox = 0;\r\n        // var totalinnervox = 0;\r\n        var index;\r\n        for (i = 0; i < pLength; ++i) {\r\n            for (j = 0; j < pWidth; ++j) {\r\n                for (k = 0; k < pHeight; ++k) {\r\n                    index = i * pWH + j * pHeight + k;\r\n                    vpBits[index] &= ~ISDONE;\r\n                    if (vpBits[index] & INOUT) {\r\n                        if (vpBits[index] & ISBOUND) {\r\n                            boundPoint.set(i, j, k, i, j, k);\r\n                            vpDistance[index] = 0;\r\n                            vpBits[index] |= ISDONE;\r\n                            totalsurfacevox += 1;\r\n                        } /* else{\r\n                            totalinnervox += 1;\r\n                        } */\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var inarray = new Int32Array(3 * totalsurfacevox);\r\n        var positin = 0;\r\n        var outarray = new Int32Array(3 * totalsurfacevox);\r\n        var positout = 0;\r\n        for (i = 0; i < pLength; ++i) {\r\n            for (j = 0; j < pWidth; ++j) {\r\n                for (k = 0; k < pHeight; ++k) {\r\n                    index = i * pWH + j * pHeight + k;\r\n                    if (vpBits[index] & ISBOUND) {\r\n                        inarray[positin] = i;\r\n                        inarray[positin + 1] = j;\r\n                        inarray[positin + 2] = k;\r\n                        positin += 3;\r\n                        vpBits[index] &= ~ISBOUND;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        do {\r\n            positout = fastoneshell(inarray, boundPoint, positin, outarray);\r\n            positin = 0;\r\n            for (i = 0, n = positout; i < n; i += 3) {\r\n                index = pWH * outarray[i] + pHeight * outarray[i + 1] + outarray[i + 2];\r\n                vpBits[index] &= ~ISBOUND;\r\n                if (vpDistance[index] <= 1.0404 * cutRSq) {\r\n                    // if( vpDistance[ index ] <= 1.02 * cutRadius ){\r\n                    inarray[positin] = outarray[i];\r\n                    inarray[positin + 1] = outarray[i + 1];\r\n                    inarray[positin + 2] = outarray[i + 2];\r\n                    positin += 3;\r\n                }\r\n            }\r\n        } while (positin > 0);\r\n        // var cutsf = Math.max( 0, scaleFactor - 0.5 );\r\n        // cutoff = cutRadius - 0.5 / ( 0.1 + cutsf );\r\n        var cutoffSq = cutoff * cutoff;\r\n        var index2;\r\n        var bp = new Uint16Array(3);\r\n        for (i = 0; i < pLength; ++i) {\r\n            for (j = 0; j < pWidth; ++j) {\r\n                for (k = 0; k < pHeight; ++k) {\r\n                    index = i * pWH + j * pHeight + k;\r\n                    vpBits[index] &= ~ISBOUND;\r\n                    // ses solid\r\n                    if (vpBits[index] & INOUT) {\r\n                        if (!(vpBits[index] & ISDONE) ||\r\n                            ((vpBits[index] & ISDONE) && vpDistance[index] >= cutoffSq)) {\r\n                            vpBits[index] |= ISBOUND;\r\n                            if (setAtomID && (vpBits[index] & ISDONE)) {\r\n                                boundPoint.toArray(i, j, k, bp);\r\n                                index2 = bp[0] * pWH + bp[1] * pHeight + bp[2];\r\n                                vpAtomID[index] = vpAtomID[index2];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        console.timeEnd('EDTSurface fastdistancemap');\r\n    }\r\n    function fastoneshell(inarray, boundPoint, positin, outarray) {\r\n        // *allocout,voxel2\r\n        // ***boundPoint, int*\r\n        // outnum, int *elimi)\r\n        var tx, ty, tz;\r\n        var dx, dy, dz;\r\n        var i, j, n;\r\n        var square;\r\n        var index;\r\n        var nbj;\r\n        var bp = new Uint16Array(3);\r\n        var positout = 0;\r\n        if (positin === 0) {\r\n            return positout;\r\n        }\r\n        var tnvix = -1;\r\n        var tnviy = -1;\r\n        var tnviz = -1;\r\n        var pWH = pWidth * pHeight;\r\n        for (i = 0, n = positin; i < n; i += 3) {\r\n            tx = inarray[i];\r\n            ty = inarray[i + 1];\r\n            tz = inarray[i + 2];\r\n            boundPoint.toArray(tx, ty, tz, bp);\r\n            for (j = 0; j < 6; ++j) {\r\n                nbj = nb[j];\r\n                tnvix = tx + nbj[0];\r\n                tnviy = ty + nbj[1];\r\n                tnviz = tz + nbj[2];\r\n                if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1) {\r\n                    index = tnvix * pWH + pHeight * tnviy + tnviz;\r\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n                        boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        vpDistance[index] = square;\r\n                        vpBits[index] |= ISDONE;\r\n                        vpBits[index] |= ISBOUND;\r\n                        outarray[positout] = tnvix;\r\n                        outarray[positout + 1] = tnviy;\r\n                        outarray[positout + 2] = tnviz;\r\n                        positout += 3;\r\n                    }\r\n                    else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        if (square < vpDistance[index]) {\r\n                            boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                            vpDistance[index] = square;\r\n                            if (!(vpBits[index] & ISBOUND)) {\r\n                                vpBits[index] |= ISBOUND;\r\n                                outarray[positout] = tnvix;\r\n                                outarray[positout + 1] = tnviy;\r\n                                outarray[positout + 2] = tnviz;\r\n                                positout += 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, n = positin; i < n; i += 3) {\r\n            tx = inarray[i];\r\n            ty = inarray[i + 1];\r\n            tz = inarray[i + 2];\r\n            boundPoint.toArray(tx, ty, tz, bp);\r\n            for (j = 6; j < 18; j++) {\r\n                nbj = nb[j];\r\n                tnvix = tx + nbj[0];\r\n                tnviy = ty + nbj[1];\r\n                tnviz = tz + nbj[2];\r\n                if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1) {\r\n                    index = tnvix * pWH + pHeight * tnviy + tnviz;\r\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n                        boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        vpDistance[index] = square;\r\n                        vpBits[index] |= ISDONE;\r\n                        vpBits[index] |= ISBOUND;\r\n                        outarray[positout] = tnvix;\r\n                        outarray[positout + 1] = tnviy;\r\n                        outarray[positout + 2] = tnviz;\r\n                        positout += 3;\r\n                    }\r\n                    else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        if (square < vpDistance[index]) {\r\n                            boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                            vpDistance[index] = square;\r\n                            if (!(vpBits[index] & ISBOUND)) {\r\n                                vpBits[index] |= ISBOUND;\r\n                                outarray[positout] = tnvix;\r\n                                outarray[positout + 1] = tnviy;\r\n                                outarray[positout + 2] = tnviz;\r\n                                positout += 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, n = positin; i < n; i += 3) {\r\n            tx = inarray[i];\r\n            ty = inarray[i + 1];\r\n            tz = inarray[i + 2];\r\n            boundPoint.toArray(tx, ty, tz, bp);\r\n            for (j = 18; j < 26; j++) {\r\n                nbj = nb[j];\r\n                tnvix = tx + nbj[0];\r\n                tnviy = ty + nbj[1];\r\n                tnviz = tz + nbj[2];\r\n                if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1) {\r\n                    index = tnvix * pWH + pHeight * tnviy + tnviz;\r\n                    if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n                        boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        vpDistance[index] = square;\r\n                        vpBits[index] |= ISDONE;\r\n                        vpBits[index] |= ISBOUND;\r\n                        outarray[positout] = tnvix;\r\n                        outarray[positout + 1] = tnviy;\r\n                        outarray[positout + 2] = tnviz;\r\n                        positout += 3;\r\n                    }\r\n                    else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n                        dx = tnvix - bp[0];\r\n                        dy = tnviy - bp[1];\r\n                        dz = tnviz - bp[2];\r\n                        square = dx * dx + dy * dy + dz * dz;\r\n                        // square = Math.sqrt( square );\r\n                        if (square < vpDistance[index]) {\r\n                            boundPoint.fromArray(tnvix, tnviy, tnviz, bp);\r\n                            vpDistance[index] = square;\r\n                            if (!(vpBits[index] & ISBOUND)) {\r\n                                vpBits[index] |= ISBOUND;\r\n                                outarray[positout] = tnvix;\r\n                                outarray[positout + 1] = tnviy;\r\n                                outarray[positout + 2] = tnviz;\r\n                                positout += 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return positout;\r\n    }\r\n    function marchingcubeinit(stype) {\r\n        var i;\r\n        var n = vpBits.length;\r\n        if (stype === 'vws') {\r\n            for (i = 0; i < n; ++i) {\r\n                vpBits[i] &= ~ISBOUND;\r\n                vpBits[i] = (vpBits[i] & ISDONE) ? 1 : 0;\r\n            }\r\n        }\r\n        else if (stype === 'ms') { // ses without vdw => ms\r\n            for (i = 0; i < n; ++i) {\r\n                vpBits[i] &= ~ISDONE;\r\n                if (vpBits[i] & ISBOUND) {\r\n                    vpBits[i] |= ISDONE;\r\n                }\r\n                vpBits[i] &= ~ISBOUND;\r\n                vpBits[i] = (vpBits[i] & ISDONE) ? 1 : 0;\r\n            }\r\n        }\r\n        else if (stype === 'ses') {\r\n            for (i = 0; i < n; ++i) {\r\n                if ((vpBits[i] & ISBOUND) && (vpBits[i] & ISDONE)) {\r\n                    vpBits[i] &= ~ISBOUND;\r\n                }\r\n                else if ((vpBits[i] & ISBOUND) && !(vpBits[i] & ISDONE)) {\r\n                    vpBits[i] |= ISDONE;\r\n                }\r\n                vpBits[i] = (vpBits[i] & ISDONE) ? 1 : 0;\r\n            }\r\n        }\r\n        else if (stype === 'sas') {\r\n            for (i = 0; i < n; ++i) {\r\n                vpBits[i] &= ~ISBOUND;\r\n                vpBits[i] = (vpBits[i] & ISDONE) ? 1 : 0;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.assign(EDTSurface, { __deps: [\r\n        getSurfaceGrid, getRadiusDict, VolumeSurface, computeBoundingBox, makeGrid\r\n    ] });\r\nexport default EDTSurface;\r\n//# sourceMappingURL=edt-surface.js.map","/**\r\n * @file AV Surface\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { getSurfaceGrid } from './surface-utils.js';\r\nimport { VolumeSurface } from './volume.js';\r\nimport { uniformArray } from '../math/array-utils.js';\r\nimport { computeBoundingBox, v3multiplyScalar, v3cross, v3normalize } from '../math/vector-utils.js';\r\nimport { defaults } from '../utils';\r\nfunction makeAVHash(atomsX, atomsY, atomsZ, atomsR, min, max, maxDistance) {\r\n    maxDistance = Math.max(0.1, maxDistance); // Avoid maxDistance of zero, see #802\r\n    var nAtoms = atomsX.length;\r\n    var minX = min[0];\r\n    var minY = min[1];\r\n    var minZ = min[2];\r\n    var maxX = max[0];\r\n    var maxY = max[1];\r\n    var maxZ = max[2];\r\n    function hashFunc(w, minW) {\r\n        return Math.floor((w - minW) / maxDistance);\r\n    }\r\n    var iDim = hashFunc(maxX, minX) + 1;\r\n    var jDim = hashFunc(maxY, minY) + 1;\r\n    var kDim = hashFunc(maxZ, minZ) + 1;\r\n    var nCells = iDim * jDim * kDim;\r\n    var jkDim = jDim * kDim;\r\n    /* Get cellID for cartesian x,y,z */\r\n    var cellID = function (x, y, z) {\r\n        return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ);\r\n    };\r\n    /* Initial building, could probably be optimized further */\r\n    var preHash = []; // preHash[ cellID ] = [ atomId1, atomId2 ];\r\n    for (var i = 0; i < nAtoms; i++) {\r\n        var cid = cellID(atomsX[i], atomsY[i], atomsZ[i]);\r\n        if (preHash[cid] === undefined) {\r\n            preHash[cid] = [i];\r\n        }\r\n        else {\r\n            preHash[cid].push(i);\r\n        }\r\n    }\r\n    var cellOffsets = new Uint32Array(nCells);\r\n    var cellLengths = new Uint16Array(nCells);\r\n    var data = new Uint32Array(nAtoms);\r\n    var offset = 0;\r\n    var maxCellLength = 0;\r\n    for (i = 0; i < nCells; i++) {\r\n        var start = cellOffsets[i] = offset;\r\n        var subArray = preHash[i];\r\n        if (subArray !== undefined) {\r\n            for (var j = 0; j < subArray.length; j++) {\r\n                data[offset] = subArray[j];\r\n                offset++;\r\n            }\r\n        }\r\n        var cellLength = offset - start;\r\n        cellLengths[i] = cellLength;\r\n        if (cellLength > maxCellLength) {\r\n            maxCellLength = cellLength;\r\n        }\r\n    }\r\n    // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n    const neighbourListLength = (27 * maxCellLength) + 1;\r\n    /**\r\n     * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n     * of x,y,z\r\n     *\r\n     * -1 in out array indicates the end of the list\r\n     *\r\n     * @param  {Float} x - x coordinate\r\n     * @param  {Float} y - y coordinate\r\n     * @param  {Float} z - z coordinate\r\n     * @param  {Float} rExtra - additional radius\r\n     * @param  {Float32Array} out - pre-allocated output array\r\n     * @return {undefined}\r\n     */\r\n    const withinRadii = function (x, y, z, rExtra, out) {\r\n        var outIdx = 0;\r\n        var nearI = hashFunc(x, minX);\r\n        var nearJ = hashFunc(y, minY);\r\n        var nearK = hashFunc(z, minZ);\r\n        var loI = Math.max(0, nearI - 1);\r\n        var loJ = Math.max(0, nearJ - 1);\r\n        var loK = Math.max(0, nearK - 1);\r\n        var hiI = Math.min(iDim, nearI + 2);\r\n        var hiJ = Math.min(jDim, nearJ + 2);\r\n        var hiK = Math.min(kDim, nearK + 2);\r\n        for (var i = loI; i < hiI; ++i) {\r\n            var iOffset = i * jkDim;\r\n            for (var j = loJ; j < hiJ; ++j) {\r\n                var jOffset = j * kDim;\r\n                for (var k = loK; k < hiK; ++k) {\r\n                    var cid = iOffset + jOffset + k;\r\n                    var cellStart = cellOffsets[cid];\r\n                    var cellEnd = cellStart + cellLengths[cid];\r\n                    for (var dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n                        var atomIndex = data[dataIndex];\r\n                        var dx = atomsX[atomIndex] - x;\r\n                        var dy = atomsY[atomIndex] - y;\r\n                        var dz = atomsZ[atomIndex] - z;\r\n                        var rSum = atomsR[atomIndex] + rExtra;\r\n                        if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\r\n                            out[outIdx++] = data[dataIndex];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Add terminator\r\n        out[outIdx] = -1;\r\n    };\r\n    return {\r\n        neighbourListLength: neighbourListLength,\r\n        withinRadii: withinRadii\r\n    };\r\n}\r\nfunction AVSurface(coordList, radiusList, indexList) {\r\n    // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n    // by Fred Ludlow.\r\n    // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n    //\r\n    // Should work as a drop-in alternative to EDTSurface (though some of\r\n    // the EDT paramters are not relevant in this method).\r\n    const nAtoms = radiusList.length;\r\n    const x = new Float32Array(nAtoms);\r\n    const y = new Float32Array(nAtoms);\r\n    const z = new Float32Array(nAtoms);\r\n    for (let i = 0; i < nAtoms; i++) {\r\n        const ci = 3 * i;\r\n        x[i] = coordList[ci];\r\n        y[i] = coordList[ci + 1];\r\n        z[i] = coordList[ci + 2];\r\n    }\r\n    let bbox = computeBoundingBox(coordList);\r\n    if (coordList.length === 0) {\r\n        bbox[0].set([0, 0, 0]);\r\n        bbox[1].set([0, 0, 0]);\r\n    }\r\n    const min = bbox[0];\r\n    const max = bbox[1];\r\n    let r, r2; // Atom positions, expanded radii (squared)\r\n    let maxRadius;\r\n    // Parameters\r\n    let probeRadius, scaleFactor, setAtomID, probePositions;\r\n    // Cache last value for obscured test\r\n    let lastClip = -1;\r\n    // Grid params\r\n    let dim, matrix, grid, atomIndex;\r\n    // grid indices -> xyz coords\r\n    let gridx, gridy, gridz;\r\n    // Lookup tables:\r\n    let sinTable, cosTable;\r\n    // Spatial Hash\r\n    let hash;\r\n    // Neighbour array to be filled by hash\r\n    let neighbours;\r\n    // Vectors for Torus Projection\r\n    const atob = new Float32Array([0.0, 0.0, 0.0]);\r\n    const mid = new Float32Array([0.0, 0.0, 0.0]);\r\n    const n1 = new Float32Array([0.0, 0.0, 0.0]);\r\n    const n2 = new Float32Array([0.0, 0.0, 0.0]);\r\n    let ngTorus;\r\n    function init(_probeRadius, _scaleFactor, _setAtomID, _probePositions) {\r\n        probeRadius = defaults(_probeRadius, 1.4);\r\n        scaleFactor = defaults(_scaleFactor, 2.0);\r\n        setAtomID = defaults(_setAtomID, true);\r\n        probePositions = defaults(_probePositions, 30);\r\n        r = new Float32Array(nAtoms);\r\n        r2 = new Float32Array(nAtoms);\r\n        for (let i = 0; i < r.length; ++i) {\r\n            var rExt = radiusList[i] + probeRadius;\r\n            r[i] = rExt;\r\n            r2[i] = rExt * rExt;\r\n        }\r\n        maxRadius = 0;\r\n        for (let j = 0; j < r.length; ++j) {\r\n            if (r[j] > maxRadius)\r\n                maxRadius = r[j];\r\n        }\r\n        initializeGrid();\r\n        initializeAngleTables();\r\n        initializeHash();\r\n        lastClip = -1;\r\n    }\r\n    function fillGridDim(a, start, step) {\r\n        for (let i = 0; i < a.length; i++) {\r\n            a[i] = start + (step * i);\r\n        }\r\n    }\r\n    function initializeGrid() {\r\n        const surfGrid = getSurfaceGrid(min, max, maxRadius, scaleFactor, 0.0);\r\n        scaleFactor = surfGrid.scaleFactor;\r\n        dim = surfGrid.dim;\r\n        matrix = surfGrid.matrix;\r\n        ngTorus = Math.max(5, 2 + Math.floor(probeRadius * scaleFactor));\r\n        grid = uniformArray(dim[0] * dim[1] * dim[2], -1001.0);\r\n        atomIndex = new Int32Array(grid.length);\r\n        gridx = new Float32Array(dim[0]);\r\n        gridy = new Float32Array(dim[1]);\r\n        gridz = new Float32Array(dim[2]);\r\n        fillGridDim(gridx, min[0], 1 / scaleFactor);\r\n        fillGridDim(gridy, min[1], 1 / scaleFactor);\r\n        fillGridDim(gridz, min[2], 1 / scaleFactor);\r\n    }\r\n    function initializeAngleTables() {\r\n        var theta = 0.0;\r\n        var step = 2 * Math.PI / probePositions;\r\n        cosTable = new Float32Array(probePositions);\r\n        sinTable = new Float32Array(probePositions);\r\n        for (var i = 0; i < probePositions; i++) {\r\n            cosTable[i] = Math.cos(theta);\r\n            sinTable[i] = Math.sin(theta);\r\n            theta += step;\r\n        }\r\n    }\r\n    function initializeHash() {\r\n        hash = makeAVHash(x, y, z, r, min, max, 2.01 * maxRadius);\r\n        neighbours = new Int32Array(hash.neighbourListLength);\r\n    }\r\n    function obscured(x, y, z, a, b) {\r\n        // Is the point at x,y,z obscured by any of the atoms\r\n        // specifeid by indices in neighbours. Ignore indices\r\n        // a and b (these are the relevant atoms in projectPoints/Torii)\r\n        // Cache the last clipped atom (as very often the same one in\r\n        // subsequent calls)\r\n        let ai;\r\n        if (lastClip !== -1) {\r\n            ai = lastClip;\r\n            if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n                return ai;\r\n            }\r\n            else {\r\n                lastClip = -1;\r\n            }\r\n        }\r\n        var ni = 0;\r\n        ai = neighbours[ni];\r\n        while (ai >= 0) {\r\n            if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n                lastClip = ai;\r\n                return ai;\r\n            }\r\n            ai = neighbours[++ni];\r\n        }\r\n        lastClip = -1;\r\n        return -1;\r\n    }\r\n    function singleAtomObscures(ai, x, y, z) {\r\n        var ci = 3 * ai;\r\n        var ra2 = r2[ai];\r\n        var dx = coordList[ci] - x;\r\n        var dy = coordList[ci + 1] - y;\r\n        var dz = coordList[ci + 2] - z;\r\n        var d2 = dx * dx + dy * dy + dz * dz;\r\n        return d2 < ra2;\r\n    }\r\n    function projectPoints() {\r\n        // For each atom:\r\n        //     Iterate over a subsection of the grid, for each point:\r\n        //         If current value < 0.0, unvisited, set positive\r\n        //\r\n        //         In any case: Project this point onto surface of the atomic sphere\r\n        //         If this projected point is not obscured by any other atom\r\n        //             Calcualte delta distance and set grid value to minimum of\r\n        //             itself and delta\r\n        // Should we alias frequently accessed closure variables??\r\n        // Assume JS engine capable of optimizing this\r\n        // anyway...\r\n        for (var i = 0; i < nAtoms; i++) {\r\n            var ax = x[i];\r\n            var ay = y[i];\r\n            var az = z[i];\r\n            var ar = r[i];\r\n            var ar2 = r2[i];\r\n            hash.withinRadii(ax, ay, az, ar, neighbours);\r\n            // Number of grid points, round this up...\r\n            var ng = Math.ceil(ar * scaleFactor);\r\n            // Center of the atom, mapped to grid points (take floor)\r\n            var iax = Math.floor(scaleFactor * (ax - min[0]));\r\n            var iay = Math.floor(scaleFactor * (ay - min[1]));\r\n            var iaz = Math.floor(scaleFactor * (az - min[2]));\r\n            // Extents of grid to consider for this atom\r\n            var minx = Math.max(0, iax - ng);\r\n            var miny = Math.max(0, iay - ng);\r\n            var minz = Math.max(0, iaz - ng);\r\n            // Add two to these points:\r\n            // - iax are floor'd values so this ensures coverage\r\n            // - these are loop limits (exclusive)\r\n            var maxx = Math.min(dim[0], iax + ng + 2);\r\n            var maxy = Math.min(dim[1], iay + ng + 2);\r\n            var maxz = Math.min(dim[2], iaz + ng + 2);\r\n            for (var ix = minx; ix < maxx; ix++) {\r\n                var dx = gridx[ix] - ax;\r\n                var xoffset = dim[1] * dim[2] * ix;\r\n                for (var iy = miny; iy < maxy; iy++) {\r\n                    var dy = gridy[iy] - ay;\r\n                    var dxy2 = dx * dx + dy * dy;\r\n                    var xyoffset = xoffset + dim[2] * iy;\r\n                    for (var iz = minz; iz < maxz; iz++) {\r\n                        var dz = gridz[iz] - az;\r\n                        var d2 = dxy2 + dz * dz;\r\n                        if (d2 < ar2) {\r\n                            var idx = iz + xyoffset;\r\n                            if (grid[idx] < 0.0) {\r\n                                // Unvisited, make positive\r\n                                grid[idx] = -grid[idx];\r\n                            }\r\n                            // Project on to the surface of the sphere\r\n                            // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n                            var d = Math.sqrt(d2);\r\n                            var ap = ar / d;\r\n                            var spx = dx * ap;\r\n                            var spy = dy * ap;\r\n                            var spz = dz * ap;\r\n                            spx += ax;\r\n                            spy += ay;\r\n                            spz += az;\r\n                            if (obscured(spx, spy, spz, i, -1) === -1) {\r\n                                var dd = ar - d;\r\n                                if (dd < grid[idx]) {\r\n                                    grid[idx] = dd;\r\n                                    if (setAtomID)\r\n                                        atomIndex[idx] = i;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function projectTorii() {\r\n        for (var i = 0; i < nAtoms; i++) {\r\n            hash.withinRadii(x[i], y[i], z[i], r[i], neighbours);\r\n            var ia = 0;\r\n            var ni = neighbours[ia];\r\n            while (ni >= 0) {\r\n                if (i < ni) {\r\n                    projectTorus(i, ni);\r\n                }\r\n                ni = neighbours[++ia];\r\n            }\r\n        }\r\n    }\r\n    function projectTorus(a, b) {\r\n        var r1 = r[a];\r\n        var r2 = r[b];\r\n        var dx = atob[0] = x[b] - x[a];\r\n        var dy = atob[1] = y[b] - y[a];\r\n        var dz = atob[2] = z[b] - z[a];\r\n        var d2 = dx * dx + dy * dy + dz * dz;\r\n        // This check now redundant as already done in AVHash.withinRadii\r\n        // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n        var d = Math.sqrt(d2);\r\n        // Find angle between a->b vector and the circle\r\n        // of their intersection by cosine rule\r\n        var cosA = (r1 * r1 + d * d - r2 * r2) / (2.0 * r1 * d);\r\n        // distance along a->b at intersection\r\n        var dmp = r1 * cosA;\r\n        v3normalize(atob, atob);\r\n        // Create normal to line\r\n        normalToLine(n1, atob);\r\n        v3normalize(n1, n1);\r\n        // Cross together for second normal vector\r\n        v3cross(n2, atob, n1);\r\n        v3normalize(n2, n2);\r\n        // r is radius of circle of intersection\r\n        var rInt = Math.sqrt(r1 * r1 - dmp * dmp);\r\n        v3multiplyScalar(n1, n1, rInt);\r\n        v3multiplyScalar(n2, n2, rInt);\r\n        v3multiplyScalar(atob, atob, dmp);\r\n        mid[0] = atob[0] + x[a];\r\n        mid[1] = atob[1] + y[a];\r\n        mid[2] = atob[2] + z[a];\r\n        lastClip = -1;\r\n        var ng = ngTorus;\r\n        for (var i = 0; i < probePositions; i++) {\r\n            var cost = cosTable[i];\r\n            var sint = sinTable[i];\r\n            var px = mid[0] + cost * n1[0] + sint * n2[0];\r\n            var py = mid[1] + cost * n1[1] + sint * n2[1];\r\n            var pz = mid[2] + cost * n1[2] + sint * n2[2];\r\n            if (obscured(px, py, pz, a, b) === -1) {\r\n                // As above, iterate over our grid...\r\n                // px, py, pz in grid coords\r\n                var iax = Math.floor(scaleFactor * (px - min[0]));\r\n                var iay = Math.floor(scaleFactor * (py - min[1]));\r\n                var iaz = Math.floor(scaleFactor * (pz - min[2]));\r\n                var minx = Math.max(0, iax - ng);\r\n                var miny = Math.max(0, iay - ng);\r\n                var minz = Math.max(0, iaz - ng);\r\n                var maxx = Math.min(dim[0], iax + ng + 2);\r\n                var maxy = Math.min(dim[1], iay + ng + 2);\r\n                var maxz = Math.min(dim[2], iaz + ng + 2);\r\n                for (var ix = minx; ix < maxx; ix++) {\r\n                    dx = px - gridx[ix];\r\n                    var xoffset = dim[1] * dim[2] * ix;\r\n                    for (var iy = miny; iy < maxy; iy++) {\r\n                        dy = py - gridy[iy];\r\n                        var dxy2 = dx * dx + dy * dy;\r\n                        var xyoffset = xoffset + dim[2] * iy;\r\n                        for (var iz = minz; iz < maxz; iz++) {\r\n                            dz = pz - gridz[iz];\r\n                            d2 = dxy2 + dz * dz;\r\n                            var idx = iz + xyoffset;\r\n                            var current = grid[idx];\r\n                            if (current > 0.0 && d2 < (current * current)) {\r\n                                grid[idx] = Math.sqrt(d2);\r\n                                if (setAtomID) {\r\n                                    // Is this grid point closer to a or b?\r\n                                    // Take dot product of atob and gridpoint->p (dx, dy, dz)\r\n                                    const dp = dx * atob[0] + dy * atob[1] + dz * atob[2];\r\n                                    atomIndex[idx] = dp < 0.0 ? b : a;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function normalToLine(out, p) {\r\n        out[0] = out[1] = out[2] = 1.0;\r\n        if (p[0] !== 0) {\r\n            out[0] = (p[1] + p[2]) / -p[0];\r\n        }\r\n        else if (p[1] !== 0) {\r\n            out[1] = (p[0] + p[2]) / -p[1];\r\n        }\r\n        else if (p[2] !== 0) {\r\n            out[2] = (p[0] + p[1]) / -p[2];\r\n        }\r\n        return out;\r\n    }\r\n    function fixNegatives() {\r\n        for (var i = 0; i < grid.length; i++) {\r\n            if (grid[i] < 0)\r\n                grid[i] = 0;\r\n        }\r\n    }\r\n    function fixAtomIDs() {\r\n        for (var i = 0; i < atomIndex.length; i++) {\r\n            atomIndex[i] = indexList[atomIndex[i]];\r\n        }\r\n    }\r\n    function getVolume(probeRadius, scaleFactor, setAtomID) {\r\n        // Basic steps are:\r\n        // 1) Initialize\r\n        // 2) Project points\r\n        // 3) Project torii\r\n        console.time('AVSurface.getVolume');\r\n        console.time('AVSurface.init');\r\n        init(probeRadius, scaleFactor, setAtomID);\r\n        console.timeEnd('AVSurface.init');\r\n        console.time('AVSurface.projectPoints');\r\n        projectPoints();\r\n        console.timeEnd('AVSurface.projectPoints');\r\n        console.time('AVSurface.projectTorii');\r\n        projectTorii();\r\n        console.timeEnd('AVSurface.projectTorii');\r\n        fixNegatives();\r\n        fixAtomIDs();\r\n        console.timeEnd('AVSurface.getVolume');\r\n    }\r\n    this.getSurface = function (type, probeRadius, scaleFactor, cutoff, setAtomID, smooth, contour) {\r\n        // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n        // function signature\r\n        getVolume(probeRadius, scaleFactor, setAtomID);\r\n        var volsurf = new VolumeSurface(grid, dim[2], dim[1], dim[0], atomIndex);\r\n        return volsurf.getSurface(probeRadius, false, undefined, matrix, contour);\r\n    };\r\n}\r\nObject.assign(AVSurface, { __deps: [\r\n        getSurfaceGrid, VolumeSurface, uniformArray, computeBoundingBox,\r\n        v3multiplyScalar, v3cross, v3normalize,\r\n        makeAVHash,\r\n        defaults\r\n    ] });\r\nexport { AVSurface, makeAVHash };\r\n//# sourceMappingURL=av-surface.js.map","/**\r\n * @file Molecular Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { WorkerRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Worker from '../worker/worker.js';\r\nimport EDTSurface from './edt-surface.js';\r\nimport { AVSurface } from './av-surface.js';\r\nimport Surface from './surface.js';\r\nWorkerRegistry.add('molsurf', function func(e, callback) {\r\n    const a = e.data.args;\r\n    const p = e.data.params;\r\n    if (a && p) {\r\n        const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface;\r\n        const surf = new SurfClass(a.coordList, a.radiusList, a.indexList);\r\n        const sd = surf.getSurface(p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour);\r\n        const transferList = [sd.position.buffer, sd.index.buffer];\r\n        if (sd.normal)\r\n            transferList.push(sd.normal.buffer);\r\n        if (sd.atomindex)\r\n            transferList.push(sd.atomindex.buffer);\r\n        const data = {\r\n            sd: sd,\r\n            p: p\r\n        };\r\n        callback(data, transferList);\r\n    }\r\n}, [EDTSurface, AVSurface]);\r\n/**\r\n * Create Molecular surfaces\r\n */\r\nclass MolecularSurface {\r\n    constructor(structure) {\r\n        this.structure = structure;\r\n    }\r\n    _getAtomData(params) {\r\n        return this.structure.getAtomData({\r\n            what: { position: true, radius: true, index: true },\r\n            radiusParams: defaults(params.radiusParams, {\r\n                type: 'vdw', scale: 1.0\r\n            })\r\n        });\r\n    }\r\n    _makeSurface(sd, p) {\r\n        var surface = new Surface(p.name, '', sd);\r\n        surface.info.type = p.type;\r\n        surface.info.probeRadius = p.probeRadius;\r\n        surface.info.scaleFactor = p.scaleFactor;\r\n        surface.info.smooth = p.smooth;\r\n        surface.info.cutoff = p.cutoff;\r\n        return surface;\r\n    }\r\n    /**\r\n     * Get molecular surface\r\n     * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n     * @return {Surface} the surface\r\n     */\r\n    getSurface(params) {\r\n        const p = params || {};\r\n        const atomData = this._getAtomData(params);\r\n        const coordList = atomData.position;\r\n        const radiusList = atomData.radius;\r\n        const indexList = atomData.index;\r\n        const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface;\r\n        const surf = new SurfClass(coordList, radiusList, indexList);\r\n        const sd = surf.getSurface(p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour);\r\n        return this._makeSurface(sd, p);\r\n    }\r\n    /**\r\n     * Get molecular surface asynchronous\r\n     * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n     * @param {function(surface: Surface)} callback - function to be called after surface is created\r\n     * @return {undefined}\r\n     */\r\n    getSurfaceWorker(params, callback) {\r\n        const p = Object.assign({}, params);\r\n        if (window.hasOwnProperty('Worker')) {\r\n            if (this.worker === undefined) {\r\n                this.worker = new Worker('molsurf');\r\n            }\r\n            const atomData = this._getAtomData(params);\r\n            const coordList = atomData.position;\r\n            const radiusList = atomData.radius;\r\n            const indexList = atomData.index;\r\n            const msg = {\r\n                args: {\r\n                    coordList: coordList,\r\n                    radiusList: radiusList,\r\n                    indexList: indexList\r\n                },\r\n                params: p\r\n            };\r\n            const transferList = [\r\n                coordList.buffer, radiusList.buffer, indexList.buffer\r\n            ];\r\n            this.worker.post(msg, transferList, (e) => {\r\n                callback(this._makeSurface(e.data.sd, p));\r\n            }, (e) => {\r\n                console.warn('MolecularSurface.getSurfaceWorker error - trying without worker', e);\r\n                this.worker.terminate();\r\n                this.worker = undefined;\r\n                const surface = this.getSurface(p);\r\n                callback(surface);\r\n            });\r\n        }\r\n        else {\r\n            const surface = this.getSurface(p);\r\n            callback(surface);\r\n        }\r\n    }\r\n    /**\r\n     * Cleanup\r\n     * @return {undefined}\r\n     */\r\n    dispose() {\r\n        if (this.worker)\r\n            this.worker.terminate();\r\n    }\r\n}\r\nexport default MolecularSurface;\r\n//# sourceMappingURL=molecular-surface.js.map","/**\r\n * @file Molecular Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport MolecularSurface from '../surface/molecular-surface.js';\r\nimport SurfaceBuffer from '../buffer/surface-buffer.js';\r\nimport ContourBuffer from '../buffer/contour-buffer.js';\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer';\r\nimport Selection from '../selection/selection.js';\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Vector3 } from '../ngl';\r\n/**\r\n * Molecular Surface Representation\r\n */\r\nclass MolecularSurfaceRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'surface';\r\n        this.parameters = Object.assign({\r\n            surfaceType: {\r\n                type: 'select',\r\n                rebuild: true,\r\n                options: {\r\n                    'vws': 'vws',\r\n                    'sas': 'sas',\r\n                    'ms': 'ms',\r\n                    'ses': 'ses',\r\n                    'av': 'av'\r\n                }\r\n            },\r\n            probeRadius: {\r\n                type: 'number',\r\n                precision: 1,\r\n                max: 20,\r\n                min: 0,\r\n                rebuild: true\r\n            },\r\n            smooth: {\r\n                type: 'integer',\r\n                precision: 1,\r\n                max: 10,\r\n                min: 0,\r\n                rebuild: true\r\n            },\r\n            scaleFactor: {\r\n                type: 'number',\r\n                precision: 1,\r\n                max: 5,\r\n                min: 0,\r\n                rebuild: true\r\n            },\r\n            cutoff: {\r\n                type: 'number',\r\n                precision: 2,\r\n                max: 50,\r\n                min: 0,\r\n                rebuild: true\r\n            },\r\n            contour: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            background: {\r\n                type: 'boolean', rebuild: true // FIXME\r\n            },\r\n            opaqueBack: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            filterSele: {\r\n                type: 'text', rebuild: true\r\n            },\r\n            colorVolume: {\r\n                type: 'hidden'\r\n            },\r\n            useWorker: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            radius: null,\r\n            scale: null\r\n        });\r\n        this.__infoList = [];\r\n        // TODO find a more direct way\r\n        this.structure.signals.refreshed.add(() => {\r\n            this.__forceNewMolsurf = true;\r\n        });\r\n        this.toBePrepared = true;\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'uniform');\r\n        p.colorValue = defaults(p.colorValue, 0xDDDDDD);\r\n        p.disablePicking = defaults(p.disablePicking, true);\r\n        this.surfaceType = defaults(p.surfaceType, 'ms');\r\n        this.probeRadius = defaults(p.probeRadius, 1.4);\r\n        this.smooth = defaults(p.smooth, 2);\r\n        this.scaleFactor = defaults(p.scaleFactor, 2.0);\r\n        this.cutoff = defaults(p.cutoff, 0.0);\r\n        this.contour = defaults(p.contour, false);\r\n        this.background = defaults(p.background, false);\r\n        this.opaqueBack = defaults(p.opaqueBack, true);\r\n        this.filterSele = defaults(p.filterSele, '');\r\n        this.colorVolume = defaults(p.colorVolume, undefined);\r\n        this.useWorker = defaults(p.useWorker, true);\r\n        super.init(params);\r\n    }\r\n    prepareData(sview, i, callback) {\r\n        let info = this.__infoList[i];\r\n        if (!info) {\r\n            info = {};\r\n            this.__infoList[i] = info;\r\n        }\r\n        if (!info.molsurf || info.sele !== sview.selection.string) {\r\n            if (this.filterSele) {\r\n                const sviewFilter = sview.structure.getView(new Selection(this.filterSele));\r\n                const bbSize = sviewFilter.boundingBox.getSize(new Vector3());\r\n                const maxDim = Math.max(bbSize.x, bbSize.y, bbSize.z);\r\n                const asWithin = sview.getAtomSetWithinPoint(sviewFilter.center, (maxDim / 2) + 6.0);\r\n                sview = sview.getView(new Selection(sview.getAtomSetWithinSelection(asWithin, 3).toSeleString()));\r\n                if (sview.atomCount === 0) {\r\n                    callback(i);\r\n                    return;\r\n                }\r\n            }\r\n            info.sele = sview.selection.string;\r\n            info.molsurf = new MolecularSurface(sview);\r\n            const p = this.getSurfaceParams();\r\n            const onSurfaceFinish = (surface) => {\r\n                info.surface = surface;\r\n                callback(i);\r\n            };\r\n            if (this.useWorker) {\r\n                info.molsurf.getSurfaceWorker(p, onSurfaceFinish);\r\n            }\r\n            else {\r\n                onSurfaceFinish(info.molsurf.getSurface(p));\r\n            }\r\n        }\r\n        else {\r\n            callback(i);\r\n        }\r\n    }\r\n    prepare(callback) {\r\n        if (this.__forceNewMolsurf || this.__sele !== this.selection.string ||\r\n            this.__surfaceParams !== JSON.stringify(this.getSurfaceParams())) {\r\n            this.__infoList.forEach((info) => {\r\n                if (info && info.molsurf) {\r\n                    info.molsurf.dispose();\r\n                }\r\n            });\r\n            this.__infoList.length = 0;\r\n        }\r\n        if (this.structureView.atomCount === 0) {\r\n            callback();\r\n            return;\r\n        }\r\n        const after = () => {\r\n            this.__sele = this.selection.string;\r\n            this.__surfaceParams = JSON.stringify(this.getSurfaceParams());\r\n            this.__forceNewMolsurf = false;\r\n            callback();\r\n        };\r\n        const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly;\r\n        const assembly = this.structure.biomolDict[name];\r\n        if (assembly) {\r\n            assembly.partList.forEach((part, i) => {\r\n                const sview = part.getView(this.structureView);\r\n                this.prepareData(sview, i, (_i) => {\r\n                    if (_i === assembly.partList.length - 1)\r\n                        after();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            this.prepareData(this.structureView, 0, after);\r\n        }\r\n    }\r\n    createData(sview, i) {\r\n        const info = this.__infoList[i];\r\n        const surface = info.surface;\r\n        if (!surface) {\r\n            // Surface creation bailed (no surface generated for this sview)\r\n            return;\r\n        }\r\n        const surfaceData = {\r\n            position: surface.getPosition(),\r\n            color: surface.getColor(this.getColorParams()),\r\n            index: surface.getFilteredIndex(this.filterSele, sview)\r\n        };\r\n        const bufferList = [];\r\n        if (surface.contour) {\r\n            const contourBuffer = new ContourBuffer(surfaceData, this.getBufferParams({\r\n                wireframe: false\r\n            }));\r\n            bufferList.push(contourBuffer);\r\n        }\r\n        else {\r\n            Object.assign(surfaceData, {\r\n                normal: surface.getNormal(),\r\n                picking: surface.getPicking(sview.getStructure())\r\n            });\r\n            const surfaceBuffer = new SurfaceBuffer(surfaceData, this.getBufferParams({\r\n                background: this.background,\r\n                opaqueBack: this.opaqueBack,\r\n                dullInterior: false\r\n            }));\r\n            if (this.getBufferParams().side == 'double') {\r\n                const doubleSidedBuffer = new DoubleSidedBuffer(surfaceBuffer);\r\n                bufferList.push(doubleSidedBuffer);\r\n            }\r\n            else {\r\n                bufferList.push(surfaceBuffer);\r\n            }\r\n        }\r\n        return { bufferList, info };\r\n    }\r\n    updateData(what, data) {\r\n        const surfaceData = {};\r\n        if (what.position || what.radius) {\r\n            this.__forceNewMolsurf = true;\r\n            this.build();\r\n            return;\r\n        }\r\n        if (what.color) {\r\n            surfaceData.color = data.info.surface.getColor(this.getColorParams());\r\n        }\r\n        if (what.index) {\r\n            surfaceData.index = data.info.surface.getFilteredIndex(this.filterSele, data.sview);\r\n        }\r\n        data.bufferList[0].setAttributes(surfaceData);\r\n    }\r\n    setParameters(params, what = {}, rebuild) {\r\n        if (params && params.filterSele) {\r\n            what.index = true;\r\n        }\r\n        if (params && params.colorVolume !== undefined) {\r\n            what.color = true;\r\n        }\r\n        // forbid setting wireframe to true when contour is true\r\n        if (params && params.wireframe && (params.contour || (params.contour === undefined && this.contour))) {\r\n            params.wireframe = false;\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n    getSurfaceParams(params = {}) {\r\n        const p = Object.assign({\r\n            type: this.surfaceType,\r\n            probeRadius: this.probeRadius,\r\n            scaleFactor: this.scaleFactor,\r\n            smooth: this.smooth && !this.contour,\r\n            cutoff: this.cutoff,\r\n            contour: this.contour,\r\n            useWorker: this.useWorker,\r\n            radiusParams: this.getRadiusParams()\r\n        }, params);\r\n        return p;\r\n    }\r\n    getColorParams() {\r\n        const p = super.getColorParams();\r\n        p.volume = this.colorVolume;\r\n        return p;\r\n    }\r\n    getAtomRadius() {\r\n        return 0;\r\n    }\r\n    clear() {\r\n        super.clear();\r\n    }\r\n    dispose() {\r\n        this.__infoList.forEach((info) => {\r\n            if (info && info.molsurf) {\r\n                info.molsurf.dispose();\r\n            }\r\n        });\r\n        this.__infoList.length = 0;\r\n        super.dispose();\r\n    }\r\n}\r\nRepresentationRegistry.add('surface', MolecularSurfaceRepresentation);\r\nexport default MolecularSurfaceRepresentation;\r\n//# sourceMappingURL=molecularsurface-representation.js.map","/**\r\n * @file Point Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport PointBuffer from '../buffer/point-buffer.js';\r\n/**\r\n * Point Representation\r\n */\r\nclass PointRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'point';\r\n        this.parameters = Object.assign({\r\n            pointSize: {\r\n                type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n            },\r\n            sizeAttenuation: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            sortParticles: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            useTexture: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            alphaTest: {\r\n                type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n            },\r\n            forceTransparent: {\r\n                type: 'boolean', buffer: true\r\n            },\r\n            edgeBleach: {\r\n                type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n            }\r\n        }, this.parameters, {\r\n            flatShaded: null,\r\n            wireframe: null,\r\n            linewidth: null,\r\n            side: null,\r\n            roughness: null,\r\n            metalness: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        this.pointSize = defaults(p.pointSize, 1);\r\n        this.sizeAttenuation = defaults(p.sizeAttenuation, true);\r\n        this.sortParticles = defaults(p.sortParticles, false);\r\n        this.useTexture = defaults(p.useTexture, false);\r\n        this.alphaTest = defaults(p.alphaTest, 0.5);\r\n        this.forceTransparent = defaults(p.forceTransparent, false);\r\n        this.edgeBleach = defaults(p.edgeBleach, 0.0);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        var what = { position: true, color: true, picking: true };\r\n        var atomData = sview.getAtomData(this.getAtomParams(what));\r\n        var pointBuffer = new PointBuffer(atomData, this.getBufferParams({\r\n            pointSize: this.pointSize,\r\n            sizeAttenuation: this.sizeAttenuation,\r\n            sortParticles: this.sortParticles,\r\n            useTexture: this.useTexture,\r\n            alphaTest: this.alphaTest,\r\n            forceTransparent: this.forceTransparent,\r\n            edgeBleach: this.edgeBleach\r\n        }));\r\n        return {\r\n            bufferList: [pointBuffer]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        var atomData = data.sview.getAtomData(this.getAtomParams(what));\r\n        var pointData = {};\r\n        if (!what || what.position) {\r\n            Object.assign(pointData, { position: atomData.position });\r\n        }\r\n        if (!what || what.color) {\r\n            Object.assign(pointData, { color: atomData.color });\r\n        }\r\n        data.bufferList[0].setAttributes(pointData);\r\n    }\r\n    getAtomRadius() {\r\n        return 0.1;\r\n    }\r\n}\r\nRepresentationRegistry.add('point', PointRepresentation);\r\nexport default PointRepresentation;\r\n//# sourceMappingURL=point-representation.js.map","/**\r\n * @file Ribbon Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport '../shader/Ribbon.vert';\r\nimport { getUintArray } from '../utils';\r\nimport { serialArray } from '../math/array-utils';\r\nimport MeshBuffer from './mesh-buffer';\r\nimport { Log } from \"../globals\";\r\nconst quadIndices = new Uint16Array([\r\n    0, 1, 2,\r\n    1, 3, 2\r\n]);\r\nfunction getSize(data) {\r\n    const n = (data.position.length / 3) - 1;\r\n    const n4 = n * 4;\r\n    const x = n4 * 3;\r\n    return x;\r\n}\r\n/**\r\n * Ribbon buffer. Draws a thin ribbon.\r\n */\r\nclass RibbonBuffer extends MeshBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.normal - normals\r\n     * @param  {Float32Array} data.dir - binormals\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super({\r\n            position: new Float32Array(getSize(data)),\r\n            color: new Float32Array(getSize(data)),\r\n            index: getUintArray(getSize(data), getSize(data) / 3),\r\n            normal: new Float32Array(getSize(data)),\r\n            picking: data.picking\r\n        }, params);\r\n        this.vertexShader = 'Ribbon.vert';\r\n        const n = (data.position.length / 3) - 1;\r\n        const n4 = n * 4;\r\n        const x = n4 * 3;\r\n        this.addAttributes({\r\n            'dir': { type: 'v3', value: new Float32Array(x) }\r\n        });\r\n        this.addAttributes({\r\n            'size': { type: 'f', value: new Float32Array(n4) }\r\n        });\r\n        data.primitiveId = serialArray(n);\r\n        this.setAttributes(data);\r\n        this.makeIndex();\r\n    }\r\n    setAttributes(data = {}) {\r\n        const n4 = this.size;\r\n        const n = n4 / 4;\r\n        const attributes = this.geometry.attributes; // TODO\r\n        let position, normal, size, dir, color, primitiveId;\r\n        let aPosition, aNormal, aSize, aDir, aColor, aPrimitiveId;\r\n        if (data.position) {\r\n            position = data.position;\r\n            aPosition = attributes.position.array;\r\n            attributes.position.needsUpdate = true;\r\n        }\r\n        if (data.normal) {\r\n            normal = data.normal;\r\n            aNormal = attributes.normal.array;\r\n            attributes.normal.needsUpdate = true;\r\n        }\r\n        if (data.size) {\r\n            size = data.size;\r\n            aSize = attributes.size.array;\r\n            attributes.size.needsUpdate = true;\r\n        }\r\n        if (data.dir) {\r\n            dir = data.dir;\r\n            aDir = attributes.dir.array;\r\n            attributes.dir.needsUpdate = true;\r\n        }\r\n        if (data.color) {\r\n            color = data.color;\r\n            aColor = attributes.color.array;\r\n            attributes.color.needsUpdate = true;\r\n        }\r\n        if (data.primitiveId) {\r\n            primitiveId = data.primitiveId;\r\n            aPrimitiveId = attributes.primitiveId.array;\r\n            attributes.primitiveId.needsUpdate = true;\r\n        }\r\n        let v, i, k, p, l, v3;\r\n        let currSize;\r\n        let prevSize = size ? size[0] : null;\r\n        for (v = 0; v < n; ++v) {\r\n            v3 = v * 3;\r\n            k = v * 3 * 4;\r\n            l = v * 4;\r\n            if (position) {\r\n                aPosition[k] = aPosition[k + 3] = position[v3];\r\n                aPosition[k + 1] = aPosition[k + 4] = position[v3 + 1];\r\n                aPosition[k + 2] = aPosition[k + 5] = position[v3 + 2];\r\n                aPosition[k + 6] = aPosition[k + 9] = position[v3 + 3];\r\n                aPosition[k + 7] = aPosition[k + 10] = position[v3 + 4];\r\n                aPosition[k + 8] = aPosition[k + 11] = position[v3 + 5];\r\n            }\r\n            if (normal) {\r\n                aNormal[k] = aNormal[k + 3] = -normal[v3];\r\n                aNormal[k + 1] = aNormal[k + 4] = -normal[v3 + 1];\r\n                aNormal[k + 2] = aNormal[k + 5] = -normal[v3 + 2];\r\n                aNormal[k + 6] = aNormal[k + 9] = -normal[v3 + 3];\r\n                aNormal[k + 7] = aNormal[k + 10] = -normal[v3 + 4];\r\n                aNormal[k + 8] = aNormal[k + 11] = -normal[v3 + 5];\r\n            }\r\n            for (i = 0; i < 4; ++i) {\r\n                p = k + 3 * i;\r\n                if (color) {\r\n                    aColor[p] = color[v3];\r\n                    aColor[p + 1] = color[v3 + 1];\r\n                    aColor[p + 2] = color[v3 + 2];\r\n                }\r\n                if (primitiveId) {\r\n                    aPrimitiveId[l + i] = primitiveId[v];\r\n                }\r\n            }\r\n            if (size) {\r\n                currSize = size[v];\r\n                if (prevSize !== size[v]) {\r\n                    aSize[l] = prevSize;\r\n                    aSize[l + 1] = prevSize;\r\n                    aSize[l + 2] = currSize;\r\n                    aSize[l + 3] = currSize;\r\n                }\r\n                else {\r\n                    aSize[l] = currSize;\r\n                    aSize[l + 1] = currSize;\r\n                    aSize[l + 2] = currSize;\r\n                    aSize[l + 3] = currSize;\r\n                }\r\n                prevSize = currSize;\r\n            }\r\n            if (dir) {\r\n                aDir[k] = dir[v3];\r\n                aDir[k + 1] = dir[v3 + 1];\r\n                aDir[k + 2] = dir[v3 + 2];\r\n                aDir[k + 3] = -dir[v3];\r\n                aDir[k + 4] = -dir[v3 + 1];\r\n                aDir[k + 5] = -dir[v3 + 2];\r\n                aDir[k + 6] = dir[v3 + 3];\r\n                aDir[k + 7] = dir[v3 + 4];\r\n                aDir[k + 8] = dir[v3 + 5];\r\n                aDir[k + 9] = -dir[v3 + 3];\r\n                aDir[k + 10] = -dir[v3 + 4];\r\n                aDir[k + 11] = -dir[v3 + 5];\r\n            }\r\n        }\r\n    }\r\n    makeIndex() {\r\n        const index = this.geometry.getIndex();\r\n        if (!index) {\r\n            Log.error('Index is null');\r\n            return;\r\n        }\r\n        const meshIndex = index.array;\r\n        const n = meshIndex.length / 4 / 3;\r\n        for (let v = 0; v < n; ++v) {\r\n            const ix = v * 6;\r\n            const it = v * 4;\r\n            meshIndex.set(quadIndices, ix);\r\n            for (let s = 0; s < 6; ++s) {\r\n                meshIndex[ix + s] += it;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default RibbonBuffer;\r\n//# sourceMappingURL=ribbon-buffer.js.map","/**\r\n * @file Ribbon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Spline from '../geometry/spline.js';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport RibbonBuffer from '../buffer/ribbon-buffer.js';\r\n/**\r\n * Ribbon Representation\r\n */\r\nclass RibbonRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'ribbon';\r\n        this.parameters = Object.assign({\r\n            subdiv: {\r\n                type: 'integer', max: 50, min: 1, rebuild: true\r\n            },\r\n            tension: {\r\n                type: 'number', precision: 1, max: 1.0, min: 0.1\r\n            },\r\n            smoothSheet: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            side: null,\r\n            wireframe: null,\r\n            linewidth: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'chainname');\r\n        p.colorScale = defaults(p.colorScale, 'RdYlBu');\r\n        p.radiusType = defaults(p.radiusType, 'sstruc');\r\n        p.radiusScale = defaults(p.radiusScale, 4.0);\r\n        if (p.quality === 'low') {\r\n            this.subdiv = 3;\r\n        }\r\n        else if (p.quality === 'medium') {\r\n            this.subdiv = 6;\r\n        }\r\n        else if (p.quality === 'high') {\r\n            this.subdiv = 12;\r\n        }\r\n        else {\r\n            this.subdiv = defaults(p.subdiv, 6);\r\n        }\r\n        this.tension = defaults(p.tension, NaN);\r\n        this.smoothSheet = defaults(p.smoothSheet, false);\r\n        super.init(p);\r\n    }\r\n    getSplineParams(params) {\r\n        return Object.assign({\r\n            subdiv: this.subdiv,\r\n            tension: this.tension,\r\n            directional: true,\r\n            smoothSheet: this.smoothSheet\r\n        }, params);\r\n    }\r\n    getAtomRadius(atom) {\r\n        return atom.isTrace() ? super.getAtomRadius(atom) : 0;\r\n    }\r\n    createData(sview) {\r\n        var bufferList = [];\r\n        var polymerList = [];\r\n        this.structure.eachPolymer(polymer => {\r\n            if (polymer.residueCount < 4)\r\n                return;\r\n            polymerList.push(polymer);\r\n            var spline = new Spline(polymer, this.getSplineParams());\r\n            var subPos = spline.getSubdividedPosition();\r\n            var subOri = spline.getSubdividedOrientation();\r\n            var subCol = spline.getSubdividedColor(this.getColorParams());\r\n            var subPick = spline.getSubdividedPicking();\r\n            var subSize = spline.getSubdividedSize(this.getRadiusParams());\r\n            bufferList.push(new RibbonBuffer(({\r\n                position: subPos.position,\r\n                normal: subOri.binormal,\r\n                dir: subOri.normal,\r\n                color: subCol.color,\r\n                size: subSize.size,\r\n                picking: subPick.picking\r\n            }), this.getBufferParams()));\r\n        }, sview.getSelection());\r\n        return {\r\n            bufferList: bufferList,\r\n            polymerList: polymerList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        what = what || {};\r\n        var i = 0;\r\n        var n = data.polymerList.length;\r\n        for (i = 0; i < n; ++i) {\r\n            var bufferData = {};\r\n            var spline = new Spline(data.polymerList[i], this.getSplineParams());\r\n            if (what.position) {\r\n                var subPos = spline.getSubdividedPosition();\r\n                var subOri = spline.getSubdividedOrientation();\r\n                Object.assign(bufferData, {\r\n                    position: subPos.position,\r\n                    normal: subOri.binormal,\r\n                    dir: subOri.normal\r\n                });\r\n            }\r\n            if (what.radius || what.scale) {\r\n                var subSize = spline.getSubdividedSize(this.getRadiusParams());\r\n                Object.assign(bufferData, { size: subSize.size });\r\n            }\r\n            if (what.color) {\r\n                var subCol = spline.getSubdividedColor(this.getColorParams());\r\n                Object.assign(bufferData, { color: subCol.color });\r\n            }\r\n            data.bufferList[i].setAttributes(bufferData);\r\n        }\r\n    }\r\n    setParameters(params) {\r\n        var rebuild = false;\r\n        var what = {};\r\n        if (params && params.tension) {\r\n            Object.assign(what, { position: true });\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('ribbon', RibbonRepresentation);\r\nexport default RibbonRepresentation;\r\n//# sourceMappingURL=ribbon-representation.js.map","/**\r\n * @file Rocket Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { AtomPicker } from '../utils/picker.js';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport Helixbundle from '../geometry/helixbundle.js';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\n/**\r\n * Rocket Representation\r\n */\r\nclass RocketRepresentation extends StructureRepresentation {\r\n    // protected helixbundleList: Helixbundle[]\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'rocket';\r\n        this.parameters = Object.assign({\r\n            localAngle: {\r\n                type: 'integer', max: 180, min: 0, rebuild: true\r\n            },\r\n            centerDist: {\r\n                type: 'number', precision: 1, max: 10, min: 0, rebuild: true\r\n            },\r\n            ssBorder: {\r\n                type: 'boolean', rebuild: true\r\n            },\r\n            radialSegments: true,\r\n            openEnded: true,\r\n            disableImpostor: true\r\n        }, this.parameters);\r\n        // this.helixbundleList = []\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        let p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'sstruc');\r\n        p.radiusSize = defaults(p.radiusSize, 1.5);\r\n        p.radiusScale = defaults(p.radiusScale, 1.0);\r\n        p.openEnded = defaults(p.openEnded, false);\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        this.localAngle = defaults(p.localAngle, 30);\r\n        this.centerDist = defaults(p.centerDist, 2.5);\r\n        this.ssBorder = defaults(p.ssBorder, false);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        let length = 0;\r\n        const axisList = [];\r\n        const helixbundleList = [];\r\n        this.structure.eachPolymer(polymer => {\r\n            if (polymer.residueCount < 4 || polymer.isNucleic())\r\n                return;\r\n            const helixbundle = new Helixbundle(polymer);\r\n            const axis = helixbundle.getAxis(this.localAngle, this.centerDist, this.ssBorder, this.getColorParams(), this.getRadiusParams());\r\n            length += axis.size.length;\r\n            axisList.push(axis);\r\n            helixbundleList.push(helixbundle);\r\n        }, sview.getSelection());\r\n        const axisData = {\r\n            begin: new Float32Array(length * 3),\r\n            end: new Float32Array(length * 3),\r\n            size: new Float32Array(length),\r\n            color: new Float32Array(length * 3),\r\n            picking: {}\r\n        };\r\n        let picking = new Float32Array(length);\r\n        let offset = 0;\r\n        axisList.forEach(function (axis) {\r\n            axisData.begin.set(axis.begin, offset * 3);\r\n            axisData.end.set(axis.end, offset * 3);\r\n            axisData.size.set(axis.size, offset);\r\n            axisData.color.set(axis.color, offset * 3);\r\n            picking.set(axis.picking.array, offset);\r\n            offset += axis.size.length;\r\n        });\r\n        if (length) {\r\n            axisData.picking = new AtomPicker(picking, sview.getStructure());\r\n        }\r\n        const cylinderBuffer = new CylinderBuffer({\r\n            position1: axisData.begin,\r\n            position2: axisData.end,\r\n            color: axisData.color,\r\n            color2: axisData.color,\r\n            radius: axisData.size,\r\n            picking: axisData.picking\r\n        }, this.getBufferParams({\r\n            openEnded: this.openEnded,\r\n            radialSegments: this.radialSegments,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        return {\r\n            bufferList: [cylinderBuffer],\r\n            axisList: axisList,\r\n            helixbundleList: helixbundleList,\r\n            axisData: axisData\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        what = what || {};\r\n        if (what.position) {\r\n            this.build();\r\n            return;\r\n        }\r\n        var cylinderData = {};\r\n        if (what.color || what.radius) {\r\n            var offset = 0;\r\n            data.helixbundleList.forEach((helixbundle) => {\r\n                var axis = helixbundle.getAxis(this.localAngle, this.centerDist, this.ssBorder, this.getColorParams(), this.getRadiusParams());\r\n                if (what.color) {\r\n                    data.axisData.color.set(axis.color, offset * 3);\r\n                }\r\n                if (what.radius || what.scale) {\r\n                    data.axisData.size.set(axis.size, offset);\r\n                }\r\n                offset += axis.size.length;\r\n            });\r\n            if (what.color) {\r\n                Object.assign(cylinderData, {\r\n                    color: data.axisData.color,\r\n                    color2: data.axisData.color\r\n                });\r\n            }\r\n            if (what.radius || what.scale) {\r\n                Object.assign(cylinderData, {\r\n                    radius: data.axisData.size\r\n                });\r\n            }\r\n        }\r\n        data.bufferList[0].setAttributes(cylinderData);\r\n    }\r\n}\r\nRepresentationRegistry.add('rocket', RocketRepresentation);\r\nexport default RocketRepresentation;\r\n//# sourceMappingURL=rocket-representation.js.map","/**\r\n * @file Rope Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport CartoonRepresentation from './cartoon-representation.js';\r\nimport Helixorient from '../geometry/helixorient.js';\r\nimport Spline from '../geometry/spline.js';\r\n/**\r\n * Rope Representation\r\n */\r\nclass RopeRepresentation extends CartoonRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'rope';\r\n        this.parameters = Object.assign({\r\n            smooth: {\r\n                type: 'integer', max: 15, min: 0, rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            aspectRatio: null,\r\n            smoothSheet: null\r\n        });\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.aspectRatio = 1.0;\r\n        p.tension = defaults(p.tension, 0.5);\r\n        p.radiusScale = defaults(p.radiusScale, 5.0);\r\n        p.smoothSheet = false;\r\n        this.smooth = defaults(p.smooth, 2);\r\n        super.init(p);\r\n    }\r\n    getSpline(polymer) {\r\n        var helixorient = new Helixorient(polymer);\r\n        return new Spline(polymer, this.getSplineParams({\r\n            directional: false,\r\n            positionIterator: helixorient.getCenterIterator(this.smooth)\r\n        }));\r\n    }\r\n}\r\nRepresentationRegistry.add('rope', RopeRepresentation);\r\nexport default RopeRepresentation;\r\n//# sourceMappingURL=rope-representation.js.map","/**\r\n * @file Spacefill Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { RepresentationRegistry } from '../globals';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\n/**\r\n * Spacefill Representation\r\n */\r\nclass SpacefillRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'spacefill';\r\n        this.parameters = Object.assign({\r\n            sphereDetail: true,\r\n            disableImpostor: true\r\n        }, this.parameters);\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        var sphereBuffer = new SphereBuffer(sview.getAtomData(this.getAtomParams()), this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            dullInterior: true,\r\n            disableImpostor: this.disableImpostor\r\n        }));\r\n        return {\r\n            bufferList: [sphereBuffer]\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        var atomData = data.sview.getAtomData(this.getAtomParams(what));\r\n        var sphereData = {};\r\n        if (!what || what.position) {\r\n            Object.assign(sphereData, { position: atomData.position });\r\n        }\r\n        if (!what || what.color) {\r\n            Object.assign(sphereData, { color: atomData.color });\r\n        }\r\n        if (!what || what.radius) {\r\n            Object.assign(sphereData, { radius: atomData.radius });\r\n        }\r\n        data.bufferList[0].setAttributes(sphereData);\r\n    }\r\n}\r\nRepresentationRegistry.add('spacefill', SpacefillRepresentation);\r\nexport default SpacefillRepresentation;\r\n//# sourceMappingURL=spacefill-representation.js.map","/**\r\n * @file Trace Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport '../shader/Line.vert';\r\nimport '../shader/Line.frag';\r\nimport { Log } from '../globals';\r\nimport Buffer from './buffer';\r\nfunction getSize(data) {\r\n    const n = data.position.length / 3;\r\n    const n1 = n - 1;\r\n    return n1 * 3 * 2;\r\n}\r\n/**\r\n * Trace buffer. Draws a series of lines.\r\n */\r\nclass TraceBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super({\r\n            position: new Float32Array(getSize(data)),\r\n            color: new Float32Array(getSize(data))\r\n        }, params);\r\n        this.isLine = true;\r\n        this.vertexShader = 'Line.vert';\r\n        this.fragmentShader = 'Line.frag';\r\n        this.setAttributes(data);\r\n    }\r\n    setAttributes(data) {\r\n        let position, color;\r\n        let linePosition, lineColor;\r\n        const attributes = this.geometry.attributes; // TODO\r\n        if (data.position) {\r\n            position = data.position;\r\n            linePosition = attributes.position.array;\r\n            attributes.position.needsUpdate = true;\r\n        }\r\n        if (data.color) {\r\n            color = data.color;\r\n            lineColor = attributes.color.array;\r\n            attributes.color.needsUpdate = true;\r\n        }\r\n        if (!position && !color) {\r\n            Log.warn('TraceBuffer.prototype.setAttributes no data');\r\n            return;\r\n        }\r\n        let v, v2;\r\n        const n = this.size;\r\n        const n1 = n - 1;\r\n        for (let i = 0; i < n1; ++i) {\r\n            v = 3 * i;\r\n            v2 = 3 * i * 2;\r\n            if (position) {\r\n                linePosition[v2] = position[v];\r\n                linePosition[v2 + 1] = position[v + 1];\r\n                linePosition[v2 + 2] = position[v + 2];\r\n                linePosition[v2 + 3] = position[v + 3];\r\n                linePosition[v2 + 4] = position[v + 4];\r\n                linePosition[v2 + 5] = position[v + 5];\r\n            }\r\n            if (color) {\r\n                lineColor[v2] = color[v];\r\n                lineColor[v2 + 1] = color[v + 1];\r\n                lineColor[v2 + 2] = color[v + 2];\r\n                lineColor[v2 + 3] = color[v + 3];\r\n                lineColor[v2 + 4] = color[v + 4];\r\n                lineColor[v2 + 5] = color[v + 5];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default TraceBuffer;\r\n//# sourceMappingURL=trace-buffer.js.map","/**\r\n * @file Trace Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Spline from '../geometry/spline.js';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport TraceBuffer from '../buffer/trace-buffer.js';\r\n/**\r\n * Trace Representation\r\n */\r\nclass TraceRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'trace';\r\n        this.parameters = Object.assign({\r\n            subdiv: {\r\n                type: 'integer', max: 50, min: 1, rebuild: true\r\n            },\r\n            tension: {\r\n                type: 'number', precision: 1, max: 1.0, min: 0.1\r\n            },\r\n            smoothSheet: {\r\n                type: 'boolean', rebuild: true\r\n            }\r\n        }, this.parameters, {\r\n            flatShaded: null,\r\n            side: null,\r\n            wireframe: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.colorScheme = defaults(p.colorScheme, 'chainname');\r\n        p.colorScale = defaults(p.colorScale, 'RdYlBu');\r\n        if (p.quality === 'low') {\r\n            this.subdiv = 3;\r\n        }\r\n        else if (p.quality === 'medium') {\r\n            this.subdiv = 6;\r\n        }\r\n        else if (p.quality === 'high') {\r\n            this.subdiv = 12;\r\n        }\r\n        else {\r\n            this.subdiv = defaults(p.subdiv, 6);\r\n        }\r\n        this.tension = defaults(p.tension, NaN);\r\n        this.smoothSheet = defaults(p.smoothSheet, false);\r\n        super.init(p);\r\n    }\r\n    getSplineParams(params) {\r\n        return Object.assign({\r\n            subdiv: this.subdiv,\r\n            tension: this.tension,\r\n            directional: false,\r\n            smoothSheet: this.smoothSheet\r\n        }, params);\r\n    }\r\n    getAtomRadius(atom) {\r\n        return atom.isTrace() ? 0.1 : 0;\r\n    }\r\n    createData(sview) {\r\n        var bufferList = [];\r\n        var polymerList = [];\r\n        this.structure.eachPolymer(polymer => {\r\n            if (polymer.residueCount < 4)\r\n                return;\r\n            polymerList.push(polymer);\r\n            var spline = new Spline(polymer, this.getSplineParams());\r\n            var subPos = spline.getSubdividedPosition();\r\n            var subCol = spline.getSubdividedColor(this.getColorParams());\r\n            bufferList.push(new TraceBuffer(Object.assign({}, subPos, subCol), this.getBufferParams()));\r\n        }, sview.getSelection());\r\n        return {\r\n            bufferList: bufferList,\r\n            polymerList: polymerList\r\n        };\r\n    }\r\n    updateData(what, data) {\r\n        what = what || {};\r\n        var i = 0;\r\n        var n = data.polymerList.length;\r\n        for (i = 0; i < n; ++i) {\r\n            var bufferData = {};\r\n            var spline = new Spline(data.polymerList[i], this.getSplineParams());\r\n            if (what.position) {\r\n                var subPos = spline.getSubdividedPosition();\r\n                Object.assign(bufferData, { position: subPos.position });\r\n            }\r\n            if (what.color) {\r\n                var subCol = spline.getSubdividedColor(this.getColorParams());\r\n                Object.assign(bufferData, { color: subCol.color });\r\n            }\r\n            data.bufferList[i].setAttributes(bufferData);\r\n        }\r\n    }\r\n    setParameters(params) {\r\n        var rebuild = false;\r\n        var what = {};\r\n        if (params && params.tension) {\r\n            Object.assign(what, { position: true });\r\n        }\r\n        super.setParameters(params, what, rebuild);\r\n        return this;\r\n    }\r\n}\r\nRepresentationRegistry.add('trace', TraceRepresentation);\r\nexport default TraceRepresentation;\r\n//# sourceMappingURL=trace-representation.js.map","/**\r\n * @file Tube Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport CartoonRepresentation from './cartoon-representation.js';\r\n/**\r\n * Tube Representation\r\n */\r\nclass TubeRepresentation extends CartoonRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'tube';\r\n        this.parameters = Object.assign({}, this.parameters, { aspectRatio: null });\r\n    }\r\n    init(params) {\r\n        var p = params || {};\r\n        p.aspectRatio = 1.0;\r\n        p.radiusScale = defaults(p.radiusScale, 2.0);\r\n        if (p.quality === 'low') {\r\n            this.radialSegments = 5;\r\n        }\r\n        super.init(p);\r\n    }\r\n    getSplineParams( /* params */) {\r\n        return super.getSplineParams({\r\n            directional: false\r\n        });\r\n    }\r\n}\r\nRepresentationRegistry.add('tube', TubeRepresentation);\r\nexport default TubeRepresentation;\r\n//# sourceMappingURL=tube-representation.js.map","/**\r\n * @file Unitcell Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport SphereBuffer from '../buffer/sphere-buffer.js';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\n/**\r\n * Unitcell Representation\r\n */\r\nclass UnitcellRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'unitcell';\r\n        this.parameters = Object.assign({\r\n            radiusSize: {\r\n                type: 'number', precision: 3, max: 10.0, min: 0.001\r\n            },\r\n            sphereDetail: true,\r\n            radialSegments: true,\r\n            disableImpostor: true\r\n        }, this.parameters, {\r\n            assembly: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        let defaultRadius = 0.5;\r\n        if (this.structure.unitcell) {\r\n            defaultRadius = Math.cbrt(this.structure.unitcell.volume) / 200;\r\n        }\r\n        p.radiusSize = defaults(p.radiusSize, defaultRadius);\r\n        p.colorValue = defaults(p.colorValue, 'orange');\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        super.init(p);\r\n    }\r\n    getUnitcellData(structure) {\r\n        return structure.unitcell.getData(structure);\r\n    }\r\n    create() {\r\n        const structure = this.structureView.getStructure();\r\n        if (!structure.unitcell)\r\n            return;\r\n        const unitcellData = this.getUnitcellData(structure);\r\n        this.sphereBuffer = new SphereBuffer(unitcellData.vertex, this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        this.cylinderBuffer = new CylinderBuffer(unitcellData.edge, this.getBufferParams({\r\n            openEnded: true,\r\n            radialSegments: this.radialSegments,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n        }));\r\n        this.dataList.push({\r\n            sview: this.structureView,\r\n            bufferList: [this.sphereBuffer, this.cylinderBuffer]\r\n        });\r\n    }\r\n    createData(sview) {\r\n        return;\r\n    }\r\n    updateData(what, data) {\r\n        const structure = data.sview.getStructure();\r\n        if (!structure.unitcell)\r\n            return;\r\n        const unitcellData = this.getUnitcellData(structure);\r\n        const sphereData = {};\r\n        const cylinderData = {};\r\n        if (!what || what.position) {\r\n            Object.assign(sphereData, { position: unitcellData.vertex.position });\r\n            Object.assign(cylinderData, {\r\n                position1: unitcellData.edge.position1,\r\n                position2: unitcellData.edge.position2\r\n            });\r\n        }\r\n        if (!what || what.color) {\r\n            Object.assign(sphereData, { color: unitcellData.vertex.color });\r\n            Object.assign(cylinderData, {\r\n                color: unitcellData.edge.color,\r\n                color2: unitcellData.edge.color2\r\n            });\r\n        }\r\n        if (!what || what.radius) {\r\n            Object.assign(sphereData, { radius: unitcellData.vertex.radius });\r\n            Object.assign(cylinderData, { radius: unitcellData.edge.radius });\r\n        }\r\n        this.sphereBuffer.setAttributes(sphereData);\r\n        this.cylinderBuffer.setAttributes(cylinderData);\r\n    }\r\n}\r\nRepresentationRegistry.add('unitcell', UnitcellRepresentation);\r\nexport default UnitcellRepresentation;\r\n//# sourceMappingURL=unitcell-representation.js.map","/**\r\n * @file Validation Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { RepresentationRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureRepresentation from './structure-representation.js';\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js';\r\n/**\r\n * Validation representation\r\n */\r\nclass ValidationRepresentation extends StructureRepresentation {\r\n    constructor(structure, viewer, params) {\r\n        super(structure, viewer, params);\r\n        this.type = 'validation';\r\n        this.parameters = Object.assign({}, this.parameters, {\r\n            radiusType: null,\r\n            radiusSize: null,\r\n            radiusScale: null\r\n        });\r\n        this.init(params);\r\n    }\r\n    init(params) {\r\n        const p = params || {};\r\n        p.colorValue = defaults(p.colorValue, '#f0027f');\r\n        p.useInteriorColor = defaults(p.useInteriorColor, true);\r\n        super.init(p);\r\n    }\r\n    createData(sview) {\r\n        if (!sview.validation)\r\n            return;\r\n        const clashData = sview.validation.getClashData({\r\n            structure: sview,\r\n            color: this.colorValue\r\n        });\r\n        const cylinderBuffer = new CylinderBuffer(clashData, this.getBufferParams({ openEnded: false }));\r\n        return {\r\n            bufferList: [cylinderBuffer]\r\n        };\r\n    }\r\n}\r\nRepresentationRegistry.add('validation', ValidationRepresentation);\r\nexport default ValidationRepresentation;\r\n//# sourceMappingURL=validation-representation.js.map","/**\r\n * @file Cone Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Vector3, ConeBufferGeometry } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { calculateCenterArray } from '../math/array-utils';\r\nimport GeometryBuffer from './geometry-buffer';\r\nimport { BufferDefaultParameters } from './buffer';\r\nconst scale = new Vector3();\r\nconst eye = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3(0, 1, 0);\r\nfunction getGeo(params = {}) {\r\n    const geo = new ConeBufferGeometry(1, // radius\r\n    1, // height\r\n    defaults(params.radialSegments, 60), // radialSegments\r\n    1, // heightSegments\r\n    defaults(params.openEnded, false) // openEnded\r\n    );\r\n    geo.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\r\n    return geo;\r\n}\r\nexport const ConeBufferDefaultParameters = Object.assign({\r\n    radialSegments: 60,\r\n    openEnded: false\r\n}, BufferDefaultParameters);\r\n/**\r\n * Cone geometry buffer.\r\n *\r\n * @example\r\n * var coneBuffer = new ConeBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ConeBuffer extends GeometryBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position1 - from positions\r\n     * @param {Float32Array} data.position2 - to positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n    constructor(data, params = {}) {\r\n        super({\r\n            position: new Float32Array(data.position1.length),\r\n            color: data.color,\r\n            picking: data.picking\r\n        }, params, getGeo(params));\r\n        this.updateNormals = true;\r\n        this._position = new Float32Array(data.position1.length);\r\n        this.setAttributes(data, true);\r\n    }\r\n    get defaultParameters() { return ConeBufferDefaultParameters; }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        eye.fromArray(this._position1, i3);\r\n        target.fromArray(this._position2, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        const r = this._radius[i];\r\n        scale.set(r, r, eye.distanceTo(target));\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.position1 && data.position2) {\r\n            calculateCenterArray(data.position1, data.position2, this._position);\r\n            this._position1 = data.position1;\r\n            this._position2 = data.position2;\r\n            data.position = this._position;\r\n        }\r\n        if (data.radius)\r\n            this._radius = data.radius;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('cone', ConeBuffer);\r\nexport default ConeBuffer;\r\n//# sourceMappingURL=cone-buffer.js.map","/**\r\n * @file Geometry Group\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Box3 } from 'three';\r\nclass GeometryGroup {\r\n    constructor(geometryList = []) {\r\n        this.geometryList = geometryList;\r\n    }\r\n    computeBoundingBox() {\r\n        if (!this.boundingBox) {\r\n            this.boundingBox = new Box3();\r\n        }\r\n        else {\r\n            this.boundingBox.empty();\r\n        }\r\n        this.geometryList.forEach(geo => {\r\n            if (!geo.boundingBox)\r\n                geo.computeBoundingBox();\r\n            this.boundingBox.union(geo.boundingBox);\r\n        });\r\n    }\r\n}\r\nexport default GeometryGroup;\r\n//# sourceMappingURL=geometry-group.js.map","/**\r\n * @file Arrow Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Vector3, Group } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport { createParams, defaults } from '../utils';\r\nimport Buffer from './buffer';\r\nimport CylinderBuffer from './cylinder-buffer';\r\nimport ConeBuffer from './cone-buffer';\r\nimport GeometryGroup from '../viewer/geometry-group';\r\nimport { BufferDefaultParameters } from './buffer';\r\nexport const ArrowBufferDefaultParameters = Object.assign({\r\n    aspectRatio: 1.5,\r\n    radialSegments: 50,\r\n    openEnded: false,\r\n    disableImpostor: false\r\n}, BufferDefaultParameters);\r\n/**\r\n * Arrow buffer. Draws arrows made from a cylinder and a cone.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var arrowBuffer = new ArrowBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 10, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ArrowBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position1 - from positions\r\n     * @param {Float32Array} data.position2 - to positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n    constructor(data, params = {}) {\r\n        this.group = new Group();\r\n        this.wireframeGroup = new Group();\r\n        this.pickingGroup = new Group();\r\n        this.visible = true;\r\n        this.parameters = createParams(params, this.defaultParameters);\r\n        this.splitPosition = new Float32Array(data.position1.length);\r\n        this.cylinderRadius = new Float32Array(data.radius.length);\r\n        const attr = this.makeAttributes(data);\r\n        const bufferParams = {\r\n            radialSegments: this.parameters.radialSegments,\r\n            openEnded: this.parameters.openEnded,\r\n            disableImpostor: this.parameters.disableImpostor\r\n        };\r\n        this.cylinderBuffer = new CylinderBuffer(attr.cylinder, bufferParams);\r\n        this.coneBuffer = new ConeBuffer(attr.cone, bufferParams);\r\n        this.geometry = new GeometryGroup([\r\n            this.cylinderBuffer.geometry,\r\n            this.coneBuffer.geometry\r\n        ]);\r\n        // requires Group objects to be present\r\n        this.matrix = defaults(params.matrix, new Matrix4());\r\n        this.picking = data.picking;\r\n    }\r\n    get defaultParameters() { return ArrowBufferDefaultParameters; }\r\n    set matrix(m) {\r\n        Buffer.prototype.setMatrix.call(this, m);\r\n    }\r\n    get matrix() {\r\n        return this.group.matrix.clone();\r\n    }\r\n    get pickable() {\r\n        return !!this.picking;\r\n    }\r\n    makeAttributes(data = {}) {\r\n        const splitPosition = this.splitPosition;\r\n        const cylinderRadius = this.cylinderRadius;\r\n        const aspectRatio = this.parameters.aspectRatio;\r\n        let i, il;\r\n        const cylinder = {};\r\n        const cone = {};\r\n        if (data.radius) {\r\n            for (i = 0, il = cylinderRadius.length; i < il; ++i) {\r\n                cylinderRadius[i] = data.radius[i] / aspectRatio;\r\n            }\r\n            cylinder.radius = cylinderRadius;\r\n            cone.radius = data.radius;\r\n        }\r\n        if (data.position1 && data.position2) {\r\n            const vFrom = new Vector3();\r\n            const vTo = new Vector3();\r\n            const vDir = new Vector3();\r\n            const vSplit = new Vector3();\r\n            for (i = 0, il = splitPosition.length; i < il; i += 3) {\r\n                vFrom.fromArray(data.position1, i);\r\n                vTo.fromArray(data.position2, i);\r\n                vDir.subVectors(vFrom, vTo);\r\n                const fullLength = vDir.length();\r\n                const coneLength = cylinderRadius[i / 3] * aspectRatio * 2;\r\n                const length = Math.min(fullLength, coneLength);\r\n                vDir.setLength(length);\r\n                vSplit.copy(vTo).add(vDir);\r\n                vSplit.toArray(splitPosition, i);\r\n            }\r\n            cylinder.position1 = data.position1;\r\n            cylinder.position2 = splitPosition;\r\n            cone.position1 = splitPosition;\r\n            cone.position2 = data.position2;\r\n        }\r\n        if (data.color) {\r\n            cylinder.color = data.color;\r\n            cylinder.color2 = data.color;\r\n            cone.color = data.color;\r\n        }\r\n        return {\r\n            cylinder: cylinder,\r\n            cone: cone\r\n        };\r\n    }\r\n    getMesh() {\r\n        return new Group().add(this.cylinderBuffer.getMesh(), this.coneBuffer.getMesh());\r\n    }\r\n    getWireframeMesh() {\r\n        return new Group().add(this.cylinderBuffer.getWireframeMesh(), this.coneBuffer.getWireframeMesh());\r\n    }\r\n    getPickingMesh() {\r\n        return new Group().add(this.cylinderBuffer.getPickingMesh(), this.coneBuffer.getPickingMesh());\r\n    }\r\n    setAttributes(data = {}) {\r\n        const attr = this.makeAttributes(data);\r\n        this.cylinderBuffer.setAttributes(attr.cylinder);\r\n        this.coneBuffer.setAttributes(attr.cone);\r\n    }\r\n    /**\r\n     * Set buffer parameters\r\n     * @param {BufferParameters} params - buffer parameters object\r\n     * @return {undefined}\r\n     */\r\n    setParameters(params = {}) {\r\n        params = Object.assign({}, params);\r\n        if (params && params.matrix !== undefined) {\r\n            this.matrix = params.matrix;\r\n        }\r\n        delete params.matrix;\r\n        if (params && params.wireframe !== undefined) {\r\n            this.parameters.wireframe = params.wireframe;\r\n            this.setVisibility(this.visible);\r\n        }\r\n        this.cylinderBuffer.setParameters(params);\r\n        this.coneBuffer.setParameters(params);\r\n    }\r\n    setVisibility(value) {\r\n        Buffer.prototype.setVisibility.call(this, value);\r\n    }\r\n    dispose() {\r\n        this.cylinderBuffer.dispose();\r\n        this.coneBuffer.dispose();\r\n    }\r\n}\r\nBufferRegistry.add('arrow', ArrowBuffer);\r\nexport default ArrowBuffer;\r\n//# sourceMappingURL=arrow-buffer.js.map","/**\r\n * @file Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { BoxBufferGeometry, Vector3 } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport GeometryBuffer from './geometry-buffer';\r\nconst scale = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3();\r\nconst eye = new Vector3(0, 0, 0);\r\n/**\r\n * Box buffer. Draws boxes.\r\n *\r\n * @example\r\n * var boxBuffer = new BoxBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass BoxBuffer extends GeometryBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params, new BoxBufferGeometry(1, 1, 1));\r\n        this.updateNormals = true;\r\n        this.setAttributes(data, true);\r\n    }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        target.fromArray(this._heightAxis, i3);\r\n        up.fromArray(this._depthAxis, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        scale.set(this._size[i], up.length(), target.length());\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.size)\r\n            this._size = data.size;\r\n        if (data.heightAxis)\r\n            this._heightAxis = data.heightAxis;\r\n        if (data.depthAxis)\r\n            this._depthAxis = data.depthAxis;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('box', BoxBuffer);\r\nexport default BoxBuffer;\r\n//# sourceMappingURL=box-buffer.js.map","/**\r\n * @file Ellipsoid Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { IcosahedronBufferGeometry, Vector3 } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport GeometryBuffer from './geometry-buffer';\r\nimport { BufferDefaultParameters } from './buffer';\r\nconst scale = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3();\r\nconst eye = new Vector3(0, 0, 0);\r\nexport const EllipsoidBufferDefaultParameters = Object.assign({\r\n    sphereDetail: 2,\r\n}, BufferDefaultParameters);\r\n/**\r\n * Ellipsoid buffer. Draws ellipsoids.\r\n *\r\n * @example\r\n * var ellipsoidBuffer = new EllipsoidBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass EllipsoidBuffer extends GeometryBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 2)));\r\n        this.updateNormals = true;\r\n        this.setAttributes(data, true);\r\n    }\r\n    get defaultParameters() { return EllipsoidBufferDefaultParameters; }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        target.fromArray(this._majorAxis, i3);\r\n        up.fromArray(this._minorAxis, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        scale.set(this._radius[i], up.length(), target.length());\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.radius)\r\n            this._radius = data.radius;\r\n        if (data.majorAxis)\r\n            this._majorAxis = data.majorAxis;\r\n        if (data.minorAxis)\r\n            this._minorAxis = data.minorAxis;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('ellipsoid', EllipsoidBuffer);\r\nexport default EllipsoidBuffer;\r\n//# sourceMappingURL=ellipsoid-buffer.js.map","/**\r\n * @file Octahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { OctahedronBufferGeometry, Vector3 } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport GeometryBuffer from './geometry-buffer.js';\r\nconst scale = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3();\r\nconst eye = new Vector3(0, 0, 0);\r\n/**\r\n * Octahedron buffer. Draws octahedrons.\r\n *\r\n * @example\r\n * var octahedronBuffer = new OctahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass OctahedronBuffer extends GeometryBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params, new OctahedronBufferGeometry(1, 0));\r\n        this.updateNormals = true;\r\n        this.setAttributes(data, true);\r\n    }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        target.fromArray(this._heightAxis, i3);\r\n        up.fromArray(this._depthAxis, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        scale.set(this._size[i], up.length(), target.length());\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.size)\r\n            this._size = data.size;\r\n        if (data.heightAxis)\r\n            this._heightAxis = data.heightAxis;\r\n        if (data.depthAxis)\r\n            this._depthAxis = data.depthAxis;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('octahedron', OctahedronBuffer);\r\nexport default OctahedronBuffer;\r\n//# sourceMappingURL=octahedron-buffer.js.map","/**\r\n * @file Tetrahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { TetrahedronBufferGeometry, Vector3 } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport GeometryBuffer from './geometry-buffer';\r\nconst scale = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3();\r\nconst eye = new Vector3(0, 0, 0);\r\n/**\r\n * Tetrahedron buffer. Draws tetrahedrons.\r\n *\r\n * @example\r\n * var tetrahedronBuffer = new TetrahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass TetrahedronBuffer extends GeometryBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params, new TetrahedronBufferGeometry(1, 0));\r\n        this.updateNormals = true;\r\n        this.setAttributes(data, true);\r\n    }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        target.fromArray(this._heightAxis, i3);\r\n        up.fromArray(this._depthAxis, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        scale.set(this._size[i], up.length(), target.length());\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.size)\r\n            this._size = data.size;\r\n        if (data.heightAxis)\r\n            this._heightAxis = data.heightAxis;\r\n        if (data.depthAxis)\r\n            this._depthAxis = data.depthAxis;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('tetrahedron', TetrahedronBuffer);\r\nexport default TetrahedronBuffer;\r\n//# sourceMappingURL=tetrahedron-buffer.js.map","/**\r\n * @file Tetrahedron Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { TorusBufferGeometry, Vector3 } from 'three';\r\nimport { BufferRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport GeometryBuffer from './geometry-buffer';\r\nimport { BufferDefaultParameters } from './buffer';\r\nconst scale = new Vector3();\r\nconst target = new Vector3();\r\nconst up = new Vector3();\r\nconst eye = new Vector3(0, 0, 0);\r\nexport const TorusBufferDefaultParameters = Object.assign({\r\n    radiusRatio: 0.2,\r\n    radialSegments: 16,\r\n    tubularSegments: 32\r\n}, BufferDefaultParameters);\r\n/**\r\n * Torus geometry buffer. Draws torii.\r\n *\r\n * @example\r\n * var torusBuffer = new TorusBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass TorusBuffer extends GeometryBuffer {\r\n    constructor(data, params = {}) {\r\n        super(data, params, new TorusBufferGeometry(1, defaults(params.radiusRatio, 0.2), defaults(params.radialSegments, 16), defaults(params.tubularSegments, 32)));\r\n        this.updateNormals = true;\r\n        this.setAttributes(data, true);\r\n    }\r\n    get defaultParameters() { return TorusBufferDefaultParameters; }\r\n    applyPositionTransform(matrix, i, i3) {\r\n        target.fromArray(this._majorAxis, i3);\r\n        up.fromArray(this._minorAxis, i3);\r\n        matrix.lookAt(eye, target, up);\r\n        const r = this._radius[i];\r\n        scale.set(r, r, r);\r\n        matrix.scale(scale);\r\n    }\r\n    setAttributes(data = {}, initNormals) {\r\n        if (data.radius)\r\n            this._radius = data.radius;\r\n        if (data.majorAxis)\r\n            this._majorAxis = data.majorAxis;\r\n        if (data.minorAxis)\r\n            this._minorAxis = data.minorAxis;\r\n        super.setAttributes(data, initNormals);\r\n    }\r\n}\r\nBufferRegistry.add('torus', TorusBuffer);\r\nexport default TorusBuffer;\r\n//# sourceMappingURL=torus-buffer.js.map","/**\r\n * @file Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log } from '../globals';\r\nimport { defaults } from '../utils';\r\nclass Parser {\r\n    constructor(streamer, params) {\r\n        var p = params || {};\r\n        this.streamer = streamer;\r\n        this.name = defaults(p.name, '');\r\n        this.path = defaults(p.path, '');\r\n    }\r\n    get type() { return ''; }\r\n    get __objName() { return ''; }\r\n    get isBinary() { return false; }\r\n    get isJson() { return false; }\r\n    get isXml() { return false; }\r\n    parse() {\r\n        return this.streamer.read().then(() => {\r\n            this._beforeParse();\r\n            this._parse();\r\n            this._afterParse();\r\n            return this[this.__objName];\r\n        });\r\n    }\r\n    _parse() { }\r\n    _beforeParse() { }\r\n    _afterParse() {\r\n        if (Debug)\r\n            Log.log(this[this.__objName]);\r\n    }\r\n}\r\nexport default Parser;\r\n//# sourceMappingURL=parser.js.map","/**\r\n * @file Structure Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport Parser from './parser';\r\nimport Structure from '../structure/structure';\r\nimport StructureBuilder from '../structure/structure-builder';\r\nclass StructureParser extends Parser {\r\n    constructor(streamer, params) {\r\n        var p = params || {};\r\n        super(streamer, p);\r\n        this.firstModelOnly = defaults(p.firstModelOnly, false);\r\n        this.asTrajectory = defaults(p.asTrajectory, false);\r\n        this.cAlphaOnly = defaults(p.cAlphaOnly, false);\r\n        this.structure = new Structure(this.name, this.path);\r\n        this.structureBuilder = new StructureBuilder(this.structure);\r\n    }\r\n    get type() { return 'structure'; }\r\n    get __objName() { return 'structure'; }\r\n}\r\nexport default StructureParser;\r\n//# sourceMappingURL=structure-parser.js.map","/**\r\n * @file Entity\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { UnknownEntity, PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity } from './structure-constants.js';\r\nfunction entityTypeFromString(string) {\r\n    string = string.toLowerCase();\r\n    switch (string) {\r\n        case 'polymer':\r\n            return PolymerEntity;\r\n        case 'non-polymer':\r\n            return NonPolymerEntity;\r\n        case 'macrolide':\r\n            return MacrolideEntity;\r\n        case 'water':\r\n            return WaterEntity;\r\n        default:\r\n            return UnknownEntity;\r\n    }\r\n}\r\nfunction entityFromType(type) {\r\n    switch (type) {\r\n        case PolymerEntity:\r\n            return 'polymer';\r\n        case NonPolymerEntity:\r\n            return 'non-polymer';\r\n        case MacrolideEntity:\r\n            return 'macrolide';\r\n        case WaterEntity:\r\n            return 'water';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexport const EntityTypeString = {\r\n    'polymer': PolymerEntity,\r\n    'non-polymer': NonPolymerEntity,\r\n    'macrolide': MacrolideEntity,\r\n    'water': WaterEntity,\r\n};\r\n/**\r\n * Entity of a {@link Structure}\r\n */\r\nexport default class Entity {\r\n    /**\r\n     * @param {Structure} structure - structure the entity belongs to\r\n     * @param {Integer} index - index within structure.entityList\r\n     * @param {String} description - entity description\r\n     * @param {String} type - entity type\r\n     * @param {Array} chainIndexList - entity chainIndexList\r\n     */\r\n    constructor(structure, index, description = '', type, chainIndexList = []) {\r\n        this.structure = structure;\r\n        this.index = index;\r\n        this.description = description;\r\n        this.entityType = entityTypeFromString(type || '');\r\n        this.chainIndexList = chainIndexList;\r\n        chainIndexList.forEach(function (ci) {\r\n            structure.chainStore.entityIndex[ci] = index;\r\n        });\r\n    }\r\n    get type() { return entityFromType(this.entityType); }\r\n    getEntityType() {\r\n        return this.entityType;\r\n    }\r\n    isPolymer() {\r\n        return this.entityType === PolymerEntity;\r\n    }\r\n    isNonPolymer() {\r\n        return this.entityType === NonPolymerEntity;\r\n    }\r\n    isMacrolide() {\r\n        return this.entityType === MacrolideEntity;\r\n    }\r\n    isWater() {\r\n        return this.entityType === WaterEntity;\r\n    }\r\n    eachChain(callback) {\r\n        const cp = this.structure.getChainProxy();\r\n        this.chainIndexList.forEach(function (index) {\r\n            cp.index = index;\r\n            callback(cp);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=entity.js.map","/**\r\n * @file Unitcell\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Color, Vector3, Matrix4 } from 'three';\r\nimport { defaults } from '../utils';\r\nimport { degToRad } from '../math/math-utils';\r\nimport { uniformArray, uniformArray3, centerArray3 } from '../math/array-utils';\r\nimport { UnitcellPicker } from '../utils/picker';\r\nconst DefaultBoxParams = {\r\n    a: 1,\r\n    b: 1,\r\n    c: 1,\r\n    alpha: 90,\r\n    beta: 90,\r\n    gamma: 90,\r\n    spacegroup: 'P 1'\r\n};\r\n/**\r\n * Unitcell class\r\n */\r\nclass Unitcell {\r\n    /**\r\n     * @param  {Object} params - unitcell parameters\r\n     * @param  {Number} params.a - length a\r\n     * @param  {Number} params.b - length b\r\n     * @param  {Number} params.c - length c\r\n     * @param  {Number} params.alpha - angle alpha\r\n     * @param  {Number} params.beta - angle beta\r\n     * @param  {Number} params.gamma - angle gamma\r\n     * @param  {String} params.spacegroup - spacegroup\r\n     * @param  {Matrix4} [params.cartToFrac] - transformation matrix from\r\n     *                                         cartesian to fractional coordinates\r\n     * @param  {Matrix4} [params.scale] - alias for `params.cartToFrac`\r\n     */\r\n    constructor(params = DefaultBoxParams) {\r\n        this.cartToFrac = new Matrix4();\r\n        this.fracToCart = new Matrix4();\r\n        this.a = params.a;\r\n        this.b = params.b;\r\n        this.c = params.c;\r\n        this.alpha = params.alpha;\r\n        this.beta = params.beta;\r\n        this.gamma = params.gamma;\r\n        this.spacegroup = params.spacegroup;\r\n        const alphaRad = degToRad(this.alpha);\r\n        const betaRad = degToRad(this.beta);\r\n        const gammaRad = degToRad(this.gamma);\r\n        const cosAlpha = Math.cos(alphaRad);\r\n        const cosBeta = Math.cos(betaRad);\r\n        const cosGamma = Math.cos(gammaRad);\r\n        const sinBeta = Math.sin(betaRad);\r\n        const sinGamma = Math.sin(gammaRad);\r\n        this.volume = (this.a * this.b * this.c *\r\n            Math.sqrt(1 - cosAlpha * cosAlpha - cosBeta * cosBeta - cosGamma * cosGamma +\r\n                2.0 * cosAlpha * cosBeta * cosGamma));\r\n        if (params.cartToFrac === undefined) {\r\n            // https://github.com/biojava/biojava/blob/master/biojava-structure/src/main/java/org/biojava/nbio/structure/xtal/CrystalCell.java\r\n            const cStar = (this.a * this.b * sinGamma) / this.volume;\r\n            const cosAlphaStar = ((cosBeta * cosGamma - cosAlpha) / (sinBeta * sinGamma));\r\n            this.fracToCart.set(this.a, 0, 0, 0, this.b * cosGamma, this.b * sinGamma, 0, 0, this.c * cosBeta, -this.c * sinBeta * cosAlphaStar, 1.0 / cStar, 0, 0, 0, 0, 1).transpose();\r\n            this.cartToFrac.getInverse(this.fracToCart);\r\n        }\r\n        else {\r\n            this.cartToFrac.copy(params.cartToFrac);\r\n            this.fracToCart.getInverse(this.cartToFrac);\r\n        }\r\n    }\r\n    getPosition(structure) {\r\n        const vertexPosition = new Float32Array(3 * 8);\r\n        if (structure.unitcell) {\r\n            const uc = structure.unitcell;\r\n            const centerFrac = structure.center.clone().applyMatrix4(uc.cartToFrac).floor();\r\n            const v = new Vector3();\r\n            let cornerOffset = 0;\r\n            const addCorner = function (x, y, z) {\r\n                v.set(x, y, z)\r\n                    .add(centerFrac)\r\n                    .applyMatrix4(uc.fracToCart)\r\n                    .toArray(vertexPosition, cornerOffset);\r\n                cornerOffset += 3;\r\n            };\r\n            addCorner(0, 0, 0);\r\n            addCorner(1, 0, 0);\r\n            addCorner(0, 1, 0);\r\n            addCorner(0, 0, 1);\r\n            addCorner(1, 1, 0);\r\n            addCorner(1, 0, 1);\r\n            addCorner(0, 1, 1);\r\n            addCorner(1, 1, 1);\r\n        }\r\n        return vertexPosition;\r\n    }\r\n    getCenter(structure) {\r\n        return centerArray3(this.getPosition(structure));\r\n    }\r\n    getData(structure, params = {}) {\r\n        const colorValue = defaults(params.colorValue, 'orange');\r\n        const radius = defaults(params.radius, Math.cbrt(this.volume) / 200);\r\n        const c = new Color(colorValue);\r\n        const v = new Vector3();\r\n        const vertexPosition = this.getPosition(structure);\r\n        const vertexColor = uniformArray3(8, c.r, c.g, c.b);\r\n        const vertexRadius = uniformArray(8, radius);\r\n        const edgePosition1 = new Float32Array(3 * 12);\r\n        const edgePosition2 = new Float32Array(3 * 12);\r\n        const edgeColor = uniformArray3(12, c.r, c.g, c.b);\r\n        const edgeRadius = uniformArray(12, radius);\r\n        let edgeOffset = 0;\r\n        function addEdge(a, b) {\r\n            v.fromArray(vertexPosition, a * 3)\r\n                .toArray(edgePosition1, edgeOffset);\r\n            v.fromArray(vertexPosition, b * 3)\r\n                .toArray(edgePosition2, edgeOffset);\r\n            edgeOffset += 3;\r\n        }\r\n        addEdge(0, 1);\r\n        addEdge(0, 2);\r\n        addEdge(0, 3);\r\n        addEdge(1, 4);\r\n        addEdge(1, 5);\r\n        addEdge(2, 6);\r\n        addEdge(3, 5);\r\n        addEdge(4, 7);\r\n        addEdge(5, 7);\r\n        addEdge(2, 4);\r\n        addEdge(7, 6);\r\n        addEdge(3, 6);\r\n        const picker = new UnitcellPicker(this, structure);\r\n        return {\r\n            vertex: {\r\n                position: vertexPosition,\r\n                color: vertexColor,\r\n                radius: vertexRadius,\r\n                picking: picker\r\n            },\r\n            edge: {\r\n                position1: edgePosition1,\r\n                position2: edgePosition2,\r\n                color: edgeColor,\r\n                color2: edgeColor,\r\n                radius: edgeRadius,\r\n                picking: picker\r\n            }\r\n        };\r\n    }\r\n}\r\nexport default Unitcell;\r\n//# sourceMappingURL=unitcell.js.map","/**\r\n * @file Pdb Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport StructureParser from './structure-parser';\r\nimport Entity from '../structure/entity';\r\nimport Unitcell from '../symmetry/unitcell';\r\nimport Assembly from '../symmetry/assembly';\r\nimport { WaterNames } from '../structure/structure-constants';\r\nimport { assignSecondaryStructure, buildUnitcellAssembly, calculateBonds, calculateChainnames, calculateSecondaryStructure } from '../structure/structure-utils';\r\n// PDB helix record encoding\r\nconst HelixTypes = {\r\n    1: 'h',\r\n    2: 'h',\r\n    3: 'i',\r\n    4: 'h',\r\n    5: 'g',\r\n    6: 'h',\r\n    7: 'h',\r\n    8: 'h',\r\n    9: 'h',\r\n    10: 'h',\r\n    0: 'h' //Used to be ''\r\n};\r\nconst dAminoAcids = [\r\n    'DAL',\r\n    'DAR',\r\n    'DSG',\r\n    'DAS',\r\n    'DCY',\r\n    'DGL',\r\n    'DGN',\r\n    'DHI',\r\n    'DIL',\r\n    'DLE',\r\n    'DLY',\r\n    'MED',\r\n    'DPN',\r\n    'DPR',\r\n    'DSN',\r\n    'DTH',\r\n    'DTR',\r\n    'DTY',\r\n    'DVA',\r\n    'DNE' // D-NORLEUCINE\r\n    // ???  // D-SELENOCYSTEINE\r\n];\r\nconst entityKeyList = [\r\n    'MOL_ID', 'MOLECULE', 'CHAIN', 'FRAGMENT', 'SYNONYM',\r\n    'EC', 'ENGINEERED', 'MUTATION', 'OTHER_DETAILS'\r\n];\r\nconst reWhitespace = /\\s+/;\r\nfunction getModresId(resno, chainname, inscode) {\r\n    let id = `${resno}`;\r\n    if (chainname)\r\n        id += `:${chainname}`;\r\n    if (inscode)\r\n        id += `^${inscode}`;\r\n    return id;\r\n}\r\nclass PdbParser extends StructureParser {\r\n    /**\r\n     * Create a pdb parser\r\n     * @param  {Streamer} streamer - streamer object\r\n     * @param  {Object} params - params object\r\n     * @param  {Boolean} params.hex - hexadecimal parsing of\r\n     *                                atom numbers >99.999 and\r\n     *                                residue numbers >9.999\r\n     * @return {undefined}\r\n     */\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.hex = defaults(p.hex, false);\r\n    }\r\n    get type() { return 'pdb'; }\r\n    _parse() {\r\n        // http://www.wwpdb.org/documentation/file-format.php\r\n        if (Debug)\r\n            Log.time('PdbParser._parse ' + this.name);\r\n        let isLegacy = false;\r\n        const headerLine = this.streamer.peekLines(1)[0];\r\n        const headerId = headerLine.substr(62, 4);\r\n        const legacyId = headerLine.substr(72, 4);\r\n        if (headerId === legacyId && legacyId.trim()) {\r\n            isLegacy = true;\r\n        }\r\n        const isPqr = this.type === 'pqr';\r\n        const isPdbqt = this.type === 'pdbqt';\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        const hex = this.hex;\r\n        let serialRadix = 10;\r\n        let resnoRadix = 10;\r\n        const firstModelOnly = this.firstModelOnly;\r\n        const asTrajectory = this.asTrajectory;\r\n        const cAlphaOnly = this.cAlphaOnly;\r\n        const frames = s.frames;\r\n        const boxes = s.boxes;\r\n        let doFrames = false;\r\n        let currentFrame, currentCoord;\r\n        const biomolDict = s.biomolDict;\r\n        let currentBiomol;\r\n        let currentPart;\r\n        let currentMatrix;\r\n        let line, recordName;\r\n        let serial, chainname, resno, resname, occupancy;\r\n        let inscode, atomname, hetero, bfactor, altloc;\r\n        let startChain, startResi, startIcode;\r\n        let endChain, endResi, endIcode;\r\n        let serialDict = {};\r\n        const unitcellDict = {};\r\n        const bondDict = {};\r\n        const entityDataList = [];\r\n        let currentEntityData;\r\n        let currentEntityKey;\r\n        // MOL_ID                 Numbers each component; also used in  SOURCE to associate\r\n        //                        the information.\r\n        // MOLECULE               Name of the macromolecule.\r\n        // CHAIN                  Comma-separated list of chain  identifier(s).\r\n        // FRAGMENT               Specifies a domain or region of the  molecule.\r\n        // SYNONYM                Comma-separated list of synonyms for  the MOLECULE.\r\n        // EC                     The Enzyme Commission number associated  with the molecule.\r\n        //                        If there is more than one EC number,  they are presented\r\n        //                        as a comma-separated list.\r\n        // ENGINEERED             Indicates that the molecule was  produced using\r\n        //                        recombinant technology or by purely  chemical synthesis.\r\n        // MUTATION               Indicates if there is a mutation.\r\n        // OTHER_DETAILS          Additional comments.\r\n        const hetnameDict = {};\r\n        const modresDict = {};\r\n        const chainDict = {};\r\n        let chainIdx, chainid, newChain;\r\n        let currentChainname, currentResno, currentResname, currentInscode;\r\n        const seqresDict = {};\r\n        let currentSeqresChainname;\r\n        const secStruct = {\r\n            helices: [],\r\n            sheets: []\r\n        };\r\n        const helices = secStruct.helices;\r\n        const sheets = secStruct.sheets;\r\n        const atomMap = s.atomMap;\r\n        const atomStore = s.atomStore;\r\n        atomStore.resize(Math.round(this.streamer.data.length / 80));\r\n        if (isPqr || isPdbqt)\r\n            atomStore.addField('partialCharge', 1, 'float32');\r\n        if (isPqr)\r\n            atomStore.addField('radius', 1, 'float32');\r\n        const ap1 = s.getAtomProxy();\r\n        const ap2 = s.getAtomProxy();\r\n        let idx = 0;\r\n        let modelIdx = 0;\r\n        let pendingStart = true;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                line = lines[i];\r\n                recordName = line.substr(0, 6);\r\n                if (recordName === 'ATOM  ' || recordName === 'HETATM') {\r\n                    // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n                    // PQR: Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius\r\n                    if (pendingStart) {\r\n                        if (asTrajectory) {\r\n                            if (doFrames) {\r\n                                currentFrame = new Float32Array(atomStore.count * 3);\r\n                                frames.push(currentFrame);\r\n                            }\r\n                            else {\r\n                                currentFrame = [];\r\n                            }\r\n                            currentCoord = 0;\r\n                        }\r\n                        else {\r\n                            if (!firstModelOnly)\r\n                                serialDict = {};\r\n                        }\r\n                        chainIdx = 1;\r\n                        chainid = chainIdx.toString();\r\n                        newChain = true;\r\n                        pendingStart = false;\r\n                    }\r\n                    if (firstModelOnly && modelIdx > 0)\r\n                        continue;\r\n                    let x, y, z, ls, dd = 0;\r\n                    if (isPqr) {\r\n                        ls = line.split(reWhitespace);\r\n                        dd = ls.length === 10 ? 1 : 0;\r\n                        atomname = ls[2];\r\n                        if (cAlphaOnly && atomname !== 'CA')\r\n                            continue;\r\n                        x = parseFloat(ls[6 - dd]);\r\n                        y = parseFloat(ls[7 - dd]);\r\n                        z = parseFloat(ls[8 - dd]);\r\n                    }\r\n                    else {\r\n                        atomname = line.substr(12, 4).trim();\r\n                        if (cAlphaOnly && atomname !== 'CA')\r\n                            continue;\r\n                        x = parseFloat(line.substr(30, 8));\r\n                        y = parseFloat(line.substr(38, 8));\r\n                        z = parseFloat(line.substr(46, 8));\r\n                    }\r\n                    if (asTrajectory) {\r\n                        const j = currentCoord * 3;\r\n                        currentFrame[j + 0] = x;\r\n                        currentFrame[j + 1] = y;\r\n                        currentFrame[j + 2] = z;\r\n                        currentCoord += 1;\r\n                        if (doFrames)\r\n                            continue;\r\n                    }\r\n                    let element;\r\n                    if (isPqr) {\r\n                        serial = parseInt(ls[1]);\r\n                        element = '';\r\n                        hetero = (line[0] === 'H') ? 1 : 0;\r\n                        chainname = dd ? '' : ls[4];\r\n                        resno = parseInt(ls[5 - dd]);\r\n                        inscode = '';\r\n                        resname = ls[3];\r\n                        altloc = '';\r\n                        occupancy = 1.0;\r\n                    }\r\n                    else {\r\n                        serial = parseInt(line.substr(6, 5), serialRadix);\r\n                        if (hex && serial === 99999) {\r\n                            serialRadix = 16;\r\n                        }\r\n                        hetero = (line[0] === 'H') ? 1 : 0;\r\n                        chainname = line[21].trim();\r\n                        resno = parseInt(line.substr(22, 4), resnoRadix);\r\n                        if (hex && resno === 9999) {\r\n                            resnoRadix = 16;\r\n                        }\r\n                        inscode = line[26].trim();\r\n                        resname = line.substr(17, 4).trim() || 'MOL';\r\n                        bfactor = parseFloat(line.substr(60, 6));\r\n                        altloc = line[16].trim();\r\n                        occupancy = parseFloat(line.substr(54, 6));\r\n                        if (!isLegacy) {\r\n                            if (isPdbqt) {\r\n                                element = line.substr(12, 2).trim();\r\n                            }\r\n                            else {\r\n                                element = line.substr(76, 2).trim();\r\n                                if (!chainname) {\r\n                                    chainname = line.substr(72, 4).trim(); // segid\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[idx] = atomMap.add(atomname, element);\r\n                    atomStore.x[idx] = x;\r\n                    atomStore.y[idx] = y;\r\n                    atomStore.z[idx] = z;\r\n                    atomStore.serial[idx] = serial;\r\n                    atomStore.altloc[idx] = altloc.charCodeAt(0);\r\n                    atomStore.occupancy[idx] = isNaN(occupancy) ? 0 : occupancy;\r\n                    if (isPqr) {\r\n                        atomStore.partialCharge[idx] = parseFloat(ls[9 - dd]);\r\n                        atomStore.radius[idx] = parseFloat(ls[10 - dd]);\r\n                    }\r\n                    else {\r\n                        atomStore.bfactor[idx] = isNaN(bfactor) ? 0 : bfactor;\r\n                        if (isPdbqt) {\r\n                            atomStore.partialCharge[idx] = parseFloat(line.substr(70, 6));\r\n                        }\r\n                    }\r\n                    const modresId = getModresId(resno, chainname, inscode);\r\n                    // TODO instead of looking at MODRES look at SEQRES and\r\n                    //      missing residues in REMARK 465\r\n                    if (hetero && !modresDict[modresId] && !dAminoAcids.includes(resname)) {\r\n                        if (currentChainname !== chainname || currentResname !== resname ||\r\n                            (!WaterNames.includes(resname) &&\r\n                                (currentResno !== resno || currentInscode !== inscode))) {\r\n                            chainIdx += 1;\r\n                            chainid = chainIdx.toString();\r\n                            currentResno = resno;\r\n                            currentResname = resname;\r\n                            currentInscode = inscode;\r\n                        }\r\n                    }\r\n                    else if (!newChain && currentChainname !== chainname) {\r\n                        chainIdx += 1;\r\n                        chainid = chainIdx.toString();\r\n                    }\r\n                    sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode);\r\n                    serialDict[serial] = idx;\r\n                    idx += 1;\r\n                    newChain = false;\r\n                    currentChainname = chainname;\r\n                }\r\n                else if (recordName === 'CONECT') {\r\n                    const fromIdx = serialDict[parseInt(line.substr(6, 5))];\r\n                    const pos = [11, 16, 21, 26];\r\n                    const bondIndex = {};\r\n                    if (fromIdx === undefined) {\r\n                        // Log.log( \"missing CONNECT serial\" );\r\n                        continue;\r\n                    }\r\n                    for (let j = 0; j < 4; ++j) {\r\n                        let toIdx = parseInt(line.substr(pos[j], 5));\r\n                        if (Number.isNaN(toIdx))\r\n                            continue;\r\n                        toIdx = serialDict[toIdx];\r\n                        if (toIdx === undefined) {\r\n                            // Log.log( \"missing CONNECT serial\" );\r\n                            continue;\r\n                        } /* else if( toIdx < fromIdx ){\r\n                            // likely a duplicate in standard PDB format\r\n                            // but not necessarily, so better remove duplicates\r\n                            // in a pass after parsing (and auto bonding)\r\n                            continue;\r\n                        } */\r\n                        if (fromIdx < toIdx) {\r\n                            ap1.index = fromIdx;\r\n                            ap2.index = toIdx;\r\n                        }\r\n                        else {\r\n                            ap1.index = toIdx;\r\n                            ap2.index = fromIdx;\r\n                        }\r\n                        // interpret records where a 'toIdx' atom is given multiple times\r\n                        // as double/triple bonds, e.g. CONECT 1529 1528 1528 is a double bond\r\n                        if (bondIndex[toIdx] !== undefined) {\r\n                            s.bondStore.bondOrder[bondIndex[toIdx]] += 1;\r\n                        }\r\n                        else {\r\n                            const hash = ap1.index + '|' + ap2.index;\r\n                            if (bondDict[hash] === undefined) {\r\n                                bondDict[hash] = true;\r\n                                bondIndex[toIdx] = s.bondStore.count;\r\n                                s.bondStore.addBond(ap1, ap2, 1); // start/assume with single bond\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (recordName === 'HELIX ') {\r\n                    startChain = line[19].trim();\r\n                    startResi = parseInt(line.substr(21, 4));\r\n                    startIcode = line[25].trim();\r\n                    endChain = line[31].trim();\r\n                    endResi = parseInt(line.substr(33, 4));\r\n                    endIcode = line[37].trim();\r\n                    let helixType = parseInt(line.substr(39, 1));\r\n                    helixType = (HelixTypes[helixType] || HelixTypes[0]).charCodeAt(0);\r\n                    helices.push([\r\n                        startChain, startResi, startIcode,\r\n                        endChain, endResi, endIcode,\r\n                        helixType\r\n                    ]);\r\n                }\r\n                else if (recordName === 'SHEET ') {\r\n                    startChain = line[21].trim();\r\n                    startResi = parseInt(line.substr(22, 4));\r\n                    startIcode = line[26].trim();\r\n                    endChain = line[32].trim();\r\n                    endResi = parseInt(line.substr(33, 4));\r\n                    endIcode = line[37].trim();\r\n                    sheets.push([\r\n                        startChain, startResi, startIcode,\r\n                        endChain, endResi, endIcode\r\n                    ]);\r\n                }\r\n                else if (recordName === 'HETNAM') {\r\n                    hetnameDict[line.substr(11, 3)] = line.substr(15).trim();\r\n                }\r\n                else if (recordName === 'SEQRES') {\r\n                    const seqresChainname = line[11].trim();\r\n                    if (seqresChainname !== currentSeqresChainname) {\r\n                        seqresDict[seqresChainname] = [];\r\n                        currentSeqresChainname = seqresChainname;\r\n                    }\r\n                    seqresDict[seqresChainname].push(...line.substr(19).trim().split(reWhitespace));\r\n                }\r\n                else if (recordName === 'MODRES') {\r\n                    // MODRES 2SRC PTR A  527  TYR  O-PHOSPHOTYROSINE\r\n                    const resname = line.substr(12, 3).trim();\r\n                    const chainname = line[16].trim();\r\n                    const inscode = line[22].trim();\r\n                    const resno = parseInt(line.substr(18, 4).trim());\r\n                    const id = getModresId(resno, chainname, inscode);\r\n                    modresDict[id] = { resname, chainname, inscode, resno };\r\n                }\r\n                else if (recordName === 'COMPND') {\r\n                    const comp = line.substr(10, 70).trim();\r\n                    const keyEnd = comp.indexOf(':');\r\n                    const key = comp.substring(0, keyEnd);\r\n                    let value;\r\n                    if (entityKeyList.includes(key)) {\r\n                        currentEntityKey = key;\r\n                        value = comp.substring(keyEnd + 2);\r\n                    }\r\n                    else {\r\n                        value = comp;\r\n                    }\r\n                    value = value.replace(/;$/, '');\r\n                    if (currentEntityKey === 'MOL_ID') {\r\n                        currentEntityData = {\r\n                            chainList: [],\r\n                            name: ''\r\n                        };\r\n                        entityDataList.push(currentEntityData);\r\n                    }\r\n                    else if (currentEntityKey === 'MOLECULE') {\r\n                        if (currentEntityData.name)\r\n                            currentEntityData.name += ' ';\r\n                        currentEntityData.name += value;\r\n                    }\r\n                    else if (currentEntityKey === 'CHAIN') {\r\n                        Array.prototype.push.apply(currentEntityData.chainList, value.split(/\\s*,\\s*/));\r\n                    }\r\n                }\r\n                else if (line.startsWith('TER')) {\r\n                    const cp = s.getChainProxy(s.chainStore.count - 1);\r\n                    chainDict[cp.chainname] = cp.index;\r\n                    chainIdx += 1;\r\n                    chainid = chainIdx.toString();\r\n                    newChain = true;\r\n                }\r\n                else if (recordName === 'REMARK' && line.substr(7, 3) === '350') {\r\n                    if (line.substr(11, 12) === 'BIOMOLECULE:') {\r\n                        let name = line.substr(23).trim();\r\n                        if (/^(0|[1-9][0-9]*)$/.test(name))\r\n                            name = 'BU' + name;\r\n                        currentBiomol = new Assembly(name);\r\n                        biomolDict[name] = currentBiomol;\r\n                    }\r\n                    else if (line.substr(13, 5) === 'BIOMT') {\r\n                        const biomt = line.split(/\\s+/);\r\n                        const row = parseInt(line[18]) - 1;\r\n                        if (row === 0) {\r\n                            currentMatrix = new Matrix4();\r\n                            currentPart.matrixList.push(currentMatrix);\r\n                        }\r\n                        const biomtElms = currentMatrix.elements;\r\n                        biomtElms[4 * 0 + row] = parseFloat(biomt[4]);\r\n                        biomtElms[4 * 1 + row] = parseFloat(biomt[5]);\r\n                        biomtElms[4 * 2 + row] = parseFloat(biomt[6]);\r\n                        biomtElms[4 * 3 + row] = parseFloat(biomt[7]);\r\n                    }\r\n                    else if (line.substr(11, 30) === 'APPLY THE FOLLOWING TO CHAINS:' ||\r\n                        line.substr(11, 30) === '                   AND CHAINS:') {\r\n                        if (line.substr(11, 5) === 'APPLY') {\r\n                            currentPart = currentBiomol.addPart();\r\n                        }\r\n                        const chainList = line.substr(41, 30).split(',');\r\n                        for (let j = 0, jl = chainList.length; j < jl; ++j) {\r\n                            const c = chainList[j].trim();\r\n                            if (c)\r\n                                currentPart.chainList.push(c);\r\n                        }\r\n                    }\r\n                }\r\n                else if (recordName === 'HEADER') {\r\n                    s.id = line.substr(62, 4);\r\n                }\r\n                else if (recordName === 'TITLE ') {\r\n                    s.title += (s.title ? ' ' : '') + line.substr(10, 70).trim();\r\n                }\r\n                else if (recordName === 'MODEL ') {\r\n                    pendingStart = true;\r\n                }\r\n                else if (recordName === 'ENDMDL' || line.trim() === 'END') {\r\n                    if (pendingStart)\r\n                        continue;\r\n                    if (asTrajectory && !doFrames) {\r\n                        frames.push(new Float32Array(currentFrame));\r\n                        doFrames = true;\r\n                    }\r\n                    modelIdx += 1;\r\n                    pendingStart = true;\r\n                }\r\n                else if (line.substr(0, 5) === 'MTRIX') {\r\n                    // ignore 'given' operators\r\n                    if (line[59] === '1')\r\n                        continue;\r\n                    if (!currentBiomol || currentBiomol.name !== 'NCS') {\r\n                        const ncsName = 'NCS';\r\n                        currentBiomol = new Assembly(ncsName);\r\n                        biomolDict[ncsName] = currentBiomol;\r\n                        currentPart = currentBiomol.addPart();\r\n                    }\r\n                    const ncs = line.split(/\\s+/);\r\n                    const ncsRow = parseInt(line[5]) - 1;\r\n                    if (ncsRow === 0) {\r\n                        currentMatrix = new Matrix4();\r\n                        currentPart.matrixList.push(currentMatrix);\r\n                    }\r\n                    const ncsElms = currentMatrix.elements;\r\n                    ncsElms[4 * 0 + ncsRow] = parseFloat(ncs[2]);\r\n                    ncsElms[4 * 1 + ncsRow] = parseFloat(ncs[3]);\r\n                    ncsElms[4 * 2 + ncsRow] = parseFloat(ncs[4]);\r\n                    ncsElms[4 * 3 + ncsRow] = parseFloat(ncs[5]);\r\n                }\r\n                else if (line.substr(0, 5) === 'ORIGX') {\r\n                    if (!unitcellDict.origx) {\r\n                        unitcellDict.origx = new Matrix4();\r\n                    }\r\n                    const orgix = line.split(/\\s+/);\r\n                    const origxRow = parseInt(line[5]) - 1;\r\n                    const origxElms = unitcellDict.origx.elements;\r\n                    origxElms[4 * 0 + origxRow] = parseFloat(orgix[1]);\r\n                    origxElms[4 * 1 + origxRow] = parseFloat(orgix[2]);\r\n                    origxElms[4 * 2 + origxRow] = parseFloat(orgix[3]);\r\n                    origxElms[4 * 3 + origxRow] = parseFloat(orgix[4]);\r\n                }\r\n                else if (line.substr(0, 5) === 'SCALE') {\r\n                    if (!unitcellDict.scale) {\r\n                        unitcellDict.scale = new Matrix4();\r\n                    }\r\n                    const scale = line.split(/\\s+/);\r\n                    const scaleRow = parseInt(line[5]) - 1;\r\n                    const scaleElms = unitcellDict.scale.elements;\r\n                    scaleElms[4 * 0 + scaleRow] = parseFloat(scale[1]);\r\n                    scaleElms[4 * 1 + scaleRow] = parseFloat(scale[2]);\r\n                    scaleElms[4 * 2 + scaleRow] = parseFloat(scale[3]);\r\n                    scaleElms[4 * 3 + scaleRow] = parseFloat(scale[4]);\r\n                }\r\n                else if (recordName === 'CRYST1') {\r\n                    // CRYST1   55.989   55.989   55.989  90.00  90.00  90.00 P 1           1\r\n                    //  7 - 15       Real(9.3)      a (Angstroms)\r\n                    // 16 - 24       Real(9.3)      b (Angstroms)\r\n                    // 25 - 33       Real(9.3)      c (Angstroms)\r\n                    // 34 - 40       Real(7.2)      alpha         alpha (degrees).\r\n                    // 41 - 47       Real(7.2)      beta          beta (degrees).\r\n                    // 48 - 54       Real(7.2)      gamma         gamma (degrees).\r\n                    // 56 - 66       LString        sGroup        Space group.\r\n                    // 67 - 70       Integer        z             Z value.\r\n                    const aLength = parseFloat(line.substr(6, 9));\r\n                    const bLength = parseFloat(line.substr(15, 9));\r\n                    const cLength = parseFloat(line.substr(24, 9));\r\n                    const alpha = parseFloat(line.substr(33, 7));\r\n                    const beta = parseFloat(line.substr(40, 7));\r\n                    const gamma = parseFloat(line.substr(47, 7));\r\n                    const sGroup = line.substr(55, 11).trim();\r\n                    // const zValue = parseInt( line.substr( 66, 4 ) );\r\n                    const box = new Float32Array(9);\r\n                    box[0] = aLength;\r\n                    box[4] = bLength;\r\n                    box[8] = cLength;\r\n                    boxes.push(box);\r\n                    if (modelIdx === 0) {\r\n                        unitcellDict.a = aLength;\r\n                        unitcellDict.b = bLength;\r\n                        unitcellDict.c = cLength;\r\n                        unitcellDict.alpha = alpha;\r\n                        unitcellDict.beta = beta;\r\n                        unitcellDict.gamma = gamma;\r\n                        unitcellDict.spacegroup = sGroup;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        // finalize ensures resname will be defined for all rp.resname\r\n        // (required in entity handling below)\r\n        sb.finalize();\r\n        //\r\n        const en = entityDataList.length;\r\n        if (en) {\r\n            s.eachChain(function (cp) {\r\n                cp.entityIndex = en;\r\n            });\r\n            entityDataList.forEach(function (e, i) {\r\n                const chainIndexList = e.chainList.map(function (chainname) {\r\n                    return chainDict[chainname];\r\n                });\r\n                s.entityList.push(new Entity(s, i, e.name, 'polymer', chainIndexList));\r\n            });\r\n            let ei = entityDataList.length;\r\n            const rp = s.getResidueProxy();\r\n            const residueDict = {};\r\n            s.eachChain(function (cp) {\r\n                if (cp.entityIndex === en) {\r\n                    rp.index = cp.residueOffset;\r\n                    if (!residueDict[rp.resname]) {\r\n                        residueDict[rp.resname] = [];\r\n                    }\r\n                    residueDict[rp.resname].push(cp.index);\r\n                }\r\n            });\r\n            Object.keys(residueDict).forEach(function (resname) {\r\n                const chainList = residueDict[resname];\r\n                let type = 'non-polymer';\r\n                let name = hetnameDict[resname] || resname;\r\n                if (WaterNames.includes(resname)) {\r\n                    name = 'water';\r\n                    type = 'water';\r\n                }\r\n                s.entityList.push(new Entity(s, ei, name, type, chainList));\r\n                ei += 1;\r\n            });\r\n        }\r\n        //\r\n        if (unitcellDict.a !== undefined) {\r\n            s.unitcell = new Unitcell(unitcellDict);\r\n        }\r\n        else {\r\n            s.unitcell = undefined;\r\n        }\r\n        if (helices.length || sheets.length) {\r\n            assignSecondaryStructure(s, secStruct);\r\n        }\r\n        s.finalizeAtoms();\r\n        if (!isLegacy)\r\n            calculateChainnames(s);\r\n        calculateBonds(s);\r\n        s.finalizeBonds();\r\n        if (!helices.length && !sheets.length) {\r\n            calculateSecondaryStructure(s);\r\n        }\r\n        buildUnitcellAssembly(s);\r\n        if (Debug)\r\n            Log.timeEnd('PdbParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('pdb', PdbParser);\r\nParserRegistry.add('pdb1', PdbParser);\r\nParserRegistry.add('ent', PdbParser);\r\nexport default PdbParser;\r\nexport { HelixTypes };\r\n//# sourceMappingURL=pdb-parser.js.map","/**\r\n * @file Cif Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { HelixTypes } from './pdb-parser';\r\nimport Entity from '../structure/entity';\r\nimport Unitcell from '../symmetry/unitcell';\r\nimport Assembly from '../symmetry/assembly';\r\nimport Selection from '../selection/selection';\r\nimport { assignResidueTypeBonds, assignSecondaryStructure, buildUnitcellAssembly, calculateBonds, calculateSecondaryStructure } from '../structure/structure-utils';\r\nconst reWhitespace = /\\s+/;\r\nconst reQuotedWhitespace = /'((?:(?!'\\s).)*)'|\"((?:(?!\"\\s).)*)\"|(\\S+)/g;\r\nconst reDoubleQuote = /\"/g;\r\nconst reTrimQuotes = /^['\"]+|['\"]+$/g;\r\nfunction trimQuotes(str) {\r\n    if (str && str[0] === str[str.length - 1] && (str[0] === \"'\" || str[0] === '\"')) {\r\n        return str.substring(1, str.length - 1);\r\n    }\r\n    else {\r\n        return str;\r\n    }\r\n}\r\nfunction ensureArray(dict, field) {\r\n    if (!Array.isArray(dict[field])) {\r\n        Object.keys(dict).forEach(function (key) {\r\n            dict[key] = [dict[key]];\r\n        });\r\n    }\r\n}\r\nfunction hasValue(d) {\r\n    return d !== '?';\r\n}\r\nfunction cifDefaults(value, defaultValue) {\r\n    return hasValue(value) ? value : defaultValue;\r\n}\r\nfunction getBondOrder(valueOrder) {\r\n    switch (valueOrder.toLowerCase()) {\r\n        case '?': // assume single bond\r\n        case 'sing':\r\n            return 1;\r\n        case 'doub':\r\n            return 2;\r\n        case 'trip':\r\n            return 3;\r\n        case 'quad':\r\n            return 4;\r\n    }\r\n    return 0;\r\n}\r\nfunction parseChemComp(cif, structure, structureBuilder) {\r\n    const atomStore = structure.atomStore;\r\n    const atomMap = structure.atomMap;\r\n    let i, n;\r\n    const cc = cif.chem_comp;\r\n    const cca = cif.chem_comp_atom;\r\n    const ccb = cif.chem_comp_bond;\r\n    if (cc) {\r\n        if (cc.name) {\r\n            structure.title = cc.name.trim().replace(reTrimQuotes, '');\r\n        }\r\n        if (cc.id) {\r\n            structure.id = cc.id.trim().replace(reTrimQuotes, '');\r\n        }\r\n    }\r\n    var atomnameDict = {};\r\n    if (cca) {\r\n        ensureArray(cca, 'comp_id');\r\n        var atomname, element, resname, resno;\r\n        n = cca.comp_id.length;\r\n        for (i = 0; i < n; ++i) {\r\n            atomStore.growIfFull();\r\n            atomname = cca.atom_id[i].replace(reDoubleQuote, '');\r\n            element = cca.type_symbol[i];\r\n            atomnameDict[atomname] = i;\r\n            atomStore.atomTypeId[i] = atomMap.add(atomname, element);\r\n            atomStore.x[i] = cca.model_Cartn_x[i];\r\n            atomStore.y[i] = cca.model_Cartn_y[i];\r\n            atomStore.z[i] = cca.model_Cartn_z[i];\r\n            atomStore.serial[i] = i;\r\n            resname = cca.pdbx_component_comp_id[i];\r\n            resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[i] : 1;\r\n            structureBuilder.addAtom(0, '', '', resname, resno, true);\r\n        }\r\n        for (i = 0; i < n; ++i) {\r\n            var j = i + n;\r\n            atomStore.growIfFull();\r\n            atomname = cca.atom_id[i].replace(reDoubleQuote, '');\r\n            element = cca.type_symbol[i];\r\n            atomStore.atomTypeId[j] = atomMap.add(atomname, element);\r\n            atomStore.x[j] = cca.pdbx_model_Cartn_x_ideal[i];\r\n            atomStore.y[j] = cca.pdbx_model_Cartn_y_ideal[i];\r\n            atomStore.z[j] = cca.pdbx_model_Cartn_z_ideal[i];\r\n            atomStore.serial[j] = j;\r\n            resname = cca.pdbx_component_comp_id[i];\r\n            resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[i] : 1;\r\n            structureBuilder.addAtom(1, '', '', resname, resno, true);\r\n        }\r\n    }\r\n    if (cca && ccb) {\r\n        ensureArray(ccb, 'comp_id');\r\n        var atomname1, atomname2, bondOrder;\r\n        n = ccb.comp_id.length;\r\n        var na = cca.comp_id.length;\r\n        var ap1 = structure.getAtomProxy();\r\n        var ap2 = structure.getAtomProxy();\r\n        for (i = 0; i < n; ++i) {\r\n            atomname1 = ccb.atom_id_1[i].replace(reDoubleQuote, '');\r\n            atomname2 = ccb.atom_id_2[i].replace(reDoubleQuote, '');\r\n            bondOrder = getBondOrder(ccb.value_order[i]);\r\n            ap1.index = atomnameDict[atomname1];\r\n            ap2.index = atomnameDict[atomname2];\r\n            structure.bondStore.growIfFull();\r\n            structure.bondStore.addBond(ap1, ap2, bondOrder);\r\n            ap1.index += na;\r\n            ap2.index += na;\r\n            structure.bondStore.growIfFull();\r\n            structure.bondStore.addBond(ap1, ap2, bondOrder);\r\n        }\r\n    }\r\n}\r\nfunction parseCore(cif, structure, structureBuilder) {\r\n    var atomStore = structure.atomStore;\r\n    var atomMap = structure.atomMap;\r\n    if (cif.data) {\r\n        structure.id = cif.data;\r\n        structure.name = cif.data;\r\n    }\r\n    structure.unitcell = new Unitcell({\r\n        a: parseFloat(cif.cell_length_a),\r\n        b: parseFloat(cif.cell_length_b),\r\n        c: parseFloat(cif.cell_length_c),\r\n        alpha: parseFloat(cif.cell_angle_alpha),\r\n        beta: parseFloat(cif.cell_angle_beta),\r\n        gamma: parseFloat(cif.cell_angle_gamma),\r\n        spacegroup: trimQuotes(cif['symmetry_space_group_name_H-M'])\r\n    });\r\n    const v = new Vector3();\r\n    const c = new Vector3();\r\n    const n = cif.atom_site_type_symbol.length;\r\n    for (let i = 0; i < n; ++i) {\r\n        atomStore.growIfFull();\r\n        const atomname = cif.atom_site_label[i];\r\n        const element = cif.atom_site_type_symbol[i];\r\n        atomStore.atomTypeId[i] = atomMap.add(atomname, element);\r\n        v.set(cif.atom_site_fract_x[i], cif.atom_site_fract_y[i], cif.atom_site_fract_z[i]);\r\n        v.applyMatrix4(structure.unitcell.fracToCart);\r\n        c.add(v);\r\n        atomStore.x[i] = v.x;\r\n        atomStore.y[i] = v.y;\r\n        atomStore.z[i] = v.z;\r\n        if (cif.atom_site_occupancy) {\r\n            atomStore.occupancy[i] = parseFloat(cif.atom_site_occupancy[i]);\r\n        }\r\n        atomStore.serial[i] = i;\r\n        structureBuilder.addAtom(0, '', '', 'HET', 1, true);\r\n    }\r\n    c.divideScalar(n);\r\n    structure.center = c;\r\n    buildUnitcellAssembly(structure);\r\n    const v2 = new Vector3();\r\n    const v3 = new Vector3();\r\n    const ml = structure.biomolDict.SUPERCELL.partList[0].matrixList;\r\n    let k = n;\r\n    function covalent(idx) {\r\n        return atomMap.get(atomStore.atomTypeId[idx]).covalent;\r\n    }\r\n    const identityMatrix = new Matrix4();\r\n    for (let i = 0; i < n; ++i) {\r\n        const covalentI = covalent(i);\r\n        v.set(atomStore.x[i], atomStore.y[i], atomStore.z[i]);\r\n        ml.forEach(function (m) {\r\n            if (identityMatrix.equals(m))\r\n                return;\r\n            v2.copy(v);\r\n            v2.applyMatrix4(m);\r\n            for (let j = 0; j < n; ++j) {\r\n                v3.set(atomStore.x[j], atomStore.y[j], atomStore.z[j]);\r\n                const distSquared = v2.distanceToSquared(v3);\r\n                const d = covalent(j) + covalentI;\r\n                const d1 = d + 0.3;\r\n                const d2 = d - 0.5;\r\n                if (distSquared < (d1 * d1) && distSquared > (d2 * d2)) {\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[k] = atomStore.atomTypeId[i];\r\n                    atomStore.x[k] = v2.x;\r\n                    atomStore.y[k] = v2.y;\r\n                    atomStore.z[k] = v2.z;\r\n                    atomStore.occupancy[k] = atomStore.occupancy[i];\r\n                    atomStore.serial[k] = k;\r\n                    atomStore.altloc[k] = 'A'.charCodeAt(0);\r\n                    structureBuilder.addAtom(0, '', '', 'HET', 1, true);\r\n                    k += 1;\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction processSecondaryStructure(cif, structure, asymIdDict) {\r\n    var helices = [];\r\n    var sheets = [];\r\n    var i, il, begIcode, endIcode;\r\n    // get helices\r\n    var sc = cif.struct_conf;\r\n    if (sc) {\r\n        ensureArray(sc, 'id');\r\n        for (i = 0, il = sc.beg_auth_seq_id.length; i < il; ++i) {\r\n            var helixType = parseInt(sc.pdbx_PDB_helix_class[i]);\r\n            if (!Number.isNaN(helixType)) {\r\n                begIcode = sc.pdbx_beg_PDB_ins_code[i];\r\n                endIcode = sc.pdbx_end_PDB_ins_code[i];\r\n                helices.push([\r\n                    asymIdDict[sc.beg_label_asym_id[i]],\r\n                    parseInt(sc.beg_auth_seq_id[i]),\r\n                    cifDefaults(begIcode, ''),\r\n                    asymIdDict[sc.end_label_asym_id[i]],\r\n                    parseInt(sc.end_auth_seq_id[i]),\r\n                    cifDefaults(endIcode, ''),\r\n                    (HelixTypes[helixType] || HelixTypes[0]).charCodeAt(0)\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    // get sheets\r\n    var ssr = cif.struct_sheet_range;\r\n    if (ssr) {\r\n        ensureArray(ssr, 'id');\r\n        for (i = 0, il = ssr.beg_auth_seq_id.length; i < il; ++i) {\r\n            begIcode = ssr.pdbx_beg_PDB_ins_code[i];\r\n            endIcode = ssr.pdbx_end_PDB_ins_code[i];\r\n            sheets.push([\r\n                asymIdDict[ssr.beg_label_asym_id[i]],\r\n                parseInt(ssr.beg_auth_seq_id[i]),\r\n                cifDefaults(begIcode, ''),\r\n                asymIdDict[ssr.end_label_asym_id[i]],\r\n                parseInt(ssr.end_auth_seq_id[i]),\r\n                cifDefaults(endIcode, '')\r\n            ]);\r\n        }\r\n    }\r\n    if (sc || ssr) {\r\n        return {\r\n            helices: helices,\r\n            sheets: sheets\r\n        };\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction processSymmetry(cif, structure, asymIdDict) {\r\n    // biomol & ncs processing\r\n    var operDict = {};\r\n    var biomolDict = structure.biomolDict;\r\n    if (cif.pdbx_struct_oper_list) {\r\n        var biomolOp = cif.pdbx_struct_oper_list;\r\n        ensureArray(biomolOp, 'id');\r\n        biomolOp.id.forEach(function (id, i) {\r\n            var m = new Matrix4();\r\n            var elms = m.elements;\r\n            elms[0] = parseFloat(biomolOp['matrix[1][1]'][i]);\r\n            elms[1] = parseFloat(biomolOp['matrix[1][2]'][i]);\r\n            elms[2] = parseFloat(biomolOp['matrix[1][3]'][i]);\r\n            elms[4] = parseFloat(biomolOp['matrix[2][1]'][i]);\r\n            elms[5] = parseFloat(biomolOp['matrix[2][2]'][i]);\r\n            elms[6] = parseFloat(biomolOp['matrix[2][3]'][i]);\r\n            elms[8] = parseFloat(biomolOp['matrix[3][1]'][i]);\r\n            elms[9] = parseFloat(biomolOp['matrix[3][2]'][i]);\r\n            elms[10] = parseFloat(biomolOp['matrix[3][3]'][i]);\r\n            elms[3] = parseFloat(biomolOp['vector[1]'][i]);\r\n            elms[7] = parseFloat(biomolOp['vector[2]'][i]);\r\n            elms[11] = parseFloat(biomolOp['vector[3]'][i]);\r\n            m.transpose();\r\n            operDict[id] = m;\r\n        });\r\n    }\r\n    if (cif.pdbx_struct_assembly_gen) {\r\n        var gen = cif.pdbx_struct_assembly_gen;\r\n        ensureArray(gen, 'assembly_id');\r\n        var getMatrixDict = function (expr) {\r\n            var matDict = {};\r\n            var l = expr.replace(/[()']/g, '').split(',');\r\n            l.forEach(function (e) {\r\n                if (e.includes('-')) {\r\n                    var es = e.split('-');\r\n                    var j = parseInt(es[0]);\r\n                    var m = parseInt(es[1]);\r\n                    for (; j <= m; ++j) {\r\n                        matDict[j] = operDict[j];\r\n                    }\r\n                }\r\n                else {\r\n                    matDict[e] = operDict[e];\r\n                }\r\n            });\r\n            return matDict;\r\n        };\r\n        gen.assembly_id.forEach(function (id, i) {\r\n            var md = {};\r\n            var oe = gen.oper_expression[i].replace(/['\"]\\(|['\"]/g, '');\r\n            if (oe.includes(')(') || oe.indexOf('(') > 0) {\r\n                oe = oe.split('(');\r\n                var md1 = getMatrixDict(oe[0]);\r\n                var md2 = getMatrixDict(oe[1]);\r\n                Object.keys(md1).forEach(function (k1) {\r\n                    Object.keys(md2).forEach(function (k2) {\r\n                        var mat = new Matrix4();\r\n                        mat.multiplyMatrices(md1[k1], md2[k2]);\r\n                        md[k1 + 'x' + k2] = mat;\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                md = getMatrixDict(oe);\r\n            }\r\n            var matrixList = [];\r\n            for (var k in md) {\r\n                matrixList.push(md[k]);\r\n            }\r\n            var name = id;\r\n            if (/^(0|[1-9][0-9]*)$/.test(name))\r\n                name = 'BU' + name;\r\n            var chainList = gen.asym_id_list[i].split(',');\r\n            for (var j = 0, jl = chainList.length; j < jl; ++j) {\r\n                chainList[j] = asymIdDict[chainList[j]];\r\n            }\r\n            if (biomolDict[name] === undefined) {\r\n                biomolDict[name] = new Assembly(name);\r\n            }\r\n            biomolDict[name].addPart(matrixList, chainList);\r\n        });\r\n    }\r\n    // non-crystallographic symmetry operations\r\n    if (cif.struct_ncs_oper) {\r\n        var ncsOp = cif.struct_ncs_oper;\r\n        ensureArray(ncsOp, 'id');\r\n        var ncsName = 'NCS';\r\n        biomolDict[ncsName] = new Assembly(ncsName);\r\n        var ncsPart = biomolDict[ncsName].addPart();\r\n        ncsOp.id.forEach(function (id, i) {\r\n            // ignore 'given' operators\r\n            if (ncsOp.code[i] === 'given')\r\n                return;\r\n            var m = new Matrix4();\r\n            var elms = m.elements;\r\n            elms[0] = parseFloat(ncsOp['matrix[1][1]'][i]);\r\n            elms[1] = parseFloat(ncsOp['matrix[1][2]'][i]);\r\n            elms[2] = parseFloat(ncsOp['matrix[1][3]'][i]);\r\n            elms[4] = parseFloat(ncsOp['matrix[2][1]'][i]);\r\n            elms[5] = parseFloat(ncsOp['matrix[2][2]'][i]);\r\n            elms[6] = parseFloat(ncsOp['matrix[2][3]'][i]);\r\n            elms[8] = parseFloat(ncsOp['matrix[3][1]'][i]);\r\n            elms[9] = parseFloat(ncsOp['matrix[3][2]'][i]);\r\n            elms[10] = parseFloat(ncsOp['matrix[3][3]'][i]);\r\n            elms[3] = parseFloat(ncsOp['vector[1]'][i]);\r\n            elms[7] = parseFloat(ncsOp['vector[2]'][i]);\r\n            elms[11] = parseFloat(ncsOp['vector[3]'][i]);\r\n            m.transpose();\r\n            ncsPart.matrixList.push(m);\r\n        });\r\n        if (ncsPart.matrixList.length === 0) {\r\n            delete biomolDict[ncsName];\r\n        }\r\n    }\r\n    // cell & symmetry\r\n    const unitcellDict = {};\r\n    if (cif.cell) {\r\n        const cell = cif.cell;\r\n        const a = parseFloat(cell.length_a);\r\n        const b = parseFloat(cell.length_b);\r\n        const c = parseFloat(cell.length_c);\r\n        const box = new Float32Array(9);\r\n        box[0] = a;\r\n        box[4] = b;\r\n        box[8] = c;\r\n        structure.boxes.push(box);\r\n        unitcellDict.a = a;\r\n        unitcellDict.b = b;\r\n        unitcellDict.c = c;\r\n        unitcellDict.alpha = parseFloat(cell.angle_alpha);\r\n        unitcellDict.beta = parseFloat(cell.angle_beta);\r\n        unitcellDict.gamma = parseFloat(cell.angle_gamma);\r\n    }\r\n    if (cif.symmetry) {\r\n        unitcellDict.spacegroup = trimQuotes(cif.symmetry['space_group_name_H-M']);\r\n    }\r\n    // origx\r\n    var origx = new Matrix4();\r\n    if (cif.database_PDB_matrix) {\r\n        var origxMat = cif.database_PDB_matrix;\r\n        var origxElms = origx.elements;\r\n        origxElms[0] = parseFloat(origxMat['origx[1][1]']);\r\n        origxElms[1] = parseFloat(origxMat['origx[1][2]']);\r\n        origxElms[2] = parseFloat(origxMat['origx[1][3]']);\r\n        origxElms[4] = parseFloat(origxMat['origx[2][1]']);\r\n        origxElms[5] = parseFloat(origxMat['origx[2][2]']);\r\n        origxElms[6] = parseFloat(origxMat['origx[2][3]']);\r\n        origxElms[8] = parseFloat(origxMat['origx[3][1]']);\r\n        origxElms[9] = parseFloat(origxMat['origx[3][2]']);\r\n        origxElms[10] = parseFloat(origxMat['origx[3][3]']);\r\n        origxElms[3] = parseFloat(origxMat['origx_vector[1]']);\r\n        origxElms[7] = parseFloat(origxMat['origx_vector[2]']);\r\n        origxElms[11] = parseFloat(origxMat['origx_vector[3]']);\r\n        origx.transpose();\r\n        unitcellDict.origx = origx;\r\n    }\r\n    // scale\r\n    var scale = new Matrix4();\r\n    if (cif.atom_sites) {\r\n        var scaleMat = cif.atom_sites;\r\n        var scaleElms = scale.elements;\r\n        scaleElms[0] = parseFloat(scaleMat['fract_transf_matrix[1][1]']);\r\n        scaleElms[1] = parseFloat(scaleMat['fract_transf_matrix[1][2]']);\r\n        scaleElms[2] = parseFloat(scaleMat['fract_transf_matrix[1][3]']);\r\n        scaleElms[4] = parseFloat(scaleMat['fract_transf_matrix[2][1]']);\r\n        scaleElms[5] = parseFloat(scaleMat['fract_transf_matrix[2][2]']);\r\n        scaleElms[6] = parseFloat(scaleMat['fract_transf_matrix[2][3]']);\r\n        scaleElms[8] = parseFloat(scaleMat['fract_transf_matrix[3][1]']);\r\n        scaleElms[9] = parseFloat(scaleMat['fract_transf_matrix[3][2]']);\r\n        scaleElms[10] = parseFloat(scaleMat['fract_transf_matrix[3][3]']);\r\n        scaleElms[3] = parseFloat(scaleMat['fract_transf_vector[1]']);\r\n        scaleElms[7] = parseFloat(scaleMat['fract_transf_vector[2]']);\r\n        scaleElms[11] = parseFloat(scaleMat['fract_transf_vector[3]']);\r\n        scale.transpose();\r\n        unitcellDict.scale = scale;\r\n    }\r\n    if (unitcellDict.a !== undefined) {\r\n        structure.unitcell = new Unitcell(unitcellDict);\r\n    }\r\n    else {\r\n        structure.unitcell = undefined;\r\n    }\r\n}\r\nfunction processConnections(cif, structure, asymIdDict) {\r\n    // add connections\r\n    var sc = cif.struct_conn;\r\n    if (sc) {\r\n        ensureArray(sc, 'id');\r\n        var reDoubleQuote = /\"/g;\r\n        var ap1 = structure.getAtomProxy();\r\n        var ap2 = structure.getAtomProxy();\r\n        var atomIndicesCache = {};\r\n        for (var i = 0, il = sc.id.length; i < il; ++i) {\r\n            // ignore:\r\n            // hydrog - hydrogen bond\r\n            // mismat - mismatched base pairs\r\n            // saltbr - ionic interaction\r\n            var connTypeId = sc.conn_type_id[i];\r\n            if (connTypeId === 'hydrog' ||\r\n                connTypeId === 'mismat' ||\r\n                connTypeId === 'saltbr')\r\n                continue;\r\n            // ignore bonds between symmetry mates\r\n            if (sc.ptnr1_symmetry[i] !== '1_555' ||\r\n                sc.ptnr2_symmetry[i] !== '1_555')\r\n                continue;\r\n            // process:\r\n            // covale - covalent bond\r\n            // covale_base -\r\n            //      covalent modification of a nucleotide base\r\n            // covale_phosphate -\r\n            //      covalent modification of a nucleotide phosphate\r\n            // covale_sugar -\r\n            //      covalent modification of a nucleotide sugar\r\n            // disulf - disulfide bridge\r\n            // metalc - metal coordination\r\n            // modres - covalent residue modification\r\n            var inscode1 = sc.pdbx_ptnr1_PDB_ins_code[i];\r\n            var altloc1 = sc.pdbx_ptnr1_label_alt_id[i];\r\n            var sele1 = (sc.ptnr1_auth_seq_id[i] +\r\n                (hasValue(inscode1) ? ('^' + inscode1) : '') +\r\n                ':' + asymIdDict[sc.ptnr1_label_asym_id[i]] +\r\n                '.' + sc.ptnr1_label_atom_id[i].replace(reDoubleQuote, '') +\r\n                (hasValue(altloc1) ? ('%' + altloc1) : ''));\r\n            var atomIndices1 = atomIndicesCache[sele1];\r\n            if (!atomIndices1) {\r\n                var selection1 = new Selection(sele1);\r\n                if (selection1.selection.error) {\r\n                    if (Debug)\r\n                        Log.warn('invalid selection for connection', sele1);\r\n                    continue;\r\n                }\r\n                atomIndices1 = structure.getAtomIndices(selection1);\r\n                atomIndicesCache[sele1] = atomIndices1;\r\n            }\r\n            var inscode2 = sc.pdbx_ptnr2_PDB_ins_code[i];\r\n            var altloc2 = sc.pdbx_ptnr2_label_alt_id[i];\r\n            var sele2 = (sc.ptnr2_auth_seq_id[i] +\r\n                (hasValue(inscode2) ? ('^' + inscode2) : '') +\r\n                ':' + asymIdDict[sc.ptnr2_label_asym_id[i]] +\r\n                '.' + sc.ptnr2_label_atom_id[i].replace(reDoubleQuote, '') +\r\n                (hasValue(altloc2) ? ('%' + altloc2) : ''));\r\n            var atomIndices2 = atomIndicesCache[sele2];\r\n            if (!atomIndices2) {\r\n                var selection2 = new Selection(sele2);\r\n                if (selection2.selection.error) {\r\n                    if (Debug)\r\n                        Log.warn('invalid selection for connection', sele2);\r\n                    continue;\r\n                }\r\n                atomIndices2 = structure.getAtomIndices(selection2);\r\n                atomIndicesCache[sele2] = atomIndices2;\r\n            }\r\n            // cases with more than one atom per selection\r\n            // - #altloc1 to #altloc2\r\n            // - #model to #model\r\n            // - #altloc1 * #model to #altloc2 * #model\r\n            var k = atomIndices1.length;\r\n            var l = atomIndices2.length;\r\n            if (k > l) {\r\n                var tmpA = k;\r\n                k = l;\r\n                l = tmpA;\r\n                var tmpB = atomIndices1;\r\n                atomIndices1 = atomIndices2;\r\n                atomIndices2 = tmpB;\r\n            }\r\n            // console.log( k, l );\r\n            if (k === 0 || l === 0) {\r\n                if (Debug)\r\n                    Log.warn('no atoms found for', sele1, sele2);\r\n                continue;\r\n            }\r\n            for (var j = 0; j < l; ++j) {\r\n                ap1.index = atomIndices1[j % k];\r\n                ap2.index = atomIndices2[j];\r\n                if (ap1 && ap2) {\r\n                    structure.bondStore.addBond(ap1, ap2, getBondOrder(sc.pdbx_value_order[i]));\r\n                }\r\n                else {\r\n                    Log.log('atoms for connection not found');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction processEntities(cif, structure, chainIndexDict) {\r\n    if (cif.entity) {\r\n        ensureArray(cif.entity, 'id');\r\n        var e = cif.entity;\r\n        var n = e.id.length;\r\n        for (var i = 0; i < n; ++i) {\r\n            var description = e.pdbx_description[i];\r\n            var type = e.type[i];\r\n            var chainIndexList = Array.from(chainIndexDict[e.id[i]]);\r\n            structure.entityList[i] = new Entity(structure, i, description, type, chainIndexList);\r\n        }\r\n    }\r\n}\r\n//\r\nclass CifParser extends StructureParser {\r\n    get type() { return 'cif'; }\r\n    _parse() {\r\n        // http://mmcif.wwpdb.org/\r\n        Log.time('CifParser._parse ' + this.name);\r\n        var s = this.structure;\r\n        var sb = this.structureBuilder;\r\n        var firstModelOnly = this.firstModelOnly;\r\n        var asTrajectory = this.asTrajectory;\r\n        var cAlphaOnly = this.cAlphaOnly;\r\n        var frames = s.frames;\r\n        var currentFrame, currentCoord;\r\n        var rawline, line;\r\n        //\r\n        var cif = {};\r\n        var asymIdDict = {};\r\n        var chainIndexDict = {};\r\n        var pendingString = false;\r\n        var currentString = null;\r\n        var pendingValue = false;\r\n        var pendingLoop = false;\r\n        var pendingName = false;\r\n        var loopPointers = [];\r\n        var currentLoopIndex = null;\r\n        var currentCategory = null;\r\n        var currentName = null;\r\n        var first = null;\r\n        var pointerNames = [];\r\n        var authAsymId, authSeqId, labelAtomId, labelCompId, labelAsymId, labelEntityId, labelAltId, groupPDB, id, typeSymbol, pdbxPDBmodelNum, pdbxPDBinsCode, CartnX, CartnY, CartnZ, bIsoOrEquiv, occupancy;\r\n        //\r\n        var atomMap = s.atomMap;\r\n        var atomStore = s.atomStore;\r\n        atomStore.resize(this.streamer.data.length / 100);\r\n        var idx = 0;\r\n        var modelIdx = 0;\r\n        var modelNum;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (var i = _i; i < _n; ++i) {\r\n                rawline = lines[i];\r\n                line = rawline.trim();\r\n                if ((!line && !pendingString && !pendingLoop) || line[0] === '#') {\r\n                    // Log.log( \"NEW BLOCK\" );\r\n                    pendingString = false;\r\n                    pendingLoop = false;\r\n                    pendingValue = false;\r\n                    loopPointers.length = 0;\r\n                    currentLoopIndex = null;\r\n                    currentCategory = null;\r\n                    currentName = null;\r\n                    first = null;\r\n                    pointerNames.length = 0;\r\n                }\r\n                else if (line.substring(0, 5) === 'data_') {\r\n                    cif.data = line.substring(5).trim();\r\n                    // Log.log( \"DATA\", data );\r\n                }\r\n                else if (line[0] === ';') {\r\n                    if (pendingString) {\r\n                        // Log.log( \"STRING END\", currentString );\r\n                        if (pendingLoop) {\r\n                            if (currentLoopIndex === loopPointers.length) {\r\n                                currentLoopIndex = 0;\r\n                            }\r\n                            loopPointers[currentLoopIndex].push(currentString);\r\n                            currentLoopIndex += 1;\r\n                        }\r\n                        else {\r\n                            if (currentName === false) {\r\n                                cif[currentCategory] = currentString;\r\n                            }\r\n                            else {\r\n                                cif[currentCategory][currentName] = currentString; //TODO currentname can equals null\r\n                            }\r\n                        }\r\n                        pendingString = false;\r\n                        currentString = null;\r\n                    }\r\n                    else {\r\n                        // Log.log( \"STRING START\" );\r\n                        pendingString = true;\r\n                        currentString = line.substring(1);\r\n                    }\r\n                }\r\n                else if (line === 'loop_') {\r\n                    // Log.log( \"LOOP START\" );\r\n                    pendingLoop = true;\r\n                    pendingName = true;\r\n                    loopPointers.length = 0;\r\n                    pointerNames.length = 0;\r\n                    currentLoopIndex = 0;\r\n                }\r\n                else if (line[0] === '_') {\r\n                    var keyParts, category, name;\r\n                    if (pendingLoop && !pendingName) {\r\n                        pendingLoop = false;\r\n                    }\r\n                    if (pendingLoop) {\r\n                        // Log.log( \"LOOP KEY\", line );\r\n                        keyParts = line.split('.');\r\n                        category = keyParts[0].substring(1);\r\n                        name = keyParts[1];\r\n                        if (keyParts.length === 1) {\r\n                            name = false;\r\n                            if (!cif[category])\r\n                                cif[category] = [];\r\n                            loopPointers.push(cif[category]);\r\n                        }\r\n                        else {\r\n                            if (!cif[category])\r\n                                cif[category] = {};\r\n                            if (cif[category][name]) {\r\n                                if (Debug)\r\n                                    Log.warn(category, name, 'already exists');\r\n                            }\r\n                            else {\r\n                                cif[category][name] = [];\r\n                                loopPointers.push(cif[category][name]);\r\n                                pointerNames.push(name);\r\n                            }\r\n                        }\r\n                        currentCategory = category;\r\n                        currentName = name;\r\n                        first = true;\r\n                    }\r\n                    else {\r\n                        var keyValuePair = line.match(reQuotedWhitespace);\r\n                        var key = keyValuePair[0];\r\n                        var value = keyValuePair[1];\r\n                        keyParts = key.split('.');\r\n                        category = keyParts[0].substring(1);\r\n                        name = keyParts[1];\r\n                        if (keyParts.length === 1) {\r\n                            name = false;\r\n                            cif[category] = value;\r\n                        }\r\n                        else {\r\n                            if (!cif[category])\r\n                                cif[category] = {};\r\n                            if (cif[category][name]) {\r\n                                if (Debug)\r\n                                    Log.warn(category, name, 'already exists');\r\n                            }\r\n                            else {\r\n                                cif[category][name] = value;\r\n                            }\r\n                        }\r\n                        if (!value)\r\n                            pendingValue = true;\r\n                        currentCategory = category;\r\n                        currentName = name;\r\n                    }\r\n                }\r\n                else {\r\n                    if (pendingString) {\r\n                        // Log.log( \"STRING VALUE\", line );\r\n                        currentString += rawline;\r\n                    }\r\n                    else if (pendingLoop) {\r\n                        // Log.log( \"LOOP VALUE\", line );\r\n                        if (!line) {\r\n                            continue;\r\n                        }\r\n                        else if (currentCategory === 'atom_site') {\r\n                            const ls = line.split(reWhitespace);\r\n                            if (first) {\r\n                                authAsymId = pointerNames.indexOf('auth_asym_id');\r\n                                authSeqId = pointerNames.indexOf('auth_seq_id');\r\n                                labelAtomId = pointerNames.indexOf('label_atom_id');\r\n                                labelCompId = pointerNames.indexOf('label_comp_id');\r\n                                labelAsymId = pointerNames.indexOf('label_asym_id');\r\n                                labelEntityId = pointerNames.indexOf('label_entity_id');\r\n                                labelAltId = pointerNames.indexOf('label_alt_id');\r\n                                CartnX = pointerNames.indexOf('Cartn_x');\r\n                                CartnY = pointerNames.indexOf('Cartn_y');\r\n                                CartnZ = pointerNames.indexOf('Cartn_z');\r\n                                id = pointerNames.indexOf('id');\r\n                                typeSymbol = pointerNames.indexOf('type_symbol');\r\n                                groupPDB = pointerNames.indexOf('group_PDB');\r\n                                bIsoOrEquiv = pointerNames.indexOf('B_iso_or_equiv');\r\n                                pdbxPDBmodelNum = pointerNames.indexOf('pdbx_PDB_model_num');\r\n                                pdbxPDBinsCode = pointerNames.indexOf('pdbx_PDB_ins_code');\r\n                                occupancy = pointerNames.indexOf('occupancy');\r\n                                first = false;\r\n                                modelNum = parseInt(ls[pdbxPDBmodelNum]);\r\n                                if (asTrajectory) {\r\n                                    currentFrame = [];\r\n                                    currentCoord = 0;\r\n                                }\r\n                            }\r\n                            //\r\n                            const _modelNum = parseInt(ls[pdbxPDBmodelNum]);\r\n                            if (modelNum !== _modelNum) {\r\n                                if (asTrajectory) {\r\n                                    if (modelIdx === 0) {\r\n                                        frames.push(new Float32Array(currentFrame));\r\n                                    }\r\n                                    currentFrame = new Float32Array(atomStore.count * 3);\r\n                                    frames.push(currentFrame);\r\n                                    currentCoord = 0;\r\n                                }\r\n                                modelIdx += 1;\r\n                            }\r\n                            modelNum = _modelNum;\r\n                            if (firstModelOnly && modelIdx > 0)\r\n                                continue;\r\n                            //\r\n                            const atomname = ls[labelAtomId].replace(reDoubleQuote, '');\r\n                            if (cAlphaOnly && atomname !== 'CA')\r\n                                continue;\r\n                            const x = parseFloat(ls[CartnX]);\r\n                            const y = parseFloat(ls[CartnY]);\r\n                            const z = parseFloat(ls[CartnZ]);\r\n                            if (asTrajectory) {\r\n                                const frameOffset = currentCoord * 3;\r\n                                currentFrame[frameOffset + 0] = x;\r\n                                currentFrame[frameOffset + 1] = y;\r\n                                currentFrame[frameOffset + 2] = z;\r\n                                currentCoord += 1;\r\n                                if (modelIdx > 0)\r\n                                    continue;\r\n                            }\r\n                            //\r\n                            const resname = ls[labelCompId];\r\n                            const resno = parseInt(ls[authSeqId]);\r\n                            let inscode = ls[pdbxPDBinsCode];\r\n                            inscode = (inscode === '?') ? '' : inscode;\r\n                            const chainname = ls[authAsymId];\r\n                            const chainid = ls[labelAsymId];\r\n                            const hetero = (ls[groupPDB][0] === 'H') ? 1 : 0;\r\n                            //\r\n                            const element = ls[typeSymbol];\r\n                            const bfactor = parseFloat(ls[bIsoOrEquiv]);\r\n                            const occ = parseFloat(ls[occupancy]);\r\n                            let altloc = ls[labelAltId];\r\n                            altloc = (altloc === '.') ? '' : altloc;\r\n                            atomStore.growIfFull();\r\n                            atomStore.atomTypeId[idx] = atomMap.add(atomname, element);\r\n                            atomStore.x[idx] = x;\r\n                            atomStore.y[idx] = y;\r\n                            atomStore.z[idx] = z;\r\n                            atomStore.serial[idx] = parseInt(ls[id]);\r\n                            atomStore.bfactor[idx] = isNaN(bfactor) ? 0 : bfactor;\r\n                            atomStore.occupancy[idx] = isNaN(occ) ? 0 : occ;\r\n                            atomStore.altloc[idx] = altloc.charCodeAt(0);\r\n                            sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode);\r\n                            if (Debug) {\r\n                                // check if one-to-many (chainname-asymId) relationship is\r\n                                // actually a many-to-many mapping\r\n                                const assignedChainname = asymIdDict[chainid];\r\n                                if (assignedChainname !== undefined && assignedChainname !== chainname) {\r\n                                    if (Debug)\r\n                                        Log.warn(assignedChainname, chainname);\r\n                                }\r\n                            }\r\n                            // chainname mapping: label_asym_id -> auth_asym_id\r\n                            asymIdDict[chainid] = chainname;\r\n                            // entity mapping: chainIndex -> label_entity_id\r\n                            const entityId = ls[labelEntityId];\r\n                            if (!chainIndexDict[entityId]) {\r\n                                chainIndexDict[entityId] = new Set();\r\n                            }\r\n                            chainIndexDict[entityId].add(s.chainStore.count - 1);\r\n                            idx += 1;\r\n                        }\r\n                        else {\r\n                            const ls = line.match(reQuotedWhitespace);\r\n                            const nn = ls.length;\r\n                            if (currentLoopIndex === loopPointers.length) {\r\n                                currentLoopIndex = 0;\r\n                            } /* else if( currentLoopIndex + nn > loopPointers.length ){\r\n                              Log.warn( \"cif parsing error, wrong number of loop data entries\", nn, loopPointers.length );\r\n                            } */\r\n                            for (let j = 0; j < nn; ++j) {\r\n                                loopPointers[currentLoopIndex + j].push(ls[j]);\r\n                            }\r\n                            currentLoopIndex += nn;\r\n                        }\r\n                        pendingName = false;\r\n                    }\r\n                    else if (line[0] === \"'\" && line[line.length - 1] === \"'\") {\r\n                        // Log.log( \"NEWLINE STRING\", line );\r\n                        const str = line.substring(1, line.length - 1);\r\n                        if (currentName === false) {\r\n                            cif[currentCategory] = str;\r\n                        }\r\n                        else {\r\n                            cif[currentCategory][currentName] = str;\r\n                        }\r\n                    }\r\n                    else if (pendingValue) {\r\n                        // Log.log( \"NEWLINE VALUE\", line );\r\n                        if (currentName === false) {\r\n                            cif[currentCategory] = line;\r\n                        }\r\n                        else {\r\n                            cif[currentCategory][currentName] = line;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Debug)\r\n                            Log.log('CifParser._parse: unknown state', line);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        if (cif.chem_comp && cif.chem_comp_atom) {\r\n            parseChemComp(cif, s, sb);\r\n            sb.finalize();\r\n            s.finalizeAtoms();\r\n            s.finalizeBonds();\r\n            assignResidueTypeBonds(s);\r\n        }\r\n        else if (cif.atom_site_type_symbol && cif.atom_site_label && cif.atom_site_fract_x) {\r\n            parseCore(cif, s, sb);\r\n            sb.finalize();\r\n            s.finalizeAtoms();\r\n            calculateBonds(s);\r\n            s.finalizeBonds();\r\n            // assignResidueTypeBonds( s );\r\n        }\r\n        else {\r\n            var secStruct = processSecondaryStructure(cif, s, asymIdDict);\r\n            processSymmetry(cif, s, asymIdDict);\r\n            processConnections(cif, s, asymIdDict);\r\n            processEntities(cif, s, chainIndexDict);\r\n            if (cif.struct && cif.struct.title) {\r\n                s.title = cif.struct.title.trim().replace(reTrimQuotes, '');\r\n            }\r\n            if (cif.entry && cif.entry.id) {\r\n                s.id = cif.entry.id.trim().replace(reTrimQuotes, '');\r\n            }\r\n            // structure header (mimicking biojava)\r\n            if (cif.pdbx_audit_revision_history) {\r\n                if (cif.pdbx_audit_revision_history.revision_date) {\r\n                    ensureArray(cif.pdbx_audit_revision_history, 'revision_date');\r\n                    const dates = cif.pdbx_audit_revision_history.revision_date.filter(hasValue);\r\n                    if (dates.length) {\r\n                        s.header.releaseDate = dates[0];\r\n                    }\r\n                }\r\n                if (cif.pdbx_database_status.recvd_initial_deposition_date) {\r\n                    ensureArray(cif.pdbx_database_status, 'recvd_initial_deposition_date');\r\n                    const depDates = cif.pdbx_database_status.recvd_initial_deposition_date.filter(hasValue);\r\n                    if (depDates.length) {\r\n                        s.header.depositionDate = depDates[0];\r\n                    }\r\n                }\r\n            }\r\n            else if (cif.database_PDB_rev) {\r\n                if (cif.database_PDB_rev.date) {\r\n                    ensureArray(cif.database_PDB_rev, 'date');\r\n                    const dates = cif.database_PDB_rev.date.filter(hasValue);\r\n                    if (dates.length) {\r\n                        s.header.releaseDate = dates[0];\r\n                    }\r\n                }\r\n                if (cif.database_PDB_rev.date_original) {\r\n                    ensureArray(cif.database_PDB_rev, 'date_original');\r\n                    const depDates = cif.database_PDB_rev.date_original.filter(hasValue);\r\n                    if (depDates.length) {\r\n                        s.header.depositionDate = depDates[0];\r\n                    }\r\n                }\r\n            }\r\n            if (cif.reflns && cif.reflns.d_resolution_high) {\r\n                if (hasValue(cif.reflns.d_resolution_high)) {\r\n                    s.header.resolution = parseFloat(cif.reflns.d_resolution_high);\r\n                }\r\n            }\r\n            else if (cif.refine && cif.refine.ls_d_res_high) {\r\n                if (hasValue(cif.refine.ls_d_res_high)) {\r\n                    s.header.resolution = parseFloat(cif.refine.ls_d_res_high);\r\n                }\r\n            }\r\n            if (cif.refine && cif.refine.ls_R_factor_R_free) {\r\n                if (hasValue(cif.refine.ls_R_factor_R_free)) {\r\n                    s.header.rFree = parseFloat(cif.refine.ls_R_factor_R_free);\r\n                }\r\n            }\r\n            if (cif.refine && cif.refine.ls_R_factor_R_work) {\r\n                if (hasValue(cif.refine.ls_R_factor_R_work)) {\r\n                    s.header.rWork = parseFloat(cif.refine.ls_R_factor_R_work);\r\n                }\r\n            }\r\n            if (cif.exptl && cif.exptl.method) {\r\n                ensureArray(cif.exptl, 'method');\r\n                s.header.experimentalMethods = cif.exptl.method.map(function (m) {\r\n                    return m.replace(reTrimQuotes, '');\r\n                });\r\n            }\r\n            sb.finalize();\r\n            s.finalizeAtoms();\r\n            calculateBonds(s);\r\n            s.finalizeBonds();\r\n            if (!secStruct) {\r\n                calculateSecondaryStructure(s);\r\n            }\r\n            else {\r\n                assignSecondaryStructure(s, secStruct);\r\n            }\r\n            buildUnitcellAssembly(s);\r\n            s.extraData.cif = cif;\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('CifParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('cif', CifParser);\r\nParserRegistry.add('mcif', CifParser);\r\nParserRegistry.add('mmcif', CifParser);\r\nexport default CifParser;\r\n//# sourceMappingURL=cif-parser.js.map","/**\r\n * @file Gro Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { calculateBonds, calculateChainnames, calculateSecondaryStructure } from '../structure/structure-utils';\r\nclass GroParser extends StructureParser {\r\n    get type() { return 'gro'; }\r\n    _parse() {\r\n        // http://manual.gromacs.org/current/online/gro.html\r\n        if (Debug)\r\n            Log.time('GroParser._parse ' + this.name);\r\n        var s = this.structure;\r\n        var sb = this.structureBuilder;\r\n        var firstModelOnly = this.firstModelOnly;\r\n        var asTrajectory = this.asTrajectory;\r\n        var cAlphaOnly = this.cAlphaOnly;\r\n        var frames = s.frames;\r\n        var boxes = s.boxes;\r\n        var currentFrame, currentCoord;\r\n        var firstLines = this.streamer.peekLines(3);\r\n        s.title = firstLines[0].trim();\r\n        // determine number of decimal places\r\n        var ndec = firstLines[2].length - firstLines[2].lastIndexOf('.') - 1;\r\n        var lpos = 5 + ndec;\r\n        var xpos = 20;\r\n        var ypos = 20 + lpos;\r\n        var zpos = 20 + 2 * lpos;\r\n        //\r\n        var atomname, resname, resno, serial;\r\n        var atomCount = parseInt(firstLines[1]);\r\n        var modelLineCount = atomCount + 3;\r\n        var atomMap = s.atomMap;\r\n        var atomStore = s.atomStore;\r\n        atomStore.resize(atomCount);\r\n        var idx = 0;\r\n        var modelIdx = 0;\r\n        var lineNo = 0;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (var i = _i; i < _n; ++i) {\r\n                ++lineNo;\r\n                var l = lineNo - 1;\r\n                var line = lines[i];\r\n                if (!line)\r\n                    continue;\r\n                if (l % modelLineCount === 0) {\r\n                    // Log.log( \"title\", line )\r\n                    if (asTrajectory) {\r\n                        currentFrame = new Float32Array(atomCount * 3);\r\n                        frames.push(currentFrame);\r\n                        currentCoord = 0;\r\n                    }\r\n                }\r\n                else if (l % modelLineCount === 1) {\r\n                    // Log.log( \"atomCount\", line )\r\n                }\r\n                else if (l % modelLineCount === modelLineCount - 1) {\r\n                    var str = line.trim().split(/\\s+/);\r\n                    var box = new Float32Array(9);\r\n                    box[0] = parseFloat(str[0]) * 10;\r\n                    box[4] = parseFloat(str[1]) * 10;\r\n                    box[8] = parseFloat(str[2]) * 10;\r\n                    boxes.push(box);\r\n                    if (firstModelOnly) {\r\n                        return true;\r\n                    }\r\n                    modelIdx += 1;\r\n                }\r\n                else {\r\n                    atomname = line.substr(10, 5).trim();\r\n                    if (cAlphaOnly && atomname !== 'CA')\r\n                        continue;\r\n                    var x = parseFloat(line.substr(xpos, lpos)) * 10;\r\n                    var y = parseFloat(line.substr(ypos, lpos)) * 10;\r\n                    var z = parseFloat(line.substr(zpos, lpos)) * 10;\r\n                    if (asTrajectory) {\r\n                        var j = currentCoord * 3;\r\n                        currentFrame[j + 0] = x;\r\n                        currentFrame[j + 1] = y;\r\n                        currentFrame[j + 2] = z;\r\n                        currentCoord += 1;\r\n                        if (l > modelLineCount)\r\n                            continue;\r\n                    }\r\n                    resname = line.substr(5, 5).trim();\r\n                    resno = parseInt(line.substr(0, 5));\r\n                    serial = parseInt(line.substr(15, 5));\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[idx] = atomMap.add(atomname);\r\n                    atomStore.x[idx] = x;\r\n                    atomStore.y[idx] = y;\r\n                    atomStore.z[idx] = z;\r\n                    atomStore.serial[idx] = serial;\r\n                    sb.addAtom(modelIdx, '', '', resname, resno, 0, 'l');\r\n                    idx += 1;\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        calculateChainnames(s);\r\n        calculateBonds(s);\r\n        s.finalizeBonds();\r\n        calculateSecondaryStructure(s);\r\n        if (Debug)\r\n            Log.timeEnd('GroParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('gro', GroParser);\r\nexport default GroParser;\r\n//# sourceMappingURL=gro-parser.js.map","/**\r\n * @file utf8-utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * mostly copied from https://github.com/creationix/msgpack-js-browser\r\n * by Tim Caswell <tim@creationix.com>, MIT License, Copyright (c) 2013\r\n */\r\n\r\n\r\n// Encode string as utf8 into dataview at offset\r\nfunction utf8Write(view, offset, string) {\r\n  var byteLength = view.byteLength;\r\n  for(var i = 0, l = string.length; i < l; i++) {\r\n    var codePoint = string.charCodeAt(i);\r\n\r\n    // One byte of UTF-8\r\n    if (codePoint < 0x80) {\r\n      view.setUint8(offset++, codePoint >>> 0 & 0x7f | 0x00);\r\n      continue;\r\n    }\r\n\r\n    // Two bytes of UTF-8\r\n    if (codePoint < 0x800) {\r\n      view.setUint8(offset++, codePoint >>> 6 & 0x1f | 0xc0);\r\n      view.setUint8(offset++, codePoint >>> 0 & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n\r\n    // Three bytes of UTF-8.\r\n    if (codePoint < 0x10000) {\r\n      view.setUint8(offset++, codePoint >>> 12 & 0x0f | 0xe0);\r\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n\r\n    // Four bytes of UTF-8\r\n    if (codePoint < 0x110000) {\r\n      view.setUint8(offset++, codePoint >>> 18 & 0x07 | 0xf0);\r\n      view.setUint8(offset++, codePoint >>> 12 & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n    throw new Error(\"bad codepoint \" + codePoint);\r\n  }\r\n}\r\n\r\nfunction utf8ByteCount(string) {\r\n  var count = 0;\r\n  for(var i = 0, l = string.length; i < l; i++) {\r\n    var codePoint = string.charCodeAt(i);\r\n    if (codePoint < 0x80) {\r\n      count += 1;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x800) {\r\n      count += 2;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x10000) {\r\n      count += 3;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x110000) {\r\n      count += 4;\r\n      continue;\r\n    }\r\n    throw new Error(\"bad codepoint \" + codePoint);\r\n  }\r\n  return count;\r\n}\r\n\r\n/**\r\n * encode data value (recursively) into binary encoded MessagePack v5 (http://msgpack.org/)\r\n * @param  {Object|Array|String|Number|Boolean|null} value  [description]\r\n * @param  {DataView} view   [description]\r\n * @param  {Integer} offset [description]\r\n * @return {Integer} number of bytes written into view\r\n */\r\nfunction encode$1(value, view, offset) {\r\n  var type = typeof value;\r\n\r\n  // Strings Bytes\r\n  if (type === \"string\") {\r\n    var length = utf8ByteCount(value);\r\n    // fix str\r\n    if (length < 0x20) {\r\n      view.setUint8(offset, length | 0xa0);\r\n      utf8Write(view, offset + 1, value);\r\n      return 1 + length;\r\n    }\r\n    // str 8\r\n    if (length < 0x100) {\r\n      view.setUint8(offset, 0xd9);\r\n      view.setUint8(offset + 1, length);\r\n      utf8Write(view, offset + 2, value);\r\n      return 2 + length;\r\n    }\r\n    // str 16\r\n    if (length < 0x10000) {\r\n      view.setUint8(offset, 0xda);\r\n      view.setUint16(offset + 1, length);\r\n      utf8Write(view, offset + 3, value);\r\n      return 3 + length;\r\n    }\r\n    // str 32\r\n    if (length < 0x100000000) {\r\n      view.setUint8(offset, 0xdb);\r\n      view.setUint32(offset + 1, length);\r\n      utf8Write(view, offset + 5, value);\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (value instanceof Uint8Array) {\r\n    var length = value.byteLength;\r\n    var bytes = new Uint8Array(view.buffer);\r\n    // bin 8\r\n    if (length < 0x100) {\r\n      view.setUint8(offset, 0xc4);\r\n      view.setUint8(offset + 1, length);\r\n      bytes.set(value, offset + 2);\r\n      return 2 + length;\r\n    }\r\n    // bin 16\r\n    if (length < 0x10000) {\r\n      view.setUint8(offset, 0xc5);\r\n      view.setUint16(offset + 1, length);\r\n      bytes.set(value, offset + 3);\r\n      return 3 + length;\r\n    }\r\n    // bin 32\r\n    if (length < 0x100000000) {\r\n      view.setUint8(offset, 0xc6);\r\n      view.setUint32(offset + 1, length);\r\n      bytes.set(value, offset + 5);\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (type === \"number\") {\r\n    if (!isFinite(value)) {\r\n        throw new Error(\"Number not finite: \" + value);\r\n    }\r\n\r\n    // Floating point\r\n    if (Math.floor(value) !== value) {\r\n      view.setUint8(offset, 0xcb);\r\n      view.setFloat64(offset + 1, value);\r\n      return 9;\r\n    }\r\n\r\n    // Integers\r\n    if (value >=0) {\r\n      // positive fixnum\r\n      if (value < 0x80) {\r\n        view.setUint8(offset, value);\r\n        return 1;\r\n      }\r\n      // uint 8\r\n      if (value < 0x100) {\r\n        view.setUint8(offset, 0xcc);\r\n        view.setUint8(offset + 1, value);\r\n        return 2;\r\n      }\r\n      // uint 16\r\n      if (value < 0x10000) {\r\n        view.setUint8(offset, 0xcd);\r\n        view.setUint16(offset + 1, value);\r\n        return 3;\r\n      }\r\n      // uint 32\r\n      if (value < 0x100000000) {\r\n        view.setUint8(offset, 0xce);\r\n        view.setUint32(offset + 1, value);\r\n        return 5;\r\n      }\r\n      throw new Error(\"Number too big 0x\" + value.toString(16));\r\n    }\r\n    // negative fixnum\r\n    if (value >= -0x20) {\r\n      view.setInt8(offset, value);\r\n      return 1;\r\n    }\r\n    // int 8\r\n    if (value >= -0x80) {\r\n      view.setUint8(offset, 0xd0);\r\n      view.setInt8(offset + 1, value);\r\n      return 2;\r\n    }\r\n    // int 16\r\n    if (value >= -0x8000) {\r\n      view.setUint8(offset, 0xd1);\r\n      view.setInt16(offset + 1, value);\r\n      return 3;\r\n    }\r\n    // int 32\r\n    if (value >= -0x80000000) {\r\n      view.setUint8(offset, 0xd2);\r\n      view.setInt32(offset + 1, value);\r\n      return 5;\r\n    }\r\n    throw new Error(\"Number too small -0x\" + (-value).toString(16).substr(1));\r\n  }\r\n\r\n  // null\r\n  if (value === null) {\r\n    view.setUint8(offset, 0xc0);\r\n    return 1;\r\n  }\r\n\r\n  // Boolean\r\n  if (type === \"boolean\") {\r\n    view.setUint8(offset, value ? 0xc3 : 0xc2);\r\n    return 1;\r\n  }\r\n\r\n  // Container Types\r\n  if (type === \"object\") {\r\n    var length, size = 0;\r\n    var isArray = Array.isArray(value);\r\n\r\n    if (isArray) {\r\n      length = value.length;\r\n    }\r\n    else {\r\n      var keys = Object.keys(value);\r\n      length = keys.length;\r\n    }\r\n\r\n    var size;\r\n    if (length < 0x10) {\r\n      view.setUint8(offset, length | (isArray ? 0x90 : 0x80));\r\n      size = 1;\r\n    }\r\n    else if (length < 0x10000) {\r\n      view.setUint8(offset, isArray ? 0xdc : 0xde);\r\n      view.setUint16(offset + 1, length);\r\n      size = 3;\r\n    }\r\n    else if (length < 0x100000000) {\r\n      view.setUint8(offset, isArray ? 0xdd : 0xdf);\r\n      view.setUint32(offset + 1, length);\r\n      size = 5;\r\n    }\r\n\r\n    if (isArray) {\r\n      for (var i = 0; i < length; i++) {\r\n        size += encode$1(value[i], view, offset + size);\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        size += encode$1(key, view, offset + size);\r\n        size += encode$1(value[key], view, offset + size);\r\n      }\r\n    }\r\n\r\n    return size;\r\n  }\r\n  throw new Error(\"Unknown type \" + type);\r\n}\r\n\r\nfunction encodedSize(value) {\r\n  var type = typeof value;\r\n\r\n  // Raw Bytes\r\n  if (type === \"string\") {\r\n    var length = utf8ByteCount(value);\r\n    if (length < 0x20) {\r\n      return 1 + length;\r\n    }\r\n    if (length < 0x100) {\r\n      return 2 + length;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + length;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (value instanceof Uint8Array) {\r\n    var length = value.byteLength;\r\n    if (length < 0x100) {\r\n      return 2 + length;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + length;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (type === \"number\") {\r\n    // Floating Point\r\n    // double\r\n    if (Math.floor(value) !== value) return 9;\r\n\r\n    // Integers\r\n    if (value >=0) {\r\n      // positive fixnum\r\n      if (value < 0x80) return 1;\r\n      // uint 8\r\n      if (value < 0x100) return 2;\r\n      // uint 16\r\n      if (value < 0x10000) return 3;\r\n      // uint 32\r\n      if (value < 0x100000000) return 5;\r\n      throw new Error(\"Number too big 0x\" + value.toString(16));\r\n    }\r\n    // negative fixnum\r\n    if (value >= -0x20) return 1;\r\n    // int 8\r\n    if (value >= -0x80) return 2;\r\n    // int 16\r\n    if (value >= -0x8000) return 3;\r\n    // int 32\r\n    if (value >= -0x80000000) return 5;\r\n    throw new Error(\"Number too small -0x\" + value.toString(16).substr(1));\r\n  }\r\n\r\n  // Boolean, null\r\n  if (type === \"boolean\" || value === null) return 1;\r\n\r\n  // Container Types\r\n  if (type === \"object\") {\r\n    var length, size = 0;\r\n    if (Array.isArray(value)) {\r\n      length = value.length;\r\n      for (var i = 0; i < length; i++) {\r\n        size += encodedSize(value[i]);\r\n      }\r\n    }\r\n    else {\r\n      var keys = Object.keys(value);\r\n      length = keys.length;\r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        size += encodedSize(key) + encodedSize(value[key]);\r\n      }\r\n    }\r\n    if (length < 0x10) {\r\n      return 1 + size;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + size;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + size;\r\n    }\r\n    throw new Error(\"Array or object too long 0x\" + length.toString(16));\r\n  }\r\n  throw new Error(\"Unknown type \" + type);\r\n}\r\n\r\nfunction encodeMsgpack(value) {\r\n  var buffer = new ArrayBuffer(encodedSize(value));\r\n  var view = new DataView(buffer);\r\n  encode$1(value, view, 0);\r\n  return new Uint8Array(buffer);\r\n}\r\n\r\n/**\r\n * @file mmtf-constants\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n\r\nvar PassThroughFields = [\r\n    \"mmtfVersion\", \"mmtfProducer\",\r\n    \"unitCell\", \"spaceGroup\", \"structureId\", \"title\",\r\n    \"depositionDate\", \"releaseDate\",\r\n    \"experimentalMethods\", \"resolution\", \"rFree\", \"rWork\",\r\n    \"bioAssemblyList\", \"ncsOperatorList\", \"entityList\", \"groupList\",\r\n    \"numBonds\", \"numAtoms\", \"numGroups\", \"numChains\", \"numModels\",\r\n    \"groupsPerChain\", \"chainsPerModel\",\r\n];\r\n\r\nvar EncodedFields = [\r\n\t// required\r\n    \"xCoordList\", \"yCoordList\", \"zCoordList\",\r\n    \"groupIdList\", \"groupTypeList\",\r\n    \"chainIdList\",\r\n    // optional\r\n    \"bFactorList\", \"atomIdList\", \"altLocList\", \"occupancyList\",\r\n    \"secStructList\", \"insCodeList\", \"sequenceIndexList\",\r\n    \"chainNameList\",\r\n    \"bondAtomList\", \"bondOrderList\"\r\n];\r\n\r\nvar AllFields = PassThroughFields.concat( EncodedFields );\r\n\r\n/**\r\n * @file mmtf-utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * mmtf utils module.\r\n * @module MmtfUtils\r\n */\r\n\r\n\r\nfunction getView( ctor, typedArray, elemSize ){\r\n    return typedArray ? new ctor(\r\n        typedArray.buffer,\r\n        typedArray.byteOffset,\r\n        typedArray.byteLength / ( elemSize || 1 )\r\n    ) : undefined;\r\n}\r\n\r\nfunction getDataView( typedArray ){\r\n    return getView( DataView, typedArray );\r\n}\r\n\r\n/**\r\n * get an Uint8Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Uint8Array} new view on the input array memory\r\n */\r\nfunction getUint8View( typedArray ){\r\n    return getView( Uint8Array, typedArray );\r\n}\r\n\r\n/**\r\n * get an Int8Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Int8Array} new view on the input array memory\r\n */\r\nfunction getInt8View( typedArray ){\r\n    return getView( Int8Array, typedArray );\r\n}\r\n\r\n/**\r\n * get an Int32Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Int32Array} new view on the input array memory\r\n */\r\nfunction getInt32View( typedArray ){\r\n    return getView( Int32Array, typedArray, 4 );\r\n}\r\n\r\nfunction getFloat32View( typedArray ){\r\n    return getView( Float32Array, typedArray, 4 );\r\n}\r\n\r\n\r\n/**\r\n * get an Int16Array copy of the the input array data\r\n * @static\r\n * @param  {TypedArray} view - input data in big endian format\r\n * @param  {Int16Array} [dataArray] - pre-allocated output array\r\n * @return {Int16Array} copy of the input array data\r\n */\r\nfunction decodeInt16( bytes, output ){\r\n    var n = bytes.length / 2;\r\n    if( !output ) output = new Int16Array( n );\r\n    for( var i = 0, i2 = 0; i < n; ++i, i2 += 2 ){\r\n        output[ i ] = bytes[ i2 ] << 8 ^ bytes[ i2 + 1 ] << 0;\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * make big endian buffer of an int16 array\r\n * @static\r\n * @param  {Array|TypedArray} array - array of int16 values\r\n * @return {ArrayBuffer} big endian buffer\r\n */\r\nfunction encodeInt16( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new Uint8Array( 2 * n );\r\n    var dv = getDataView( output );\r\n    for( var i = 0; i < n; ++i ){\r\n        dv.setInt16( 2 * i, array[ i ] );\r\n    }\r\n    return getUint8View( output );\r\n}\r\n\r\n/**\r\n * get an Int32Array copy of the the input array data\r\n * @static\r\n * @param  {TypedArray} view - input data in big endian format\r\n * @param  {Int32Array} [dataArray] - pre-allocated output array\r\n * @return {Int32Array} copy of the input array data\r\n */\r\nfunction decodeInt32( bytes, output ){\r\n    var n = bytes.length / 4;\r\n    if( !output ) output = new Int32Array( n );\r\n    for( var i = 0, i4 = 0; i < n; ++i, i4 += 4 ){\r\n        output[ i ] = (\r\n            bytes[ i4     ] << 24 ^ bytes[ i4 + 1 ] << 16 ^\r\n            bytes[ i4 + 2 ] <<  8 ^ bytes[ i4 + 3 ] <<  0\r\n        );\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * make big endian buffer of an int32 array\r\n * @static\r\n * @param  {Array|TypedArray} array - array of int32 values\r\n * @return {ArrayBuffer} big endian buffer\r\n */\r\nfunction encodeInt32( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new Uint8Array( 4 * n );\r\n    var dv = getDataView( output );\r\n    for( var i = 0; i < n; ++i ){\r\n        dv.setInt32( 4 * i, array[ i ] );\r\n    }\r\n    return getUint8View( output );\r\n}\r\n\r\nfunction decodeFloat32( bytes, output ){\r\n    var n = bytes.length;\r\n    if( !output ) output = new Float32Array( n / 4 );\r\n    var dvOut = getDataView( output );\r\n    var dvIn = getDataView( bytes );\r\n    for( var i = 0, i4 = 0, il = n / 4; i < il; ++i, i4 += 4 ){\r\n        dvOut.setFloat32( i4, dvIn.getFloat32( i4 ), true );\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * decode integers into floats using given divisor\r\n * example:\r\n *     intArray: [ 12, 34, 543, 687, 2, 0, 4689 ]\r\n *     divisor: 100\r\n *     return: [ 0.12, 0.34, 5.43, 6.87, 0.02, 0.00, 46.89 ]\r\n * @static\r\n * @param  {TypedArray|Array} intArray - input array containing integers\r\n * @param  {Number} divisor - number to devide the integers to obtain floats\r\n * @param  {Float32Array} [dataArray] - pre-allocated output array\r\n * @return {Float32Array} decoded array\r\n */\r\nfunction decodeInteger( intArray, divisor, output ){\r\n    var n = intArray.length;\r\n    var invDiv = 1/divisor;\r\n    if( !output ) output = new Float32Array( n );\r\n    for( var i = 0; i < n; ++i ){\r\n        // multiply by inverse of the divisor which is faster then division\r\n        output[ i ] = intArray[ i ] * invDiv;\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeInteger( floatArray, factor, output ){\r\n    var n = floatArray.length;\r\n    if( !output ) output = new Int32Array( n );\r\n    for( var i = 0; i < n; ++i ){\r\n        output[ i ] = Math.round( floatArray[ i ] * factor );\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform run-length decoding of input array\r\n * example:\r\n *     array: [ 0, 2, 3, 5 ]  // pairs of values and length of a run\r\n *     return: [ 0, 0, 3, 3, 3, 3, 3 ]\r\n * @static\r\n * @param  {TypedArray|Array} array - run-length encoded input array\r\n * @param  {TypedArray|Array} [dataArray] - pre-allocated output array\r\n * @return {TypedArray|Array} decoded array\r\n */\r\nfunction decodeRun( array, output ){\r\n    var i, il;\r\n    if( !output ){\r\n        // calculate the length the decoded array will have\r\n        var fullLength = 0;\r\n        for( i = 0, il = array.length; i < il; i+=2 ){\r\n            fullLength += array[ i + 1 ];\r\n        }\r\n        // create a new array of the same type of the input array\r\n        output = new array.constructor( fullLength );\r\n    }\r\n    var dataOffset = 0;\r\n    for( i = 0, il = array.length; i < il; i+=2 ){\r\n        var value = array[ i ];  // value to be repeated\r\n        var length = array[ i + 1 ];  // number of repeats\r\n        for( var j = 0; j < length; ++j ){\r\n            output[ dataOffset ] = value;\r\n            ++dataOffset;\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeRun( array ){\r\n    if( array.length === 0 ) return new Int32Array();\r\n    var i, il;\r\n    // calculate output size\r\n    var fullLength = 2;\r\n    for( i = 1, il = array.length; i < il; ++i ){\r\n        if( array[ i - 1 ] !== array[ i ] ){\r\n            fullLength += 2;\r\n        }\r\n    }\r\n    var output = new Int32Array( fullLength );\r\n    var offset = 0;\r\n    var runLength = 1;\r\n    for( i = 1, il = array.length; i < il; ++i ){\r\n        if( array[ i - 1 ] !== array[ i ] ){\r\n            output[ offset ] = array[ i - 1 ];\r\n            output[ offset + 1 ] = runLength;\r\n            runLength = 1;\r\n            offset += 2;\r\n        }else{\r\n            ++runLength;\r\n        }\r\n    }\r\n    output[ offset ] = array[ array.length - 1 ];\r\n    output[ offset + 1 ] = runLength;\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform delta decoding of the input array\r\n * by iterativly adding the ith element's value to the i+1th\r\n * example:\r\n *     dataArray: [ 0, 2, 1, 2, 1, 1, -4, -2, 9 ]\r\n *     return: [ 0, 2, 3, 5, 6, 7, 3, 1, 10 ]\r\n * @static\r\n * @param  {TypedArray|Array} dataArray - delta encoded input array\r\n * @return {TypedArray|Array} decoded array\r\n */\r\nfunction decodeDelta( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new array.constructor( n );\r\n    if( n ) output[ 0 ] = array[ 0 ];\r\n    for( var i = 1; i < n; ++i ){\r\n        output[ i ] = array[ i ] + output[ i - 1 ];\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeDelta( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new array.constructor( n );\r\n    output[ 0 ] = array[ 0 ];\r\n    for( var i = 1; i < n; ++i ){\r\n        output[ i ] = array[ i ] - array[ i - 1 ];\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * [decodePacking description]\r\n * @param  {Int16Array|Int8Array} int16or8 [description]\r\n * @param  {Int32Array} output   [description]\r\n * @return {Int32Array}          [description]\r\n */\r\nfunction decodePacking( int16or8, output ){\r\n    var upperLimit = int16or8 instanceof Int8Array ? 0x7F : 0x7FFF;\r\n    var lowerLimit = -upperLimit - 1;\r\n    var n = int16or8.length;\r\n    var i, j;\r\n    if( !output ){\r\n        var fullLength = 0;\r\n        for( i = 0; i < n; ++i ){\r\n            if( int16or8[ i ] < upperLimit && int16or8[ i ] > lowerLimit ){\r\n                ++fullLength;\r\n            }\r\n        }\r\n        output = new Int32Array( fullLength );\r\n    }\r\n    i = 0;\r\n    j = 0;\r\n    while( i < n ){\r\n        var value = 0;\r\n        while( int16or8[ i ] === upperLimit || int16or8[ i ] === lowerLimit ){\r\n            value += int16or8[ i ];\r\n            ++i;\r\n        }\r\n        value += int16or8[ i ];\r\n        ++i;\r\n        output[ j ] = value;\r\n        ++j;\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * integer packing using recursive indexing\r\n * @param  {Array|TyepedArray} intArray [description]\r\n * @param  {Boolean} useInt8  [description]\r\n * @return {Int16Array|Int8Array}          [description]\r\n */\r\nfunction encodePacking( intArray, useInt8 ){\r\n    var upperLimit = useInt8 ? 0x7F : 0x7FFF;\r\n    var lowerLimit = -upperLimit - 1;\r\n    var i;\r\n    var n = intArray.length;\r\n    var size = 0;\r\n    for( i = 0; i < n; ++i ){\r\n        var value = intArray[ i ];\r\n        if( value === 0 ){\r\n            ++size;\r\n        }else if( value === upperLimit || value === lowerLimit ){\r\n            size += 2;\r\n        }else if( value > 0) {\r\n            size += Math.ceil( value / upperLimit );\r\n        }else {\r\n            size += Math.ceil( value / lowerLimit );\r\n        }\r\n    }\r\n    var output = useInt8 ? new Int8Array( size ) : new Int16Array( size );\r\n    var j = 0;\r\n    for( i = 0; i < n; ++i ){\r\n        var value = intArray[ i ];\r\n        if( value >= 0) {\r\n            while( value >= upperLimit ){\r\n                output[ j ] = upperLimit;\r\n                ++j;\r\n                value -= upperLimit;\r\n            }\r\n        }else{\r\n            while( value <= lowerLimit ){\r\n                output[ j ] = lowerLimit;\r\n                ++j;\r\n                value -= lowerLimit;\r\n            }\r\n        }\r\n        output[ j ] = value;\r\n        ++j;\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\nfunction decodeDeltaRun( array, output ){\r\n    return decodeDelta( decodeRun( array ), output );\r\n}\r\n\r\nfunction encodeDeltaRun( array ){\r\n    return encodeRun( encodeDelta( array ) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform run-length decoding followed (@see decodeRunLength)\r\n * by decoding integers into floats using given divisor (@see decodeIntegerToFloat)\r\n * example:\r\n *     array: [ 320, 3, 100, 2 ]\r\n *     divisor: 100\r\n *     return: [ 3.20, 3.20, 3.20, 1.00, 1.00 ]\r\n * @static\r\n * @param  {Uint8Array} array - run-length encoded int32 array as bytes in big endian format\r\n * @param  {Integer} divisor - number to devide the integers to obtain floats\r\n * @param  {Float32Array} dataArray - pre-allocated output array\r\n * @return {Float32Array} decoded array\r\n */\r\nfunction decodeIntegerRun( intArray, divisor, output ){\r\n    return decodeInteger(\r\n        decodeRun( intArray, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction encodeIntegerRun( floatArray, factor ){\r\n    return encodeRun( encodeInteger( floatArray, factor ) );\r\n}\r\n\r\n\r\n\r\nfunction decodeIntegerDelta( intArray, divisor, output ){\r\n    return decodeInteger(\r\n        decodeDelta( intArray, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction encodeIntegerDelta( floatArray, factor, output ){\r\n    return encodeDelta( encodeInteger( floatArray, factor ), output );\r\n}\r\n\r\n\r\n\r\nfunction decodeIntegerPacking( int16or8, divisor, output ){\r\n    return decodeInteger(\r\n        decodePacking( int16or8, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction decodeIntegerDeltaPacking( int16or8, divisor, output ){\r\n    var unpacked = decodePacking( int16or8, getInt32View( output ) );\r\n    return decodeIntegerDelta( unpacked, divisor, getFloat32View( unpacked ) );\r\n}\r\n\r\nfunction encodeIntegerDeltaPacking( floatArray, factor, useInt8 ){\r\n    return encodePacking( encodeIntegerDelta( floatArray, factor ), useInt8 );\r\n}\r\n\r\n\r\n\r\nfunction decodeBytes( bytes ){\r\n    var dv = getDataView( bytes );\r\n    var type = dv.getInt32( 0 );\r\n    var size = dv.getInt32( 4 );\r\n    var param = bytes.subarray( 8, 12 );\r\n    var bytes = bytes.subarray( 12 );\r\n    return [ type, bytes, size, param ];\r\n}\r\n\r\nfunction encodeBytes( type, size, param, bytes ){\r\n    var buffer = new ArrayBuffer( 12 + bytes.byteLength );\r\n    var out = new Uint8Array( buffer );\r\n    var dv = new DataView( buffer );\r\n    dv.setInt32( 0, type );\r\n    dv.setInt32( 4, size );\r\n    if( param ) out.set( param, 8 );\r\n    out.set( bytes, 12 );\r\n    return out;\r\n}\r\n\r\nfunction passInt8( int8 ){\r\n    var size = int8.length;\r\n    var bytes = getUint8View( int8 );\r\n    return encodeBytes( 2, size, undefined, bytes );\r\n}\r\n\r\nfunction passInt32( int32 ){\r\n    var size = int32.length;\r\n    var bytes = encodeInt32( int32 );\r\n    return encodeBytes( 4, size, undefined, bytes );\r\n}\r\n\r\nfunction passString( stringBytes, length ){\r\n    var size = stringBytes.length / length;\r\n    var param = encodeInt32([ length ]);\r\n    var bytes = getUint8View( stringBytes );\r\n    return encodeBytes( 5, size, param, bytes );\r\n}\r\n\r\nfunction runChar( charBytes ){\r\n    var size = charBytes.length;\r\n    var bytes = encodeInt32( encodeRun( charBytes ) );\r\n    return encodeBytes( 6, size, undefined, bytes );\r\n}\r\n\r\nfunction deltaRun( int32 ){\r\n    var size = int32.length;\r\n    var bytes = encodeInt32( encodeDeltaRun( int32 ) );\r\n    return encodeBytes( 8, size, undefined, bytes );\r\n}\r\n\r\nfunction integerRun( float32, factor ){\r\n    var size = float32.length;\r\n    var param = encodeInt32([ factor ]);\r\n    var bytes = encodeInt32( encodeIntegerRun( float32, factor ) );\r\n    return encodeBytes( 9, size, param, bytes );\r\n}\r\n\r\nfunction integerDeltaPacking16( float32, factor ){\r\n    var size = float32.length;\r\n    var param = encodeInt32([ factor ]);\r\n    var bytes = encodeInt16( encodeIntegerDeltaPacking( float32, factor ) );\r\n    return encodeBytes( 10, size, param, bytes );\r\n}\r\n\r\nfunction encodeMmtf( inputDict ){\r\n\r\n    var outputDict = {};\r\n\r\n    // copy some fields over from the input dict\r\n    PassThroughFields.forEach( function( name ){\r\n        if( inputDict[ name ] !== undefined ){\r\n            outputDict[ name ] = inputDict[ name ];\r\n        }\r\n    } );\r\n\r\n    //////////////\r\n    // bond data\r\n\r\n    // encode inter group bond atom indices, i.e. get bytes in big endian order\r\n    if( inputDict.bondAtomList ){\r\n        outputDict.bondAtomList = passInt32( inputDict.bondAtomList );\r\n    }\r\n\r\n    // encode inter group bond orders, i.e. get bytes\r\n    if( inputDict.bondOrderList ){\r\n        outputDict.bondOrderList = passInt8( inputDict.bondOrderList );\r\n    }\r\n\r\n    //////////////\r\n    // atom data\r\n\r\n    // split-list delta & integer encode x, y, z atom coords\r\n    outputDict.xCoordList = integerDeltaPacking16( inputDict.xCoordList, 1000 );\r\n    outputDict.yCoordList = integerDeltaPacking16( inputDict.yCoordList, 1000 );\r\n    outputDict.zCoordList = integerDeltaPacking16( inputDict.zCoordList, 1000 );\r\n\r\n    // split-list delta & integer encode b-factors\r\n    if( inputDict.bFactorList ){\r\n        outputDict.bFactorList = integerDeltaPacking16( inputDict.bFactorList, 100 );\r\n    }\r\n\r\n    // delta & run-length encode atom ids\r\n    if( inputDict.atomIdList ){\r\n        outputDict.atomIdList = deltaRun( inputDict.atomIdList );\r\n    }\r\n\r\n    // run-length encode alternate labels\r\n    if( inputDict.altLocList ){\r\n        outputDict.altLocList = runChar( inputDict.altLocList );\r\n    }\r\n\r\n    // run-length & integer encode occupancies\r\n    if( inputDict.occupancyList ){\r\n        outputDict.occupancyList = integerRun( inputDict.occupancyList, 100 );\r\n    }\r\n\r\n    ///////////////\r\n    // group data\r\n\r\n    // run-length & delta encode group numbers\r\n    outputDict.groupIdList = deltaRun( inputDict.groupIdList );\r\n\r\n    // encode group types, i.e. get int32 array\r\n    outputDict.groupTypeList = passInt32( inputDict.groupTypeList );\r\n\r\n    // encode secondary structure, i.e. get bytes\r\n    if( inputDict.secStructList ){\r\n        outputDict.secStructList = passInt8( inputDict.secStructList, 1 );\r\n    }\r\n\r\n    // run-length encode insertion codes\r\n    if( inputDict.insCodeList ){\r\n        outputDict.insCodeList = runChar( inputDict.insCodeList );\r\n    }\r\n\r\n    // run-length & delta encode sequence indices\r\n    if( inputDict.sequenceIndexList ){\r\n        outputDict.sequenceIndexList = deltaRun( inputDict.sequenceIndexList );\r\n    }\r\n\r\n    ///////////////\r\n    // chain data\r\n\r\n    // encode chain ids, i.e. get bytes\r\n    outputDict.chainIdList = passString( inputDict.chainIdList, 4 );\r\n\r\n    // encode chain names, i.e. get bytes\r\n    if( inputDict.chainNameList ){\r\n        outputDict.chainNameList = passString( inputDict.chainNameList, 4 );\r\n    }\r\n\r\n    return outputDict;\r\n\r\n}\r\n\r\n/**\r\n * @file msgpack-decode\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * msgpack decode module.\r\n * @module MsgpackDecode\r\n */\r\n\r\n/**\r\n * decode binary encoded MessagePack v5 (http://msgpack.org/) data\r\n * @static\r\n * @param  {Uint8Array} buffer - binary encoded MessagePack data\r\n * @return {Object|Array|String|Number|Boolean|null} decoded Messagepack data\r\n */\r\nfunction decodeMsgpack(buffer) {\r\n  // Loosely based on\r\n  // The MIT License (MIT)\r\n  // Copyright (c) 2013 Tim Caswell <tim@creationix.com>\r\n  // https://github.com/creationix/msgpack-js\r\n  var offset = 0;\r\n  var dataView = new DataView(buffer.buffer);\r\n\r\n  /**\r\n   * decode all key-value pairs of a map into an object\r\n   * @param  {Integer} length - number of key-value pairs\r\n   * @return {Object} decoded map\r\n   */\r\n  function map(length) {\r\n    var value = {};\r\n    for (var i = 0; i < length; i++) {\r\n      var key = parse();\r\n      value[key] = parse();\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * decode binary array\r\n   * @param  {Integer} length - number of elements in the array\r\n   * @return {Uint8Array} decoded array\r\n   */\r\n  function bin(length) {\r\n    var value = buffer.subarray(offset, offset + length);\r\n    offset += length;\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * decode string\r\n   * @param  {Integer} length - number string characters\r\n   * @return {String} decoded string\r\n   */\r\n  function str(length) {\r\n    var array = buffer.subarray(offset, offset + length);\r\n    offset += length;\r\n    // limit number of arguments to String.fromCharCode to something\r\n    // browsers can handle, see http://stackoverflow.com/a/22747272\r\n    var chunkSize = 0xffff;\r\n    if(length > chunkSize){\r\n      var c = [];\r\n      for(var i = 0; i < array.length; i += chunkSize) {\r\n        c.push(String.fromCharCode.apply(\r\n          null, array.subarray(i, i + chunkSize)\r\n        ));\r\n      }\r\n      return c.join(\"\");\r\n    }else{\r\n      return String.fromCharCode.apply(null, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * decode array\r\n   * @param  {Integer} length - number of array elements\r\n   * @return {Array} decoded array\r\n   */\r\n  function array(length) {\r\n    var value = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      value[i] = parse();\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * recursively parse the MessagePack data\r\n   * @return {Object|Array|String|Number|Boolean|null} decoded MessagePack data\r\n   */\r\n  function parse() {\r\n    var type = buffer[offset];\r\n    var value, length, extType;\r\n    // Positive FixInt\r\n    if ((type & 0x80) === 0x00) {\r\n      offset++;\r\n      return type;\r\n    }\r\n    // FixMap\r\n    if ((type & 0xf0) === 0x80) {\r\n      length = type & 0x0f;\r\n      offset++;\r\n      return map(length);\r\n    }\r\n    // FixArray\r\n    if ((type & 0xf0) === 0x90) {\r\n      length = type & 0x0f;\r\n      offset++;\r\n      return array(length);\r\n    }\r\n    // FixStr\r\n    if ((type & 0xe0) === 0xa0) {\r\n      length = type & 0x1f;\r\n      offset++;\r\n      return str(length);\r\n    }\r\n    // Negative FixInt\r\n    if ((type & 0xe0) === 0xe0) {\r\n      value = dataView.getInt8(offset);\r\n      offset++;\r\n      return value;\r\n    }\r\n    switch (type) {\r\n    // nil\r\n    case 0xc0:\r\n      offset++;\r\n      return null;\r\n    // 0xc1: (never used, could be employed for padding)\r\n    // false\r\n    case 0xc2:\r\n      offset++;\r\n      return false;\r\n    // true\r\n    case 0xc3:\r\n      offset++;\r\n      return true;\r\n    // bin 8\r\n    case 0xc4:\r\n      length = dataView.getUint8(offset + 1);\r\n      offset += 2;\r\n      return bin(length);\r\n    // bin 16\r\n    case 0xc5:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return bin(length);\r\n    // bin 32\r\n    case 0xc6:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return bin(length);\r\n    // // ext 8\r\n    // case 0xc7:\r\n    //   length = dataView.getUint8(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 2);\r\n    //   offset += 3;\r\n    //   return [extType, bin(length)];\r\n    // // ext 16\r\n    // case 0xc8:\r\n    //   length = dataView.getUint16(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 3);\r\n    //   offset += 4;\r\n    //   return [extType, bin(length)];\r\n    // // ext 32\r\n    // case 0xc9:\r\n    //   length = dataView.getUint32(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 5);\r\n    //   offset += 6;\r\n    //   return [extType, bin(length)];\r\n    // float 32\r\n    case 0xca:\r\n      value = dataView.getFloat32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // float 64\r\n    case 0xcb:\r\n      value = dataView.getFloat64(offset + 1);\r\n      offset += 9;\r\n      return value;\r\n    // uint8\r\n    case 0xcc:\r\n      value = buffer[offset + 1];\r\n      offset += 2;\r\n      return value;\r\n    // uint 16\r\n    case 0xcd:\r\n      value = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return value;\r\n    // uint 32\r\n    case 0xce:\r\n      value = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // // uint64\r\n    // case 0xcf:\r\n    //   // FIXME not available/representable in JS\r\n    //   // largest possible int in JS is 2^53\r\n    //   // value = dataView.getUint64(offset + 1);\r\n    //   offset += 9;\r\n    //   return 0;\r\n    // int 8\r\n    case 0xd0:\r\n      value = dataView.getInt8(offset + 1);\r\n      offset += 2;\r\n      return value;\r\n    // int 16\r\n    case 0xd1:\r\n      value = dataView.getInt16(offset + 1);\r\n      offset += 3;\r\n      return value;\r\n    // int 32\r\n    case 0xd2:\r\n      value = dataView.getInt32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // // int 64\r\n    // case 0xd3:\r\n    //   // FIXME not available/representable in JS\r\n    //   // largest possible int in JS is 2^53\r\n    //   // value = dataView.getInt64(offset + 1);\r\n    //   offset += 9;\r\n    //   return 0;\r\n\r\n    // // fixext 1\r\n    // case 0xd4:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(1)];\r\n    // // fixext 2\r\n    // case 0xd5:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(2)];\r\n    // // fixext 4\r\n    // case 0xd6:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(4)];\r\n    // // fixext 8\r\n    // case 0xd7:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(8)];\r\n    // // fixext 16\r\n    // case 0xd8:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(16)];\r\n    // str 8\r\n    case 0xd9:\r\n      length = dataView.getUint8(offset + 1);\r\n      offset += 2;\r\n      return str(length);\r\n    // str 16\r\n    case 0xda:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return str(length);\r\n    // str 32\r\n    case 0xdb:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return str(length);\r\n    // array 16\r\n    case 0xdc:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return array(length);\r\n    // array 32\r\n    case 0xdd:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return array(length);\r\n    // map 16:\r\n    case 0xde:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return map(length);\r\n    // map 32\r\n    case 0xdf:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return map(length);\r\n    }\r\n\r\n    throw new Error(\"Unknown type 0x\" + type.toString(16));\r\n  }\r\n\r\n  // start the recursive parsing\r\n  return parse();\r\n}\r\n\r\n/**\r\n * Fields shared in encoded and decoded mmtf data objects.\r\n * @typedef {Object} module:MmtfDecode.SharedMmtfData\r\n * @property {String} mmtfVersion - MMTF specification version\r\n * @property {String} mmtfProducer - Program that created the file\r\n * @property {Float[]} [unitCell] - Crystallographic unit cell\r\n * @property {Float} unitCell.0 - x length\r\n * @property {Float} unitCell.1 - y length\r\n * @property {Float} unitCell.2 - z length\r\n * @property {Float} unitCell.3 - alpha angle\r\n * @property {Float} unitCell.4 - beta angle\r\n * @property {Float} unitCell.5 - gamma angle\r\n * @property {String} [spaceGroup] - Hermann-Mauguin symbol\r\n * @property {String} [structureId] - Some reference, e.g. a PDB ID\r\n * @property {String} [title] - Short description\r\n * @property {String} [depositionDate] - Deposition date in YYYY-MM-DD format\r\n * @property {String} [releaseDate] - Release date in YYYY-MM-DD format\r\n * @property {String[]} [experimentalMethods] - Structure determination methods\r\n * @property {Float} [resolution] - Resolution in Å\r\n * @property {Float} [rFree] - R-free value\r\n * @property {Float} [rWork] - R-work value\r\n * @property {Integer} numBonds - Number of bonds\r\n * @property {Integer} numAtoms - Number of atoms\r\n * @property {Integer} numGroups - Number of groups (residues)\r\n * @property {Integer} numChains - Number of chains\r\n * @property {Integer} numModels - Number of models\r\n * @property {Integer[]} chainsPerModel - List of number of chains in each model\r\n * @property {Integer[]} groupsPerChain - List of number of groups in each chain\r\n * @property {Entity[]} [entityList] - List of entity objects\r\n * @property {Integer[]} entityList.chainIndexList - Pointers into chain data fields\r\n * @property {String} entityList.description - Description of the entity\r\n * @property {String} entityList.type - Name of the entity type\r\n * @property {String} entityList.sequence - One letter code sequence\r\n * @property {Assembly[]} [bioAssemblyList] - List of assembly objects\r\n * @property {Transform[]} bioAssemblyList.transformList - List of transform objects\r\n * @property {Integer[]} bioAssemblyList.transformList.chainIndexList - Pointers into chain data fields\r\n * @property {Float[]} bioAssemblyList.transformList.matrix - 4x4 transformation matrix\r\n * @property {Array[]} [ncsOperatorList] - List of ncs operator matrices\r\n * @property {Float[]} ncsOperatorList. - 4x4 transformation matrix\r\n * @property {GroupType[]} groupList - List of groupType objects\r\n * @property {Integer[]} groupList.formalChargeList - List of atom formal charges\r\n * @property {String[]} groupList.elementList - List of elements\r\n * @property {String[]} groupList.atomNameList - List of atom names\r\n * @property {Integer[]} groupList.bondAtomList - List of bonded atom indices\r\n * @property {Integer[]} groupList.bondOrderList - List of bond orders\r\n * @property {String} groupList.groupName - The name of the group\r\n * @property {String} groupList.singleLetterCode - The single letter code\r\n * @property {String} groupList.chemCompType -  The chemical component type\r\n */\r\n\r\n/**\r\n * Encoded mmtf data object. Also includes the fields from {@link module:MmtfDecode.SharedMmtfData}. See MMTF specification on how they are encoded.\r\n * @typedef {Object} module:MmtfDecode.EncodedMmtfData\r\n * @mixes module:MmtfDecode.SharedMmtfData\r\n * @property {Uint8Array} [bondAtomList] - Encoded bonded atom indices\r\n * @property {Uint8Array} [bondOrderList] - Encoded bond orders\r\n * @property {Uint8Array} xCoordBig - Encoded x coordinates in Å, part 1\r\n * @property {Uint8Array} xCoordSmall - Encoded x coordinates in Å, part 2\r\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\r\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\r\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\r\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\r\n * @property {Uint8Array} [bFactorBig] - Encoded B-factors in Å^2, part 1\r\n * @property {Uint8Array} [bFactorSmall] - Encoded B-factors in Å^2, part 2\r\n * @property {Uint8Array} [atomIdList] - Encoded  atom ids\r\n * @property {Uint8Array} [altLocList] - Encoded alternate location labels\r\n * @property {Uint8Array} [occupancyList] - Encoded occupancies\r\n * @property {Uint8Array} groupIdList - Encoded group ids\r\n * @property {Uint8Array} groupTypeList - Encoded group types\r\n * @property {Uint8Array} [secStructList] - Encoded secondary structure codes\r\n * @property {Uint8Array} [insCodeList] - Encoded insertion codes\r\n * @property {Uint8Array} [seuenceIdList] - Encoded sequence ids\r\n * @property {Uint8Array} chainIdList - Encoded chain ids\r\n * @property {Uint8Array} [chainNameList] - Encoded chain names\r\n */\r\n\r\n/**\r\n * Decoded mmtf data object. Also includes fields the from {@link module:MmtfDecode.SharedMmtfData}.\r\n * @typedef {Object} module:MmtfDecode.MmtfData\r\n * @mixes module:MmtfDecode.SharedMmtfData\r\n * @property {Int32Array} [bondAtomList] - List of bonded atom indices\r\n * @property {Uint8Array} [bondOrderList] - List of bond orders\r\n * @property {Float32Array} xCoordList - List of x coordinates in Å\r\n * @property {Float32Array} yCoordList - List of y coordinates in Å\r\n * @property {Float32Array} zCoordList - List of z coordinates in Å\r\n * @property {Float32Array} [bFactorList] - List of B-factors in Å^2\r\n * @property {Int32Array} [atomIdList] - List of atom ids\r\n * @property {Uint8Array} [altLocList] - List of alternate location labels\r\n * @property {Float32Array} [occupancyList] - List of occupancies\r\n * @property {Int32Array} groupIdList - List of group ids\r\n * @property {Int32Array} groupTypeList - List of group types\r\n * @property {Int8Array} [secStructList] - List of secondary structure codes, encoding\r\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\r\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\r\n * @property {Uint8Array} [insCodeList] - List of insertion codes\r\n * @property {Int32Array} [seuenceIdList] - List of sequence ids\r\n * @property {Uint8Array} chainIdList - List of chain ids\r\n * @property {Uint8Array} [chainNameList] - List of chain names\r\n */\r\n\r\n\r\n/**\r\n * [performDecoding description]\r\n * @param  {Integer} bytes [description]\r\n * @param  {Integer} size  [description]\r\n * @param  {Uint8Array} param [description]\r\n * @return {TypedArray}       [description]\r\n */\r\nfunction performDecoding( type, bytes, size, param ){\r\n\r\n    switch( type ){\r\n        case 1:\r\n            return decodeFloat32( bytes );\r\n        case 2:\r\n            return getInt8View( bytes );\r\n        case 3:\r\n            return decodeInt16( bytes );\r\n        case 4:\r\n            return decodeInt32( bytes );\r\n        case 5:\r\n            // var length = decodeInt32( param )[ 0 ];\r\n            return getUint8View( bytes );  // interpret as string array\r\n        case 6:\r\n            // interpret as char array\r\n            return decodeRun( decodeInt32( bytes ), new Uint8Array( size ) );\r\n        case 7:\r\n            return decodeRun( decodeInt32( bytes ) )\r\n        case 8:\r\n            return decodeDeltaRun( decodeInt32( bytes ) );\r\n        case 9:\r\n            return decodeIntegerRun( decodeInt32( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 10:\r\n            return decodeIntegerDeltaPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 11:\r\n            return decodeInteger( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 12:\r\n            return decodeIntegerPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 13:\r\n            return decodeIntegerPacking( getInt8View( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 14:\r\n            return decodePacking( decodeInt16( bytes ) );\r\n        case 15:\r\n            return decodePacking( getInt8View( bytes ) );\r\n    }\r\n\r\n};\r\n\r\n\r\n/**\r\n * Decode MMTF fields\r\n * @static\r\n * @param  {Object} inputDict - encoded MMTF data\r\n * @param  {Object} [params] - decoding parameters\r\n * @param  {String[]} params.ignoreFields - names of optional fields not to decode\r\n * @return {module:MmtfDecode.MmtfData} mmtfData\r\n */\r\nfunction decodeMmtf( inputDict, params ){\r\n\r\n    params = params || {};\r\n    var ignoreFields = params.ignoreFields;\r\n    var outputDict = {};\r\n\r\n    AllFields.forEach( function( name ){\r\n        var ignore = ignoreFields ? ignoreFields.indexOf( name ) !== -1 : false;\r\n        var data = inputDict[ name ];\r\n        if( !ignore && data !== undefined ){\r\n            if( data instanceof Uint8Array ){\r\n                outputDict[ name ] = performDecoding.apply( null, decodeBytes( data ) );\r\n            }else{\r\n                outputDict[ name ] = data;\r\n            }\r\n        }\r\n    } );\r\n\r\n    return outputDict;\r\n\r\n}\r\n\r\n/**\r\n * @file mmtf-traverse\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * mmtf traverse module.\r\n * @module MmtfTraverse\r\n */\r\n\r\n/**\r\n * Converts an array of ASCII codes trimming '\\0' bytes\r\n * @private\r\n * @param  {Array} charCodeArray - array of ASCII char codes\r\n * @return {String} '\\0' trimmed string\r\n */\r\nfunction fromCharCode( charCodeArray ){\r\n    return String.fromCharCode.apply( null, charCodeArray ).replace(/\\0/g, '');\r\n}\r\n\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onModel\r\n * @param {Object} modelData\r\n * @param {Integer} modelData.chainCount - number of chains in the model\r\n * @param {Integer} modelData.modelIndex - index of the model\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onChain\r\n * @param {Object} chainData\r\n * @param {Integer} chainData.groupCount - number of groups in the chain\r\n * @param {Integer} chainData.chainIndex - index of the chain\r\n * @param {Integer} chainData.modelIndex - index of the parent model\r\n * @param {String} chainData.chainId - chain id\r\n * @param {?String} chainData.chainName - additional chain name\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onGroup\r\n * @param {Object} groupData\r\n * @param {Integer} groupData.atomCount - number of atoms in the group\r\n * @param {Integer} groupData.groupIndex - index of the group\r\n * @param {Integer} groupData.chainIndex - index of the parent chain\r\n * @param {Integer} groupData.modelIndex - index of the parent model\r\n * @param {Integer} groupData.groupId - group id (residue number)\r\n * @param {Integer} groupData.groupType - index to an entry in {@link module:MmtfDecode.MmtfData}#groupList\r\n * @param {String} groupData.groupName - name of the group, 0 to 5 characters\r\n * @param {Char} groupData.singleLetterCode - IUPAC single letter code, otherwise 'X', 1 character\r\n * @param {String} groupData.chemCompType - chemical component type from the mmCIF dictionary\r\n * @param {?Integer} groupData.secStruct - sencoded secondary structure |\r\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\r\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\r\n * @param {?Char} groupData.insCode - insertion code\r\n * @param {?Integer} groupData.sequenceIndex - index to the `sequence` property of\r\n *    the corresponding entity, -1 when the entity has no sequence\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onAtom\r\n * @param {Object} atomData\r\n * @param {Integer} atomData.atomIndex - index of the atom\r\n * @param {Integer} atomData.groupIndex - index of the parent group\r\n * @param {Integer} atomData.chainIndex - index of the parent chain\r\n * @param {Integer} atomData.modelIndex - index of the parent model\r\n * @param {?Integer} atomData.atomId - atom id\r\n * @param {String} atomData.element - IUPAC element name, 0 to 3 characters\r\n * @param {String} atomData.atomName - name of the atom, 0 to 5 characters\r\n * @param {Integer} atomData.formalCharge - formal charge of the atom\r\n * @param {Float} atomData.xCoord - x coordinate in Å\r\n * @param {Float} atomData.yCoord - y coordinate in Å\r\n * @param {Float} atomData.zCoord - z coordinate in Å\r\n * @param {?Float} atomData.bFactor - B-factor in in Å^2\r\n * @param {?Char} atomData.altLoc - alternate location identifier\r\n * @param {?Float} atomData.occupancy - occupancy of the atom\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onBond\r\n * @param {Object} bondData\r\n * @param {Integer} bondData.atomIndex1 - index of the first atom\r\n * @param {Integer} bondData.atomIndex2 - index of the secound atom\r\n * @param {Integer} bondData.bondOrder - bond order, allowed values are 1 to 3\r\n */\r\n\r\n\r\n/**\r\n * Traverse the MMTF structure data.\r\n * @static\r\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data\r\n * @param {Object} eventCallbacks\r\n * @param {module:MmtfTraverse.onModel} [eventCallbacks.onModel] - called for each model\r\n * @param {module:MmtfTraverse.onChain} [eventCallbacks.onChain] - called for each chain\r\n * @param {module:MmtfTraverse.onGroup} [eventCallbacks.onGroup] - called for each group\r\n * @param {module:MmtfTraverse.onAtom} [eventCallbacks.onAtom] - called for each atom\r\n * @param {module:MmtfTraverse.onBond} [eventCallbacks.onBond] - called for each bond\r\n * @param {Object} [params] - traversal parameters\r\n * @param {Boolean} [params.firstModelOnly] - traverse only the first model\r\n */\r\nfunction traverseMmtf( mmtfData, eventCallbacks, params ){\r\n\r\n    params = params || {};\r\n\r\n    var firstModelOnly = params.firstModelOnly;\r\n\r\n    // setup callbacks\r\n    var onModel = eventCallbacks.onModel;\r\n    var onChain = eventCallbacks.onChain;\r\n    var onGroup = eventCallbacks.onGroup;\r\n    var onAtom = eventCallbacks.onAtom;\r\n    var onBond = eventCallbacks.onBond;\r\n\r\n    // setup index counters\r\n    var modelIndex = 0;\r\n    var chainIndex = 0;\r\n    var groupIndex = 0;\r\n    var atomIndex = 0;\r\n\r\n    var modelFirstAtomIndex = 0;\r\n    var modelLastAtomIndex = -1;\r\n\r\n    // setup optional fields\r\n    var chainNameList = mmtfData.chainNameList;\r\n    var secStructList = mmtfData.secStructList;\r\n    var insCodeList = mmtfData.insCodeList;\r\n    var sequenceIndexList = mmtfData.sequenceIndexList;\r\n    var atomIdList = mmtfData.atomIdList;\r\n    var bFactorList = mmtfData.bFactorList;\r\n    var altLocList = mmtfData.altLocList;\r\n    var occupancyList = mmtfData.occupancyList;\r\n    var bondAtomList = mmtfData.bondAtomList;\r\n    var bondOrderList = mmtfData.bondOrderList;\r\n\r\n    // hoisted loop variables\r\n    var o, ol, i, j, k, kl;\r\n\r\n    // loop over all models\r\n    for( o = 0, ol = mmtfData.chainsPerModel.length; o < ol; ++o ){\r\n\r\n        if( firstModelOnly && modelIndex > 0 ) break;\r\n\r\n        var modelChainCount = mmtfData.chainsPerModel[ modelIndex ];\r\n\r\n        if( onModel ){\r\n            onModel({\r\n                chainCount: modelChainCount,\r\n                modelIndex: modelIndex\r\n            });\r\n        }\r\n\r\n        for( i = 0; i < modelChainCount; ++i ){\r\n\r\n            var chainGroupCount = mmtfData.groupsPerChain[ chainIndex ];\r\n            if( onChain ){\r\n                var chainId = fromCharCode(\r\n                    mmtfData.chainIdList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\r\n                );\r\n                var chainName = null;\r\n                if( chainNameList ){\r\n                    chainName = fromCharCode(\r\n                        chainNameList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\r\n                    );\r\n                }\r\n                onChain({\r\n                    groupCount: chainGroupCount,\r\n                    chainIndex: chainIndex,\r\n                    modelIndex: modelIndex,\r\n                    chainId: chainId,\r\n                    chainName: chainName\r\n                });\r\n            }\r\n\r\n            for( j = 0; j < chainGroupCount; ++j ){\r\n\r\n                var groupData = mmtfData.groupList[ mmtfData.groupTypeList[ groupIndex ] ];\r\n                var groupAtomCount = groupData.atomNameList.length;\r\n                if( onGroup ){\r\n                    var secStruct = null;\r\n                    if( secStructList ){\r\n                        secStruct = secStructList[ groupIndex ];\r\n                    }\r\n                    var insCode = null;\r\n                    if( mmtfData.insCodeList ){\r\n                        insCode = String.fromCharCode( insCodeList[ groupIndex ] );\r\n                    }\r\n                    var sequenceIndex = null;\r\n                    if( sequenceIndexList ){\r\n                        sequenceIndex = sequenceIndexList[ groupIndex ];\r\n                    }\r\n                    onGroup({\r\n                        atomCount: groupAtomCount,\r\n                        groupIndex: groupIndex,\r\n                        chainIndex: chainIndex,\r\n                        modelIndex: modelIndex,\r\n                        groupId: mmtfData.groupIdList[ groupIndex ],\r\n                        groupType: mmtfData.groupTypeList[ groupIndex ],\r\n                        groupName: groupData.groupName,\r\n                        singleLetterCode: groupData.singleLetterCode,\r\n                        chemCompType: groupData.chemCompType,\r\n                        secStruct: secStruct,\r\n                        insCode: insCode,\r\n                        sequenceIndex: sequenceIndex\r\n                    });\r\n                }\r\n\r\n                for( k = 0; k < groupAtomCount; ++k ){\r\n\r\n                    if( onAtom ){\r\n                        var atomId = null;\r\n                        if( atomIdList ){\r\n                            atomId = atomIdList[ atomIndex ];\r\n                        }\r\n                        var bFactor = null;\r\n                        if( bFactorList ){\r\n                            bFactor = bFactorList[ atomIndex ];\r\n                        }\r\n                        var altLoc = null;\r\n                        if( altLocList ){\r\n                            altLoc = String.fromCharCode( altLocList[ atomIndex ] );\r\n                        }\r\n                        var occupancy = null;\r\n                        if( occupancyList ){\r\n                            occupancy = occupancyList[ atomIndex ];\r\n                        }\r\n                        onAtom({\r\n                            atomIndex: atomIndex,\r\n                            groupIndex: groupIndex,\r\n                            chainIndex: chainIndex,\r\n                            modelIndex: modelIndex,\r\n                            atomId: atomId,\r\n                            element: groupData.elementList[ k ],\r\n                            atomName: groupData.atomNameList[ k ],\r\n                            formalCharge: groupData.formalChargeList[ k ],\r\n                            xCoord: mmtfData.xCoordList[ atomIndex ],\r\n                            yCoord: mmtfData.yCoordList[ atomIndex ],\r\n                            zCoord: mmtfData.zCoordList[ atomIndex ],\r\n                            bFactor: bFactor,\r\n                            altLoc: altLoc,\r\n                            occupancy: occupancy\r\n                        });\r\n                    }\r\n\r\n                    atomIndex += 1;\r\n                }\r\n\r\n                if( onBond ){\r\n                    // intra group bonds\r\n                    var groupBondAtomList = groupData.bondAtomList;\r\n                    for( k = 0, kl = groupData.bondOrderList.length; k < kl; ++k ){\r\n                        onBond({\r\n                            atomIndex1: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 ],\r\n                            atomIndex2: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 + 1 ],\r\n                            bondOrder: groupData.bondOrderList[ k ]\r\n                        });\r\n                    }\r\n                }\r\n\r\n                groupIndex += 1;\r\n            }\r\n\r\n            chainIndex += 1;\r\n        }\r\n\r\n        modelFirstAtomIndex = modelLastAtomIndex + 1;\r\n        modelLastAtomIndex = atomIndex - 1;  // subtract one as it already has been incremented\r\n\r\n        if( onBond ){\r\n            // inter group bonds\r\n            if( bondAtomList ){\r\n                for( k = 0, kl = bondAtomList.length; k < kl; k += 2 ){\r\n                    var atomIndex1 = bondAtomList[ k ];\r\n                    var atomIndex2 = bondAtomList[ k + 1 ];\r\n                    if( ( atomIndex1 >= modelFirstAtomIndex && atomIndex1 <= modelLastAtomIndex ) ||\r\n                        ( atomIndex2 >= modelFirstAtomIndex && atomIndex2 <= modelLastAtomIndex )\r\n                    ){\r\n                        onBond({\r\n                            atomIndex1: atomIndex1,\r\n                            atomIndex2: atomIndex2,\r\n                            bondOrder: bondOrderList ? bondOrderList[ k / 2 ] : null\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        modelIndex += 1;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Version name\r\n * @static\r\n * @type {String}\r\n */\r\nvar version = \"v1.1.0dev\";\r\n\r\n/**\r\n * Version name\r\n * @private\r\n * @type {String}\r\n */\r\nvar baseUrl = \"//mmtf.rcsb.org/v1.0/\";\r\n\r\n/**\r\n * URL of the RCSB webservice to obtain MMTF files\r\n * @static\r\n * @type {String}\r\n */\r\nvar fetchUrl = baseUrl + \"full/\";\r\n\r\n/**\r\n * URL of the RCSB webservice to obtain reduced MMTF files\r\n * @static\r\n * @type {String}\r\n */\r\nvar fetchReducedUrl = baseUrl + \"reduced/\";\r\n\r\n/**\r\n * Encode MMTF fields\r\n * @static\r\n * @param  {module:MmtfDecode.MmtfData} mmtfData - mmtf data\r\n * @return {Uint8Array} encoded MMTF fields\r\n */\r\nfunction encode( mmtfData ){\r\n    return encodeMsgpack( encodeMmtf( mmtfData ) );\r\n}\r\n\r\n/**\r\n * Decode MMTF fields\r\n * @static\r\n * @example\r\n * // bin is Uint8Array containing the mmtf msgpack\r\n * var mmtfData = MMTF.decode( bin );\r\n * console.log( mmtfData.numAtoms );\r\n *\r\n * @param  {Uint8Array|ArrayBuffer|module:MmtfDecode.EncodedMmtfData} binOrDict - binary MessagePack or encoded MMTF data\r\n * @param  {Object} [params] - decoding parameters\r\n * @param {String[]} params.ignoreFields - names of optional fields not to decode\r\n * @return {module:MmtfDecode.MmtfData} mmtfData\r\n */\r\nfunction decode( binOrDict, params ){\r\n\t// make sure binOrDict is not a plain Arraybuffer\r\n    if( binOrDict instanceof ArrayBuffer ){\r\n        binOrDict = new Uint8Array( binOrDict );\r\n    }\r\n\r\n    var inputDict;\r\n    if( binOrDict instanceof Uint8Array ){\r\n        // get dict from msgpack\r\n        inputDict = decodeMsgpack( binOrDict );\r\n    }else{\r\n        // already a dict\r\n        inputDict = binOrDict;\r\n    }\r\n\r\n    return decodeMmtf( inputDict, params );\r\n}\r\n\r\n/**\r\n * @callback module:MMTF.onLoad\r\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data object\r\n */\r\n\r\n/**\r\n * helper method to fetch binary files from an URL\r\n * @private\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {String} baseUrl - URL to fetch from\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction _fetch( pdbid, baseUrl, onLoad, onError ){\r\n    var xhr = new XMLHttpRequest();\r\n    function _onLoad(){\r\n        try{\r\n            var mmtfData = decode( xhr.response );\r\n            onLoad( mmtfData );\r\n        }catch( error ){\r\n            onError( error );\r\n        }\r\n    }\r\n    xhr.addEventListener( \"load\", _onLoad, true );\r\n    xhr.addEventListener( \"error\", onError, true );\r\n    xhr.responseType = \"arraybuffer\";\r\n    xhr.open( \"GET\", baseUrl + pdbid.toUpperCase() );\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Fetch MMTF file from RCSB webservice which contains\r\n * @static\r\n * @example\r\n * MMTF.fetch(\r\n *     \"3PQR\",\r\n *     // onLoad callback\r\n *     function( mmtfData ){ console.log( mmtfData ) },\r\n *     // onError callback\r\n *     function( error ){ console.error( error ) }\r\n * );\r\n *\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction fetch( pdbid, onLoad, onError ){\r\n    _fetch( pdbid, fetchUrl, onLoad, onError );\r\n}\r\n\r\n/**\r\n * Fetch reduced MMTF file from RCSB webservice which contains\r\n * protein C-alpha, nucleotide phosphate and ligand atoms\r\n * @static\r\n * @example\r\n * MMTF.fetchReduced(\r\n *     \"3PQR\",\r\n *     // onLoad callback\r\n *     function( mmtfData ){ console.log( mmtfData ) },\r\n *     // onError callback\r\n *     function( error ){ console.error( error ) }\r\n * );\r\n *\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction fetchReduced( pdbid, onLoad, onError ){\r\n    _fetch( pdbid, fetchReducedUrl, onLoad, onError );\r\n}\r\n\r\nexport { encode, decode, traverseMmtf as traverse, fetch, fetchReduced, version, fetchUrl, fetchReducedUrl, encodeMsgpack, encodeMmtf, decodeMsgpack, decodeMmtf };","/**\r\n * @file Mmtf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { buildUnitcellAssembly, calculateBondsBetween, calculateBondsWithin } from '../structure/structure-utils';\r\nimport { ChemCompHetero } from '../structure/structure-constants';\r\nimport Entity from '../structure/entity';\r\nimport Unitcell from '../symmetry/unitcell';\r\nimport Assembly from '../symmetry/assembly';\r\nimport { decodeMsgpack, decodeMmtf } from '../../lib/mmtf.es6';\r\nconst SstrucMap = {\r\n    '0': 'i'.charCodeAt(0),\r\n    '1': 's'.charCodeAt(0),\r\n    '2': 'h'.charCodeAt(0),\r\n    '3': 'e'.charCodeAt(0),\r\n    '4': 'g'.charCodeAt(0),\r\n    '5': 'b'.charCodeAt(0),\r\n    '6': 't'.charCodeAt(0),\r\n    '7': 'l'.charCodeAt(0),\r\n    '-1': ''.charCodeAt(0) // NA\r\n};\r\nclass MmtfParser extends StructureParser {\r\n    get type() { return 'mmtf'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // https://github.com/rcsb/mmtf\r\n        if (Debug)\r\n            Log.time('MmtfParser._parse ' + this.name);\r\n        let i, il, j, jl, groupData;\r\n        const s = this.structure;\r\n        const sd = decodeMmtf(decodeMsgpack(this.streamer.data));\r\n        // structure header\r\n        const headerFields = [\r\n            'depositionDate', 'releaseDate', 'resolution',\r\n            'rFree', 'rWork', 'experimentalMethods'\r\n        ];\r\n        headerFields.forEach(function (name) {\r\n            if (sd[name] !== undefined) {\r\n                s.header[name] = sd[name];\r\n            }\r\n        });\r\n        let numBonds, numAtoms, numGroups, numChains, numModels;\r\n        let chainsPerModel;\r\n        s.id = sd.structureId;\r\n        s.title = sd.title;\r\n        s.atomStore.addField('formalCharge', 1, 'int8');\r\n        if (this.firstModelOnly || this.asTrajectory) {\r\n            numModels = 1;\r\n            numChains = sd.chainsPerModel[0];\r\n            numGroups = 0;\r\n            for (i = 0, il = numChains; i < il; ++i) {\r\n                numGroups += sd.groupsPerChain[i];\r\n            }\r\n            numAtoms = 0;\r\n            for (i = 0, il = numGroups; i < il; ++i) {\r\n                groupData = sd.groupList[sd.groupTypeList[i]];\r\n                numAtoms += groupData.atomNameList.length;\r\n            }\r\n            numBonds = sd.numBonds;\r\n            chainsPerModel = [numChains];\r\n        }\r\n        else {\r\n            numBonds = sd.numBonds;\r\n            numAtoms = sd.numAtoms;\r\n            numGroups = sd.numGroups;\r\n            numChains = sd.numChains;\r\n            numModels = sd.numModels;\r\n            chainsPerModel = sd.chainsPerModel;\r\n        }\r\n        numBonds += numGroups; // add numGroups to have space for polymer bonds\r\n        //\r\n        if (this.asTrajectory) {\r\n            for (i = 0, il = sd.numModels; i < il; ++i) {\r\n                const frame = new Float32Array(numAtoms * 3);\r\n                const frameAtomOffset = numAtoms * i;\r\n                for (j = 0; j < numAtoms; ++j) {\r\n                    const j3 = j * 3;\r\n                    const offset = j + frameAtomOffset;\r\n                    frame[j3] = sd.xCoordList[offset];\r\n                    frame[j3 + 1] = sd.yCoordList[offset];\r\n                    frame[j3 + 2] = sd.zCoordList[offset];\r\n                }\r\n                s.frames.push(frame);\r\n            }\r\n        }\r\n        // bondStore\r\n        const bAtomIndex1 = new Uint32Array(numBonds);\r\n        const bAtomIndex2 = new Uint32Array(numBonds);\r\n        const bBondOrder = new Uint8Array(numBonds);\r\n        const aGroupIndex = new Uint32Array(numAtoms);\r\n        const aFormalCharge = new Int8Array(numAtoms);\r\n        const gChainIndex = new Uint32Array(numGroups);\r\n        const gAtomOffset = new Uint32Array(numGroups);\r\n        const gAtomCount = new Uint16Array(numGroups);\r\n        const cModelIndex = new Uint16Array(numChains);\r\n        const cGroupOffset = new Uint32Array(numChains);\r\n        const cGroupCount = new Uint32Array(numChains);\r\n        const mChainOffset = new Uint32Array(numModels);\r\n        const mChainCount = new Uint32Array(numModels);\r\n        // set-up model-chain relations\r\n        let chainOffset = 0;\r\n        for (i = 0, il = numModels; i < il; ++i) {\r\n            const modelChainCount = chainsPerModel[i];\r\n            mChainOffset[i] = chainOffset;\r\n            mChainCount[i] = modelChainCount;\r\n            for (j = 0; j < modelChainCount; ++j) {\r\n                cModelIndex[j + chainOffset] = i;\r\n            }\r\n            chainOffset += modelChainCount;\r\n        }\r\n        // set-up chain-residue relations\r\n        const groupsPerChain = sd.groupsPerChain;\r\n        let groupOffset = 0;\r\n        for (i = 0, il = numChains; i < il; ++i) {\r\n            const chainGroupCount = groupsPerChain[i];\r\n            cGroupOffset[i] = groupOffset;\r\n            cGroupCount[i] = chainGroupCount;\r\n            for (j = 0; j < chainGroupCount; ++j) {\r\n                gChainIndex[j + groupOffset] = i;\r\n            }\r\n            groupOffset += chainGroupCount;\r\n        }\r\n        /// ///\r\n        // get data from group map\r\n        let atomOffset = 0;\r\n        let bondOffset = 0;\r\n        for (i = 0, il = numGroups; i < il; ++i) {\r\n            groupData = sd.groupList[sd.groupTypeList[i]];\r\n            const groupAtomCount = groupData.atomNameList.length;\r\n            const groupFormalChargeList = groupData.formalChargeList;\r\n            const groupBondAtomList = groupData.bondAtomList;\r\n            const groupBondOrderList = groupData.bondOrderList;\r\n            for (j = 0, jl = groupBondOrderList.length; j < jl; ++j) {\r\n                bAtomIndex1[bondOffset] = atomOffset + groupBondAtomList[j * 2];\r\n                bAtomIndex2[bondOffset] = atomOffset + groupBondAtomList[j * 2 + 1];\r\n                bBondOrder[bondOffset] = groupBondOrderList[j];\r\n                bondOffset += 1;\r\n            }\r\n            //\r\n            gAtomOffset[i] = atomOffset;\r\n            gAtomCount[i] = groupAtomCount;\r\n            for (j = 0; j < groupAtomCount; ++j) {\r\n                aGroupIndex[atomOffset] = i;\r\n                aFormalCharge[atomOffset] = groupFormalChargeList[j];\r\n                atomOffset += 1;\r\n            }\r\n        }\r\n        // extra bonds\r\n        const bondAtomList = sd.bondAtomList;\r\n        if (bondAtomList) {\r\n            if (sd.bondOrderList) {\r\n                bBondOrder.set(sd.bondOrderList, bondOffset);\r\n            }\r\n            for (i = 0, il = bondAtomList.length; i < il; i += 2) {\r\n                const atomIndex1 = bondAtomList[i];\r\n                const atomIndex2 = bondAtomList[i + 1];\r\n                if (atomIndex1 < numAtoms && atomIndex2 < numAtoms) {\r\n                    bAtomIndex1[bondOffset] = atomIndex1;\r\n                    bAtomIndex2[bondOffset] = atomIndex2;\r\n                    bondOffset += 1;\r\n                }\r\n            }\r\n        }\r\n        //\r\n        s.bondStore.length = bBondOrder.length;\r\n        s.bondStore.count = bondOffset;\r\n        s.bondStore.atomIndex1 = bAtomIndex1;\r\n        s.bondStore.atomIndex2 = bAtomIndex2;\r\n        s.bondStore.bondOrder = bBondOrder;\r\n        s.atomStore.length = numAtoms;\r\n        s.atomStore.count = numAtoms;\r\n        s.atomStore.residueIndex = aGroupIndex;\r\n        s.atomStore.atomTypeId = new Uint16Array(numAtoms);\r\n        s.atomStore.x = sd.xCoordList.subarray(0, numAtoms);\r\n        s.atomStore.y = sd.yCoordList.subarray(0, numAtoms);\r\n        s.atomStore.z = sd.zCoordList.subarray(0, numAtoms);\r\n        s.atomStore.serial = sd.atomIdList.subarray(0, numAtoms);\r\n        s.atomStore.bfactor = sd.bFactorList.subarray(0, numAtoms);\r\n        s.atomStore.altloc = sd.altLocList.subarray(0, numAtoms);\r\n        s.atomStore.occupancy = sd.occupancyList.subarray(0, numAtoms);\r\n        s.atomStore.formalCharge = aFormalCharge;\r\n        s.residueStore.length = numGroups;\r\n        s.residueStore.count = numGroups;\r\n        s.residueStore.chainIndex = gChainIndex;\r\n        s.residueStore.residueTypeId = sd.groupTypeList;\r\n        s.residueStore.atomOffset = gAtomOffset;\r\n        s.residueStore.atomCount = gAtomCount;\r\n        s.residueStore.resno = sd.groupIdList.subarray(0, numGroups);\r\n        s.residueStore.sstruc = sd.secStructList.subarray(0, numGroups);\r\n        s.residueStore.inscode = sd.insCodeList.subarray(0, numGroups);\r\n        s.chainStore.length = numChains;\r\n        s.chainStore.count = numChains;\r\n        s.chainStore.entityIndex = new Uint16Array(numChains);\r\n        s.chainStore.modelIndex = cModelIndex;\r\n        s.chainStore.residueOffset = cGroupOffset;\r\n        s.chainStore.residueCount = cGroupCount;\r\n        s.chainStore.chainname = sd.chainNameList.subarray(0, numChains * 4);\r\n        s.chainStore.chainid = sd.chainIdList.subarray(0, numChains * 4);\r\n        s.modelStore.length = numModels;\r\n        s.modelStore.count = numModels;\r\n        s.modelStore.chainOffset = mChainOffset;\r\n        s.modelStore.chainCount = mChainCount;\r\n        //\r\n        let groupTypeDict = {};\r\n        for (i = 0, il = sd.groupList.length; i < il; ++i) {\r\n            const groupType = sd.groupList[i];\r\n            const atomTypeIdList = [];\r\n            for (j = 0, jl = groupType.atomNameList.length; j < jl; ++j) {\r\n                const element = groupType.elementList[j].toUpperCase();\r\n                const atomname = groupType.atomNameList[j];\r\n                atomTypeIdList.push(s.atomMap.add(atomname, element));\r\n            }\r\n            const chemCompType = groupType.chemCompType.toUpperCase();\r\n            const hetFlag = ChemCompHetero.includes(chemCompType);\r\n            const numGroupBonds = groupType.bondOrderList.length;\r\n            const atomIndices1 = new Array(numGroupBonds);\r\n            const atomIndices2 = new Array(numGroupBonds);\r\n            for (j = 0; j < numGroupBonds; ++j) {\r\n                atomIndices1[j] = groupType.bondAtomList[j * 2];\r\n                atomIndices2[j] = groupType.bondAtomList[j * 2 + 1];\r\n            }\r\n            const bonds = {\r\n                atomIndices1: atomIndices1,\r\n                atomIndices2: atomIndices2,\r\n                bondOrders: groupType.bondOrderList\r\n            };\r\n            groupTypeDict[i] = s.residueMap.add(groupType.groupName, atomTypeIdList, hetFlag, chemCompType, bonds);\r\n        }\r\n        for (i = 0, il = numGroups; i < il; ++i) {\r\n            s.residueStore.residueTypeId[i] = groupTypeDict[s.residueStore.residueTypeId[i]];\r\n        }\r\n        for (i = 0, il = s.atomStore.count; i < il; ++i) {\r\n            const residueIndex = s.atomStore.residueIndex[i];\r\n            const residueType = s.residueMap.list[s.residueStore.residueTypeId[residueIndex]];\r\n            const resAtomOffset = s.residueStore.atomOffset[residueIndex];\r\n            s.atomStore.atomTypeId[i] = residueType.atomTypeIdList[i - resAtomOffset];\r\n        }\r\n        if (sd.secStructList) {\r\n            const secStructLength = sd.secStructList.length;\r\n            for (i = 0, il = s.residueStore.count; i < il; ++i) {\r\n                // with ( i % secStructLength ) secStruct entries are reused\r\n                const sstruc = SstrucMap[s.residueStore.sstruc[i % secStructLength]];\r\n                if (sstruc !== undefined)\r\n                    s.residueStore.sstruc[i] = sstruc;\r\n            }\r\n        }\r\n        //\r\n        if (sd.entityList) {\r\n            sd.entityList.forEach(function (e, i) {\r\n                s.entityList[i] = new Entity(s, i, e.description, e.type, e.chainIndexList);\r\n            });\r\n        }\r\n        if (sd.bioAssemblyList) {\r\n            sd.bioAssemblyList.forEach(function (_assembly, k) {\r\n                const id = k + 1;\r\n                const assembly = new Assembly('' + id);\r\n                s.biomolDict['BU' + id] = assembly;\r\n                let chainToPart = {};\r\n                _assembly.transformList.forEach(function (_transform) {\r\n                    const matrix = new Matrix4().fromArray(_transform.matrix).transpose();\r\n                    const chainList = _transform.chainIndexList.map(function (chainIndex) {\r\n                        let chainname = '';\r\n                        for (let k = 0; k < 4; ++k) {\r\n                            const code = sd.chainNameList[chainIndex * 4 + k];\r\n                            if (code) {\r\n                                chainname += String.fromCharCode(code);\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        return chainname;\r\n                    });\r\n                    const part = chainToPart[chainList.toString()];\r\n                    if (part) {\r\n                        part.matrixList.push(matrix);\r\n                    }\r\n                    else {\r\n                        chainToPart[chainList.toString()] = assembly.addPart([matrix], chainList);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (sd.ncsOperatorList) {\r\n            const ncsName = 'NCS';\r\n            const ncsAssembly = new Assembly(ncsName);\r\n            const ncsPart = ncsAssembly.addPart();\r\n            sd.ncsOperatorList.forEach(function (_operator) {\r\n                const matrix = new Matrix4().fromArray(_operator).transpose();\r\n                ncsPart.matrixList.push(matrix);\r\n            });\r\n            if (ncsPart.matrixList.length > 0) {\r\n                s.biomolDict[ncsName] = ncsAssembly;\r\n            }\r\n        }\r\n        const uc = sd.unitCell;\r\n        if (uc && Array.isArray(uc) && uc[0]) {\r\n            s.unitcell = new Unitcell({\r\n                a: uc[0],\r\n                b: uc[1],\r\n                c: uc[2],\r\n                alpha: uc[3],\r\n                beta: uc[4],\r\n                gamma: uc[5],\r\n                spacegroup: sd.spaceGroup\r\n            });\r\n        }\r\n        else {\r\n            s.unitcell = undefined;\r\n        }\r\n        // calculate backbone bonds\r\n        calculateBondsBetween(s, true);\r\n        // calculate rung bonds\r\n        calculateBondsWithin(s, true);\r\n        s.finalizeAtoms();\r\n        s.finalizeBonds();\r\n        buildUnitcellAssembly(s);\r\n        if (Debug)\r\n            Log.timeEnd('MmtfParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('mmtf', MmtfParser);\r\nexport default MmtfParser;\r\n//# sourceMappingURL=mmtf-parser.js.map","/**\r\n * @file Mol2 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { assignResidueTypeBonds, calculateChainnames, calculateSecondaryStructure, calculateBondsBetween, calculateBondsWithin } from '../structure/structure-utils';\r\nimport StructureParser from './structure-parser';\r\nconst reWhitespace = /\\s+/;\r\nconst bondTypes = {\r\n    '1': 1,\r\n    '2': 2,\r\n    '3': 3,\r\n    'am': 1,\r\n    'ar': 1,\r\n    'du': 1,\r\n    'un': 1,\r\n    'nc': 0 // not connected\r\n};\r\nclass Mol2Parser extends StructureParser {\r\n    get type() { return 'mol2'; }\r\n    _parse() {\r\n        // http://paulbourke.net/dataformats/mol2/\r\n        if (Debug)\r\n            Log.time('Mol2Parser._parse ' + this.name);\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        const firstModelOnly = this.firstModelOnly;\r\n        const asTrajectory = this.asTrajectory;\r\n        const frames = s.frames;\r\n        let doFrames = false;\r\n        let currentFrame, currentCoord;\r\n        const atomMap = s.atomMap;\r\n        const atomStore = s.atomStore;\r\n        atomStore.resize(Math.round(this.streamer.data.length / 60));\r\n        atomStore.addField('partialCharge', 1, 'float32');\r\n        let idx = 0;\r\n        let moleculeLineNo = 0;\r\n        let modelAtomIdxStart = 0;\r\n        let modelIdx = -1;\r\n        let numAtoms = 0;\r\n        let currentRecordType = 0;\r\n        let moleculeRecordType = 1;\r\n        let atomRecordType = 2;\r\n        let bondRecordType = 3;\r\n        const ap1 = s.getAtomProxy();\r\n        const ap2 = s.getAtomProxy();\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i].trim();\r\n                if (line === '' || line[0] === '#')\r\n                    continue;\r\n                if (line[0] === '@') {\r\n                    if (line === '@<TRIPOS>MOLECULE') {\r\n                        currentRecordType = moleculeRecordType;\r\n                        moleculeLineNo = 0;\r\n                        ++modelIdx;\r\n                    }\r\n                    else if (line === '@<TRIPOS>ATOM') {\r\n                        currentRecordType = atomRecordType;\r\n                        modelAtomIdxStart = atomStore.count;\r\n                        if (asTrajectory) {\r\n                            currentCoord = 0;\r\n                            currentFrame = new Float32Array(numAtoms * 3);\r\n                            frames.push(currentFrame);\r\n                            if (modelIdx > 0)\r\n                                doFrames = true;\r\n                        }\r\n                    }\r\n                    else if (line === '@<TRIPOS>BOND') {\r\n                        currentRecordType = bondRecordType;\r\n                    }\r\n                    else {\r\n                        currentRecordType = 0;\r\n                    }\r\n                }\r\n                else if (currentRecordType === moleculeRecordType) {\r\n                    if (moleculeLineNo === 0) {\r\n                        s.title = line;\r\n                        s.id = line;\r\n                    }\r\n                    else if (moleculeLineNo === 1) {\r\n                        const ls = line.split(reWhitespace);\r\n                        numAtoms = parseInt(ls[0]);\r\n                        // num_atoms [num_bonds [num_subst [num_feat [num_sets]]]]\r\n                    }\r\n                    else if (moleculeLineNo === 2) {\r\n                        // const molType = line;\r\n                        // SMALL, BIOPOLYMER, PROTEIN, NUCLEIC_ACID, SACCHARIDE\r\n                    }\r\n                    else if (moleculeLineNo === 3) {\r\n                        // const chargeType = line;\r\n                        // NO_CHARGES, DEL_RE, GASTEIGER, GAST_HUCK, HUCKEL,\r\n                        // PULLMAN, GAUSS80_CHARGES, AMPAC_CHARGES,\r\n                        // MULLIKEN_CHARGES, DICT_ CHARGES, MMFF94_CHARGES,\r\n                        // USER_CHARGES\r\n                    }\r\n                    else if (moleculeLineNo === 4) {\r\n                        // const statusBits = line;\r\n                    }\r\n                    else if (moleculeLineNo === 5) {\r\n                        // const molComment = line;\r\n                    }\r\n                    ++moleculeLineNo;\r\n                }\r\n                else if (currentRecordType === atomRecordType) {\r\n                    const ls = line.split(reWhitespace);\r\n                    if (firstModelOnly && modelIdx > 0)\r\n                        continue;\r\n                    const x = parseFloat(ls[2]);\r\n                    const y = parseFloat(ls[3]);\r\n                    const z = parseFloat(ls[4]);\r\n                    if (asTrajectory) {\r\n                        const j = currentCoord * 3;\r\n                        currentFrame[j + 0] = x;\r\n                        currentFrame[j + 1] = y;\r\n                        currentFrame[j + 2] = z;\r\n                        currentCoord += 1;\r\n                        if (doFrames)\r\n                            continue;\r\n                    }\r\n                    const serial = ls[0];\r\n                    const atomname = ls[1];\r\n                    const element = ls[5].split('.')[0];\r\n                    const resno = ls[6] ? parseInt(ls[6]) : 1;\r\n                    const resname = ls[7] ? ls[7] : '';\r\n                    const partialCharge = ls[8] ? parseFloat(ls[8]) : 0.0;\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[idx] = atomMap.add(atomname, element);\r\n                    atomStore.x[idx] = x;\r\n                    atomStore.y[idx] = y;\r\n                    atomStore.z[idx] = z;\r\n                    atomStore.serial[idx] = serial;\r\n                    atomStore.partialCharge[idx] = partialCharge;\r\n                    sb.addAtom(modelIdx, '', '', resname, resno, 1);\r\n                    idx += 1;\r\n                }\r\n                else if (currentRecordType === bondRecordType) {\r\n                    if (firstModelOnly && modelIdx > 0)\r\n                        continue;\r\n                    if (asTrajectory && modelIdx > 0)\r\n                        continue;\r\n                    const ls = line.split(reWhitespace);\r\n                    // ls[ 0 ] is bond id\r\n                    ap1.index = parseInt(ls[1]) - 1 + modelAtomIdxStart;\r\n                    ap2.index = parseInt(ls[2]) - 1 + modelAtomIdxStart;\r\n                    const order = bondTypes[ls[3]];\r\n                    s.bondStore.addBond(ap1, ap2, order);\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        calculateChainnames(s);\r\n        calculateBondsWithin(s, true);\r\n        calculateBondsBetween(s, true);\r\n        s.finalizeBonds();\r\n        assignResidueTypeBonds(s);\r\n        calculateSecondaryStructure(s);\r\n        if (Debug)\r\n            Log.timeEnd('Mol2Parser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('mol2', Mol2Parser);\r\nexport default Mol2Parser;\r\n//# sourceMappingURL=mol2-parser.js.map","/**\r\n * @file Pdbqt Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport PdbParser from './pdb-parser';\r\n// autodock variant of PDB format with\r\n// - atom partial charges (empty column in pdb format)\r\n// - atom types (bfactor column in pdb format)\r\n// http://autodock.scripps.edu/faqs-help/faq/what-is-the-format-of-a-pdbqt-file\r\nclass PdbqtParser extends PdbParser {\r\n    get type() { return 'pdbqt'; }\r\n}\r\nParserRegistry.add('pdbqt', PdbqtParser);\r\nexport default PdbqtParser;\r\n//# sourceMappingURL=pdbqt-parser.js.map","/**\r\n * @file Pqr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport PdbParser from './pdb-parser';\r\n// http://www.poissonboltzmann.org/docs/file-format-info/\r\nclass PqrParser extends PdbParser {\r\n    get type() { return 'pqr'; }\r\n}\r\nParserRegistry.add('pqr', PqrParser);\r\nexport default PqrParser;\r\n//# sourceMappingURL=pqr-parser.js.map","/**\r\n * @file Sdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { assignResidueTypeBonds } from '../structure/structure-utils';\r\nimport StructureParser from './structure-parser';\r\nconst reItem = /> +<(.+)>/;\r\nclass SdfParser extends StructureParser {\r\n    get type() { return 'sdf'; }\r\n    _parse() {\r\n        // https://en.wikipedia.org/wiki/Chemical_table_file#SDF\r\n        // http://download.accelrys.com/freeware/ctfile-formats/ctfile-formats.zip\r\n        if (Debug)\r\n            Log.time('SdfParser._parse ' + this.name);\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        const firstModelOnly = this.firstModelOnly;\r\n        const asTrajectory = this.asTrajectory;\r\n        const headerLines = this.streamer.peekLines(2);\r\n        s.id = headerLines[0].trim();\r\n        s.title = headerLines[1].trim();\r\n        const frames = s.frames;\r\n        let doFrames = false;\r\n        let currentFrame, currentCoord;\r\n        const atomMap = s.atomMap;\r\n        const atomStore = s.atomStore;\r\n        atomStore.resize(Math.round(this.streamer.data.length / 50));\r\n        atomStore.addField('formalCharge', 1, 'int8');\r\n        const ap1 = s.getAtomProxy();\r\n        const ap2 = s.getAtomProxy();\r\n        let idx = 0;\r\n        let lineNo = 0;\r\n        let modelIdx = 0;\r\n        let modelAtomIdxStart = 0;\r\n        const sdfData = [];\r\n        let currentItem = false;\r\n        let currentData = {};\r\n        let mItem;\r\n        s.extraData.sdf = sdfData;\r\n        let atomCount, bondCount, atomStart, atomEnd, bondStart, bondEnd;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i];\r\n                if (line.substr(0, 4) === '$$$$') {\r\n                    lineNo = -1;\r\n                    ++modelIdx;\r\n                    modelAtomIdxStart = atomStore.count;\r\n                    sdfData.push(currentData);\r\n                    currentData = {};\r\n                    currentItem = false;\r\n                }\r\n                else if (lineNo === 3) {\r\n                    atomCount = parseInt(line.substr(0, 3));\r\n                    bondCount = parseInt(line.substr(3, 3));\r\n                    atomStart = 4;\r\n                    atomEnd = atomStart + atomCount;\r\n                    bondStart = atomEnd;\r\n                    bondEnd = bondStart + bondCount;\r\n                    if (asTrajectory) {\r\n                        currentCoord = 0;\r\n                        currentFrame = new Float32Array(atomCount * 3);\r\n                        frames.push(currentFrame);\r\n                        if (modelIdx > 0)\r\n                            doFrames = true;\r\n                    }\r\n                }\r\n                else if (lineNo >= atomStart && lineNo < atomEnd) {\r\n                    if (firstModelOnly && modelIdx > 0)\r\n                        continue;\r\n                    const x = parseFloat(line.substr(0, 10));\r\n                    const y = parseFloat(line.substr(10, 10));\r\n                    const z = parseFloat(line.substr(20, 10));\r\n                    if (asTrajectory) {\r\n                        const j = currentCoord * 3;\r\n                        currentFrame[j + 0] = x;\r\n                        currentFrame[j + 1] = y;\r\n                        currentFrame[j + 2] = z;\r\n                        currentCoord += 1;\r\n                        if (doFrames)\r\n                            continue;\r\n                    }\r\n                    const element = line.substr(31, 3).trim();\r\n                    const atomname = element + (idx + 1);\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[idx] = atomMap.add(atomname, element);\r\n                    atomStore.x[idx] = x;\r\n                    atomStore.y[idx] = y;\r\n                    atomStore.z[idx] = z;\r\n                    atomStore.serial[idx] = idx;\r\n                    atomStore.formalCharge[idx] = 0;\r\n                    sb.addAtom(modelIdx, '', '', 'HET', 1, 1);\r\n                    idx += 1;\r\n                }\r\n                else if (lineNo >= bondStart && lineNo < bondEnd) {\r\n                    if (firstModelOnly && modelIdx > 0)\r\n                        continue;\r\n                    if (asTrajectory && modelIdx > 0)\r\n                        continue;\r\n                    ap1.index = parseInt(line.substr(0, 3)) - 1 + modelAtomIdxStart;\r\n                    ap2.index = parseInt(line.substr(3, 3)) - 1 + modelAtomIdxStart;\r\n                    const order = parseInt(line.substr(6, 3));\r\n                    s.bondStore.addBond(ap1, ap2, order);\r\n                }\r\n                else if (line.match(/M {2}CHG/)) {\r\n                    const chargeCount = parseInt(line.substr(6, 3));\r\n                    for (let ci = 0, coffset = 10; ci < chargeCount; ++ci, coffset += 8) {\r\n                        const aToken = parseInt(line.substr(coffset, 3));\r\n                        const atomIdx = aToken - 1 + modelAtomIdxStart;\r\n                        const cToken = parseInt(line.substr(coffset + 4, 3));\r\n                        atomStore.formalCharge[atomIdx] = cToken;\r\n                    }\r\n                    // eslint-disable-next-line no-cond-assign\r\n                }\r\n                else if (mItem = line.match(reItem)) {\r\n                    currentItem = mItem[1];\r\n                    currentData[currentItem] = [];\r\n                }\r\n                else if (currentItem !== false && line) {\r\n                    currentData[currentItem].push(line);\r\n                }\r\n                ++lineNo;\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        s.finalizeBonds();\r\n        assignResidueTypeBonds(s);\r\n        if (Debug)\r\n            Log.timeEnd('SdfParser._parse ' + this.name);\r\n    }\r\n    _postProcess() {\r\n        assignResidueTypeBonds(this.structure);\r\n    }\r\n}\r\nParserRegistry.add('sdf', SdfParser);\r\nParserRegistry.add('sd', SdfParser);\r\nParserRegistry.add('mol', SdfParser);\r\nexport default SdfParser;\r\n//# sourceMappingURL=sdf-parser.js.map","/**\r\n * @file Prmtop Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { assignResidueTypeBonds, calculateBondsBetween, calculateBondsWithin, calculateChainnames } from '../structure/structure-utils';\r\nconst amberChargeUnitFactor = 18.2223;\r\nfunction parseIntSubstr(line, start, length) {\r\n    return parseInt(line.substr(start, length).trim());\r\n}\r\nclass PrmtopParser extends StructureParser {\r\n    get type() { return 'prmtop'; }\r\n    _parse() {\r\n        // http://ambermd.org/prmtop.pdf\r\n        // http://ambermd.org/formats.html#topology\r\n        if (Debug)\r\n            Log.time('PrmtopParser._parse ' + this.name);\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        //\r\n        const atomMap = s.atomMap;\r\n        const atomStore = s.atomStore;\r\n        atomStore.addField('partialCharge', 1, 'float32');\r\n        atomStore.addField('radius', 1, 'float32');\r\n        const title = [];\r\n        const pointersDict = {};\r\n        const pointers = [\r\n            'NATOM', 'NTYPES', 'NBONH', 'MBONA', 'NTHETH', 'MTHETA',\r\n            'NPHIH', 'MPHIA', 'NHPARM', 'NPARM', 'NNB', 'NRES',\r\n            'NBONA', 'NTHETA', 'NPHIA', 'NUMBND', 'NUMANG', 'NPTRA',\r\n            'NATYP', 'NPHB', 'IFPERT', 'NBPER', 'NGPER', 'NDPER',\r\n            'MBPER', 'MGPER', 'MDPER', 'IFBOX', 'NMXRS', 'IFCAP',\r\n            'NUMEXTRA', 'NCOPY'\r\n        ];\r\n        pointers.forEach(name => { pointersDict[name] = 0; });\r\n        let atomNames;\r\n        let charges;\r\n        let radii;\r\n        let bAtomIndex1;\r\n        let bAtomIndex2;\r\n        let bBondOrder = new Uint8Array(0);\r\n        let residueLabels;\r\n        let residuePointers;\r\n        let mode;\r\n        // let currentFormat\r\n        let curIdx;\r\n        let bondIdx;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i];\r\n                const lt = line.trim();\r\n                if (!lt) {\r\n                    continue;\r\n                }\r\n                else if (line.startsWith('%FORMAT')) {\r\n                    // currentFormat = lt.substring(8, lt.length - 1)\r\n                }\r\n                else if (line.startsWith('%FLAG')) {\r\n                    const flag = line.substr(5).trim();\r\n                    curIdx = 0;\r\n                    if (flag === 'TITLE') {\r\n                        mode = 0 /* Title */;\r\n                    }\r\n                    else if (flag === 'POINTERS') {\r\n                        mode = 1 /* Pointers */;\r\n                    }\r\n                    else if (flag === 'ATOM_NAME') {\r\n                        mode = 2 /* AtomName */;\r\n                    }\r\n                    else if (flag === 'CHARGE') {\r\n                        mode = 3 /* Charge */;\r\n                    }\r\n                    else if (flag === 'MASS') {\r\n                        mode = 4 /* Mass */;\r\n                    }\r\n                    else if (flag === 'RESIDUE_LABEL') {\r\n                        mode = 5 /* ResidueLabel */;\r\n                    }\r\n                    else if (flag === 'RESIDUE_POINTER') {\r\n                        mode = 6 /* ResiduePointer */;\r\n                    }\r\n                    else if (flag === 'BONDS_INC_HYDROGEN') {\r\n                        bondIdx = 0;\r\n                        mode = 7 /* BondsIncHydrogen */;\r\n                    }\r\n                    else if (flag === 'BONDS_WITHOUT_HYDROGEN') {\r\n                        bondIdx = pointersDict['NBONH'];\r\n                        mode = 8 /* BondsWithoutHydrogen */;\r\n                    }\r\n                    else if (flag === 'RADII') {\r\n                        mode = 9 /* Radii */;\r\n                    }\r\n                    else {\r\n                        mode = undefined;\r\n                    }\r\n                }\r\n                else if (mode === 0 /* Title */) {\r\n                    title.push(lt);\r\n                }\r\n                else if (mode === 1 /* Pointers */) {\r\n                    const n = Math.min(curIdx + 10, 32);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        pointersDict[pointers[curIdx]] = parseInt(line.substr(i * 8, 8).trim());\r\n                    }\r\n                    atomNames = new Array(pointersDict.NATOM);\r\n                    charges = new Float32Array(pointersDict.NATOM);\r\n                    radii = new Float32Array(pointersDict.NATOM);\r\n                    atomStore.resize(pointersDict.NATOM);\r\n                    const bondCount = pointersDict.NBONH + pointersDict.MBONA;\r\n                    bAtomIndex1 = new Uint32Array(bondCount);\r\n                    bAtomIndex2 = new Uint32Array(bondCount);\r\n                    bBondOrder = new Uint8Array(bondCount);\r\n                    residueLabels = new Array(pointersDict.NRES);\r\n                    residuePointers = new Uint32Array(pointersDict.NRES);\r\n                }\r\n                else if (mode === 2 /* AtomName */) {\r\n                    const n = Math.min(curIdx + 20, pointersDict.NATOM);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        atomNames[curIdx] = line.substr(i * 4, 4).trim();\r\n                    }\r\n                }\r\n                else if (mode === 3 /* Charge */) {\r\n                    const n = Math.min(curIdx + 5, pointersDict.NATOM);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        charges[curIdx] = parseFloat(line.substr(i * 16, 16)) / amberChargeUnitFactor;\r\n                    }\r\n                }\r\n                else if (mode === 4 /* Mass */) {\r\n                    // not currently used\r\n                }\r\n                else if (mode === 5 /* ResidueLabel */) {\r\n                    const n = Math.min(curIdx + 20, pointersDict.NRES);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        residueLabels[curIdx] = line.substr(i * 4, 4).trim();\r\n                    }\r\n                }\r\n                else if (mode === 6 /* ResiduePointer */) {\r\n                    const n = Math.min(curIdx + 10, pointersDict.NRES);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        residuePointers[curIdx] = parseIntSubstr(line, i * 8, 8);\r\n                    }\r\n                }\r\n                else if (mode === 7 /* BondsIncHydrogen */) {\r\n                    const n = Math.min(curIdx + 10, pointersDict.NBONH * 3);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        const r = curIdx % 3;\r\n                        if (r === 0) {\r\n                            bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3;\r\n                        }\r\n                        if (r === 1) {\r\n                            bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3;\r\n                            bBondOrder[bondIdx] = 1;\r\n                            ++bondIdx;\r\n                        }\r\n                    }\r\n                }\r\n                else if (mode === 8 /* BondsWithoutHydrogen */) {\r\n                    const n = Math.min(curIdx + 10, pointersDict.MBONA * 3);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        const r = curIdx % 3;\r\n                        if (r === 0) {\r\n                            bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3;\r\n                        }\r\n                        if (r === 1) {\r\n                            bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3;\r\n                            bBondOrder[bondIdx] = 1;\r\n                            ++bondIdx;\r\n                        }\r\n                    }\r\n                }\r\n                else if (mode === 9 /* Radii */) {\r\n                    const n = Math.min(curIdx + 5, pointersDict.NATOM);\r\n                    for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n                        radii[curIdx] = parseFloat(line.substr(i * 16, 16));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        s.title = title.join(' ');\r\n        const atomCount = pointersDict.NATOM;\r\n        let curResIdx = 0;\r\n        let curResname = residueLabels[0];\r\n        let curResno = 1;\r\n        for (let i = 0; i < atomCount; ++i) {\r\n            if (i + 1 === residuePointers[curResIdx + 1]) {\r\n                ++curResIdx;\r\n                curResname = residueLabels[curResIdx];\r\n                curResno = curResIdx + 1;\r\n            }\r\n            atomStore.atomTypeId[i] = atomMap.add(atomNames[i]);\r\n            atomStore.serial[i] = i + 1;\r\n            sb.addAtom(0, '', '', curResname, curResno);\r\n        }\r\n        atomStore.partialCharge.set(charges);\r\n        atomStore.radius.set(radii);\r\n        s.bondStore.length = bBondOrder.length;\r\n        s.bondStore.count = bBondOrder.length;\r\n        s.bondStore.atomIndex1 = bAtomIndex1;\r\n        s.bondStore.atomIndex2 = bAtomIndex2;\r\n        s.bondStore.bondOrder = bBondOrder;\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        s.finalizeBonds();\r\n        calculateBondsWithin(s, true);\r\n        calculateBondsBetween(s, true, true);\r\n        calculateChainnames(s, true);\r\n        assignResidueTypeBonds(s);\r\n        if (Debug)\r\n            Log.timeEnd('PrmtopParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('prmtop', PrmtopParser);\r\nParserRegistry.add('parm7', PrmtopParser);\r\nexport default PrmtopParser;\r\n//# sourceMappingURL=prmtop-parser.js.map","/**\r\n * @file Psf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { assignResidueTypeBonds, calculateBondsBetween, calculateBondsWithin, getChainname } from '../structure/structure-utils';\r\nconst TitleMode = 1;\r\nconst AtomMode = 2;\r\nconst BondMode = 3;\r\nconst AngleMode = 4;\r\nconst DihedralMode = 5;\r\nconst ImproperMode = 6;\r\nconst reWhitespace = /\\s+/;\r\nconst reTitle = /(^\\*|REMARK)*/;\r\nclass PsfParser extends StructureParser {\r\n    get type() { return 'psf'; }\r\n    _parse() {\r\n        // http://www.ks.uiuc.edu/Training/Tutorials/namd/namd-tutorial-unix-html/node23.html\r\n        if (Debug)\r\n            Log.time('PsfParser._parse ' + this.name);\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        //\r\n        const atomMap = s.atomMap;\r\n        const atomStore = s.atomStore;\r\n        atomStore.addField('partialCharge', 1, 'float32');\r\n        const title = [];\r\n        let mode;\r\n        let chainid;\r\n        let lastSegid;\r\n        let idx = 0;\r\n        let chainIdx = 0;\r\n        let bondIdx = 0;\r\n        let bAtomIndex1, bAtomIndex2, bBondOrder;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i].trim();\r\n                if (!line) {\r\n                    mode = undefined;\r\n                    continue;\r\n                }\r\n                if (mode === AtomMode) {\r\n                    const ls = line.split(reWhitespace);\r\n                    const serial = parseInt(ls[0]);\r\n                    const segid = ls[1];\r\n                    const resno = parseInt(ls[2]);\r\n                    const resname = ls[3];\r\n                    const atomname = ls[4];\r\n                    const charge = parseFloat(ls[6]);\r\n                    if (segid !== lastSegid) {\r\n                        chainid = getChainname(chainIdx);\r\n                        ++chainIdx;\r\n                    }\r\n                    atomStore.growIfFull();\r\n                    atomStore.atomTypeId[idx] = atomMap.add(atomname);\r\n                    atomStore.serial[idx] = serial;\r\n                    atomStore.partialCharge[idx] = charge;\r\n                    sb.addAtom(0, chainid, chainid, resname, resno);\r\n                    idx += 1;\r\n                    lastSegid = segid;\r\n                }\r\n                else if (mode === BondMode) {\r\n                    const ls = line.split(reWhitespace);\r\n                    for (let j = 0, m = ls.length; j < m; j += 2) {\r\n                        bAtomIndex1[bondIdx] = parseInt(ls[j]) - 1;\r\n                        bAtomIndex2[bondIdx] = parseInt(ls[j + 1]) - 1;\r\n                        bBondOrder[bondIdx] = 1;\r\n                        bondIdx += 1;\r\n                    }\r\n                }\r\n                else if (mode === TitleMode) {\r\n                    title.push(line.replace(reTitle, '').trim());\r\n                }\r\n                else if (mode === AngleMode) {\r\n                    // currently not used\r\n                }\r\n                else if (mode === DihedralMode) {\r\n                    // currently not used\r\n                }\r\n                else if (mode === ImproperMode) {\r\n                    // currently not used\r\n                }\r\n                else if (line.includes('!NATOM')) {\r\n                    mode = AtomMode;\r\n                    const numAtoms = parseInt(line.split(reWhitespace)[0]);\r\n                    atomStore.resize(numAtoms);\r\n                }\r\n                else if (line.includes('!NBOND')) {\r\n                    mode = BondMode;\r\n                    const numBonds = parseInt(line.split(reWhitespace)[0]);\r\n                    bAtomIndex1 = new Uint32Array(numBonds);\r\n                    bAtomIndex2 = new Uint32Array(numBonds);\r\n                    bBondOrder = new Uint8Array(numBonds);\r\n                }\r\n                else if (line.includes('!NTITLE')) {\r\n                    mode = TitleMode;\r\n                }\r\n                else if (line.includes('!NTHETA')) {\r\n                    mode = AngleMode;\r\n                }\r\n                else if (line.includes('!NPHI')) {\r\n                    mode = DihedralMode;\r\n                }\r\n                else if (line.includes('!NIMPHI')) {\r\n                    mode = ImproperMode;\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        s.title = title.join(' ');\r\n        s.bondStore.length = bBondOrder.length;\r\n        s.bondStore.count = bondIdx;\r\n        s.bondStore.atomIndex1 = bAtomIndex1;\r\n        s.bondStore.atomIndex2 = bAtomIndex2;\r\n        s.bondStore.bondOrder = bBondOrder;\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        s.finalizeBonds();\r\n        calculateBondsWithin(s, true);\r\n        calculateBondsBetween(s, true, true);\r\n        assignResidueTypeBonds(s);\r\n        if (Debug)\r\n            Log.timeEnd('PsfParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('psf', PsfParser);\r\nexport default PsfParser;\r\n//# sourceMappingURL=psf-parser.js.map","/**\r\n * @file Top Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport StructureParser from './structure-parser';\r\nimport { WaterNames } from '../structure/structure-constants';\r\nimport { assignResidueTypeBonds, calculateBondsBetween, calculateBondsWithin, getChainname } from '../structure/structure-utils';\r\nconst reField = /\\[ (.+) \\]/;\r\nconst reWhitespace = /\\s+/;\r\nclass TopParser extends StructureParser {\r\n    get type() { return 'top'; }\r\n    _parse() {\r\n        // http://manual.gromacs.org/online/top.html\r\n        if (Debug)\r\n            Log.time('TopParser._parse ' + this.name);\r\n        const s = this.structure;\r\n        const sb = this.structureBuilder;\r\n        //\r\n        const atomMap = s.atomMap;\r\n        const bondStore = s.bondStore;\r\n        const atomStore = s.atomStore;\r\n        atomStore.addField('partialCharge', 1, 'float32');\r\n        const molecules = [];\r\n        const moleculetypeDict = {};\r\n        let currentMoleculetype;\r\n        let mode;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i];\r\n                let lt = line.trim();\r\n                if (!lt || lt[0] === '*' || lt[0] === ';') {\r\n                    continue;\r\n                }\r\n                if (lt.startsWith('#include')) {\r\n                    throw new Error('TopParser: #include statements not allowed');\r\n                }\r\n                const fieldMatch = line.match(reField);\r\n                if (fieldMatch !== null) {\r\n                    const name = fieldMatch[1];\r\n                    if (name === 'moleculetype') {\r\n                        mode = 2 /* Moleculetype */;\r\n                        currentMoleculetype = {\r\n                            atoms: [],\r\n                            bonds: []\r\n                        };\r\n                    }\r\n                    else if (name === 'atoms') {\r\n                        mode = 3 /* Atoms */;\r\n                    }\r\n                    else if (name === 'bonds') {\r\n                        mode = 4 /* Bonds */;\r\n                    }\r\n                    else if (name === 'system') {\r\n                        mode = 0 /* System */;\r\n                    }\r\n                    else if (name === 'molecules') {\r\n                        mode = 1 /* Molecules */;\r\n                    }\r\n                    else {\r\n                        mode = undefined;\r\n                    }\r\n                    continue;\r\n                }\r\n                const cIdx = lt.indexOf(';');\r\n                if (cIdx !== -1) {\r\n                    lt = lt.substring(0, cIdx).trim();\r\n                }\r\n                if (mode === 2 /* Moleculetype */) {\r\n                    const molName = lt.split(reWhitespace)[0];\r\n                    moleculetypeDict[molName] = currentMoleculetype;\r\n                }\r\n                else if (mode === 3 /* Atoms */) {\r\n                    const ls = lt.split(reWhitespace);\r\n                    currentMoleculetype.atoms.push([\r\n                        parseInt(ls[2]),\r\n                        ls[3],\r\n                        ls[4],\r\n                        parseFloat(ls[6]) // charge\r\n                    ]);\r\n                }\r\n                else if (mode === 4 /* Bonds */) {\r\n                    const ls = lt.split(reWhitespace);\r\n                    currentMoleculetype.bonds.push([\r\n                        parseInt(ls[0]),\r\n                        parseInt(ls[1]) // aj\r\n                    ]);\r\n                }\r\n                else if (mode === 0 /* System */) {\r\n                    s.title = lt;\r\n                }\r\n                else if (mode === 1 /* Molecules */) {\r\n                    const ls = lt.split(reWhitespace);\r\n                    molecules.push([\r\n                        ls[0],\r\n                        parseInt(ls[1]) // count\r\n                    ]);\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        let atomCount = 0;\r\n        let bondCount = 0;\r\n        molecules.forEach(function (val) {\r\n            const [name, molCount] = val;\r\n            const molType = moleculetypeDict[name];\r\n            atomCount += molCount * molType.atoms.length;\r\n            bondCount += molCount * molType.bonds.length;\r\n        });\r\n        atomStore.resize(atomCount);\r\n        bondStore.resize(bondCount);\r\n        let atomIdx = 0;\r\n        let resIdx = 0;\r\n        let chainidIdx = 0;\r\n        let chainnameIdx = 0;\r\n        let bondIdx = 0;\r\n        let atomOffset = 0;\r\n        let lastResno;\r\n        molecules.forEach(function (val) {\r\n            const [name, molCount] = val;\r\n            const molType = moleculetypeDict[name];\r\n            const chainname = getChainname(chainnameIdx);\r\n            for (let i = 0; i < molCount; ++i) {\r\n                lastResno = -1;\r\n                const chainid = WaterNames.includes(name) ? chainname : getChainname(chainidIdx);\r\n                molType.atoms.forEach(function (atomData) {\r\n                    const [resno, resname, atomname, charge] = atomData;\r\n                    if (resno !== lastResno) {\r\n                        ++resIdx;\r\n                    }\r\n                    atomStore.atomTypeId[atomIdx] = atomMap.add(atomname);\r\n                    atomStore.serial[atomIdx] = atomIdx + 1;\r\n                    atomStore.partialCharge[atomIdx] = charge;\r\n                    sb.addAtom(0, chainname, chainid, resname, resIdx + 1);\r\n                    ++atomIdx;\r\n                    lastResno = resno;\r\n                });\r\n                molType.bonds.forEach(function (bondData) {\r\n                    bondStore.atomIndex1[bondIdx] = atomOffset + bondData[0] - 1;\r\n                    bondStore.atomIndex2[bondIdx] = atomOffset + bondData[1] - 1;\r\n                    ++bondIdx;\r\n                });\r\n                ++chainidIdx;\r\n                atomOffset += molType.atoms.length;\r\n            }\r\n            ++chainnameIdx;\r\n        });\r\n        bondStore.count = bondCount;\r\n        sb.finalize();\r\n        s.finalizeAtoms();\r\n        s.finalizeBonds();\r\n        calculateBondsWithin(s, true);\r\n        calculateBondsBetween(s, true, true);\r\n        assignResidueTypeBonds(s);\r\n        if (Debug)\r\n            Log.timeEnd('TopParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('top', TopParser);\r\nexport default TopParser;\r\n//# sourceMappingURL=top-parser.js.map","/**\r\n * @file Trajectory Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Parser from './parser';\r\nimport Frames from '../trajectory/frames';\r\nclass TrajectoryParser extends Parser {\r\n    constructor(streamer, params) {\r\n        super(streamer, params);\r\n        this.frames = new Frames(this.name, this.path);\r\n    }\r\n    get type() { return 'trajectory'; }\r\n    get __objName() { return 'frames'; }\r\n}\r\nexport default TrajectoryParser;\r\n//# sourceMappingURL=trajectory-parser.js.map","/**\r\n * @file Dcd Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { uint8ToString, ensureBuffer } from '../utils';\r\nimport TrajectoryParser from './trajectory-parser';\r\nconst charmmTimeUnitFactor = 20.45482949774598;\r\nclass DcdParser extends TrajectoryParser {\r\n    get type() { return 'dcd'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html\r\n        // The DCD format is structured as follows\r\n        //   (FORTRAN UNFORMATTED, with Fortran data type descriptions):\r\n        // HDR     NSET    ISTRT   NSAVC   5-ZEROS NATOM-NFREAT    DELTA   9-ZEROS\r\n        // `CORD'  #files  step 1  step    zeroes  (zero)          timestep  (zeroes)\r\n        //                         interval\r\n        // C*4     INT     INT     INT     5INT    INT             DOUBLE  9INT\r\n        // ==========================================================================\r\n        // NTITLE          TITLE\r\n        // INT (=2)        C*MAXTITL\r\n        //                 (=32)\r\n        // ==========================================================================\r\n        // NATOM\r\n        // #atoms\r\n        // INT\r\n        // ==========================================================================\r\n        // X(I), I=1,NATOM         (DOUBLE)\r\n        // Y(I), I=1,NATOM\r\n        // Z(I), I=1,NATOM\r\n        // ==========================================================================\r\n        if (Debug)\r\n            Log.time('DcdParser._parse ' + this.name);\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const dv = new DataView(bin);\r\n        const f = this.frames;\r\n        const coordinates = f.coordinates;\r\n        const boxes = f.boxes;\r\n        const header = {};\r\n        let nextPos = 0;\r\n        // header block\r\n        const intView = new Int32Array(bin, 0, 23);\r\n        const ef = intView[0] !== dv.getInt32(0); // endianess flag\r\n        // swap byte order when big endian (84 indicates little endian)\r\n        if (intView[0] !== 84) {\r\n            const n = bin.byteLength;\r\n            for (let i = 0; i < n; i += 4) {\r\n                dv.setFloat32(i, dv.getFloat32(i), true);\r\n            }\r\n        }\r\n        if (intView[0] !== 84) {\r\n            Log.error('dcd bad format, header block start');\r\n        }\r\n        // format indicator, should read 'CORD'\r\n        const formatString = String.fromCharCode(dv.getUint8(4), dv.getUint8(5), dv.getUint8(6), dv.getUint8(7));\r\n        if (formatString !== 'CORD') {\r\n            Log.error('dcd bad format, format string');\r\n        }\r\n        let isCharmm = false;\r\n        let extraBlock = false;\r\n        let fourDims = false;\r\n        // version field in charmm, unused in X-PLOR\r\n        if (intView[22] !== 0) {\r\n            isCharmm = true;\r\n            if (intView[12] !== 0)\r\n                extraBlock = true;\r\n            if (intView[13] === 1)\r\n                fourDims = true;\r\n        }\r\n        header.NSET = intView[2];\r\n        header.ISTART = intView[3];\r\n        header.NSAVC = intView[4];\r\n        header.NAMNF = intView[10];\r\n        if (isCharmm) {\r\n            header.DELTA = dv.getFloat32(44, ef);\r\n        }\r\n        else {\r\n            header.DELTA = dv.getFloat64(44, ef);\r\n        }\r\n        if (intView[22] !== 84) {\r\n            Log.error('dcd bad format, header block end');\r\n        }\r\n        nextPos = nextPos + 21 * 4 + 8;\r\n        // title block\r\n        const titleLength = dv.getInt32(nextPos, ef);\r\n        const titlePos = nextPos + 1;\r\n        if ((titleLength - 4) % 80 !== 0) {\r\n            Log.error('dcd bad format, title block start');\r\n        }\r\n        header.TITLE = uint8ToString(new Uint8Array(bin, titlePos, titleLength));\r\n        if (dv.getInt32(titlePos + titleLength + 4 - 1, ef) !== titleLength) {\r\n            Log.error('dcd bad format, title block end');\r\n        }\r\n        nextPos = nextPos + titleLength + 8;\r\n        // natom block\r\n        if (dv.getInt32(nextPos, ef) !== 4) {\r\n            Log.error('dcd bad format, natom block start');\r\n        }\r\n        header.NATOM = dv.getInt32(nextPos + 4, ef);\r\n        if (dv.getInt32(nextPos + 8, ef) !== 4) {\r\n            Log.error('dcd bad format, natom block end');\r\n        }\r\n        nextPos = nextPos + 4 + 8;\r\n        // fixed atoms block\r\n        if (header.NAMNF > 0) {\r\n            // TODO read coordinates and indices of fixed atoms\r\n            Log.error('dcd format with fixed atoms unsupported, aborting');\r\n            return;\r\n        }\r\n        // frames\r\n        const natom = header.NATOM;\r\n        const natom4 = natom * 4;\r\n        for (let i = 0, n = header.NSET; i < n; ++i) {\r\n            if (extraBlock) {\r\n                nextPos += 4; // block start\r\n                // unitcell: A, alpha, B, beta, gamma, C (doubles)\r\n                const box = new Float32Array(9);\r\n                box[0] = dv.getFloat64(nextPos, ef);\r\n                box[4] = dv.getFloat64(nextPos + 2 * 8, ef);\r\n                box[8] = dv.getFloat64(nextPos + 5 * 8, ef);\r\n                boxes.push(box);\r\n                nextPos += 48;\r\n                nextPos += 4; // block end\r\n            }\r\n            // xyz coordinates\r\n            const coord = new Float32Array(natom * 3);\r\n            for (let j = 0; j < 3; ++j) {\r\n                if (dv.getInt32(nextPos, ef) !== natom4) {\r\n                    Log.error('dcd bad format, coord block start', i, j);\r\n                }\r\n                nextPos += 4; // block start\r\n                const c = new Float32Array(bin, nextPos, natom);\r\n                for (let k = 0; k < natom; ++k) {\r\n                    coord[3 * k + j] = c[k];\r\n                }\r\n                nextPos += natom4;\r\n                if (dv.getInt32(nextPos, ef) !== natom4) {\r\n                    Log.error('dcd bad format, coord block end', i, j);\r\n                }\r\n                nextPos += 4; // block end\r\n            }\r\n            coordinates.push(coord);\r\n            if (fourDims) {\r\n                const bytes = dv.getInt32(nextPos, ef);\r\n                nextPos += 4 + bytes + 4; // block start + skip + block end\r\n            }\r\n        }\r\n        if (header.DELTA) {\r\n            f.deltaTime = header.DELTA * charmmTimeUnitFactor;\r\n        }\r\n        if (header.ISTART >= 1) {\r\n            f.timeOffset = (header.ISTART - 1) * f.deltaTime;\r\n        }\r\n        // console.log(header)\r\n        // console.log(header.TITLE)\r\n        // console.log('isCharmm', isCharmm, 'extraBlock', extraBlock, 'fourDims, fourDims)\r\n        if (Debug)\r\n            Log.timeEnd('DcdParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('dcd', DcdParser);\r\nexport default DcdParser;\r\n//# sourceMappingURL=dcd-parser.js.map","/**\r\n * @file Netcdf Reader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted from https://github.com/cheminfo-js/netcdfjs\r\n * MIT License, Copyright (c) 2016 cheminfo\r\n */\r\nimport IOBuffer from './io-buffer.js';\r\n/**\r\n * Throws a non-valid NetCDF exception if the statement it's true\r\n * @ignore\r\n * @param {boolean} statement - Throws if true\r\n * @param {string} reason - Reason to throw\r\n */\r\nfunction notNetcdf(statement, reason) {\r\n    if (statement) {\r\n        throw new TypeError('Not a valid NetCDF v3.x file: ' + reason);\r\n    }\r\n}\r\n/**\r\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n */\r\nfunction padding(buffer) {\r\n    if ((buffer.offset % 4) !== 0) {\r\n        buffer.skip(4 - (buffer.offset % 4));\r\n    }\r\n}\r\n/**\r\n * Reads the name\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {string} - Name\r\n */\r\nfunction readName(buffer) {\r\n    // Read name\r\n    const nameLength = buffer.readUint32();\r\n    const name = buffer.readChars(nameLength);\r\n    // validate name\r\n    // TODO\r\n    // Apply padding\r\n    padding(buffer);\r\n    return name;\r\n}\r\nconst types = {\r\n    BYTE: 1,\r\n    CHAR: 2,\r\n    SHORT: 3,\r\n    INT: 4,\r\n    FLOAT: 5,\r\n    DOUBLE: 6\r\n};\r\n/**\r\n * Parse a number into their respective type\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {string} - parsed value of the type\r\n */\r\nfunction num2str(type) {\r\n    switch (Number(type)) {\r\n        case types.BYTE:\r\n            return 'byte';\r\n        case types.CHAR:\r\n            return 'char';\r\n        case types.SHORT:\r\n            return 'short';\r\n        case types.INT:\r\n            return 'int';\r\n        case types.FLOAT:\r\n            return 'float';\r\n        case types.DOUBLE:\r\n            return 'double';\r\n        default:\r\n            return 'undefined';\r\n    }\r\n}\r\n/**\r\n * Parse a number type identifier to his size in bytes\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {number} -size of the type\r\n */\r\nfunction num2bytes(type) {\r\n    switch (Number(type)) {\r\n        case types.BYTE:\r\n            return 1;\r\n        case types.CHAR:\r\n            return 1;\r\n        case types.SHORT:\r\n            return 2;\r\n        case types.INT:\r\n            return 4;\r\n        case types.FLOAT:\r\n            return 4;\r\n        case types.DOUBLE:\r\n            return 8;\r\n        default:\r\n            return -1;\r\n    }\r\n}\r\n/**\r\n * Reverse search of num2str\r\n * @ignore\r\n * @param {string} type - string that represents the type\r\n * @return {number} - parsed value of the type\r\n */\r\nfunction str2num(type) {\r\n    switch (String(type)) {\r\n        case 'byte':\r\n            return types.BYTE;\r\n        case 'char':\r\n            return types.CHAR;\r\n        case 'short':\r\n            return types.SHORT;\r\n        case 'int':\r\n            return types.INT;\r\n        case 'float':\r\n            return types.FLOAT;\r\n        case 'double':\r\n            return types.DOUBLE;\r\n        default:\r\n            return -1;\r\n    }\r\n}\r\n/**\r\n * Auxiliary function to read numeric data\r\n * @ignore\r\n * @param {number} size - Size of the element to read\r\n * @param {function} bufferReader - Function to read next value\r\n * @return {Array<number>|number}\r\n */\r\nfunction readNumber(size, bufferReader) {\r\n    if (size !== 1) {\r\n        const numbers = new Array(size);\r\n        for (let i = 0; i < size; i++) {\r\n            numbers[i] = bufferReader();\r\n        }\r\n        return numbers;\r\n    }\r\n    else {\r\n        return bufferReader();\r\n    }\r\n}\r\n/**\r\n * Given a type and a size reads the next element\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} type - Type of the data to read\r\n * @param {number} size - Size of the element to read\r\n * @return {string|Array<number>|number}\r\n */\r\nfunction readType(buffer, type, size) {\r\n    switch (type) {\r\n        case types.BYTE:\r\n            return buffer.readBytes(size);\r\n        case types.CHAR:\r\n            return trimNull(buffer.readChars(size));\r\n        case types.SHORT:\r\n            return readNumber(size, buffer.readInt16.bind(buffer));\r\n        case types.INT:\r\n            return readNumber(size, buffer.readInt32.bind(buffer));\r\n        case types.FLOAT:\r\n            return readNumber(size, buffer.readFloat32.bind(buffer));\r\n        case types.DOUBLE:\r\n            return readNumber(size, buffer.readFloat64.bind(buffer));\r\n        default:\r\n            notNetcdf(true, 'non valid type ' + type);\r\n            return undefined;\r\n    }\r\n}\r\n/**\r\n * Removes null terminate value\r\n * @ignore\r\n * @param {string} value - String to trim\r\n * @return {string} - Trimmed string\r\n */\r\nfunction trimNull(value) {\r\n    if (value.charCodeAt(value.length - 1) === 0) {\r\n        return value.substring(0, value.length - 1);\r\n    }\r\n    return value;\r\n}\r\n// const STREAMING = 4294967295;\r\n/**\r\n * Read data for the given non-record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction nonRecord(buffer, variable) {\r\n    // variable type\r\n    const type = str2num(variable.type);\r\n    // size of the data\r\n    const size = variable.size / num2bytes(type);\r\n    // iterates over the data\r\n    const data = new Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n        data[i] = readType(buffer, type, 1);\r\n    }\r\n    return data;\r\n}\r\n/**\r\n * Read data for the given record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @param {object} recordDimension - Record dimension metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction record(buffer, variable, recordDimension) {\r\n    // variable type\r\n    const type = str2num(variable.type);\r\n    const width = variable.size ? variable.size / num2bytes(type) : 1;\r\n    // size of the data\r\n    // TODO streaming data\r\n    const size = recordDimension.length;\r\n    // iterates over the data\r\n    const data = new Array(size);\r\n    const step = recordDimension.recordStep;\r\n    for (let i = 0; i < size; i++) {\r\n        const currentOffset = buffer.offset;\r\n        data[i] = readType(buffer, type, width);\r\n        buffer.seek(currentOffset + step);\r\n    }\r\n    return data;\r\n}\r\n// Grammar constants\r\nconst ZERO = 0;\r\nconst NC_DIMENSION = 10;\r\nconst NC_VARIABLE = 11;\r\nconst NC_ATTRIBUTE = 12;\r\n/**\r\n * Read the header of the file\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} version - Version of the file\r\n * @return {object} - Object with the fields:\r\n *  * `recordDimension`: Number with the length of record dimension\r\n *  * `dimensions`: List of dimensions\r\n *  * `globalAttributes`: List of global attributes\r\n *  * `variables`: List of variables\r\n */\r\nfunction header(buffer, version) {\r\n    // Length of record dimension\r\n    // sum of the varSize's of all the record variables.\r\n    const header = { recordDimension: { length: buffer.readUint32() } };\r\n    // Version\r\n    header.version = version;\r\n    // List of dimensions\r\n    const dimList = dimensionsList(buffer);\r\n    header.recordDimension.id = dimList.recordId;\r\n    header.recordDimension.name = dimList.recordName;\r\n    header.dimensions = dimList.dimensions;\r\n    // List of global attributes\r\n    header.globalAttributes = attributesList(buffer);\r\n    // List of variables\r\n    const variables = variablesList(buffer, dimList.recordId, version);\r\n    header.variables = variables.variables;\r\n    header.recordDimension.recordStep = variables.recordStep;\r\n    return header;\r\n}\r\n/**\r\n * List of dimensions\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {object} - List of dimensions and record dimension with:\r\n *  * `name`: String with the name of the dimension\r\n *  * `size`: Number with the size of the dimension\r\n */\r\nfunction dimensionsList(buffer) {\r\n    let dimensions, recordId, recordName;\r\n    const dimList = buffer.readUint32();\r\n    if (dimList === ZERO) {\r\n        notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of dimensions');\r\n        return [];\r\n    }\r\n    else {\r\n        notNetcdf((dimList !== NC_DIMENSION), 'wrong tag for list of dimensions');\r\n        // Length of dimensions\r\n        const dimensionSize = buffer.readUint32();\r\n        dimensions = new Array(dimensionSize);\r\n        for (let dim = 0; dim < dimensionSize; dim++) {\r\n            // Read name\r\n            const name = readName(buffer);\r\n            // Read dimension size\r\n            const size = buffer.readUint32();\r\n            if (size === 0) {\r\n                recordId = dim;\r\n                recordName = name;\r\n            }\r\n            dimensions[dim] = {\r\n                name: name,\r\n                size: size\r\n            };\r\n        }\r\n        return {\r\n            dimensions: dimensions,\r\n            recordId: recordId,\r\n            recordName: recordName\r\n        };\r\n    }\r\n}\r\n/**\r\n * List of attributes\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {Array<object>} - List of attributes with:\r\n *  * `name`: String with the name of the attribute\r\n *  * `type`: String with the type of the attribute\r\n *  * `value`: A number or string with the value of the attribute\r\n */\r\nfunction attributesList(buffer) {\r\n    let attributes;\r\n    const gAttList = buffer.readUint32();\r\n    if (gAttList === ZERO) {\r\n        notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of attributes');\r\n        return [];\r\n    }\r\n    else {\r\n        notNetcdf((gAttList !== NC_ATTRIBUTE), 'wrong tag for list of attributes');\r\n        // Length of attributes\r\n        const attributeSize = buffer.readUint32();\r\n        attributes = new Array(attributeSize);\r\n        for (let gAtt = 0; gAtt < attributeSize; gAtt++) {\r\n            // Read name\r\n            const name = readName(buffer);\r\n            // Read type\r\n            const type = buffer.readUint32();\r\n            notNetcdf(((type < 1) || (type > 6)), 'non valid type ' + type);\r\n            // Read attribute\r\n            const size = buffer.readUint32();\r\n            const value = readType(buffer, type, size);\r\n            // Apply padding\r\n            padding(buffer);\r\n            attributes[gAtt] = {\r\n                name: name,\r\n                type: num2str(type),\r\n                value: value\r\n            };\r\n        }\r\n    }\r\n    return attributes;\r\n}\r\n/**\r\n * List of variables\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} recordId - Id if the record dimension\r\n * @param {number} version - Version of the file\r\n * @return {object} - Number of recordStep and list of variables with:\r\n *  * `name`: String with the name of the variable\r\n *  * `dimensions`: Array with the dimension IDs of the variable\r\n *  * `attributes`: Array with the attributes of the variable\r\n *  * `type`: String with the type of the variable\r\n *  * `size`: Number with the size of the variable\r\n *  * `offset`: Number with the offset where of the variable begins\r\n *  * `record`: True if is a record variable, false otherwise\r\n */\r\nfunction variablesList(buffer, recordId, version) {\r\n    const varList = buffer.readUint32();\r\n    let recordStep = 0;\r\n    let variables;\r\n    if (varList === ZERO) {\r\n        notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of variables');\r\n        return [];\r\n    }\r\n    else {\r\n        notNetcdf((varList !== NC_VARIABLE), 'wrong tag for list of variables');\r\n        // Length of variables\r\n        const variableSize = buffer.readUint32();\r\n        variables = new Array(variableSize);\r\n        for (let v = 0; v < variableSize; v++) {\r\n            // Read name\r\n            const name = readName(buffer);\r\n            // Read dimensionality of the variable\r\n            const dimensionality = buffer.readUint32();\r\n            // Index into the list of dimensions\r\n            const dimensionsIds = new Array(dimensionality);\r\n            for (let dim = 0; dim < dimensionality; dim++) {\r\n                dimensionsIds[dim] = buffer.readUint32();\r\n            }\r\n            // Read variables size\r\n            const attributes = attributesList(buffer);\r\n            // Read type\r\n            const type = buffer.readUint32();\r\n            notNetcdf(((type < 1) && (type > 6)), 'non valid type ' + type);\r\n            // Read variable size\r\n            // The 32-bit varSize field is not large enough to contain the\r\n            // size of variables that require more than 2^32 - 4 bytes,\r\n            // so 2^32 - 1 is used in the varSize field for such variables.\r\n            const varSize = buffer.readUint32();\r\n            // Read offset\r\n            let offset = buffer.readUint32();\r\n            if (version === 2) {\r\n                notNetcdf((offset > 0), 'offsets larger than 4GB not supported');\r\n                offset = buffer.readUint32();\r\n            }\r\n            // Count amount of record variables\r\n            if (dimensionsIds[0] === recordId) {\r\n                recordStep += varSize;\r\n            }\r\n            variables[v] = {\r\n                name: name,\r\n                dimensions: dimensionsIds,\r\n                attributes: attributes,\r\n                type: num2str(type),\r\n                size: varSize,\r\n                offset: offset,\r\n                record: (dimensionsIds[0] === recordId)\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        variables: variables,\r\n        recordStep: recordStep\r\n    };\r\n}\r\n/**\r\n * Reads a NetCDF v3.x file\r\n * https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html\r\n */\r\nclass NetcdfReader {\r\n    /**\r\n     * @param {ArrayBuffer} data - ArrayBuffer or any Typed Array with the data\r\n     */\r\n    constructor(data) {\r\n        const buffer = new IOBuffer(data);\r\n        buffer.setBigEndian();\r\n        // Validate that it's a NetCDF file\r\n        notNetcdf((buffer.readChars(3) !== 'CDF'), 'should start with CDF');\r\n        // Check the NetCDF format\r\n        const version = buffer.readByte();\r\n        notNetcdf((version > 2), 'unknown version');\r\n        // Read the header\r\n        this.header = header(buffer, version);\r\n        this.buffer = buffer;\r\n    }\r\n    /**\r\n     * @return {string} - Version for the NetCDF format\r\n     */\r\n    get version() {\r\n        if (this.header.version === 1) {\r\n            return 'classic format';\r\n        }\r\n        else {\r\n            return '64-bit offset format';\r\n        }\r\n    }\r\n    /**\r\n     * @return {object} - Metadata for the record dimension\r\n     *  * `length`: Number of elements in the record dimension\r\n     *  * `id`: Id number in the list of dimensions for the record dimension\r\n     *  * `name`: String with the name of the record dimension\r\n     *  * `recordStep`: Number with the record variables step size\r\n     */\r\n    get recordDimension() {\r\n        return this.header.recordDimension;\r\n    }\r\n    /**\r\n     * @return {Array<object>} - List of dimensions with:\r\n     *  * `name`: String with the name of the dimension\r\n     *  * `size`: Number with the size of the dimension\r\n     */\r\n    get dimensions() {\r\n        return this.header.dimensions;\r\n    }\r\n    /**\r\n     * @return {Array<object>} - List of global attributes with:\r\n     *  * `name`: String with the name of the attribute\r\n     *  * `type`: String with the type of the attribute\r\n     *  * `value`: A number or string with the value of the attribute\r\n     */\r\n    get globalAttributes() {\r\n        return this.header.globalAttributes;\r\n    }\r\n    /**\r\n     * @return {Array<object>} - List of variables with:\r\n     *  * `name`: String with the name of the variable\r\n     *  * `dimensions`: Array with the dimension IDs of the variable\r\n     *  * `attributes`: Array with the attributes of the variable\r\n     *  * `type`: String with the type of the variable\r\n     *  * `size`: Number with the size of the variable\r\n     *  * `offset`: Number with the offset where of the variable begins\r\n     *  * `record`: True if is a record variable, false otherwise\r\n     */\r\n    get variables() {\r\n        return this.header.variables;\r\n    }\r\n    /**\r\n     * Checks if a variable is available\r\n     * @param {string|object} variableName - Name of the variable to check\r\n     * @return {Boolean} - Variable existence\r\n     */\r\n    hasDataVariable(variableName) {\r\n        return this.header.variables.findIndex(function (val) {\r\n            return val.name === variableName;\r\n        }) !== -1;\r\n    }\r\n    /**\r\n     * Retrieves the data for a given variable\r\n     * @param {string|object} variableName - Name of the variable to search or variable object\r\n     * @return {Array} - List with the variable values\r\n     */\r\n    getDataVariable(variableName) {\r\n        let variable;\r\n        if (typeof variableName === 'string') {\r\n            // search the variable\r\n            variable = this.header.variables.find(function (val) {\r\n                return val.name === variableName;\r\n            });\r\n        }\r\n        else {\r\n            variable = variableName;\r\n        }\r\n        // throws if variable not found\r\n        notNetcdf((variable === undefined), 'variable not found');\r\n        // go to the offset position\r\n        this.buffer.seek(variable.offset);\r\n        if (variable.record) {\r\n            // record variable case\r\n            return record(this.buffer, variable, this.header.recordDimension);\r\n        }\r\n        else {\r\n            // non-record variable case\r\n            return nonRecord(this.buffer, variable);\r\n        }\r\n    }\r\n}\r\nexport default NetcdfReader;\r\n//# sourceMappingURL=netcdf-reader.js.map","/**\r\n * @file Nctraj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport TrajectoryParser from './trajectory-parser';\r\nimport NetcdfReader from '../utils/netcdf-reader';\r\nclass NctrajParser extends TrajectoryParser {\r\n    get type() { return 'nctraj'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // http://ambermd.org/netcdf/nctraj.xhtml\r\n        if (Debug)\r\n            Log.time('NctrajParser._parse ' + this.name);\r\n        const netcdfReader = new NetcdfReader(this.streamer.data);\r\n        const f = this.frames;\r\n        const coordinates = f.coordinates;\r\n        const boxes = f.boxes;\r\n        const times = f.times;\r\n        netcdfReader.getDataVariable('coordinates').forEach(function (c) {\r\n            coordinates.push(new Float32Array(c));\r\n        });\r\n        if (netcdfReader.hasDataVariable('cell_lengths')) {\r\n            netcdfReader.getDataVariable('cell_lengths').forEach(function (b) {\r\n                boxes.push(new Float32Array(b));\r\n            });\r\n        }\r\n        if (netcdfReader.hasDataVariable('time')) {\r\n            netcdfReader.getDataVariable('time').forEach(function (t) {\r\n                times.push(t);\r\n            });\r\n        }\r\n        if (times.length >= 1) {\r\n            f.timeOffset = times[0];\r\n        }\r\n        if (times.length >= 2) {\r\n            f.deltaTime = times[1] - times[0];\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('NctrajParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('nctraj', NctrajParser);\r\nParserRegistry.add('ncdf', NctrajParser);\r\nParserRegistry.add('nc', NctrajParser);\r\nexport default NctrajParser;\r\n//# sourceMappingURL=nctraj-parser.js.map","/**\r\n * @file Trr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { ensureBuffer } from '../utils';\r\nimport TrajectoryParser from './trajectory-parser';\r\nclass TrrParser extends TrajectoryParser {\r\n    get type() { return 'trr'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/trrio.cpp\r\n        if (Debug)\r\n            Log.time('TrrParser._parse ' + this.name);\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const dv = new DataView(bin);\r\n        const f = this.frames;\r\n        const coordinates = f.coordinates;\r\n        const boxes = f.boxes;\r\n        const times = f.times;\r\n        let offset = 0;\r\n        while (true) {\r\n            // const magicnum = dv.getInt32(offset)\r\n            // const i1 = dv.getFloat32(offset + 4)\r\n            offset += 8;\r\n            const versionSize = dv.getInt32(offset);\r\n            offset += 4;\r\n            offset += versionSize;\r\n            // const irSize = dv.getInt32(offset)\r\n            // const eSize = dv.getInt32(offset + 4)\r\n            const boxSize = dv.getInt32(offset + 8);\r\n            const virSize = dv.getInt32(offset + 12);\r\n            const presSize = dv.getInt32(offset + 16);\r\n            // const topSize = dv.getInt32(offset + 20)\r\n            // const symSize = dv.getInt32(offset + 24)\r\n            const coordSize = dv.getInt32(offset + 28);\r\n            const velocitySize = dv.getInt32(offset + 32);\r\n            const forceSize = dv.getInt32(offset + 36);\r\n            const natoms = dv.getInt32(offset + 40);\r\n            // const step = dv.getInt32(offset + 44)\r\n            // const nre = dv.getInt32(offset + 48)\r\n            offset += 52;\r\n            const floatSize = boxSize / 9;\r\n            const natoms3 = natoms * 3;\r\n            // let lambda\r\n            if (floatSize === 8) {\r\n                times.push(dv.getFloat64(offset));\r\n                // lambda = dv.getFloat64(offset + 8)\r\n            }\r\n            else {\r\n                times.push(dv.getFloat32(offset));\r\n                // lambda = dv.getFloat32(offset + 4)\r\n            }\r\n            offset += 2 * floatSize;\r\n            if (boxSize) {\r\n                const box = new Float32Array(9);\r\n                if (floatSize === 8) {\r\n                    for (let i = 0; i < 9; ++i) {\r\n                        box[i] = dv.getFloat64(offset) * 10;\r\n                        offset += 8;\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < 9; ++i) {\r\n                        box[i] = dv.getFloat32(offset) * 10;\r\n                        offset += 4;\r\n                    }\r\n                }\r\n                boxes.push(box);\r\n            }\r\n            // ignore, unused\r\n            offset += virSize;\r\n            // ignore, unused\r\n            offset += presSize;\r\n            if (coordSize) {\r\n                let frameCoords;\r\n                if (floatSize === 8) {\r\n                    frameCoords = new Float32Array(natoms3);\r\n                    for (let i = 0; i < natoms3; ++i) {\r\n                        frameCoords[i] = dv.getFloat64(offset) * 10;\r\n                        offset += 8;\r\n                    }\r\n                }\r\n                else {\r\n                    const tmp = new Uint32Array(bin, offset, natoms3);\r\n                    for (let i = 0; i < natoms3; ++i) {\r\n                        const value = tmp[i];\r\n                        tmp[i] = (((value & 0xFF) << 24) | ((value & 0xFF00) << 8) |\r\n                            ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF));\r\n                    }\r\n                    frameCoords = new Float32Array(bin, offset, natoms3);\r\n                    for (let i = 0; i < natoms3; ++i) {\r\n                        frameCoords[i] *= 10;\r\n                        offset += 4;\r\n                    }\r\n                }\r\n                coordinates.push(frameCoords);\r\n            }\r\n            // ignore, unused\r\n            offset += velocitySize;\r\n            // ignore, unused\r\n            offset += forceSize;\r\n            if (offset >= bin.byteLength)\r\n                break;\r\n        }\r\n        if (times.length >= 1) {\r\n            f.timeOffset = times[0];\r\n        }\r\n        if (times.length >= 2) {\r\n            f.deltaTime = times[1] - times[0];\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('TrrParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('trr', TrrParser);\r\nexport default TrrParser;\r\n//# sourceMappingURL=trr-parser.js.map","/**\r\n * @file Xtc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { ensureBuffer } from '../utils';\r\nimport TrajectoryParser from './trajectory-parser';\r\nconst MagicInts = new Uint32Array([\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 10, 12, 16, 20, 25, 32, 40, 50, 64,\r\n    80, 101, 128, 161, 203, 256, 322, 406, 512, 645, 812, 1024, 1290,\r\n    1625, 2048, 2580, 3250, 4096, 5060, 6501, 8192, 10321, 13003,\r\n    16384, 20642, 26007, 32768, 41285, 52015, 65536, 82570, 104031,\r\n    131072, 165140, 208063, 262144, 330280, 416127, 524287, 660561,\r\n    832255, 1048576, 1321122, 1664510, 2097152, 2642245, 3329021,\r\n    4194304, 5284491, 6658042, 8388607, 10568983, 13316085, 16777216\r\n]);\r\nconst FirstIdx = 9;\r\n// const LastIdx = MagicInts.length\r\nfunction sizeOfInt(size) {\r\n    let num = 1;\r\n    let numOfBits = 0;\r\n    while (size >= num && numOfBits < 32) {\r\n        numOfBits++;\r\n        num <<= 1;\r\n    }\r\n    return numOfBits;\r\n}\r\nconst _tmpBytes = new Uint8Array(32);\r\nfunction sizeOfInts(numOfInts, sizes) {\r\n    let numOfBytes = 1;\r\n    let numOfBits = 0;\r\n    _tmpBytes[0] = 1;\r\n    for (let i = 0; i < numOfInts; i++) {\r\n        let bytecnt;\r\n        let tmp = 0;\r\n        for (bytecnt = 0; bytecnt < numOfBytes; bytecnt++) {\r\n            tmp += _tmpBytes[bytecnt] * sizes[i];\r\n            _tmpBytes[bytecnt] = tmp & 0xff;\r\n            tmp >>= 8;\r\n        }\r\n        while (tmp !== 0) {\r\n            _tmpBytes[bytecnt++] = tmp & 0xff;\r\n            tmp >>= 8;\r\n        }\r\n        numOfBytes = bytecnt;\r\n    }\r\n    let num = 1;\r\n    numOfBytes--;\r\n    while (_tmpBytes[numOfBytes] >= num) {\r\n        numOfBits++;\r\n        num *= 2;\r\n    }\r\n    return numOfBits + numOfBytes * 8;\r\n}\r\nfunction decodeBits(buf, cbuf, numOfBits, buf2) {\r\n    const mask = (1 << numOfBits) - 1;\r\n    let lastBB0 = buf2[1];\r\n    let lastBB1 = buf2[2];\r\n    let cnt = buf[0];\r\n    let num = 0;\r\n    while (numOfBits >= 8) {\r\n        lastBB1 = (lastBB1 << 8) | cbuf[cnt++];\r\n        num |= (lastBB1 >> lastBB0) << (numOfBits - 8);\r\n        numOfBits -= 8;\r\n    }\r\n    if (numOfBits > 0) {\r\n        if (lastBB0 < numOfBits) {\r\n            lastBB0 += 8;\r\n            lastBB1 = (lastBB1 << 8) | cbuf[cnt++];\r\n        }\r\n        lastBB0 -= numOfBits;\r\n        num |= (lastBB1 >> lastBB0) & ((1 << numOfBits) - 1);\r\n    }\r\n    num &= mask;\r\n    buf[0] = cnt;\r\n    buf[1] = lastBB0;\r\n    buf[2] = lastBB1;\r\n    return num;\r\n}\r\nconst _tmpIntBytes = new Int32Array(32);\r\nfunction decodeInts(buf, cbuf, numOfInts, numOfBits, sizes, nums, buf2) {\r\n    let numOfBytes = 0;\r\n    _tmpIntBytes[1] = 0;\r\n    _tmpIntBytes[2] = 0;\r\n    _tmpIntBytes[3] = 0;\r\n    while (numOfBits > 8) {\r\n        // this is inversed??? why??? because of the endiannness???\r\n        _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, 8, buf2);\r\n        numOfBits -= 8;\r\n    }\r\n    if (numOfBits > 0) {\r\n        _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, numOfBits, buf2);\r\n    }\r\n    for (let i = numOfInts - 1; i > 0; i--) {\r\n        let num = 0;\r\n        for (let j = numOfBytes - 1; j >= 0; j--) {\r\n            num = (num << 8) | _tmpIntBytes[j];\r\n            const p = (num / sizes[i]) | 0;\r\n            _tmpIntBytes[j] = p;\r\n            num = num - p * sizes[i];\r\n        }\r\n        nums[i] = num;\r\n    }\r\n    nums[0] = (_tmpIntBytes[0] |\r\n        (_tmpIntBytes[1] << 8) |\r\n        (_tmpIntBytes[2] << 16) |\r\n        (_tmpIntBytes[3] << 24));\r\n}\r\nclass XtcParser extends TrajectoryParser {\r\n    get type() { return 'xtc'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/xtcio.cpp\r\n        // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/libxdrf.cpp\r\n        if (Debug)\r\n            Log.time('XtcParser._parse ' + this.name);\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const dv = new DataView(bin);\r\n        const f = this.frames;\r\n        const coordinates = f.coordinates;\r\n        const boxes = f.boxes;\r\n        const times = f.times;\r\n        const minMaxInt = new Int32Array(6);\r\n        const sizeint = new Int32Array(3);\r\n        const bitsizeint = new Int32Array(3);\r\n        const sizesmall = new Uint32Array(3);\r\n        const thiscoord = new Float32Array(3);\r\n        const prevcoord = new Float32Array(3);\r\n        let offset = 0;\r\n        const buf = new Int32Array(3);\r\n        const buf2 = new Uint32Array(buf.buffer);\r\n        while (true) {\r\n            let frameCoords;\r\n            // const magicnum = dv.getInt32(offset)\r\n            const natoms = dv.getInt32(offset + 4);\r\n            // const step = dv.getInt32(offset + 8)\r\n            offset += 12;\r\n            const natoms3 = natoms * 3;\r\n            times.push(dv.getFloat32(offset));\r\n            offset += 4;\r\n            const box = new Float32Array(9);\r\n            for (let i = 0; i < 9; ++i) {\r\n                box[i] = dv.getFloat32(offset) * 10;\r\n                offset += 4;\r\n            }\r\n            boxes.push(box);\r\n            if (natoms <= 9) { // no compression\r\n                frameCoords = new Float32Array(natoms);\r\n                for (let i = 0; i < natoms; ++i) {\r\n                    frameCoords[i] = dv.getFloat32(offset);\r\n                    offset += 4;\r\n                }\r\n            }\r\n            else {\r\n                buf[0] = buf[1] = buf[2] = 0.0;\r\n                sizeint[0] = sizeint[1] = sizeint[2] = 0;\r\n                sizesmall[0] = sizesmall[1] = sizesmall[2] = 0;\r\n                bitsizeint[0] = bitsizeint[1] = bitsizeint[2] = 0;\r\n                thiscoord[0] = thiscoord[1] = thiscoord[2] = 0;\r\n                prevcoord[0] = prevcoord[1] = prevcoord[2] = 0;\r\n                frameCoords = new Float32Array(natoms3);\r\n                let lfp = 0;\r\n                const lsize = dv.getInt32(offset);\r\n                offset += 4;\r\n                const precision = dv.getFloat32(offset);\r\n                offset += 4;\r\n                minMaxInt[0] = dv.getInt32(offset);\r\n                minMaxInt[1] = dv.getInt32(offset + 4);\r\n                minMaxInt[2] = dv.getInt32(offset + 8);\r\n                minMaxInt[3] = dv.getInt32(offset + 12);\r\n                minMaxInt[4] = dv.getInt32(offset + 16);\r\n                minMaxInt[5] = dv.getInt32(offset + 20);\r\n                sizeint[0] = minMaxInt[3] - minMaxInt[0] + 1;\r\n                sizeint[1] = minMaxInt[4] - minMaxInt[1] + 1;\r\n                sizeint[2] = minMaxInt[5] - minMaxInt[2] + 1;\r\n                offset += 24;\r\n                let bitsize;\r\n                if ((sizeint[0] | sizeint[1] | sizeint[2]) > 0xffffff) {\r\n                    bitsizeint[0] = sizeOfInt(sizeint[0]);\r\n                    bitsizeint[1] = sizeOfInt(sizeint[1]);\r\n                    bitsizeint[2] = sizeOfInt(sizeint[2]);\r\n                    bitsize = 0; // flag the use of large sizes\r\n                }\r\n                else {\r\n                    bitsize = sizeOfInts(3, sizeint);\r\n                }\r\n                let smallidx = dv.getInt32(offset);\r\n                offset += 4;\r\n                // if (smallidx == 0) {alert(\"Undocumented error 1\"); return;}\r\n                // let tmpIdx = smallidx + 8\r\n                // const maxidx = (LastIdx < tmpIdx) ? LastIdx : tmpIdx\r\n                // const minidx = maxidx - 8  // often this equal smallidx\r\n                let tmpIdx = smallidx - 1;\r\n                tmpIdx = (FirstIdx > tmpIdx) ? FirstIdx : tmpIdx;\r\n                let smaller = (MagicInts[tmpIdx] / 2) | 0;\r\n                let smallnum = (MagicInts[smallidx] / 2) | 0;\r\n                sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx];\r\n                // larger = MagicInts[maxidx]\r\n                let adz = Math.ceil(dv.getInt32(offset) / 4) * 4;\r\n                offset += 4;\r\n                // if (tmpIdx == 0) {alert(\"Undocumented error 2\"); return;}\r\n                // buf = new Int32Array(bin, offset);\r\n                // buf8 = new Uint8Array(bin, offset);\r\n                // tmpIdx += 3; rndup = tmpIdx%4;\r\n                // for (i=tmpIdx+rndup-1; i>=tmpIdx; i--) buf8[i] = 0;\r\n                // now unpack buf2...\r\n                const invPrecision = 1.0 / precision;\r\n                let run = 0;\r\n                let i = 0;\r\n                const buf8 = new Uint8Array(bin, offset); // 229...\r\n                thiscoord[0] = thiscoord[1] = thiscoord[2] = 0;\r\n                while (i < lsize) {\r\n                    if (bitsize === 0) {\r\n                        thiscoord[0] = decodeBits(buf, buf8, bitsizeint[0], buf2);\r\n                        thiscoord[1] = decodeBits(buf, buf8, bitsizeint[1], buf2);\r\n                        thiscoord[2] = decodeBits(buf, buf8, bitsizeint[2], buf2);\r\n                    }\r\n                    else {\r\n                        decodeInts(buf, buf8, 3, bitsize, sizeint, thiscoord, buf2);\r\n                    }\r\n                    i++;\r\n                    thiscoord[0] += minMaxInt[0];\r\n                    thiscoord[1] += minMaxInt[1];\r\n                    thiscoord[2] += minMaxInt[2];\r\n                    prevcoord[0] = thiscoord[0];\r\n                    prevcoord[1] = thiscoord[1];\r\n                    prevcoord[2] = thiscoord[2];\r\n                    const flag = decodeBits(buf, buf8, 1, buf2);\r\n                    let isSmaller = 0;\r\n                    if (flag === 1) {\r\n                        run = decodeBits(buf, buf8, 5, buf2);\r\n                        isSmaller = run % 3;\r\n                        run -= isSmaller;\r\n                        isSmaller--;\r\n                    }\r\n                    // if ((lfp-ptrstart)+run > size3){\r\n                    //   fprintf(stderr, \"(xdrfile error) Buffer overrun during decompression.\\n\");\r\n                    //   return 0;\r\n                    // }\r\n                    if (run > 0) {\r\n                        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0;\r\n                        for (let k = 0; k < run; k += 3) {\r\n                            decodeInts(buf, buf8, 3, smallidx, sizesmall, thiscoord, buf2);\r\n                            i++;\r\n                            thiscoord[0] += prevcoord[0] - smallnum;\r\n                            thiscoord[1] += prevcoord[1] - smallnum;\r\n                            thiscoord[2] += prevcoord[2] - smallnum;\r\n                            if (k === 0) {\r\n                                // interchange first with second atom for\r\n                                // better compression of water molecules\r\n                                let tmpSwap = thiscoord[0];\r\n                                thiscoord[0] = prevcoord[0];\r\n                                prevcoord[0] = tmpSwap;\r\n                                tmpSwap = thiscoord[1];\r\n                                thiscoord[1] = prevcoord[1];\r\n                                prevcoord[1] = tmpSwap;\r\n                                tmpSwap = thiscoord[2];\r\n                                thiscoord[2] = prevcoord[2];\r\n                                prevcoord[2] = tmpSwap;\r\n                                frameCoords[lfp++] = prevcoord[0] * invPrecision;\r\n                                frameCoords[lfp++] = prevcoord[1] * invPrecision;\r\n                                frameCoords[lfp++] = prevcoord[2] * invPrecision;\r\n                            }\r\n                            else {\r\n                                prevcoord[0] = thiscoord[0];\r\n                                prevcoord[1] = thiscoord[1];\r\n                                prevcoord[2] = thiscoord[2];\r\n                            }\r\n                            frameCoords[lfp++] = thiscoord[0] * invPrecision;\r\n                            frameCoords[lfp++] = thiscoord[1] * invPrecision;\r\n                            frameCoords[lfp++] = thiscoord[2] * invPrecision;\r\n                        }\r\n                    }\r\n                    else {\r\n                        frameCoords[lfp++] = thiscoord[0] * invPrecision;\r\n                        frameCoords[lfp++] = thiscoord[1] * invPrecision;\r\n                        frameCoords[lfp++] = thiscoord[2] * invPrecision;\r\n                    }\r\n                    smallidx += isSmaller;\r\n                    if (isSmaller < 0) {\r\n                        smallnum = smaller;\r\n                        if (smallidx > FirstIdx) {\r\n                            smaller = (MagicInts[smallidx - 1] / 2) | 0;\r\n                        }\r\n                        else {\r\n                            smaller = 0;\r\n                        }\r\n                    }\r\n                    else if (isSmaller > 0) {\r\n                        smaller = smallnum;\r\n                        smallnum = (MagicInts[smallidx] / 2) | 0;\r\n                    }\r\n                    sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx];\r\n                    if (sizesmall[0] === 0 || sizesmall[1] === 0 || sizesmall[2] === 0) {\r\n                        console.error('(xdrfile error) Undefined error.');\r\n                        return;\r\n                    }\r\n                }\r\n                offset += adz;\r\n            }\r\n            for (let c = 0; c < natoms3; c++) {\r\n                frameCoords[c] *= 10;\r\n            }\r\n            coordinates.push(frameCoords);\r\n            if (offset >= bin.byteLength)\r\n                break;\r\n        }\r\n        if (times.length >= 1) {\r\n            f.timeOffset = times[0];\r\n        }\r\n        if (times.length >= 2) {\r\n            f.deltaTime = times[1] - times[0];\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('XtcParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('xtc', XtcParser);\r\nexport default XtcParser;\r\n//# sourceMappingURL=xtc-parser.js.map","/**\r\n * @file Volume Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { defaults } from '../utils';\r\nimport Parser from './parser';\r\nimport Volume from '../surface/volume';\r\nclass VolumeParser extends Parser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.volume = new Volume(this.name, this.path);\r\n        this.voxelSize = defaults(p.voxelSize, 1);\r\n    }\r\n    get type() { return 'volume'; }\r\n    get __objName() { return 'volume'; }\r\n    _afterParse() {\r\n        this.volume.setMatrix(this.getMatrix());\r\n        super._afterParse();\r\n    }\r\n    getMatrix() {\r\n        return new Matrix4();\r\n    }\r\n}\r\nexport default VolumeParser;\r\n//# sourceMappingURL=volume-parser.js.map","/**\r\n * @file Cube Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4, Vector3 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport VolumeParser from './volume-parser';\r\n// @author Johanna Tiemann <johanna.tiemann@googlemail.com>\r\n// @author Alexander Rose <alexander.rose@weirdbyte.de>\r\nconst reWhitespace = /\\s+/;\r\nconst reScientificNotation = /-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g;\r\nconst bohrToAngstromFactor = 0.529177210859;\r\nclass CubeParser extends VolumeParser {\r\n    get type() { return 'cube'; }\r\n    _parse() {\r\n        // http://paulbourke.net/dataformats/cube/\r\n        if (Debug)\r\n            Log.time('CubeParser._parse ' + this.name);\r\n        const v = this.volume;\r\n        const headerLines = this.streamer.peekLines(6);\r\n        const header = {};\r\n        const scaleFactor = bohrToAngstromFactor * this.voxelSize;\r\n        function h(k, l) {\r\n            var field = headerLines[k].trim().split(reWhitespace)[l];\r\n            return parseFloat(field);\r\n        }\r\n        header.atomCount = Math.abs(h(2, 0)); // Number of atoms\r\n        header.originX = h(2, 1) * bohrToAngstromFactor; // Position of origin of volumetric data\r\n        header.originY = h(2, 2) * bohrToAngstromFactor;\r\n        header.originZ = h(2, 3) * bohrToAngstromFactor;\r\n        header.NVX = h(3, 0); // Number of voxels\r\n        header.NVY = h(4, 0);\r\n        header.NVZ = h(5, 0);\r\n        header.basisX = new Vector3(h(3, 1), h(3, 2), h(3, 3))\r\n            .multiplyScalar(scaleFactor);\r\n        header.basisY = new Vector3(h(4, 1), h(4, 2), h(4, 3))\r\n            .multiplyScalar(scaleFactor);\r\n        header.basisZ = new Vector3(h(5, 1), h(5, 2), h(5, 3))\r\n            .multiplyScalar(scaleFactor);\r\n        const data = new Float32Array(header.NVX * header.NVY * header.NVZ);\r\n        let count = 0;\r\n        let lineNo = 0;\r\n        const oribitalFlag = h(2, 0) > 0 ? 0 : 1;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i].trim();\r\n                if (line !== '' && lineNo >= header.atomCount + 6 + oribitalFlag) {\r\n                    const m = line.match(reScientificNotation);\r\n                    for (let j = 0, lj = m.length; j < lj; ++j) {\r\n                        data[count] = parseFloat(m[j]);\r\n                        ++count;\r\n                    }\r\n                }\r\n                ++lineNo;\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        v.header = header;\r\n        v.setData(data, header.NVZ, header.NVY, header.NVX);\r\n        if (Debug)\r\n            Log.timeEnd('CubeParser._parse ' + this.name);\r\n    }\r\n    getMatrix() {\r\n        const h = this.volume.header;\r\n        const matrix = new Matrix4();\r\n        matrix.multiply(new Matrix4().makeTranslation(h.originX, h.originY, h.originZ));\r\n        matrix.multiply(new Matrix4().makeBasis(h.basisZ, h.basisY, h.basisX));\r\n        return matrix;\r\n    }\r\n}\r\nParserRegistry.add('cub', CubeParser);\r\nParserRegistry.add('cube', CubeParser);\r\nexport default CubeParser;\r\n//# sourceMappingURL=cube-parser.js.map","/**\r\n * @file Dsn6 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { ensureBuffer } from '../utils';\r\nimport { degToRad } from '../math/math-utils';\r\nimport VolumeParser from './volume-parser';\r\nclass Dsn6Parser extends VolumeParser {\r\n    get type() { return 'dsn6'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // DSN6 http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\n        // BRIX http://svn.cgl.ucsf.edu/svn/chimera/trunk/libs/VolumeData/dsn6/brix-1.html\r\n        if (Debug)\r\n            Log.time('Dsn6Parser._parse ' + this.name);\r\n        const v = this.volume;\r\n        const header = {};\r\n        let divisor, summand;\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const intView = new Int16Array(bin);\r\n        const byteView = new Uint8Array(bin);\r\n        const brixStr = String.fromCharCode.apply(null, byteView.subarray(0, 512));\r\n        if (brixStr.startsWith(':-)')) {\r\n            header.xStart = parseInt(brixStr.substr(10, 5)); // NXSTART\r\n            header.yStart = parseInt(brixStr.substr(15, 5));\r\n            header.zStart = parseInt(brixStr.substr(20, 5));\r\n            header.xExtent = parseInt(brixStr.substr(32, 5)); // NX\r\n            header.yExtent = parseInt(brixStr.substr(38, 5));\r\n            header.zExtent = parseInt(brixStr.substr(42, 5));\r\n            header.xRate = parseInt(brixStr.substr(52, 5)); // MX\r\n            header.yRate = parseInt(brixStr.substr(58, 5));\r\n            header.zRate = parseInt(brixStr.substr(62, 5));\r\n            header.xlen = parseFloat(brixStr.substr(73, 10)) * this.voxelSize;\r\n            header.ylen = parseFloat(brixStr.substr(83, 10)) * this.voxelSize;\r\n            header.zlen = parseFloat(brixStr.substr(93, 10)) * this.voxelSize;\r\n            header.alpha = parseFloat(brixStr.substr(103, 10));\r\n            header.beta = parseFloat(brixStr.substr(113, 10));\r\n            header.gamma = parseFloat(brixStr.substr(123, 10));\r\n            divisor = parseFloat(brixStr.substr(138, 12)) / 100;\r\n            summand = parseInt(brixStr.substr(155, 8));\r\n            header.sigma = parseFloat(brixStr.substr(170, 12)) * 100;\r\n        }\r\n        else {\r\n            // swap byte order when big endian\r\n            if (intView[18] !== 100) {\r\n                for (let i = 0, n = intView.length; i < n; ++i) {\r\n                    const val = intView[i];\r\n                    intView[i] = ((val & 0xff) << 8) | ((val >> 8) & 0xff);\r\n                }\r\n            }\r\n            header.xStart = intView[0]; // NXSTART\r\n            header.yStart = intView[1];\r\n            header.zStart = intView[2];\r\n            header.xExtent = intView[3]; // NX\r\n            header.yExtent = intView[4];\r\n            header.zExtent = intView[5];\r\n            header.xRate = intView[6]; // MX\r\n            header.yRate = intView[7];\r\n            header.zRate = intView[8];\r\n            const factor = 1 / intView[17];\r\n            const scalingFactor = factor * this.voxelSize;\r\n            header.xlen = intView[9] * scalingFactor;\r\n            header.ylen = intView[10] * scalingFactor;\r\n            header.zlen = intView[11] * scalingFactor;\r\n            header.alpha = intView[12] * factor;\r\n            header.beta = intView[13] * factor;\r\n            header.gamma = intView[14] * factor;\r\n            divisor = intView[15] / 100;\r\n            summand = intView[16];\r\n            header.gamma = intView[14] * factor;\r\n        }\r\n        v.header = header;\r\n        if (Debug)\r\n            Log.log(header, divisor, summand);\r\n        const data = new Float32Array(header.xExtent * header.yExtent * header.zExtent);\r\n        let offset = 512;\r\n        const xBlocks = Math.ceil(header.xExtent / 8);\r\n        const yBlocks = Math.ceil(header.yExtent / 8);\r\n        const zBlocks = Math.ceil(header.zExtent / 8);\r\n        // loop over blocks\r\n        for (var zz = 0; zz < zBlocks; ++zz) {\r\n            for (var yy = 0; yy < yBlocks; ++yy) {\r\n                for (var xx = 0; xx < xBlocks; ++xx) {\r\n                    // loop inside block\r\n                    for (var k = 0; k < 8; ++k) {\r\n                        var z = 8 * zz + k;\r\n                        for (var j = 0; j < 8; ++j) {\r\n                            var y = 8 * yy + j;\r\n                            for (var i = 0; i < 8; ++i) {\r\n                                var x = 8 * xx + i;\r\n                                // check if remaining slice-part contains data\r\n                                if (x < header.xExtent && y < header.yExtent && z < header.zExtent) {\r\n                                    var idx = ((((x * header.yExtent) + y) * header.zExtent) + z);\r\n                                    data[idx] = (byteView[offset] - summand) / divisor;\r\n                                    ++offset;\r\n                                }\r\n                                else {\r\n                                    offset += 8 - i;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        v.setData(data, header.zExtent, header.yExtent, header.xExtent);\r\n        if (header.sigma) {\r\n            v.setStats(undefined, undefined, undefined, header.sigma);\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('Dsn6Parser._parse ' + this.name);\r\n    }\r\n    getMatrix() {\r\n        const h = this.volume.header;\r\n        const basisX = [\r\n            h.xlen,\r\n            0,\r\n            0\r\n        ];\r\n        const basisY = [\r\n            h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n            h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        const basisZ = [\r\n            h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n            h.zlen * (Math.cos(Math.PI / 180.0 * h.alpha) -\r\n                Math.cos(Math.PI / 180.0 * h.gamma) *\r\n                    Math.cos(Math.PI / 180.0 * h.beta)) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        basisZ[2] = Math.sqrt(h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n            Math.sin(Math.PI / 180.0 * h.beta) - basisZ[1] * basisZ[1]);\r\n        const basis = [[], basisX, basisY, basisZ];\r\n        const nxyz = [0, h.xRate, h.yRate, h.zRate];\r\n        const mapcrs = [0, 1, 2, 3];\r\n        const matrix = new Matrix4();\r\n        matrix.set(basis[mapcrs[1]][0] / nxyz[mapcrs[1]], basis[mapcrs[2]][0] / nxyz[mapcrs[2]], basis[mapcrs[3]][0] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][1] / nxyz[mapcrs[1]], basis[mapcrs[2]][1] / nxyz[mapcrs[2]], basis[mapcrs[3]][1] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][2] / nxyz[mapcrs[1]], basis[mapcrs[2]][2] / nxyz[mapcrs[2]], basis[mapcrs[3]][2] / nxyz[mapcrs[3]], 0, 0, 0, 0, 1);\r\n        matrix.multiply(new Matrix4().makeRotationY(degToRad(90)));\r\n        matrix.multiply(new Matrix4().makeTranslation(-h.zStart, h.yStart, h.xStart));\r\n        matrix.multiply(new Matrix4().makeScale(-1, 1, 1));\r\n        return matrix;\r\n    }\r\n}\r\nParserRegistry.add('dsn6', Dsn6Parser);\r\nParserRegistry.add('brix', Dsn6Parser);\r\nexport default Dsn6Parser;\r\n//# sourceMappingURL=dsn6-parser.js.map","/**\r\n * @file Dx Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { degToRad } from '../math/math-utils';\r\nimport VolumeParser from './volume-parser';\r\nconst reWhitespace = /\\s+/;\r\nclass DxParser extends VolumeParser {\r\n    get type() { return 'dx'; }\r\n    _parse() {\r\n        // http://apbs-pdb2pqr.readthedocs.io/en/latest/formats/opendx.html\r\n        if (Debug)\r\n            Log.time('DxParser._parse ' + this.name);\r\n        const v = this.volume;\r\n        const headerLines = this.streamer.peekLines(30);\r\n        const headerInfo = this.parseHeaderLines(headerLines);\r\n        const header = this.volume.header;\r\n        const dataLineStart = headerInfo.dataLineStart;\r\n        const size = header.nx * header.ny * header.nz;\r\n        const data = new Float32Array(size);\r\n        let count = 0;\r\n        let lineNo = 0;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                if (count < size && lineNo > dataLineStart) {\r\n                    const line = lines[i].trim();\r\n                    if (line !== '') {\r\n                        const ls = line.split(reWhitespace);\r\n                        for (let j = 0, lj = ls.length; j < lj; ++j) {\r\n                            data[count] = parseFloat(ls[j]);\r\n                            ++count;\r\n                        }\r\n                    }\r\n                }\r\n                ++lineNo;\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        v.setData(data, header.nz, header.ny, header.nx);\r\n        if (Debug)\r\n            Log.timeEnd('DxParser._parse ' + this.name);\r\n    }\r\n    parseHeaderLines(headerLines) {\r\n        const header = {};\r\n        const n = headerLines.length;\r\n        let dataLineStart = 0;\r\n        let headerByteCount = 0;\r\n        let deltaLineCount = 0;\r\n        for (let i = 0; i < n; ++i) {\r\n            let ls;\r\n            const line = headerLines[i];\r\n            if (line.startsWith('object 1')) {\r\n                ls = line.split(reWhitespace);\r\n                header.nx = parseInt(ls[5]);\r\n                header.ny = parseInt(ls[6]);\r\n                header.nz = parseInt(ls[7]);\r\n            }\r\n            else if (line.startsWith('origin')) {\r\n                ls = line.split(reWhitespace);\r\n                header.xmin = parseFloat(ls[1]);\r\n                header.ymin = parseFloat(ls[2]);\r\n                header.zmin = parseFloat(ls[3]);\r\n            }\r\n            else if (line.startsWith('delta')) {\r\n                ls = line.split(reWhitespace);\r\n                if (deltaLineCount === 0) {\r\n                    header.hx = parseFloat(ls[1]) * this.voxelSize;\r\n                }\r\n                else if (deltaLineCount === 1) {\r\n                    header.hy = parseFloat(ls[2]) * this.voxelSize;\r\n                }\r\n                else if (deltaLineCount === 2) {\r\n                    header.hz = parseFloat(ls[3]) * this.voxelSize;\r\n                }\r\n                deltaLineCount += 1;\r\n            }\r\n            else if (line.startsWith('object 3')) {\r\n                dataLineStart = i;\r\n                headerByteCount += line.length + 1;\r\n                break;\r\n            }\r\n            headerByteCount += line.length + 1;\r\n        }\r\n        this.volume.header = header;\r\n        return {\r\n            dataLineStart: dataLineStart,\r\n            headerByteCount: headerByteCount\r\n        };\r\n    }\r\n    getMatrix() {\r\n        const h = this.volume.header;\r\n        const matrix = new Matrix4();\r\n        matrix.multiply(new Matrix4().makeRotationY(degToRad(90)));\r\n        matrix.multiply(new Matrix4().makeTranslation(-h.zmin, h.ymin, h.xmin));\r\n        matrix.multiply(new Matrix4().makeScale(-h.hz, h.hy, h.hx));\r\n        return matrix;\r\n    }\r\n}\r\nParserRegistry.add('dx', DxParser);\r\nexport default DxParser;\r\n//# sourceMappingURL=dx-parser.js.map","/**\r\n * @file Dxbin Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { uint8ToLines, ensureBuffer } from '../utils';\r\nimport DxParser from './dx-parser';\r\nclass DxbinParser extends DxParser {\r\n    get type() { return 'dxbin'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // https://github.com/Electrostatics/apbs-pdb2pqr/issues/216\r\n        if (Debug)\r\n            Log.time('DxbinParser._parse ' + this.name);\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const headerLines = uint8ToLines(new Uint8Array(bin, 0, 1000));\r\n        const headerInfo = this.parseHeaderLines(headerLines);\r\n        const header = this.volume.header;\r\n        const headerByteCount = headerInfo.headerByteCount;\r\n        const size = header.nx * header.ny * header.nz;\r\n        const dv = new DataView(bin);\r\n        const data = new Float32Array(size);\r\n        for (let i = 0; i < size; ++i) {\r\n            data[i] = dv.getFloat64(i * 8 + headerByteCount, true);\r\n        }\r\n        this.volume.setData(data, header.nz, header.ny, header.nx);\r\n        if (Debug)\r\n            Log.timeEnd('DxbinParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('dxbin', DxbinParser);\r\nexport default DxbinParser;\r\n//# sourceMappingURL=dxbin-parser.js.map","/**\r\n * @file Mrc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { ensureBuffer } from '../utils';\r\nimport VolumeParser from './volume-parser';\r\nclass MrcParser extends VolumeParser {\r\n    get type() { return 'mrc'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        // MRC\r\n        // http://ami.scripps.edu/software/mrctools/mrc_specification.php\r\n        // http://www2.mrc-lmb.cam.ac.uk/research/locally-developed-software/image-processing-software/#image\r\n        // http://bio3d.colorado.edu/imod/doc/mrc_format.txt\r\n        // CCP4 (MAP)\r\n        // http://www.ccp4.ac.uk/html/maplib.html\r\n        // MRC format does not use the skew transformation header records (words 25-37)\r\n        // CCP4 format does not use the ORIGIN header records (words 50-52)\r\n        if (Debug)\r\n            Log.time('MrcParser._parse ' + this.name);\r\n        const v = this.volume;\r\n        const header = {};\r\n        const bin = ensureBuffer(this.streamer.data);\r\n        const intView = new Int32Array(bin, 0, 56);\r\n        const floatView = new Float32Array(bin, 0, 56);\r\n        const dv = new DataView(bin);\r\n        // 53  MAP         Character string 'MAP ' to identify file type\r\n        header.MAP = String.fromCharCode(dv.getUint8(52 * 4), dv.getUint8(52 * 4 + 1), dv.getUint8(52 * 4 + 2), dv.getUint8(52 * 4 + 3));\r\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n        //                 17 and 17 for big-endian or 68 and 65 for little-endian\r\n        header.MACHST = [dv.getUint8(53 * 4), dv.getUint8(53 * 4 + 1)];\r\n        // swap byte order when big endian\r\n        if (header.MACHST[0] === 17 && header.MACHST[1] === 17) {\r\n            const n = bin.byteLength;\r\n            for (let i = 0; i < n; i += 4) {\r\n                dv.setFloat32(i, dv.getFloat32(i), true);\r\n            }\r\n        }\r\n        header.NX = intView[0]; // NC - columns (fastest changing)\r\n        header.NY = intView[1]; // NR - rows\r\n        header.NZ = intView[2]; // NS - sections (slowest changing)\r\n        // mode\r\n        //  0 image : signed 8-bit bytes range -128 to 127\r\n        //  1 image : 16-bit halfwords\r\n        //  2 image : 32-bit reals\r\n        //  3 transform : complex 16-bit integers\r\n        //  4 transform : complex 32-bit reals\r\n        //  6 image : unsigned 16-bit range 0 to 65535\r\n        // 16 image: unsigned char * 3 (for rgb data, non-standard)\r\n        //\r\n        // Note: Mode 2 is the normal mode used in the CCP4 programs.\r\n        //       Other modes than 2 and 0 may NOT WORK\r\n        header.MODE = intView[3];\r\n        // start\r\n        header.NXSTART = intView[4]; // NCSTART - first column\r\n        header.NYSTART = intView[5]; // NRSTART - first row\r\n        header.NZSTART = intView[6]; // NSSTART - first section\r\n        // intervals\r\n        header.MX = intView[7]; // intervals along x\r\n        header.MY = intView[8]; // intervals along y\r\n        header.MZ = intView[9]; // intervals along z\r\n        // cell length (Angstroms in CCP4)\r\n        header.xlen = floatView[10] * this.voxelSize;\r\n        header.ylen = floatView[11] * this.voxelSize;\r\n        header.zlen = floatView[12] * this.voxelSize;\r\n        // cell angle (Degrees)\r\n        header.alpha = floatView[13];\r\n        header.beta = floatView[14];\r\n        header.gamma = floatView[15];\r\n        // axis correspondence (1,2,3 for X,Y,Z)\r\n        header.MAPC = intView[16]; // column\r\n        header.MAPR = intView[17]; // row\r\n        header.MAPS = intView[18]; // section\r\n        // density statistics\r\n        header.DMIN = floatView[19];\r\n        header.DMAX = floatView[20];\r\n        header.DMEAN = floatView[21];\r\n        // space group number 0 or 1 (default=0)\r\n        header.ISPG = intView[22];\r\n        // number of bytes used for symmetry data (0 or 80)\r\n        header.NSYMBT = intView[23];\r\n        // Flag for skew transformation, =0 none, =1 if foll\r\n        header.LSKFLG = intView[24];\r\n        // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\r\n        //                LSKFLG .ne. 0.\r\n        // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\r\n        //                Skew transformation is from standard orthogonal\r\n        //                coordinate frame (as used for atoms) to orthogonal\r\n        //                map frame, as Xo(map) = S * (Xo(atoms) - t)\r\n        // 38      future use       (some of these are used by the MSUBSX routines\r\n        //  .          \"              in MAPBRICK, MAPCONT and FRODO)\r\n        //  .          \"   (all set to zero by default)\r\n        //  .          \"\r\n        // 52          \"\r\n        // 50-52 origin in X,Y,Z used for transforms\r\n        header.originX = floatView[49];\r\n        header.originY = floatView[50];\r\n        header.originZ = floatView[51];\r\n        // 53  MAP         Character string 'MAP ' to identify file type\r\n        // => see top of this parser\r\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n        // => see top of this parser\r\n        // Rms deviation of map from mean density\r\n        header.ARMS = floatView[54];\r\n        // 56      NLABL           Number of labels being used\r\n        // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\r\n        v.header = header;\r\n        // Log.log( header );\r\n        let data;\r\n        if (header.MODE === 2) {\r\n            data = new Float32Array(bin, 256 * 4 + header.NSYMBT, header.NX * header.NY * header.NZ);\r\n        }\r\n        else if (header.MODE === 0) {\r\n            data = new Float32Array(new Int8Array(bin, 256 * 4 + header.NSYMBT, header.NX * header.NY * header.NZ));\r\n            // based on uglymol (https://github.com/uglymol/uglymol) by Marcin Wojdyr (wojdyr)\r\n            // if the file was converted by mapmode2to0 - scale the data\r\n            if (intView[39] === -128 && intView[40] === 127) {\r\n                // scaling f(x)=b1*x+b0 such that f(-128)=min and f(127)=max\r\n                const b1 = (header.DMAX - header.DMIN) / 255.0;\r\n                const b0 = 0.5 * (header.DMIN + header.DMAX + b1);\r\n                for (let j = 0, jl = data.length; j < jl; ++j) {\r\n                    data[j] = b1 * data[j] + b0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Log.error('MrcParser unknown mode', header.MODE);\r\n        }\r\n        v.setData(data, header.NX, header.NY, header.NZ);\r\n        if (header.ARMS !== 0) {\r\n            v.setStats(header.DMIN, header.DMAX, header.DMEAN, header.ARMS);\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('MrcParser._parse ' + this.name);\r\n    }\r\n    getMatrix() {\r\n        const h = this.volume.header;\r\n        const basisX = [\r\n            h.xlen,\r\n            0,\r\n            0\r\n        ];\r\n        const basisY = [\r\n            h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n            h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        const basisZ = [\r\n            h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n            h.zlen * (Math.cos(Math.PI / 180.0 * h.alpha) -\r\n                Math.cos(Math.PI / 180.0 * h.gamma) *\r\n                    Math.cos(Math.PI / 180.0 * h.beta)) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        basisZ[2] = Math.sqrt(h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n            Math.sin(Math.PI / 180.0 * h.beta) - basisZ[1] * basisZ[1]);\r\n        const basis = [[], basisX, basisY, basisZ];\r\n        const nxyz = [0, h.MX, h.MY, h.MZ];\r\n        const mapcrs = [0, h.MAPC, h.MAPR, h.MAPS];\r\n        const matrix = new Matrix4();\r\n        matrix.set(basis[mapcrs[1]][0] / nxyz[mapcrs[1]], basis[mapcrs[2]][0] / nxyz[mapcrs[2]], basis[mapcrs[3]][0] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][1] / nxyz[mapcrs[1]], basis[mapcrs[2]][1] / nxyz[mapcrs[2]], basis[mapcrs[3]][1] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][2] / nxyz[mapcrs[1]], basis[mapcrs[2]][2] / nxyz[mapcrs[2]], basis[mapcrs[3]][2] / nxyz[mapcrs[3]], 0, 0, 0, 0, 1);\r\n        matrix.setPosition(new Vector3(h.originX, h.originY, h.originZ));\r\n        matrix.multiply(new Matrix4().makeTranslation(h.NXSTART, h.NYSTART, h.NZSTART));\r\n        return matrix;\r\n    }\r\n}\r\nParserRegistry.add('mrc', MrcParser);\r\nParserRegistry.add('ccp4', MrcParser);\r\nParserRegistry.add('map', MrcParser);\r\nexport default MrcParser;\r\n//# sourceMappingURL=mrc-parser.js.map","/**\r\n * @file Xplor Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Matrix4 } from 'three';\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport VolumeParser from './volume-parser';\r\nconst reWhitespace = /\\s+/;\r\nfunction parseNumberLine(line) {\r\n    return line.trim().split(reWhitespace).map(parseFloat);\r\n}\r\nclass XplorParser extends VolumeParser {\r\n    get type() { return 'xplor'; }\r\n    _parse() {\r\n        // http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/xplor/formats.html\r\n        // http://www.mrc-lmb.cam.ac.uk/public/xtal/doc/cns/cns_1.3/tutorial/formats/maps/text.html\r\n        if (Debug)\r\n            Log.time('XplorParser._parse ' + this.name);\r\n        const v = this.volume;\r\n        const headerLines = this.streamer.peekLines(8);\r\n        const header = {};\r\n        let infoStart;\r\n        if (headerLines[2].startsWith('REMARKS')) {\r\n            infoStart = parseInt(headerLines[1].substring(0, 8)) + 2;\r\n        }\r\n        else {\r\n            infoStart = 5;\r\n        }\r\n        const dataStart = infoStart + 3;\r\n        const gridInfo = parseNumberLine(headerLines[infoStart]);\r\n        header.NA = gridInfo[0];\r\n        header.AMIN = gridInfo[1];\r\n        header.AMAX = gridInfo[2];\r\n        header.NB = gridInfo[3];\r\n        header.BMIN = gridInfo[4];\r\n        header.BMAX = gridInfo[5];\r\n        header.NC = gridInfo[6];\r\n        header.CMIN = gridInfo[7];\r\n        header.CMAX = gridInfo[8];\r\n        const cellInfo = parseNumberLine(headerLines[infoStart + 1]);\r\n        header.a = cellInfo[0] * this.voxelSize;\r\n        header.b = cellInfo[1] * this.voxelSize;\r\n        header.c = cellInfo[2] * this.voxelSize;\r\n        header.alpha = cellInfo[3];\r\n        header.beta = cellInfo[4];\r\n        header.gamma = cellInfo[5];\r\n        const na = header.AMAX - header.AMIN + 1;\r\n        const nb = header.BMAX - header.BMIN + 1;\r\n        const nc = header.CMAX - header.CMIN + 1;\r\n        const n = na * nb * nc;\r\n        const data = new Float32Array(n);\r\n        const lineSection = Math.ceil(1 + (na * nb) / 6);\r\n        let count = 0;\r\n        let lineNo = 0;\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i];\r\n                if (lineNo >= dataStart && (lineNo - dataStart) % lineSection !== 0 && count < n) {\r\n                    for (let j = 0, lj = 6; j < lj; ++j) {\r\n                        const value = parseFloat(line.substr(12 * j, 12));\r\n                        if (isNaN(value)) {\r\n                            break;\r\n                        } // Last line of map section\r\n                        data[count++] = value;\r\n                    }\r\n                }\r\n                else if (count === n) {\r\n                    const lt = line.trim();\r\n                    if (lt && lt !== '-9999') {\r\n                        const ls = parseNumberLine(line);\r\n                        header.RAVE = ls[0];\r\n                        header.RSIGMA = ls[1];\r\n                    }\r\n                }\r\n                ++lineNo;\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        v.header = header;\r\n        v.setData(data, na, nb, nc);\r\n        if (header.RAVE !== 0 && header.RSIGMA !== 1) {\r\n            v.setStats(undefined, undefined, header.RAVE, header.RSIGMA);\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('XplorParser._parse ' + this.name);\r\n    }\r\n    getMatrix() {\r\n        const h = this.volume.header;\r\n        const basisX = [\r\n            h.a,\r\n            0,\r\n            0\r\n        ];\r\n        const basisY = [\r\n            h.b * Math.cos(Math.PI / 180.0 * h.gamma),\r\n            h.b * Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        const basisZ = [\r\n            h.c * Math.cos(Math.PI / 180.0 * h.beta),\r\n            h.c * (Math.cos(Math.PI / 180.0 * h.alpha) -\r\n                Math.cos(Math.PI / 180.0 * h.gamma) *\r\n                    Math.cos(Math.PI / 180.0 * h.beta)) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n            0\r\n        ];\r\n        basisZ[2] = Math.sqrt(h.c * h.c * Math.sin(Math.PI / 180.0 * h.beta) *\r\n            Math.sin(Math.PI / 180.0 * h.beta) - basisZ[1] * basisZ[1]);\r\n        const basis = [[], basisX, basisY, basisZ];\r\n        const nxyz = [0, h.NA, h.NB, h.NC];\r\n        const mapcrs = [0, 1, 2, 3];\r\n        const matrix = new Matrix4();\r\n        matrix.set(basis[mapcrs[1]][0] / nxyz[mapcrs[1]], basis[mapcrs[2]][0] / nxyz[mapcrs[2]], basis[mapcrs[3]][0] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][1] / nxyz[mapcrs[1]], basis[mapcrs[2]][1] / nxyz[mapcrs[2]], basis[mapcrs[3]][1] / nxyz[mapcrs[3]], 0, basis[mapcrs[1]][2] / nxyz[mapcrs[1]], basis[mapcrs[2]][2] / nxyz[mapcrs[2]], basis[mapcrs[3]][2] / nxyz[mapcrs[3]], 0, 0, 0, 0, 1);\r\n        matrix.multiply(new Matrix4().makeTranslation(h.AMIN, h.BMIN, h.CMIN));\r\n        return matrix;\r\n    }\r\n}\r\nParserRegistry.add('xplor', XplorParser);\r\nParserRegistry.add('cns', XplorParser);\r\nexport default XplorParser;\r\n//# sourceMappingURL=xplor-parser.js.map","/**\r\n * @file Kin Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { Vector3 } from 'three';\r\nimport Parser from './parser';\r\nfunction hsvToRgb(h, s, v) {\r\n    h /= 360;\r\n    s /= 100;\r\n    v /= 100;\r\n    let r, g, b;\r\n    const i = Math.floor(h * 6);\r\n    const f = h * 6 - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0:\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        case 1:\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        case 2:\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        case 3:\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n    }\r\n    return [r, g, b];\r\n}\r\nconst ColorDict = {\r\n    red: hsvToRgb(0, 100, 100),\r\n    orange: hsvToRgb(20, 100, 100),\r\n    gold: hsvToRgb(40, 100, 100),\r\n    yellow: hsvToRgb(60, 100, 100),\r\n    lime: hsvToRgb(80, 100, 100),\r\n    green: hsvToRgb(120, 80, 100),\r\n    sea: hsvToRgb(150, 100, 100),\r\n    cyan: hsvToRgb(180, 100, 85),\r\n    sky: hsvToRgb(210, 75, 95),\r\n    blue: hsvToRgb(240, 70, 100),\r\n    purple: hsvToRgb(275, 75, 100),\r\n    magenta: hsvToRgb(300, 95, 100),\r\n    hotpink: hsvToRgb(335, 100, 100),\r\n    pink: hsvToRgb(350, 55, 100),\r\n    peach: hsvToRgb(25, 75, 100),\r\n    lilac: hsvToRgb(275, 55, 100),\r\n    pinktint: hsvToRgb(340, 30, 100),\r\n    peachtint: hsvToRgb(25, 50, 100),\r\n    yellowtint: hsvToRgb(60, 50, 100),\r\n    greentint: hsvToRgb(135, 40, 100),\r\n    bluetint: hsvToRgb(220, 40, 100),\r\n    lilactint: hsvToRgb(275, 35, 100),\r\n    white: hsvToRgb(0, 0, 100),\r\n    gray: hsvToRgb(0, 0, 50),\r\n    brown: hsvToRgb(20, 45, 75),\r\n    deadwhite: [1, 1, 1],\r\n    deadblack: [0, 0, 0],\r\n    invisible: [0, 0, 0]\r\n};\r\nconst reWhitespaceComma = /[\\s,]+/;\r\nconst reCurlyWhitespace = /[^{}\\s]*{[^{}]+}|[^{}\\s]+/g;\r\nconst reTrimCurly = /^{+|}+$/g;\r\nconst reTrimQuotes = /^['\"]+|['\"]+$/g;\r\nconst reCollapseEqual = /\\s*=\\s*/g;\r\nfunction parseListDef(line) {\r\n    let name;\r\n    let defaultColor;\r\n    let master = [];\r\n    let width;\r\n    line = line.replace(reCollapseEqual, '=');\r\n    const lm = line.match(reCurlyWhitespace);\r\n    for (let j = 1; j < lm.length; ++j) {\r\n        const e = lm[j];\r\n        if (e[0] === '{') {\r\n            name = e.substring(1, e.length - 1);\r\n        }\r\n        else {\r\n            const es = e.split('=');\r\n            if (es.length === 2) {\r\n                if (es[0] === 'color') {\r\n                    defaultColor = ColorDict[es[1]];\r\n                }\r\n                else if (es[0] === 'width') {\r\n                    width = parseInt(es[1]);\r\n                }\r\n                else if (es[0] === 'master') {\r\n                    master.push(es[1].replace(reTrimCurly, ''));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        listName: name,\r\n        listColor: defaultColor,\r\n        listMasters: master,\r\n        listWidth: width\r\n    };\r\n}\r\nfunction parseListElm(line) {\r\n    line = line.trim();\r\n    const idx1 = line.indexOf('{');\r\n    const idx2 = line.indexOf('}');\r\n    const ls = line.substr(idx2 + 1).split(reWhitespaceComma);\r\n    const label = line.substr(idx1 + 1, idx2 - 1);\r\n    const position = [\r\n        parseFloat(ls[ls.length - 3]),\r\n        parseFloat(ls[ls.length - 2]),\r\n        parseFloat(ls[ls.length - 1])\r\n    ];\r\n    let color, width, radius;\r\n    let lineBreak = false;\r\n    let triangleBreak = false;\r\n    for (let lsindex = 4; lsindex <= ls.length; lsindex++) {\r\n        const literal = ls[ls.length - lsindex];\r\n        if (literal in ColorDict) {\r\n            color = ColorDict[ls[ls.length - lsindex]];\r\n        }\r\n        if (literal.startsWith('width')) {\r\n            width = parseInt(literal.substring(5));\r\n        }\r\n        if (literal.startsWith('r=')) {\r\n            radius = parseFloat(literal.split('=')[1]);\r\n        }\r\n        if (literal.startsWith('P')) {\r\n            lineBreak = true;\r\n        }\r\n        if (literal.startsWith('X')) {\r\n            triangleBreak = true;\r\n        }\r\n    }\r\n    // const color = line[ idx2 + 1 ] === ' ' ? undefined : ColorDict[ ls[ 0 ] ]\r\n    return {\r\n        label: label,\r\n        position: position,\r\n        color: color,\r\n        radius: radius,\r\n        width: width,\r\n        isLineBreak: lineBreak,\r\n        isTriangleBreak: triangleBreak\r\n    };\r\n}\r\nfunction parseStr(line) {\r\n    const start = line.indexOf('{');\r\n    const end = line.indexOf('}');\r\n    return line.substring(start !== -1 ? start + 1 : 0, end !== -1 ? end : undefined).trim();\r\n}\r\nfunction parseFlag(line) {\r\n    const end = line.indexOf('}');\r\n    return end === -1 ? undefined : line.substr(end + 1).trim();\r\n}\r\nfunction parseGroup(line) {\r\n    let name = '';\r\n    let master = [];\r\n    let flags = {};\r\n    line = line.replace(reCollapseEqual, '=');\r\n    const lm = line.match(reCurlyWhitespace);\r\n    for (let j = 1; j < lm.length; ++j) {\r\n        const e = lm[j];\r\n        if (e[0] === '{') {\r\n            name = e.substring(1, e.length - 1);\r\n        }\r\n        else {\r\n            const es = e.split('=');\r\n            if (es.length === 2) {\r\n                if (es[0] === 'master') {\r\n                    master.push(es[1].replace(reTrimCurly, ''));\r\n                }\r\n                else {\r\n                    flags[es[0]] = es[1].replace(reTrimCurly, '');\r\n                }\r\n            }\r\n            else {\r\n                flags[es[0]] = true;\r\n            }\r\n        }\r\n    }\r\n    return { groupName: name,\r\n        groupFlags: flags,\r\n        groupMasters: master\r\n    };\r\n}\r\nfunction convertKinTriangleArrays(ribbonObject) {\r\n    // have to convert ribbons/triangle lists from stripdrawmode to normal drawmode\r\n    // index                    [ 0 1 2 3 4 5 6 7 8 91011 ]\r\n    // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\r\n    // convertedindex                                      [ 0 1 2 3 4 5 6 7 8 91011121314151617181920212223242526 ]\r\n    // index          [ 0 1 2 3 4 5 6 7 8 91011121314 ]    [ 0 1 2 3 4 5 6 7 8 3 4 5 6 7 8 91011 6 7 8 91011121314 ]\r\n    // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\r\n    let { labelArray, positionArray, colorArray, breakArray } = ribbonObject;\r\n    let convertedLabels = [];\r\n    for (let i = 0; i < (labelArray.length - 2) * 3; ++i) {\r\n        convertedLabels[i] = labelArray[i - Math.floor(i / 3) * 2];\r\n    }\r\n    let convertedBreaks = [];\r\n    for (let i = 0; i < (breakArray.length - 2) * 3; ++i) {\r\n        convertedBreaks[i] = breakArray[i - Math.floor(i / 3) * 2];\r\n    }\r\n    let convertedPositions = [];\r\n    for (let i = 0; i < (positionArray.length / 3 - 2) * 9; ++i) {\r\n        convertedPositions[i] = positionArray[i - Math.floor(i / 9) * 6];\r\n    }\r\n    let convertedColors = [];\r\n    for (let i = 0; i < (colorArray.length / 3 - 2) * 9; ++i) {\r\n        convertedColors[i] = colorArray[i - Math.floor(i / 9) * 6];\r\n    }\r\n    let vector3Positions = [];\r\n    for (let i = 0; i < (convertedPositions.length) / 3; ++i) {\r\n        vector3Positions.push(new Vector3(convertedPositions[i * 3], convertedPositions[i * 3] + 1, convertedPositions[i * 3] + 2));\r\n    }\r\n    //let normals = []\r\n    //for (let i = 0; i < vector3Positions.length - 1; ++i) {\r\n    //  let normalVec3 = vector3Positions[i].cross(vector3Positions[i + 1])\r\n    //  normals.push(normalVec3.x)\r\n    //  normals.push(normalVec3.y)\r\n    //  normals.push(normalVec3.z)\r\n    //}\r\n    return {\r\n        name: ribbonObject.name,\r\n        masterArray: ribbonObject.masterArray,\r\n        labelArray: convertedLabels,\r\n        positionArray: convertedPositions,\r\n        breakArray: convertedBreaks,\r\n        colorArray: convertedColors\r\n    };\r\n}\r\nfunction removePointBreaksTriangleArrays(convertedRibbonObject) {\r\n    // after converting ribbon/triangle arrys to drawmode, removed point break triangles\r\n    // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\r\n    // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\r\n    let { labelArray, positionArray, colorArray, breakArray } = convertedRibbonObject;\r\n    let editedLabels = [];\r\n    let editedPositions = [];\r\n    let editedColors = [];\r\n    let editedBreaks = [];\r\n    for (let i = 0; i < breakArray.length / 3; i++) {\r\n        let breakPointer = i * 3;\r\n        let positionPointer = i * 9;\r\n        if (!breakArray[breakPointer + 1] && !breakArray[breakPointer + 2]) {\r\n            editedLabels.push(labelArray[breakPointer]);\r\n            editedLabels.push(labelArray[breakPointer + 1]);\r\n            editedLabels.push(labelArray[breakPointer + 2]);\r\n            editedBreaks.push(breakArray[breakPointer]);\r\n            editedBreaks.push(breakArray[breakPointer + 1]);\r\n            editedBreaks.push(breakArray[breakPointer + 2]);\r\n            editedPositions.push(positionArray[positionPointer]);\r\n            editedPositions.push(positionArray[positionPointer + 1]);\r\n            editedPositions.push(positionArray[positionPointer + 2]);\r\n            editedPositions.push(positionArray[positionPointer + 3]);\r\n            editedPositions.push(positionArray[positionPointer + 4]);\r\n            editedPositions.push(positionArray[positionPointer + 5]);\r\n            editedPositions.push(positionArray[positionPointer + 6]);\r\n            editedPositions.push(positionArray[positionPointer + 7]);\r\n            editedPositions.push(positionArray[positionPointer + 8]);\r\n            editedColors.push(colorArray[positionPointer]);\r\n            editedColors.push(colorArray[positionPointer + 1]);\r\n            editedColors.push(colorArray[positionPointer + 2]);\r\n            editedColors.push(colorArray[positionPointer + 3]);\r\n            editedColors.push(colorArray[positionPointer + 4]);\r\n            editedColors.push(colorArray[positionPointer + 5]);\r\n            editedColors.push(colorArray[positionPointer + 6]);\r\n            editedColors.push(colorArray[positionPointer + 7]);\r\n            editedColors.push(colorArray[positionPointer + 8]);\r\n        }\r\n        else {\r\n            //console.log('X triangle break found')\r\n            //console.log('skipping: '+positionArray[positionPointer]+','+positionArray[positionPointer+1]+','+positionArray[positionPointer+2]+','\r\n            //                        +positionArray[positionPointer+3]+','+positionArray[positionPointer+4]+','+positionArray[positionPointer+5]+','\r\n            //                        +positionArray[positionPointer+6]+','+positionArray[positionPointer+7]+','+positionArray[positionPointer+8])\r\n        }\r\n    }\r\n    return {\r\n        name: convertedRibbonObject.name,\r\n        masterArray: convertedRibbonObject.masterArray,\r\n        labelArray: editedLabels,\r\n        positionArray: editedPositions,\r\n        breakArray: editedBreaks,\r\n        colorArray: editedColors\r\n    };\r\n}\r\nclass KinParser extends Parser {\r\n    get type() { return 'kin'; }\r\n    get __objName() { return 'kinemage'; }\r\n    _parse() {\r\n        // http://kinemage.biochem.duke.edu/software/king.php\r\n        if (Debug)\r\n            Log.time(`KinParser._parse ${this.name}`);\r\n        const kinemage = {\r\n            kinemage: undefined,\r\n            onewidth: undefined,\r\n            '1viewid': undefined,\r\n            pdbfile: undefined,\r\n            texts: [],\r\n            text: '',\r\n            captions: [],\r\n            caption: '',\r\n            groupDict: {},\r\n            subgroupDict: {},\r\n            masterDict: {},\r\n            pointmasterDict: {},\r\n            dotLists: [],\r\n            vectorLists: [],\r\n            ballLists: [],\r\n            ribbonLists: []\r\n        };\r\n        this.kinemage = kinemage;\r\n        let currentGroupMasters;\r\n        let currentSubgroupMasters;\r\n        let isDotList = false;\r\n        let prevDotLabel = '';\r\n        let dotDefaultColor;\r\n        let dotLabel, dotPosition, dotColor;\r\n        let isVectorList = false;\r\n        let prevVecLabel = '';\r\n        let prevVecPosition = null;\r\n        let prevVecColor = null;\r\n        let vecDefaultColor, vecDefaultWidth;\r\n        let vecLabel1, vecLabel2, vecPosition1, vecPosition2, vecColor1, vecColor2;\r\n        let isBallList = false;\r\n        let prevBallLabel = '';\r\n        let ballRadius, ballDefaultColor;\r\n        let ballLabel, ballPosition, ballColor;\r\n        let isRibbonList = false;\r\n        let prevRibbonPointLabel = '';\r\n        let ribbonListDefaultColor;\r\n        let ribbonPointLabelArray, ribbonPointPositionArray, ribbonPointBreakArray, ribbonPointColorArray;\r\n        let isText = false;\r\n        let isCaption = false;\r\n        // @vectorlist {mc} color= white  master= {mainchain}\r\n        // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\r\n        // @dotlist {x} color=white master={vdw contact} master={dots}\r\n        // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\r\n        function _parseChunkOfLines(_i, _n, lines) {\r\n            for (let i = _i; i < _n; ++i) {\r\n                const line = lines[i];\r\n                if (line[0] === '@') {\r\n                    isDotList = false;\r\n                    isVectorList = false;\r\n                    isBallList = false;\r\n                    isRibbonList = false;\r\n                    isText = false;\r\n                    isCaption = false;\r\n                }\r\n                if (!line) {\r\n                    isDotList = false;\r\n                    isVectorList = false;\r\n                    isBallList = false;\r\n                    isRibbonList = false;\r\n                }\r\n                else if (line.startsWith('@dotlist')) {\r\n                    // @dotlist {x} color=white master={vdw contact} master={dots}\r\n                    let { listColor, listName, listMasters } = parseListDef(line);\r\n                    isDotList = true;\r\n                    prevDotLabel = '';\r\n                    dotLabel = [];\r\n                    dotPosition = [];\r\n                    dotColor = [];\r\n                    dotDefaultColor = listColor;\r\n                    if (currentGroupMasters) {\r\n                        listMasters = listMasters.concat(currentGroupMasters);\r\n                    }\r\n                    if (currentSubgroupMasters) {\r\n                        listMasters = listMasters.concat(currentSubgroupMasters);\r\n                    }\r\n                    kinemage.dotLists.push({\r\n                        name: listName,\r\n                        masterArray: listMasters,\r\n                        labelArray: dotLabel,\r\n                        positionArray: dotPosition,\r\n                        colorArray: dotColor\r\n                    });\r\n                }\r\n                else if (line.startsWith('@vectorlist')) {\r\n                    // @vectorlist {x} color=white master={small overlap} master={dots}\r\n                    let { listMasters, listName, listWidth, listColor } = parseListDef(line);\r\n                    if (listMasters) {\r\n                        listMasters.forEach(function (name) {\r\n                            if (!kinemage.masterDict[name]) {\r\n                                kinemage.masterDict[name] = {\r\n                                    indent: false,\r\n                                    visible: false\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    isVectorList = true;\r\n                    prevVecLabel = '';\r\n                    prevVecPosition = null;\r\n                    prevVecColor = null;\r\n                    vecLabel1 = [];\r\n                    vecLabel2 = [];\r\n                    vecPosition1 = [];\r\n                    vecPosition2 = [];\r\n                    vecColor1 = [];\r\n                    vecColor2 = [];\r\n                    vecDefaultColor = listColor;\r\n                    vecDefaultWidth = [];\r\n                    if (listWidth) {\r\n                        vecDefaultWidth.push(listWidth);\r\n                    }\r\n                    if (currentGroupMasters) {\r\n                        listMasters = listMasters.concat(currentGroupMasters);\r\n                    }\r\n                    if (currentSubgroupMasters) {\r\n                        listMasters = listMasters.concat(currentSubgroupMasters);\r\n                    }\r\n                    kinemage.vectorLists.push({\r\n                        name: listName,\r\n                        masterArray: listMasters,\r\n                        label1Array: vecLabel1,\r\n                        label2Array: vecLabel2,\r\n                        position1Array: vecPosition1,\r\n                        position2Array: vecPosition2,\r\n                        color1Array: vecColor1,\r\n                        color2Array: vecColor2,\r\n                        width: vecDefaultWidth\r\n                    });\r\n                }\r\n                else if (line.startsWith('@balllist')) {\r\n                    let { listName, listColor, listMasters } = parseListDef(line);\r\n                    if (listMasters) {\r\n                        listMasters.forEach(function (name) {\r\n                            if (!kinemage.masterDict[name]) {\r\n                                kinemage.masterDict[name] = {\r\n                                    indent: false,\r\n                                    visible: false\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    isBallList = true;\r\n                    prevBallLabel = '';\r\n                    ballLabel = [];\r\n                    ballRadius = [];\r\n                    ballPosition = [];\r\n                    ballColor = [];\r\n                    ballDefaultColor = listColor;\r\n                    if (currentGroupMasters) {\r\n                        listMasters = listMasters.concat(currentGroupMasters);\r\n                    }\r\n                    if (currentSubgroupMasters) {\r\n                        listMasters = listMasters.concat(currentSubgroupMasters);\r\n                    }\r\n                    kinemage.ballLists.push({\r\n                        name: listName,\r\n                        masterArray: listMasters,\r\n                        labelArray: ballLabel,\r\n                        radiusArray: ballRadius,\r\n                        positionArray: ballPosition,\r\n                        colorArray: ballColor\r\n                    });\r\n                }\r\n                else if (line.startsWith('@ribbonlist') || line.startsWith('@trianglelist')) {\r\n                    let { listMasters, listName, listColor } = parseListDef(line);\r\n                    if (listMasters) {\r\n                        listMasters.forEach(function (name) {\r\n                            if (!kinemage.masterDict[name]) {\r\n                                kinemage.masterDict[name] = {\r\n                                    indent: false,\r\n                                    visible: false\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    isRibbonList = true;\r\n                    prevRibbonPointLabel = '';\r\n                    ribbonPointLabelArray = [];\r\n                    ribbonPointPositionArray = [];\r\n                    ribbonPointBreakArray = [];\r\n                    ribbonPointColorArray = [];\r\n                    ribbonListDefaultColor = listColor;\r\n                    if (currentGroupMasters) {\r\n                        listMasters = listMasters.concat(currentGroupMasters);\r\n                    }\r\n                    if (currentSubgroupMasters) {\r\n                        listMasters = listMasters.concat(currentSubgroupMasters);\r\n                    }\r\n                    kinemage.ribbonLists.push({\r\n                        name: listName,\r\n                        masterArray: listMasters,\r\n                        labelArray: ribbonPointLabelArray,\r\n                        positionArray: ribbonPointPositionArray,\r\n                        breakArray: ribbonPointBreakArray,\r\n                        colorArray: ribbonPointColorArray\r\n                    });\r\n                }\r\n                else if (line.startsWith('@text')) {\r\n                    isText = true;\r\n                    kinemage.texts.push(line.substr(5));\r\n                }\r\n                else if (line.startsWith('@caption')) {\r\n                    isCaption = true;\r\n                    kinemage.captions.push(line.substr(8));\r\n                }\r\n                else if (isDotList) {\r\n                    // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\r\n                    let { label, color, position } = parseListElm(line);\r\n                    if (label === '\"') {\r\n                        label = prevDotLabel;\r\n                    }\r\n                    else {\r\n                        prevDotLabel = label;\r\n                    }\r\n                    if (color === undefined) {\r\n                        color = dotDefaultColor;\r\n                    }\r\n                    dotLabel.push(label);\r\n                    dotPosition.push(...position);\r\n                    dotColor.push(...color);\r\n                }\r\n                else if (isVectorList) {\r\n                    // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\r\n                    let doubleLine = line.replace(/(?!^){/g, '\\n{');\r\n                    let splitLine = doubleLine.split(/\\n/);\r\n                    for (var i2 = 0; i2 < splitLine.length; i2++) {\r\n                        let singlePointLine = splitLine[i2];\r\n                        let { label, color, width, position, isLineBreak } = parseListElm(singlePointLine);\r\n                        if (label === '\"') {\r\n                            label = prevVecLabel;\r\n                        }\r\n                        else {\r\n                            prevVecLabel = label;\r\n                        }\r\n                        if (color === undefined) {\r\n                            color = vecDefaultColor;\r\n                        }\r\n                        if (!isLineBreak) {\r\n                            if (prevVecPosition !== null) {\r\n                                if (width) {\r\n                                    vecDefaultWidth.push(width);\r\n                                }\r\n                                vecLabel1.push(prevVecLabel);\r\n                                vecPosition1.push(...prevVecPosition);\r\n                                vecColor1.push(...prevVecColor);\r\n                                vecLabel2.push(label);\r\n                                vecPosition2.push(...position);\r\n                                vecColor2.push(...color);\r\n                            }\r\n                        }\r\n                        prevVecLabel = label;\r\n                        prevVecPosition = position;\r\n                        prevVecColor = color;\r\n                    }\r\n                }\r\n                else if (isBallList) {\r\n                    // {cb arg A   1   1.431 -106.80} r=1.431  39.085, 8.083, 22.182\r\n                    let { label, radius, color, position } = parseListElm(line);\r\n                    if (label === '\"') {\r\n                        label = prevBallLabel;\r\n                    }\r\n                    else {\r\n                        prevBallLabel = label;\r\n                    }\r\n                    if (radius === undefined) {\r\n                        radius = 1; // temporary default radius\r\n                    }\r\n                    if (color === undefined) {\r\n                        color = ballDefaultColor;\r\n                    }\r\n                    ballLabel.push(label);\r\n                    ballRadius.push(radius);\r\n                    ballPosition.push(...position);\r\n                    ballColor.push(...color);\r\n                }\r\n                else if (isRibbonList) {\r\n                    let { label, color, position, isTriangleBreak } = parseListElm(line);\r\n                    if (label === '\"') {\r\n                        label = prevRibbonPointLabel;\r\n                    }\r\n                    else {\r\n                        prevRibbonPointLabel = label;\r\n                    }\r\n                    if (color === undefined) {\r\n                        color = ribbonListDefaultColor;\r\n                    }\r\n                    ribbonPointLabelArray.push(label);\r\n                    ribbonPointPositionArray.push(...position);\r\n                    ribbonPointBreakArray.push(isTriangleBreak);\r\n                    ribbonPointColorArray.push(...color);\r\n                }\r\n                else if (isText) {\r\n                    kinemage.texts.push(line);\r\n                }\r\n                else if (isCaption) {\r\n                    kinemage.captions.push(line);\r\n                }\r\n                else if (line.startsWith('@kinemage')) {\r\n                    kinemage.kinemage = parseInt(line.substr(9).trim());\r\n                }\r\n                else if (line.startsWith('@onewidth')) {\r\n                    kinemage.onewidth = true;\r\n                }\r\n                else if (line.startsWith('@1viewid')) {\r\n                    kinemage['1viewid'] = parseStr(line);\r\n                }\r\n                else if (line.startsWith('@pdbfile')) {\r\n                    kinemage.pdbfile = parseStr(line);\r\n                }\r\n                else if (line.startsWith('@group')) {\r\n                    let { groupName, groupFlags, groupMasters } = parseGroup(line);\r\n                    if (!kinemage.groupDict[groupName]) {\r\n                        kinemage.groupDict[groupName] = {\r\n                            dominant: false,\r\n                            animate: false\r\n                        };\r\n                        currentGroupMasters = groupMasters;\r\n                    }\r\n                    if (currentGroupMasters) {\r\n                        currentGroupMasters.forEach(function (master) {\r\n                            if (!kinemage.masterDict[master]) {\r\n                                kinemage.masterDict[master] = {\r\n                                    indent: false,\r\n                                    visible: false\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    for (let key in groupFlags) {\r\n                        kinemage.groupDict[groupName][key] = groupFlags[key];\r\n                    }\r\n                }\r\n                else if (line.startsWith('@subgroup')) {\r\n                    const { groupName, groupFlags, groupMasters } = parseGroup(line);\r\n                    if (!kinemage.subgroupDict[groupName]) {\r\n                        kinemage.subgroupDict[groupName] = {\r\n                            dominant: false,\r\n                            animate: false\r\n                        };\r\n                        currentSubgroupMasters = groupMasters;\r\n                    }\r\n                    if (currentSubgroupMasters) {\r\n                        currentSubgroupMasters.forEach(function (master) {\r\n                            if (!kinemage.masterDict[master]) {\r\n                                kinemage.masterDict[master] = {\r\n                                    indent: false,\r\n                                    visible: false\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                    for (let key in groupFlags) {\r\n                        kinemage.subgroupDict[groupName][key] = groupFlags[key];\r\n                    }\r\n                }\r\n                else if (line.startsWith('@master')) {\r\n                    const name = parseStr(line);\r\n                    const flag = parseFlag(line);\r\n                    if (!kinemage.masterDict[name]) {\r\n                        kinemage.masterDict[name] = {\r\n                            indent: false,\r\n                            visible: false\r\n                        };\r\n                    }\r\n                    if (flag === 'on') {\r\n                        kinemage.masterDict[name].visible = true;\r\n                    }\r\n                    else if (flag === 'off') {\r\n                        kinemage.masterDict[name].visible = false;\r\n                    }\r\n                    else if (flag === 'indent') {\r\n                        kinemage.masterDict[name].indent = true;\r\n                    }\r\n                    else if (!flag) {\r\n                        // nothing to do\r\n                    }\r\n                }\r\n                else if (line.startsWith('@pointmaster')) {\r\n                    const { groupName, groupFlags } = parseGroup(line);\r\n                    kinemage.pointmasterDict[groupName] = {\r\n                        id: Object.keys(groupFlags)[0].replace(reTrimQuotes, '')\r\n                    };\r\n                }\r\n                else {\r\n                    console.log(line);\r\n                }\r\n            }\r\n        }\r\n        this.streamer.eachChunkOfLines(function (lines /*, chunkNo, chunkCount */) {\r\n            _parseChunkOfLines(0, lines.length, lines);\r\n        });\r\n        kinemage.text = kinemage.texts.join('\\n').trim();\r\n        kinemage.caption = kinemage.captions.join('\\n').trim();\r\n        if (kinemage.ribbonLists) {\r\n            let convertedLists = [];\r\n            kinemage.ribbonLists.forEach(function (listObject) {\r\n                convertedLists.push(removePointBreaksTriangleArrays(convertKinTriangleArrays(listObject)));\r\n            });\r\n            kinemage.ribbonLists = convertedLists;\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd(`KinParser._parse ${this.name}`);\r\n    }\r\n}\r\nParserRegistry.add('kin', KinParser);\r\nexport default KinParser;\r\n//# sourceMappingURL=kin-parser.js.map","/**\r\n * @file Surface Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport Parser from './parser';\r\nimport Surface from '../surface/surface';\r\nclass SurfaceParser extends Parser {\r\n    constructor(streamer, params) {\r\n        super(streamer, params);\r\n        this.loader = this.getLoader();\r\n        this.surface = new Surface(this.name, this.path);\r\n    }\r\n    get type() { return 'surface'; }\r\n    get __objName() { return 'surface'; }\r\n    _parse() {\r\n        var geometry = this.loader.parse(this.streamer.asText());\r\n        this.surface.fromGeometry(geometry);\r\n    }\r\n}\r\nexport default SurfaceParser;\r\n//# sourceMappingURL=surface-parser.js.map","/**\r\n * @file Obj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport { ParserRegistry } from '../globals';\r\nimport SurfaceParser from './surface-parser';\r\n/**\r\n * OBJLoader\r\n * @class\r\n * @private\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\nconst OBJLoader = (function OBJLoader() {\r\n    this.regexp = {\r\n        // v float float float\r\n        vertex_pattern: /^v\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n        // vn float float float\r\n        normal_pattern: /^vn\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n        // vt float float\r\n        uv_pattern: /^vt\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n        // f vertex vertex vertex\r\n        face_vertex: /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,\r\n        // f vertex/uv vertex/uv vertex/uv\r\n        face_vertex_uv: /^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,\r\n        // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n        face_vertex_uv_normal: /^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,\r\n        // f vertex//normal vertex//normal vertex//normal\r\n        face_vertex_normal: /^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,\r\n        // o object_name | g group_name\r\n        object_pattern: /^[og]\\s*(.+)?/,\r\n        // s boolean\r\n        smoothing_pattern: /^s\\s+(\\d+|on|off)/,\r\n        // mtllib file_reference\r\n        material_library_pattern: /^mtllib /,\r\n        // usemtl material_name\r\n        material_use_pattern: /^usemtl /\r\n    };\r\n});\r\nOBJLoader.prototype = {\r\n    constructor: OBJLoader,\r\n    setPath: function (value) {\r\n        this.path = value;\r\n    },\r\n    _createParserState: function () {\r\n        var state = {\r\n            objects: [],\r\n            object: {},\r\n            vertices: [],\r\n            normals: [],\r\n            startObject: function (name, fromDeclaration) {\r\n                // If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n                // file. We need to use it for the first parsed g/o to keep things in sync.\r\n                if (this.object && this.object.fromDeclaration === false) {\r\n                    this.object.name = name;\r\n                    this.object.fromDeclaration = (fromDeclaration !== false);\r\n                    return;\r\n                }\r\n                this.object = {\r\n                    name: name || '',\r\n                    geometry: {\r\n                        vertices: [],\r\n                        normals: []\r\n                    },\r\n                    fromDeclaration: (fromDeclaration !== false)\r\n                };\r\n                this.objects.push(this.object);\r\n            },\r\n            parseVertexIndex: function (value, len) {\r\n                var index = parseInt(value, 10);\r\n                return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n            },\r\n            parseNormalIndex: function (value, len) {\r\n                var index = parseInt(value, 10);\r\n                return (index >= 0 ? index - 1 : index + len / 3) * 3;\r\n            },\r\n            addVertex: function (a, b, c) {\r\n                var src = this.vertices;\r\n                var dst = this.object.geometry.vertices;\r\n                dst.push(src[a + 0]);\r\n                dst.push(src[a + 1]);\r\n                dst.push(src[a + 2]);\r\n                dst.push(src[b + 0]);\r\n                dst.push(src[b + 1]);\r\n                dst.push(src[b + 2]);\r\n                dst.push(src[c + 0]);\r\n                dst.push(src[c + 1]);\r\n                dst.push(src[c + 2]);\r\n            },\r\n            addVertexLine: function (a) {\r\n                var src = this.vertices;\r\n                var dst = this.object.geometry.vertices;\r\n                dst.push(src[a + 0]);\r\n                dst.push(src[a + 1]);\r\n                dst.push(src[a + 2]);\r\n            },\r\n            addNormal: function (a, b, c) {\r\n                var src = this.normals;\r\n                var dst = this.object.geometry.normals;\r\n                dst.push(src[a + 0]);\r\n                dst.push(src[a + 1]);\r\n                dst.push(src[a + 2]);\r\n                dst.push(src[b + 0]);\r\n                dst.push(src[b + 1]);\r\n                dst.push(src[b + 2]);\r\n                dst.push(src[c + 0]);\r\n                dst.push(src[c + 1]);\r\n                dst.push(src[c + 2]);\r\n            },\r\n            addFace: function (a, b, c, d, na, nb, nc, nd) {\r\n                var vLen = this.vertices.length;\r\n                var ia = this.parseVertexIndex(a, vLen);\r\n                var ib = this.parseVertexIndex(b, vLen);\r\n                var ic = this.parseVertexIndex(c, vLen);\r\n                var id;\r\n                if (d === undefined) {\r\n                    this.addVertex(ia, ib, ic);\r\n                }\r\n                else {\r\n                    id = this.parseVertexIndex(d, vLen);\r\n                    this.addVertex(ia, ib, id);\r\n                    this.addVertex(ib, ic, id);\r\n                }\r\n                if (na !== undefined) {\r\n                    // Normals are many times the same. If so, skip function call and parseInt.\r\n                    var nLen = this.normals.length;\r\n                    ia = this.parseNormalIndex(na, nLen);\r\n                    ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\r\n                    ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\r\n                    if (d === undefined) {\r\n                        this.addNormal(ia, ib, ic);\r\n                    }\r\n                    else {\r\n                        id = this.parseNormalIndex(nd, nLen);\r\n                        this.addNormal(ia, ib, id);\r\n                        this.addNormal(ib, ic, id);\r\n                    }\r\n                }\r\n            },\r\n            addLineGeometry: function (vertices) {\r\n                this.object.geometry.type = 'Line';\r\n                var vLen = this.vertices.length;\r\n                for (var vi = 0, l = vertices.length; vi < l; vi++) {\r\n                    this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\r\n                }\r\n            }\r\n        };\r\n        state.startObject('', false);\r\n        return state;\r\n    },\r\n    parse: function (text) {\r\n        var state = this._createParserState();\r\n        if (text.indexOf('\\r\\n') !== -1) {\r\n            // This is faster than String.split with regex that splits on both\r\n            text = text.replace(/\\r\\n/g, '\\n');\r\n        }\r\n        if (text.indexOf('\\\\\\n') !== -1) {\r\n            // join lines separated by a line continuation character (\\)\r\n            text = text.replace(/\\\\\\n/g, '');\r\n        }\r\n        var i, l;\r\n        var lines = text.split('\\n');\r\n        var line = '';\r\n        var lineFirstChar = '';\r\n        var lineSecondChar = '';\r\n        var lineLength = 0;\r\n        var result = [];\r\n        // Faster to just trim left side of the line. Use if available.\r\n        var trimLeft = (typeof ''.trimLeft === 'function');\r\n        for (i = 0, l = lines.length; i < l; i++) {\r\n            line = lines[i];\r\n            line = trimLeft ? line.trimLeft() : line.trim();\r\n            lineLength = line.length;\r\n            if (lineLength === 0)\r\n                continue;\r\n            lineFirstChar = line.charAt(0);\r\n            // @todo invoke passed in handler if any\r\n            if (lineFirstChar === '#')\r\n                continue;\r\n            if (lineFirstChar === 'v') {\r\n                lineSecondChar = line.charAt(1);\r\n                if (lineSecondChar === ' ' && (result = this.regexp.vertex_pattern.exec(line)) !== null) {\r\n                    // 0                  1      2      3\r\n                    // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n                    state.vertices.push(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3]));\r\n                }\r\n                else if (lineSecondChar === 'n' && (result = this.regexp.normal_pattern.exec(line)) !== null) {\r\n                    // 0                   1      2      3\r\n                    // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n                    state.normals.push(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3]));\r\n                }\r\n                else if (lineSecondChar === 't' && this.regexp.uv_pattern.exec(line) !== null) {\r\n                    // ignore uv line\r\n                }\r\n                else {\r\n                    throw new Error(\"Unexpected vertex/normal/uv line: '\" + line + \"'\");\r\n                }\r\n            }\r\n            else if (lineFirstChar === 'f') {\r\n                if ((result = this.regexp.face_vertex_uv_normal.exec(line)) !== null) {\r\n                    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n                    // 0                        1    2    3    4    5    6    7    8    9   10         11         12\r\n                    // [\"f 1/1/1 2/2/2 3/3/3\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\", undefined, undefined, undefined]\r\n                    state.addFace(result[1], result[4], result[7], result[10], \r\n                    // result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],  // ignore uv part\r\n                    result[3], result[6], result[9], result[12]);\r\n                }\r\n                else if (this.regexp.face_vertex_uv.exec(line) !== null) {\r\n                    // ignore uv line\r\n                }\r\n                else if ((result = this.regexp.face_vertex_normal.exec(line)) !== null) {\r\n                    // f vertex//normal vertex//normal vertex//normal\r\n                    // 0                     1    2    3    4    5    6   7          8\r\n                    // [\"f 1//1 2//2 3//3\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", undefined, undefined]\r\n                    state.addFace(result[1], result[3], result[5], result[7], result[2], result[4], result[6], result[8]);\r\n                }\r\n                else if ((result = this.regexp.face_vertex.exec(line)) !== null) {\r\n                    // f vertex vertex vertex\r\n                    // 0            1    2    3   4\r\n                    // [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\r\n                    state.addFace(result[1], result[2], result[3], result[4]);\r\n                }\r\n                else {\r\n                    throw new Error(\"Unexpected face line: '\" + line + \"'\");\r\n                }\r\n            }\r\n            else if (lineFirstChar === 'l') {\r\n                var lineParts = line.substring(1).trim().split(' ');\r\n                var lineVertices = [];\r\n                var lineUVs = [];\r\n                if (line.indexOf('/') === -1) {\r\n                    lineVertices = lineParts;\r\n                }\r\n                else {\r\n                    for (var li = 0, llen = lineParts.length; li < llen; li++) {\r\n                        var parts = lineParts[li].split('/');\r\n                        if (parts[0] !== '')\r\n                            lineVertices.push(parts[0]);\r\n                        if (parts[1] !== '')\r\n                            lineUVs.push(parts[1]);\r\n                    }\r\n                }\r\n                state.addLineGeometry(lineVertices, lineUVs);\r\n            }\r\n            else if ((result = this.regexp.object_pattern.exec(line)) !== null) {\r\n                // o object_name\r\n                // or\r\n                // g group_name\r\n                var name = result[0].substr(1).trim();\r\n                state.startObject(name);\r\n                // ignore material related lines\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            else if (this.regexp.material_use_pattern.test(line)) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            else if (this.regexp.material_library_pattern.test(line)) {\r\n                // eslint-disable-next-line no-empty\r\n            }\r\n            else if (this.regexp.smoothing_pattern.exec(line) !== null) {\r\n            }\r\n            else {\r\n                // Handle null terminated files without exception\r\n                if (line === '\\0')\r\n                    continue;\r\n                throw new Error(\"Unexpected line: '\" + line + \"'\");\r\n            }\r\n        }\r\n        var container = [];\r\n        for (i = 0, l = state.objects.length; i < l; i++) {\r\n            var object = state.objects[i];\r\n            var geometry = object.geometry;\r\n            // Skip o/g line declarations that did not follow with any faces\r\n            if (geometry.vertices.length === 0)\r\n                continue;\r\n            var buffergeometry = new BufferGeometry();\r\n            buffergeometry.setAttribute('position', new BufferAttribute(new Float32Array(geometry.vertices), 3));\r\n            if (geometry.normals.length > 0) {\r\n                buffergeometry.setAttribute('normal', new BufferAttribute(new Float32Array(geometry.normals), 3));\r\n            }\r\n            else {\r\n                buffergeometry.computeVertexNormals();\r\n            }\r\n            container.push(buffergeometry);\r\n        }\r\n        return container;\r\n    }\r\n};\r\nclass ObjParser extends SurfaceParser {\r\n    get type() { return 'obj'; }\r\n    getLoader() {\r\n        return new OBJLoader();\r\n    }\r\n}\r\nParserRegistry.add('obj', ObjParser);\r\nexport default ObjParser;\r\n//# sourceMappingURL=obj-parser.js.map","/**\r\n * @file Ply Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Geometry, Vector3, Face3, Color } from 'three';\r\nimport { ParserRegistry } from '../globals';\r\nimport SurfaceParser from './surface-parser';\r\nconst PLYLoader = (function PLYLoader() {\r\n    this.propertyNameMapping = {};\r\n});\r\nPLYLoader.prototype = {\r\n    constructor: PLYLoader,\r\n    setPropertyNameMapping: function (mapping) {\r\n        this.propertyNameMapping = mapping;\r\n    },\r\n    bin2str: function (buf) {\r\n        var arrayBuffer = new Uint8Array(buf);\r\n        var str = '';\r\n        for (var i = 0; i < buf.byteLength; i++) {\r\n            str += String.fromCharCode(arrayBuffer[i]); // implicitly assumes little-endian\r\n        }\r\n        return str;\r\n    },\r\n    isASCII: function (data) {\r\n        var header = this.parseHeader(this.bin2str(data));\r\n        return header.format === 'ascii';\r\n    },\r\n    parse: function (data) {\r\n        if (data instanceof ArrayBuffer) {\r\n            return (this.isASCII(data)\r\n                ? this.parseASCII(this.bin2str(data))\r\n                : this.parseBinary(data));\r\n        }\r\n        else {\r\n            return this.parseASCII(data);\r\n        }\r\n    },\r\n    parseHeader: function (data) {\r\n        var patternHeader = /ply([\\s\\S]*)end_header\\s/;\r\n        var headerText = '';\r\n        var headerLength = 0;\r\n        var result = patternHeader.exec(data);\r\n        if (result !== null) {\r\n            headerText = result[1];\r\n            headerLength = result[0].length;\r\n        }\r\n        var header = {\r\n            comments: [],\r\n            elements: [],\r\n            headerLength: headerLength\r\n        };\r\n        var lines = headerText.split('\\n');\r\n        var currentElement, lineType, lineValues;\r\n        function makePlyElementProperty(propertValues, propertyNameMapping) {\r\n            var property = {\r\n                type: propertValues[0]\r\n            };\r\n            if (property.type === 'list') {\r\n                property.name = propertValues[3];\r\n                property.countType = propertValues[1];\r\n                property.itemType = propertValues[2];\r\n            }\r\n            else {\r\n                property.name = propertValues[1];\r\n            }\r\n            if (property.name in propertyNameMapping) {\r\n                property.name = propertyNameMapping[property.name];\r\n            }\r\n            return property;\r\n        }\r\n        for (var i = 0; i < lines.length; i++) {\r\n            var line = lines[i];\r\n            line = line.trim();\r\n            if (line === '') {\r\n                continue;\r\n            }\r\n            lineValues = line.split(/\\s+/);\r\n            lineType = lineValues.shift();\r\n            line = lineValues.join(' ');\r\n            switch (lineType) {\r\n                case 'format':\r\n                    header.format = lineValues[0];\r\n                    header.version = lineValues[1];\r\n                    break;\r\n                case 'comment':\r\n                    header.comments.push(line);\r\n                    break;\r\n                case 'element':\r\n                    if (currentElement !== undefined) {\r\n                        header.elements.push(currentElement);\r\n                    }\r\n                    currentElement = {};\r\n                    currentElement.name = lineValues[0];\r\n                    currentElement.count = parseInt(lineValues[1]);\r\n                    currentElement.properties = [];\r\n                    break;\r\n                case 'property':\r\n                    currentElement.properties.push(makePlyElementProperty(lineValues, this.propertyNameMapping));\r\n                    break;\r\n                default:\r\n                    console.log('unhandled', lineType, lineValues);\r\n            }\r\n        }\r\n        if (currentElement !== undefined) {\r\n            header.elements.push(currentElement);\r\n        }\r\n        return header;\r\n    },\r\n    parseASCIINumber: function (n, type) {\r\n        switch (type) {\r\n            case 'char':\r\n            case 'uchar':\r\n            case 'short':\r\n            case 'ushort':\r\n            case 'int':\r\n            case 'uint':\r\n            case 'int8':\r\n            case 'uint8':\r\n            case 'int16':\r\n            case 'uint16':\r\n            case 'int32':\r\n            case 'uint32':\r\n                return parseInt(n);\r\n            case 'float':\r\n            case 'double':\r\n            case 'float32':\r\n            case 'float64':\r\n                return parseFloat(n);\r\n        }\r\n    },\r\n    parseASCIIElement: function (properties, line) {\r\n        var values = line.split(/\\s+/);\r\n        var element = {};\r\n        for (var i = 0; i < properties.length; i++) {\r\n            if (properties[i].type === 'list') {\r\n                var list = [];\r\n                var n = this.parseASCIINumber(values.shift(), properties[i].countType);\r\n                for (var j = 0; j < n; j++) {\r\n                    list.push(this.parseASCIINumber(values.shift(), properties[i].itemType));\r\n                }\r\n                element[properties[i].name] = list;\r\n            }\r\n            else {\r\n                element[properties[i].name] = this.parseASCIINumber(values.shift(), properties[i].type);\r\n            }\r\n        }\r\n        return element;\r\n    },\r\n    parseASCII: function (data) {\r\n        // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n        var geometry = new Geometry();\r\n        var result;\r\n        var header = this.parseHeader(data);\r\n        var patternBody = /end_header\\s([\\s\\S]*)$/;\r\n        var body = '';\r\n        if ((result = patternBody.exec(data)) !== null) {\r\n            body = result[1];\r\n        }\r\n        var lines = body.split('\\n');\r\n        var currentElement = 0;\r\n        var currentElementCount = 0;\r\n        geometry.useColor = false;\r\n        for (var i = 0; i < lines.length; i++) {\r\n            var line = lines[i];\r\n            line = line.trim();\r\n            if (line === '') {\r\n                continue;\r\n            }\r\n            if (currentElementCount >= header.elements[currentElement].count) {\r\n                currentElement++;\r\n                currentElementCount = 0;\r\n            }\r\n            var element = this.parseASCIIElement(header.elements[currentElement].properties, line);\r\n            this.handleElement(geometry, header.elements[currentElement].name, element);\r\n            currentElementCount++;\r\n        }\r\n        return this.postProcess(geometry);\r\n    },\r\n    postProcess: function (geometry) {\r\n        if (geometry.useColor) {\r\n            for (var i = 0; i < geometry.faces.length; i++) {\r\n                geometry.faces[i].vertexColors = [\r\n                    geometry.colors[geometry.faces[i].a],\r\n                    geometry.colors[geometry.faces[i].b],\r\n                    geometry.colors[geometry.faces[i].c]\r\n                ];\r\n            }\r\n            geometry.elementsNeedUpdate = true;\r\n        }\r\n        geometry.computeBoundingSphere();\r\n        return geometry;\r\n    },\r\n    handleElement: function (geometry, elementName, element) {\r\n        if (elementName === 'vertex') {\r\n            geometry.vertices.push(new Vector3(element.x, element.y, element.z));\r\n            if ('red' in element && 'green' in element && 'blue' in element) {\r\n                geometry.useColor = true;\r\n                var color = new Color();\r\n                color.setRGB(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\r\n                geometry.colors.push(color);\r\n            }\r\n        }\r\n        else if (elementName === 'face') {\r\n            var vertexIndices = element.vertex_indices;\r\n            if (vertexIndices.length === 3) {\r\n                geometry.faces.push(new Face3(vertexIndices[0], vertexIndices[1], vertexIndices[2]));\r\n            }\r\n            else if (vertexIndices.length === 4) {\r\n                geometry.faces.push(new Face3(vertexIndices[0], vertexIndices[1], vertexIndices[3]), new Face3(vertexIndices[1], vertexIndices[2], vertexIndices[3]));\r\n            }\r\n        }\r\n    },\r\n    binaryRead: function (dataview, at, type, littleEndian) {\r\n        switch (type) {\r\n            // corespondences for non-specific length types here match rply:\r\n            case 'int8':\r\n            case 'char': return [dataview.getInt8(at), 1];\r\n            case 'uint8':\r\n            case 'uchar': return [dataview.getUint8(at), 1];\r\n            case 'int16':\r\n            case 'short': return [dataview.getInt16(at, littleEndian), 2];\r\n            case 'uint16':\r\n            case 'ushort': return [dataview.getUint16(at, littleEndian), 2];\r\n            case 'int32':\r\n            case 'int': return [dataview.getInt32(at, littleEndian), 4];\r\n            case 'uint32':\r\n            case 'uint': return [dataview.getUint32(at, littleEndian), 4];\r\n            case 'float32':\r\n            case 'float': return [dataview.getFloat32(at, littleEndian), 4];\r\n            case 'float64':\r\n            case 'double': return [dataview.getFloat64(at, littleEndian), 8];\r\n        }\r\n    },\r\n    binaryReadElement: function (dataview, at, properties, littleEndian) {\r\n        var element = {};\r\n        var result;\r\n        var read = 0;\r\n        for (var i = 0; i < properties.length; i++) {\r\n            if (properties[i].type === 'list') {\r\n                var list = [];\r\n                result = this.binaryRead(dataview, at + read, properties[i].countType, littleEndian);\r\n                var n = result[0];\r\n                read += result[1];\r\n                for (var j = 0; j < n; j++) {\r\n                    result = this.binaryRead(dataview, at + read, properties[i].itemType, littleEndian);\r\n                    list.push(result[0]);\r\n                    read += result[1];\r\n                }\r\n                element[properties[i].name] = list;\r\n            }\r\n            else {\r\n                result = this.binaryRead(dataview, at + read, properties[i].type, littleEndian);\r\n                element[properties[i].name] = result[0];\r\n                read += result[1];\r\n            }\r\n        }\r\n        return [element, read];\r\n    },\r\n    parseBinary: function (data) {\r\n        var geometry = new Geometry();\r\n        var header = this.parseHeader(this.bin2str(data));\r\n        var littleEndian = (header.format === 'binary_little_endian');\r\n        var body = new DataView(data, header.headerLength);\r\n        var result;\r\n        var loc = 0;\r\n        for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\r\n            for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\r\n                result = this.binaryReadElement(body, loc, header.elements[currentElement].properties, littleEndian);\r\n                loc += result[1];\r\n                var element = result[0];\r\n                this.handleElement(geometry, header.elements[currentElement].name, element);\r\n            }\r\n        }\r\n        return this.postProcess(geometry);\r\n    }\r\n};\r\nclass PlyParser extends SurfaceParser {\r\n    get type() { return 'ply'; }\r\n    getLoader() {\r\n        return new PLYLoader();\r\n    }\r\n}\r\nParserRegistry.add('ply', PlyParser);\r\nexport default PlyParser;\r\n//# sourceMappingURL=ply-parser.js.map","/**\r\n * @file Csv Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { defaults } from '../utils';\r\nimport { ParserRegistry } from '../globals';\r\nimport Parser from './parser';\r\n/**\r\n * CSV parser\r\n */\r\nclass CsvParser extends Parser {\r\n    /**\r\n       * [constructor description]\r\n       * @param  {Streamer} streamer - the streamer object\r\n       * @param  {Object} params - parameter object\r\n       * @param  {Char} params.delimiter - delimiter character\r\n       * @param  {Char} params.comment - comment character\r\n       * @param  {Boolean} params.columnNames - use first data line as column names\r\n       */\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.delimiter = defaults(p.delimiter, ',');\r\n        this.comment = defaults(p.comment, '#');\r\n        this.columnNames = defaults(p.columnNames, false);\r\n        this.table = {\r\n            name: this.name,\r\n            path: this.path,\r\n            columnNames: [],\r\n            data: []\r\n        };\r\n    }\r\n    get type() { return 'csv'; }\r\n    get __objName() { return 'table'; }\r\n    _parse() {\r\n        const data = this.table.data;\r\n        const reDelimiter = new RegExp('\\\\s*' + this.delimiter + '\\\\s*');\r\n        let j = 0;\r\n        this.streamer.eachChunkOfLines(chunk => {\r\n            const n = chunk.length;\r\n            for (let i = 0; i < n; ++i) {\r\n                const line = chunk[i].trim();\r\n                if (line.startsWith(this.comment))\r\n                    continue;\r\n                const values = line.split(reDelimiter);\r\n                if (j === 0) {\r\n                    this.table.columnNames = values;\r\n                }\r\n                else if (line) {\r\n                    data.push(values);\r\n                }\r\n                ++j;\r\n            }\r\n        });\r\n    }\r\n}\r\nParserRegistry.add('csv', CsvParser);\r\nexport default CsvParser;\r\n//# sourceMappingURL=csv-parser.js.map","/**\r\n * @file Json Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport Parser from './parser';\r\nclass JsonParser extends Parser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.string = defaults(p.string, false);\r\n        this.json = {\r\n            name: this.name,\r\n            path: this.path,\r\n            data: {}\r\n        };\r\n    }\r\n    get type() { return 'json'; }\r\n    get __objName() { return 'json'; }\r\n    get isJson() { return true; }\r\n    _parse() {\r\n        if (this.streamer.isBinary() || this.string) {\r\n            this.json.data = JSON.parse(this.streamer.asText());\r\n        }\r\n        else {\r\n            this.json.data = this.streamer.data;\r\n        }\r\n    }\r\n}\r\nParserRegistry.add('json', JsonParser);\r\nexport default JsonParser;\r\n//# sourceMappingURL=json-parser.js.map","/**\r\n * @file Msgpack Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport Parser from './parser';\r\nimport { decodeMsgpack } from '../../lib/mmtf.es6';\r\nclass MsgpackParser extends Parser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.msgpack = {\r\n            name: this.name,\r\n            path: this.path,\r\n            data: undefined\r\n        };\r\n    }\r\n    get type() { return 'msgpack'; }\r\n    get __objName() { return 'msgpack'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        if (Debug)\r\n            Log.time('MsgpackParser._parse ' + this.name);\r\n        this.msgpack.data = decodeMsgpack(this.streamer.data);\r\n        if (Debug)\r\n            Log.timeEnd('MsgpackParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('msgpack', MsgpackParser);\r\nexport default MsgpackParser;\r\n//# sourceMappingURL=msgpack-parser.js.map","/**\r\n * @file Netcdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport Parser from './parser';\r\nimport NetcdfReader from '../utils/netcdf-reader';\r\nclass NetcdfParser extends Parser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.netcdf = {\r\n            name: this.name,\r\n            path: this.path,\r\n            data: undefined\r\n        };\r\n    }\r\n    get type() { return 'netcdf'; }\r\n    get __objName() { return 'netcdf'; }\r\n    get isBinary() { return true; }\r\n    _parse() {\r\n        if (Debug)\r\n            Log.time('NetcdfParser._parse ' + this.name);\r\n        this.netcdf.data = new NetcdfReader(this.streamer.data);\r\n        if (Debug)\r\n            Log.timeEnd('NetcdfParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('netcdf', NetcdfParser);\r\nexport default NetcdfParser;\r\n//# sourceMappingURL=netcdf-parser.js.map","/**\r\n * @file Text Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ParserRegistry } from '../globals';\r\nimport Parser from './parser';\r\nclass TextParser extends Parser {\r\n    constructor(streamer, params) {\r\n        super(streamer, params);\r\n        this.text = {\r\n            name: this.name,\r\n            path: this.path,\r\n            data: ''\r\n        };\r\n    }\r\n    get type() { return 'text'; }\r\n    get __objName() { return 'text'; }\r\n    _parse() {\r\n        this.text.data = this.streamer.asText();\r\n    }\r\n}\r\nParserRegistry.add('txt', TextParser);\r\nParserRegistry.add('text', TextParser);\r\nexport default TextParser;\r\n//# sourceMappingURL=text-parser.js.map","/**\r\n * @file Parse Xml\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nconst reStrip = /^['\"]|['\"]$/g;\r\nconst reTag = /^<([\\w-:.]+)\\s*/;\r\nconst reContent = /^([^<]*)/;\r\nconst reAttr = /([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/;\r\nfunction strip(val) {\r\n    return val.replace(reStrip, '');\r\n}\r\nexport function parseXml(xml) {\r\n    // trim and strip comments\r\n    xml = xml.trim().replace(/<!--[\\s\\S]*?-->/g, '');\r\n    return document();\r\n    function document() {\r\n        return {\r\n            declaration: declaration(),\r\n            root: tag()\r\n        };\r\n    }\r\n    function declaration() {\r\n        const m = match(/^<\\?xml\\s*/);\r\n        if (!m)\r\n            return;\r\n        // tag\r\n        const node = {\r\n            attributes: {}\r\n        };\r\n        // attributes\r\n        while (!(eos() || is('?>'))) {\r\n            const attr = attribute();\r\n            if (!attr)\r\n                return node;\r\n            node.attributes[attr.name] = attr.value;\r\n        }\r\n        match(/\\?>\\s*/);\r\n        return node;\r\n    }\r\n    function tag() {\r\n        const m = match(reTag);\r\n        if (!m)\r\n            return;\r\n        // name\r\n        const node = {\r\n            name: m[1],\r\n            attributes: {},\r\n            children: []\r\n        };\r\n        // attributes\r\n        while (!(eos() || is('>') || is('?>') || is('/>'))) {\r\n            const attr = attribute();\r\n            if (!attr)\r\n                return node;\r\n            node.attributes[attr.name] = attr.value;\r\n        }\r\n        // self closing tag\r\n        if (match(/^\\s*\\/>\\s*/)) {\r\n            return node;\r\n        }\r\n        match(/\\??>\\s*/);\r\n        // content\r\n        node.content = content();\r\n        // children\r\n        let child;\r\n        while ((child = tag())) {\r\n            node.children.push(child);\r\n        }\r\n        // closing\r\n        match(/^<\\/[\\w-:.]+>\\s*/);\r\n        return node;\r\n    }\r\n    function content() {\r\n        const m = match(reContent);\r\n        if (m)\r\n            return m[1];\r\n        return '';\r\n    }\r\n    function attribute() {\r\n        const m = match(reAttr);\r\n        if (!m)\r\n            return;\r\n        return { name: m[1], value: strip(m[2]) };\r\n    }\r\n    function match(re) {\r\n        const m = xml.match(re);\r\n        if (!m)\r\n            return;\r\n        xml = xml.slice(m[0].length);\r\n        return m;\r\n    }\r\n    function eos() {\r\n        return xml.length === 0;\r\n    }\r\n    function is(prefix) {\r\n        return xml.indexOf(prefix) === 0;\r\n    }\r\n}\r\n//# sourceMappingURL=parse-xml.js.map","/**\r\n * @file Xml Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport { defaults } from '../utils';\r\n// @ts-ignore: unused import XMLNode required for declaration only\r\nimport { parseXml } from '../utils/parse-xml';\r\nimport Parser from './parser';\r\nclass XmlParser extends Parser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.useDomParser = defaults(p.useDomParser, false);\r\n        this.xml = {\r\n            name: this.name,\r\n            path: this.path,\r\n            data: {}\r\n        };\r\n    }\r\n    get type() { return 'xml'; }\r\n    get __objName() { return 'xml'; }\r\n    get isXml() { return true; }\r\n    __xmlParser(xml) {\r\n        return parseXml(xml);\r\n    }\r\n    __domParser(xml) {\r\n        const domParser = new window.DOMParser();\r\n        return domParser.parseFromString(xml, 'text/xml');\r\n    }\r\n    _parse() {\r\n        if (Debug)\r\n            Log.time('XmlParser._parse ' + this.name);\r\n        if (this.useDomParser) {\r\n            if (this.streamer.data instanceof Document) { //TS conversion: stripped the window prefix from window.Document\r\n                this.xml.data = this.streamer.data;\r\n            }\r\n            else {\r\n                this.xml.data = this.__domParser(this.streamer.asText());\r\n            }\r\n        }\r\n        else {\r\n            this.xml.data = this.__xmlParser(this.streamer.asText());\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('XmlParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('xml', XmlParser);\r\nexport default XmlParser;\r\n//# sourceMappingURL=xml-parser.js.map","/**\r\n * @file Validation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Vector3, Color } from 'three';\r\nimport { Debug, Log } from '../globals';\r\nimport { defaults } from '../utils';\r\nimport { ClashPicker } from '../utils/picker';\r\nimport { uniformArray3 } from '../math/array-utils';\r\nimport { guessElement } from '../structure/structure-utils';\r\nfunction getNamedItem(a, name) {\r\n    const item = a.getNamedItem(name);\r\n    return item !== null ? item.value : '';\r\n}\r\nfunction getSele(a, atomname, useAltcode = false) {\r\n    const icode = getNamedItem(a, 'icode').trim();\r\n    const chain = getNamedItem(a, 'chain').trim();\r\n    const altcode = getNamedItem(a, 'altcode');\r\n    let sele = getNamedItem(a, 'resnum');\r\n    if (icode)\r\n        sele += '^' + icode;\r\n    if (chain)\r\n        sele += ':' + chain;\r\n    if (atomname)\r\n        sele += '.' + atomname;\r\n    if (useAltcode && altcode.trim())\r\n        sele += '%' + altcode;\r\n    sele += '/' + (parseInt(getNamedItem(a, 'model')) - 1);\r\n    return sele;\r\n}\r\nfunction getResSele(a) {\r\n    const chain = getNamedItem(a, 'chain').trim();\r\n    const rescode = getNamedItem(a, 'rescode');\r\n    const resnum = getNamedItem(a, 'resnum');\r\n    let sele = `[${rescode}]${resnum}`;\r\n    if (chain)\r\n        sele += `:${chain}`;\r\n    return sele;\r\n}\r\nfunction setBitDict(dict, key, bit) {\r\n    if (dict[key] === undefined) {\r\n        dict[key] = bit;\r\n    }\r\n    else {\r\n        dict[key] |= bit;\r\n    }\r\n}\r\nfunction hasAttrValue(attr, value) {\r\n    return attr !== null && attr.value === value;\r\n}\r\nfunction getAtomSele(ap) {\r\n    const icode = ap.inscode;\r\n    const chain = ap.chainname;\r\n    const atomname = ap.atomname;\r\n    const altcode = ap.altloc;\r\n    let sele = ap.resno + '';\r\n    if (icode)\r\n        sele += '^' + icode;\r\n    if (chain)\r\n        sele += ':' + chain;\r\n    if (atomname)\r\n        sele += '.' + atomname;\r\n    if (altcode)\r\n        sele += '%' + altcode;\r\n    sele += '/' + ap.modelIndex;\r\n    return sele;\r\n}\r\nfunction getProblemCount(clashDict, g, ga) {\r\n    let geoProblemCount = 0;\r\n    const clashes = g.getElementsByTagName('clash');\r\n    for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n        if (clashDict[getNamedItem(clashes[j].attributes, 'cid')]) {\r\n            geoProblemCount += 1;\r\n            break;\r\n        }\r\n    }\r\n    const angleOutliers = g.getElementsByTagName('angle-outlier');\r\n    if (angleOutliers.length > 0) {\r\n        geoProblemCount += 1;\r\n    }\r\n    const bondOutliers = g.getElementsByTagName('bond-outlier');\r\n    if (bondOutliers.length > 0) {\r\n        geoProblemCount += 1;\r\n    }\r\n    const planeOutliers = g.getElementsByTagName('plane-outlier');\r\n    if (planeOutliers.length > 0) {\r\n        geoProblemCount += 1;\r\n    }\r\n    if (hasAttrValue(ga.getNamedItem('rota'), 'OUTLIER')) {\r\n        geoProblemCount += 1;\r\n    }\r\n    if (hasAttrValue(ga.getNamedItem('rama'), 'OUTLIER')) {\r\n        geoProblemCount += 1;\r\n    }\r\n    if (hasAttrValue(ga.getNamedItem('RNApucker'), 'outlier')) {\r\n        geoProblemCount += 1;\r\n    }\r\n    return geoProblemCount;\r\n}\r\nclass Validation {\r\n    constructor(name, path) {\r\n        this.name = name;\r\n        this.path = path;\r\n        this.rsrzDict = {};\r\n        this.rsccDict = {};\r\n        /**\r\n         * Random Coil Index (RCI) - evaluates the proximity of residue structural\r\n         * and dynamic properties to the properties of flexible random coil regions\r\n         * from NMR chemical shifts.\r\n         *\r\n         * Mark V. Berjanskii and David S. Wishart (2005)\r\n         * A Simple Method To Predict Protein Flexibility Using Secondary Chemical Shifts\r\n         * J. Am. Chem. Soc., 2005, 127 (43), pp 14970–14971\r\n         * http://pubs.acs.org/doi/abs/10.1021/ja054842f\r\n         *\r\n         * Mark V. Berjanskii and David S. Wishart (2008)\r\n         * Application of the random coil index to studying protein flexibility.\r\n         * J Biomol NMR. 2008 Jan;40(1):31-48. Epub 2007 Nov 6.\r\n         * http://www.springerlink.com/content/2966482w10306126/\r\n         */\r\n        this.rciDict = {};\r\n        this.clashDict = {};\r\n        this.clashArray = [];\r\n        this.geoDict = {};\r\n        this.geoAtomDict = {};\r\n        this.atomDict = {};\r\n        this.clashSele = 'NONE';\r\n    }\r\n    get type() { return 'validation'; }\r\n    fromXml(xml) {\r\n        if (Debug)\r\n            Log.time('Validation.fromXml');\r\n        const rsrzDict = this.rsrzDict;\r\n        const rsccDict = this.rsccDict;\r\n        const rciDict = this.rciDict;\r\n        const clashDict = this.clashDict;\r\n        const clashArray = this.clashArray;\r\n        const geoDict = this.geoDict;\r\n        const geoAtomDict = this.geoAtomDict;\r\n        const atomDict = this.atomDict;\r\n        const entries = xml.getElementsByTagName('Entry');\r\n        if (entries.length === 1) {\r\n            const chemicalShiftLists = entries[0].getElementsByTagName('chemical_shift_list');\r\n            if (chemicalShiftLists.length === 1) {\r\n                const randomCoilIndices = chemicalShiftLists[0].getElementsByTagName('random_coil_index');\r\n                for (let j = 0, jl = randomCoilIndices.length; j < jl; ++j) {\r\n                    const rcia = randomCoilIndices[j].attributes;\r\n                    const sele = getResSele(rcia);\r\n                    rciDict[sele] = parseFloat(getNamedItem(rcia, 'value'));\r\n                }\r\n            }\r\n        }\r\n        const groups = xml.getElementsByTagName('ModelledSubgroup');\r\n        const _clashDict = {};\r\n        const clashList = [];\r\n        if (Debug)\r\n            Log.time('Validation.fromXml#clashDict');\r\n        for (let i = 0, il = groups.length; i < il; ++i) {\r\n            const g = groups[i];\r\n            const ga = g.attributes;\r\n            const sele = getSele(ga);\r\n            if (ga.getNamedItem('rsrz') !== null) {\r\n                rsrzDict[sele] = parseFloat(getNamedItem(ga, 'rsrz'));\r\n            }\r\n            if (ga.getNamedItem('rscc') !== null) {\r\n                rsccDict[sele] = parseFloat(getNamedItem(ga, 'rscc'));\r\n            }\r\n            const seleAttr = xml.createAttribute('sele');\r\n            seleAttr.value = sele;\r\n            ga.setNamedItem(seleAttr);\r\n            const clashes = g.getElementsByTagName('clash');\r\n            for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n                const ca = clashes[j].attributes;\r\n                const atom = getNamedItem(ca, 'atom');\r\n                if (guessElement(atom) !== 'H') {\r\n                    const cid = getNamedItem(ca, 'cid');\r\n                    const atomSele = getSele(ga, atom, true);\r\n                    atomDict[atomSele] = true;\r\n                    if (_clashDict[cid] === undefined) {\r\n                        _clashDict[cid] = {\r\n                            sele1: atomSele,\r\n                            res1: sele\r\n                        };\r\n                    }\r\n                    else {\r\n                        const c = _clashDict[cid];\r\n                        if (c.res1 !== sele) {\r\n                            c.sele2 = atomSele;\r\n                            c.res2 = sele;\r\n                            clashList.push(c.res1, sele);\r\n                            clashDict[cid] = c;\r\n                            clashArray.push(c);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (Debug)\r\n            Log.timeEnd('Validation.fromXml#clashDict');\r\n        for (let i = 0, il = groups.length; i < il; ++i) {\r\n            const g = groups[i];\r\n            const ga = g.attributes;\r\n            const sele = getNamedItem(ga, 'sele');\r\n            const isPolymer = getNamedItem(ga, 'seq') !== '.';\r\n            if (isPolymer) {\r\n                const geoProblemCount = getProblemCount(clashDict, g, ga);\r\n                if (geoProblemCount > 0) {\r\n                    geoDict[sele] = geoProblemCount;\r\n                }\r\n            }\r\n            else {\r\n                const clashes = g.getElementsByTagName('clash');\r\n                const mogBondOutliers = g.getElementsByTagName('mog-bond-outlier');\r\n                const mogAngleOutliers = g.getElementsByTagName('mog-angle-outlier');\r\n                if (mogBondOutliers.length > 0 || mogAngleOutliers.length > 0 || clashes.length > 0) {\r\n                    const atomDict = {};\r\n                    geoAtomDict[sele] = atomDict;\r\n                    for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n                        const ca = clashes[j].attributes;\r\n                        if (clashDict[getNamedItem(ca, 'cid')]) {\r\n                            setBitDict(atomDict, getNamedItem(ca, 'atom'), 1);\r\n                        }\r\n                    }\r\n                    for (let j = 0, jl = mogBondOutliers.length; j < jl; ++j) {\r\n                        const mbo = mogBondOutliers[j].attributes;\r\n                        getNamedItem(mbo, 'atoms').split(',').forEach(function (atomname) {\r\n                            setBitDict(atomDict, atomname, 2);\r\n                        });\r\n                    }\r\n                    for (let j = 0, jl = mogAngleOutliers.length; j < jl; ++j) {\r\n                        const mao = mogAngleOutliers[j].attributes;\r\n                        getNamedItem(mao, 'atoms').split(',').forEach(function (atomname) {\r\n                            setBitDict(atomDict, atomname, 4);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.clashSele = clashList.length ? clashList.join(' OR ') : 'NONE';\r\n        if (Debug)\r\n            Log.timeEnd('Validation.fromXml');\r\n    }\r\n    getClashData(params) {\r\n        if (Debug)\r\n            Log.time('Validation.getClashData');\r\n        const p = params || {};\r\n        const s = p.structure;\r\n        const atomSet = s.atomSet; // TODO\r\n        const c = new Color(defaults(p.color, '#f0027f'));\r\n        const ap1 = s.getAtomProxy();\r\n        const ap2 = s.getAtomProxy();\r\n        const vDir = new Vector3();\r\n        const vPos1 = new Vector3();\r\n        const vPos2 = new Vector3();\r\n        const clashArray = this.clashArray;\r\n        const n = clashArray.length;\r\n        const position1 = new Float32Array(n * 3);\r\n        const position2 = new Float32Array(n * 3);\r\n        const color = uniformArray3(n, c.r, c.g, c.b);\r\n        const radius = new Float32Array(n);\r\n        const picking = new Float32Array(n);\r\n        if (Debug)\r\n            Log.time('Validation.getClashData#atomDict');\r\n        const atomDict = this.atomDict;\r\n        s.eachAtom(function (ap) {\r\n            const sele = getAtomSele(ap);\r\n            if (atomDict[sele] === true) {\r\n                atomDict[sele] = ap.index;\r\n            }\r\n        });\r\n        if (Debug)\r\n            Log.timeEnd('Validation.getClashData#atomDict');\r\n        let i = 0;\r\n        clashArray.forEach(function (c, idx) {\r\n            ap1.index = atomDict[c.sele1]; // TODO\r\n            ap2.index = atomDict[c.sele2]; // TODO\r\n            if (ap1.index === undefined || ap2.index === undefined ||\r\n                !atomSet.isSet(ap1.index, ap2.index))\r\n                return;\r\n            vDir.subVectors(ap2, ap1).setLength(ap1.vdw); // TODO\r\n            vPos1.copy(ap1).add(vDir); // TODO\r\n            vDir.subVectors(ap1, ap2).setLength(ap2.vdw); // TODO\r\n            vPos2.copy(ap2).add(vDir); // TODO\r\n            const dHalf = ap1.distanceTo(ap2) / 2;\r\n            const r1 = Math.sqrt(ap1.vdw * ap1.vdw - dHalf * dHalf);\r\n            const r2 = Math.sqrt(ap2.vdw * ap2.vdw - dHalf * dHalf);\r\n            vPos1.toArray(position1, i * 3); // TODO\r\n            vPos2.toArray(position2, i * 3);\r\n            radius[i] = (r1 + r2) / 2;\r\n            picking[i] = idx;\r\n            ++i;\r\n        });\r\n        if (Debug)\r\n            Log.timeEnd('Validation.getClashData');\r\n        return {\r\n            position1: position1.subarray(0, i * 3),\r\n            position2: position2.subarray(0, i * 3),\r\n            color: color.subarray(0, i * 3),\r\n            color2: color.subarray(0, i * 3),\r\n            radius: radius.subarray(0, i),\r\n            picking: new ClashPicker(picking.subarray(0, i), this, s)\r\n        };\r\n    }\r\n}\r\nexport default Validation;\r\n//# sourceMappingURL=validation.js.map","/**\r\n * @file Validation Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Debug, Log, ParserRegistry } from '../globals';\r\nimport XmlParser from './xml-parser';\r\nimport Validation from '../structure/validation';\r\nclass ValidationParser extends XmlParser {\r\n    constructor(streamer, params) {\r\n        const p = params || {};\r\n        super(streamer, p);\r\n        this.useDomParser = true;\r\n        this.validation = new Validation(this.name, this.path);\r\n    }\r\n    get __objName() { return 'validation'; }\r\n    get isXml() { return true; }\r\n    _parse() {\r\n        super._parse();\r\n        if (Debug)\r\n            Log.time('ValidationParser._parse ' + this.name);\r\n        this.validation.fromXml(this.xml.data);\r\n        if (Debug)\r\n            Log.timeEnd('ValidationParser._parse ' + this.name);\r\n    }\r\n}\r\nParserRegistry.add('validation', ValidationParser);\r\nexport default ValidationParser;\r\n//# sourceMappingURL=validation-parser.js.map","\r\n// https://github.com/nodeca/pako\r\n// MIT License, Copyright (c) 2014 by Vitaly Puzrin\r\n\r\n\r\n// 'use strict';\r\n\r\n\r\n// var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\r\n//                 (typeof Uint16Array !== 'undefined') &&\r\n//                 (typeof Int32Array !== 'undefined');\r\n\r\n\r\nfunction assign(obj /*from1, from2, from3, ...*/) {\r\n  var sources = Array.prototype.slice.call(arguments, 1);\r\n  while (sources.length) {\r\n    var source = sources.shift();\r\n    if (!source) { continue; }\r\n\r\n    if (typeof source !== 'object') {\r\n      throw new TypeError(source + 'must be non-object');\r\n    }\r\n\r\n    for (var p in source) {\r\n      if (source.hasOwnProperty(p)) {\r\n        obj[p] = source[p];\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n\r\n// reduce buffer size, avoiding mem copy\r\nfunction shrinkBuf(buf, size) {\r\n  if (buf.length === size) { return buf; }\r\n  if (buf.subarray) { return buf.subarray(0, size); }\r\n  buf.length = size;\r\n  return buf;\r\n}\r\n\r\n\r\nfunction arraySet(dest, src, src_offs, len, dest_offs) {\r\n  if (src.subarray && dest.subarray) {\r\n    dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\r\n    return;\r\n  }\r\n  // Fallback to ordinary array\r\n  for (var i = 0; i < len; i++) {\r\n    dest[dest_offs + i] = src[src_offs + i];\r\n  }\r\n}\r\n\r\n// Join array of chunks to single array.\r\nfunction flattenChunks(chunks) {\r\n  var i, l, len, pos, chunk, result;\r\n\r\n  // calculate data length\r\n  len = 0;\r\n  for (i = 0, l = chunks.length; i < l; i++) {\r\n    len += chunks[i].length;\r\n  }\r\n\r\n  // join chunks\r\n  result = new Uint8Array(len);\r\n  pos = 0;\r\n  for (i = 0, l = chunks.length; i < l; i++) {\r\n    chunk = chunks[i];\r\n    result.set(chunk, pos);\r\n    pos += chunk.length;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\r\n// It doesn't worth to make additional optimizationa as in original.\r\n// Small size is preferable.\r\n\r\nfunction adler32(adler, buf, len, pos) {\r\n  var s1 = (adler & 0xffff) |0,\r\n      s2 = ((adler >>> 16) & 0xffff) |0,\r\n      n = 0;\r\n\r\n  while (len !== 0) {\r\n    // Set limit ~ twice less than 5552, to keep\r\n    // s2 in 31-bits, because we force signed ints.\r\n    // in other case %= will fail.\r\n    n = len > 2000 ? 2000 : len;\r\n    len -= n;\r\n\r\n    do {\r\n      s1 = (s1 + buf[pos++]) |0;\r\n      s2 = (s2 + s1) |0;\r\n    } while (--n);\r\n\r\n    s1 %= 65521;\r\n    s2 %= 65521;\r\n  }\r\n\r\n  return (s1 | (s2 << 16)) |0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// Note: we can't get significant speed boost here.\r\n// So write code to minimize size - no pregenerated tables\r\n// and array tools dependencies.\r\n\r\n\r\n// Use ordinary array, since untyped makes no boost here\r\nfunction makeTable() {\r\n  var c, table = [];\r\n\r\n  for (var n = 0; n < 256; n++) {\r\n    c = n;\r\n    for (var k = 0; k < 8; k++) {\r\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\r\n    }\r\n    table[n] = c;\r\n  }\r\n\r\n  return table;\r\n}\r\n\r\n// Create table on load. Just 255 signed longs. Not a problem.\r\nvar crcTable = makeTable();\r\n\r\n\r\nfunction crc32(crc, buf, len, pos) {\r\n  var t = crcTable,\r\n      end = pos + len;\r\n\r\n  crc ^= -1;\r\n\r\n  for (var i = pos; i < end; i++) {\r\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\r\n  }\r\n\r\n  return (crc ^ (-1)); // >>> 0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// See state defs from inflate.js\r\nvar BAD$1 = 30;       /* got a data error -- remain here until reset */\r\nvar TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\r\n\r\n/*\r\n   Decode literal, length, and distance codes and write out the resulting\r\n   literal and match bytes until either not enough input or output is\r\n   available, an end-of-block is encountered, or a data error is encountered.\r\n   When large enough input and output buffers are supplied to inflate(), for\r\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\r\n   inflate execution time is spent in this routine.\r\n\r\n   Entry assumptions:\r\n\r\n        state.mode === LEN\r\n        strm.avail_in >= 6\r\n        strm.avail_out >= 258\r\n        start >= strm.avail_out\r\n        state.bits < 8\r\n\r\n   On return, state.mode is one of:\r\n\r\n        LEN -- ran out of enough output space or enough available input\r\n        TYPE -- reached end of block code, inflate() to interpret next block\r\n        BAD -- error in block data\r\n\r\n   Notes:\r\n\r\n    - The maximum input bits used by a length/distance pair is 15 bits for the\r\n      length code, 5 bits for the length extra, 15 bits for the distance code,\r\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\r\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\r\n      checking for available input while decoding.\r\n\r\n    - The maximum bytes that a single length/distance pair can output is 258\r\n      bytes, which is the maximum length that can be coded.  inflate_fast()\r\n      requires strm.avail_out >= 258 for each loop to avoid checking for\r\n      output space.\r\n */\r\n// module.exports =\r\nfunction inflate_fast(strm, start) {\r\n  var state;\r\n  var _in;                    /* local strm.input */\r\n  var last;                   /* have enough input while in < last */\r\n  var _out;                   /* local strm.output */\r\n  var beg;                    /* inflate()'s initial strm.output */\r\n  var end;                    /* while out < end, enough space available */\r\n//#ifdef INFLATE_STRICT\r\n  var dmax;                   /* maximum distance from zlib header */\r\n//#endif\r\n  var wsize;                  /* window size or zero if not using window */\r\n  var whave;                  /* valid bytes in the window */\r\n  var wnext;                  /* window write index */\r\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\r\n  var s_window;               /* allocated sliding window, if wsize != 0 */\r\n  var hold;                   /* local strm.hold */\r\n  var bits;                   /* local strm.bits */\r\n  var lcode;                  /* local strm.lencode */\r\n  var dcode;                  /* local strm.distcode */\r\n  var lmask;                  /* mask for first level of length codes */\r\n  var dmask;                  /* mask for first level of distance codes */\r\n  var here;                   /* retrieved table entry */\r\n  var op;                     /* code bits, operation, extra bits, or */\r\n                              /*  window position, window bytes to copy */\r\n  var len;                    /* match length, unused bytes */\r\n  var dist;                   /* match distance */\r\n  var from;                   /* where to copy match from */\r\n  var from_source;\r\n\r\n\r\n  var input, output; // JS specific, because we have no pointers\r\n\r\n  /* copy state to local variables */\r\n  state = strm.state;\r\n  //here = state.here;\r\n  _in = strm.next_in;\r\n  input = strm.input;\r\n  last = _in + (strm.avail_in - 5);\r\n  _out = strm.next_out;\r\n  output = strm.output;\r\n  beg = _out - (start - strm.avail_out);\r\n  end = _out + (strm.avail_out - 257);\r\n//#ifdef INFLATE_STRICT\r\n  dmax = state.dmax;\r\n//#endif\r\n  wsize = state.wsize;\r\n  whave = state.whave;\r\n  wnext = state.wnext;\r\n  s_window = state.window;\r\n  hold = state.hold;\r\n  bits = state.bits;\r\n  lcode = state.lencode;\r\n  dcode = state.distcode;\r\n  lmask = (1 << state.lenbits) - 1;\r\n  dmask = (1 << state.distbits) - 1;\r\n\r\n\r\n  /* decode literals and length/distances until end-of-block or not enough\r\n     input data or output space */\r\n\r\n  top:\r\n  do {\r\n    if (bits < 15) {\r\n      hold += input[_in++] << bits;\r\n      bits += 8;\r\n      hold += input[_in++] << bits;\r\n      bits += 8;\r\n    }\r\n\r\n    here = lcode[hold & lmask];\r\n\r\n    dolen:\r\n    for (;;) { // Goto emulation\r\n      op = here >>> 24/*here.bits*/;\r\n      hold >>>= op;\r\n      bits -= op;\r\n      op = (here >>> 16) & 0xff/*here.op*/;\r\n      if (op === 0) {                          /* literal */\r\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\r\n        //        \"inflate:         literal '%c'\\n\" :\r\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\r\n        output[_out++] = here & 0xffff/*here.val*/;\r\n      }\r\n      else if (op & 16) {                     /* length base */\r\n        len = here & 0xffff/*here.val*/;\r\n        op &= 15;                           /* number of extra bits */\r\n        if (op) {\r\n          if (bits < op) {\r\n            hold += input[_in++] << bits;\r\n            bits += 8;\r\n          }\r\n          len += hold & ((1 << op) - 1);\r\n          hold >>>= op;\r\n          bits -= op;\r\n        }\r\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\r\n        if (bits < 15) {\r\n          hold += input[_in++] << bits;\r\n          bits += 8;\r\n          hold += input[_in++] << bits;\r\n          bits += 8;\r\n        }\r\n        here = dcode[hold & dmask];\r\n\r\n        dodist:\r\n        for (;;) { // goto emulation\r\n          op = here >>> 24/*here.bits*/;\r\n          hold >>>= op;\r\n          bits -= op;\r\n          op = (here >>> 16) & 0xff/*here.op*/;\r\n\r\n          if (op & 16) {                      /* distance base */\r\n            dist = here & 0xffff/*here.val*/;\r\n            op &= 15;                       /* number of extra bits */\r\n            if (bits < op) {\r\n              hold += input[_in++] << bits;\r\n              bits += 8;\r\n              if (bits < op) {\r\n                hold += input[_in++] << bits;\r\n                bits += 8;\r\n              }\r\n            }\r\n            dist += hold & ((1 << op) - 1);\r\n//#ifdef INFLATE_STRICT\r\n            if (dist > dmax) {\r\n              strm.msg = 'invalid distance too far back';\r\n              state.mode = BAD$1;\r\n              break top;\r\n            }\r\n//#endif\r\n            hold >>>= op;\r\n            bits -= op;\r\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\r\n            op = _out - beg;                /* max distance in output */\r\n            if (dist > op) {                /* see if copy from window */\r\n              op = dist - op;               /* distance back in window */\r\n              if (op > whave) {\r\n                if (state.sane) {\r\n                  strm.msg = 'invalid distance too far back';\r\n                  state.mode = BAD$1;\r\n                  break top;\r\n                }\r\n\r\n// (!) This block is disabled in zlib defailts,\r\n// don't enable it for binary compatibility\r\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\r\n//                if (len <= op - whave) {\r\n//                  do {\r\n//                    output[_out++] = 0;\r\n//                  } while (--len);\r\n//                  continue top;\r\n//                }\r\n//                len -= op - whave;\r\n//                do {\r\n//                  output[_out++] = 0;\r\n//                } while (--op > whave);\r\n//                if (op === 0) {\r\n//                  from = _out - dist;\r\n//                  do {\r\n//                    output[_out++] = output[from++];\r\n//                  } while (--len);\r\n//                  continue top;\r\n//                }\r\n//#endif\r\n              }\r\n              from = 0; // window index\r\n              from_source = s_window;\r\n              if (wnext === 0) {           /* very common case */\r\n                from += wsize - op;\r\n                if (op < len) {         /* some from window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = _out - dist;  /* rest from output */\r\n                  from_source = output;\r\n                }\r\n              }\r\n              else if (wnext < op) {      /* wrap around window */\r\n                from += wsize + wnext - op;\r\n                op -= wnext;\r\n                if (op < len) {         /* some from end of window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = 0;\r\n                  if (wnext < len) {  /* some from start of window */\r\n                    op = wnext;\r\n                    len -= op;\r\n                    do {\r\n                      output[_out++] = s_window[from++];\r\n                    } while (--op);\r\n                    from = _out - dist;      /* rest from output */\r\n                    from_source = output;\r\n                  }\r\n                }\r\n              }\r\n              else {                      /* contiguous in window */\r\n                from += wnext - op;\r\n                if (op < len) {         /* some from window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = _out - dist;  /* rest from output */\r\n                  from_source = output;\r\n                }\r\n              }\r\n              while (len > 2) {\r\n                output[_out++] = from_source[from++];\r\n                output[_out++] = from_source[from++];\r\n                output[_out++] = from_source[from++];\r\n                len -= 3;\r\n              }\r\n              if (len) {\r\n                output[_out++] = from_source[from++];\r\n                if (len > 1) {\r\n                  output[_out++] = from_source[from++];\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              from = _out - dist;          /* copy direct from output */\r\n              do {                        /* minimum length is three */\r\n                output[_out++] = output[from++];\r\n                output[_out++] = output[from++];\r\n                output[_out++] = output[from++];\r\n                len -= 3;\r\n              } while (len > 2);\r\n              if (len) {\r\n                output[_out++] = output[from++];\r\n                if (len > 1) {\r\n                  output[_out++] = output[from++];\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\r\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\r\n            continue dodist;\r\n          }\r\n          else {\r\n            strm.msg = 'invalid distance code';\r\n            state.mode = BAD$1;\r\n            break top;\r\n          }\r\n\r\n          break; // need to emulate goto via \"continue\"\r\n        }\r\n      }\r\n      else if ((op & 64) === 0) {              /* 2nd level length code */\r\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\r\n        continue dolen;\r\n      }\r\n      else if (op & 32) {                     /* end-of-block */\r\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\r\n        state.mode = TYPE$1;\r\n        break top;\r\n      }\r\n      else {\r\n        strm.msg = 'invalid literal/length code';\r\n        state.mode = BAD$1;\r\n        break top;\r\n      }\r\n\r\n      break; // need to emulate goto via \"continue\"\r\n    }\r\n  } while (_in < last && _out < end);\r\n\r\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\r\n  len = bits >> 3;\r\n  _in -= len;\r\n  bits -= len << 3;\r\n  hold &= (1 << bits) - 1;\r\n\r\n  /* update state and return */\r\n  strm.next_in = _in;\r\n  strm.next_out = _out;\r\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\r\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\r\n  state.hold = hold;\r\n  state.bits = bits;\r\n  return;\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\n// var utils = require('../utils/common');\r\n\r\nvar MAXBITS = 15;\r\nvar ENOUGH_LENS$1 = 852;\r\nvar ENOUGH_DISTS$1 = 592;\r\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\r\n\r\nvar CODES$1 = 0;\r\nvar LENS$1 = 1;\r\nvar DISTS$1 = 2;\r\n\r\nvar lbase = [ /* Length codes 257..285 base */\r\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\r\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\r\n];\r\n\r\nvar lext = [ /* Length codes 257..285 extra */\r\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\r\n];\r\n\r\nvar dbase = [ /* Distance codes 0..29 base */\r\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\r\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\r\n  8193, 12289, 16385, 24577, 0, 0\r\n];\r\n\r\nvar dext = [ /* Distance codes 0..29 extra */\r\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\r\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\r\n  28, 28, 29, 29, 64, 64\r\n];\r\n\r\n// module.exports =\r\nfunction inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\r\n{\r\n  var bits = opts.bits;\r\n      //here = opts.here; /* table entry for duplication */\r\n\r\n  var len = 0;               /* a code's length in bits */\r\n  var sym = 0;               /* index of code symbols */\r\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\r\n  var root = 0;              /* number of index bits for root table */\r\n  var curr = 0;              /* number of index bits for current table */\r\n  var drop = 0;              /* code bits to drop for sub-table */\r\n  var left = 0;                   /* number of prefix codes available */\r\n  var used = 0;              /* code entries in table used */\r\n  var huff = 0;              /* Huffman code */\r\n  var incr;              /* for incrementing code, index */\r\n  var fill;              /* index for replicating entries */\r\n  var low;               /* low bits for current root entry */\r\n  var mask;              /* mask for low root bits */\r\n  var next;             /* next available space in table */\r\n  var base = null;     /* base value table to use */\r\n  var base_index = 0;\r\n//  var shoextra;    /* extra bits table to use */\r\n  var end;                    /* use base and extra for symbol > end */\r\n  var count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\r\n  var offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\r\n  var extra = null;\r\n  var extra_index = 0;\r\n\r\n  var here_bits, here_op, here_val;\r\n\r\n  /*\r\n   Process a set of code lengths to create a canonical Huffman code.  The\r\n   code lengths are lens[0..codes-1].  Each length corresponds to the\r\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\r\n   symbols by length from short to long, and retaining the symbol order\r\n   for codes with equal lengths.  Then the code starts with all zero bits\r\n   for the first code of the shortest length, and the codes are integer\r\n   increments for the same length, and zeros are appended as the length\r\n   increases.  For the deflate format, these bits are stored backwards\r\n   from their more natural integer increment ordering, and so when the\r\n   decoding tables are built in the large loop below, the integer codes\r\n   are incremented backwards.\r\n\r\n   This routine assumes, but does not check, that all of the entries in\r\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\r\n   1..MAXBITS is interpreted as that code length.  zero means that that\r\n   symbol does not occur in this code.\r\n\r\n   The codes are sorted by computing a count of codes for each length,\r\n   creating from that a table of starting indices for each length in the\r\n   sorted table, and then entering the symbols in order in the sorted\r\n   table.  The sorted table is work[], with that space being provided by\r\n   the caller.\r\n\r\n   The length counts are used for other purposes as well, i.e. finding\r\n   the minimum and maximum length codes, determining if there are any\r\n   codes at all, checking for a valid set of lengths, and looking ahead\r\n   at length counts to determine sub-table sizes when building the\r\n   decoding tables.\r\n   */\r\n\r\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\r\n  for (len = 0; len <= MAXBITS; len++) {\r\n    count[len] = 0;\r\n  }\r\n  for (sym = 0; sym < codes; sym++) {\r\n    count[lens[lens_index + sym]]++;\r\n  }\r\n\r\n  /* bound code lengths, force root to be within code lengths */\r\n  root = bits;\r\n  for (max = MAXBITS; max >= 1; max--) {\r\n    if (count[max] !== 0) { break; }\r\n  }\r\n  if (root > max) {\r\n    root = max;\r\n  }\r\n  if (max === 0) {                     /* no symbols to code at all */\r\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\r\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\r\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\r\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\r\n\r\n\r\n    //table.op[opts.table_index] = 64;\r\n    //table.bits[opts.table_index] = 1;\r\n    //table.val[opts.table_index++] = 0;\r\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\r\n\r\n    opts.bits = 1;\r\n    return 0;     /* no symbols, but wait for decoding to report error */\r\n  }\r\n  for (min = 1; min < max; min++) {\r\n    if (count[min] !== 0) { break; }\r\n  }\r\n  if (root < min) {\r\n    root = min;\r\n  }\r\n\r\n  /* check for an over-subscribed or incomplete set of lengths */\r\n  left = 1;\r\n  for (len = 1; len <= MAXBITS; len++) {\r\n    left <<= 1;\r\n    left -= count[len];\r\n    if (left < 0) {\r\n      return -1;\r\n    }        /* over-subscribed */\r\n  }\r\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\r\n    return -1;                      /* incomplete set */\r\n  }\r\n\r\n  /* generate offsets into symbol table for each length for sorting */\r\n  offs[1] = 0;\r\n  for (len = 1; len < MAXBITS; len++) {\r\n    offs[len + 1] = offs[len] + count[len];\r\n  }\r\n\r\n  /* sort symbols by length, by symbol order within each length */\r\n  for (sym = 0; sym < codes; sym++) {\r\n    if (lens[lens_index + sym] !== 0) {\r\n      work[offs[lens[lens_index + sym]]++] = sym;\r\n    }\r\n  }\r\n\r\n  /*\r\n   Create and fill in decoding tables.  In this loop, the table being\r\n   filled is at next and has curr index bits.  The code being used is huff\r\n   with length len.  That code is converted to an index by dropping drop\r\n   bits off of the bottom.  For codes where len is less than drop + curr,\r\n   those top drop + curr - len bits are incremented through all values to\r\n   fill the table with replicated entries.\r\n\r\n   root is the number of index bits for the root table.  When len exceeds\r\n   root, sub-tables are created pointed to by the root entry with an index\r\n   of the low root bits of huff.  This is saved in low to check for when a\r\n   new sub-table should be started.  drop is zero when the root table is\r\n   being filled, and drop is root when sub-tables are being filled.\r\n\r\n   When a new sub-table is needed, it is necessary to look ahead in the\r\n   code lengths to determine what size sub-table is needed.  The length\r\n   counts are used for this, and so count[] is decremented as codes are\r\n   entered in the tables.\r\n\r\n   used keeps track of how many table entries have been allocated from the\r\n   provided *table space.  It is checked for LENS and DIST tables against\r\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\r\n   the initial root table size constants.  See the comments in inftrees.h\r\n   for more information.\r\n\r\n   sym increments through all symbols, and the loop terminates when\r\n   all codes of length max, i.e. all codes, have been processed.  This\r\n   routine permits incomplete codes, so another loop after this one fills\r\n   in the rest of the decoding tables with invalid code markers.\r\n   */\r\n\r\n  /* set up for code type */\r\n  // poor man optimization - use if-else instead of switch,\r\n  // to avoid deopts in old v8\r\n  if (type === CODES$1) {\r\n    base = extra = work;    /* dummy value--not used */\r\n    end = 19;\r\n\r\n  } else if (type === LENS$1) {\r\n    base = lbase;\r\n    base_index -= 257;\r\n    extra = lext;\r\n    extra_index -= 257;\r\n    end = 256;\r\n\r\n  } else {                    /* DISTS */\r\n    base = dbase;\r\n    extra = dext;\r\n    end = -1;\r\n  }\r\n\r\n  /* initialize opts for loop */\r\n  huff = 0;                   /* starting code */\r\n  sym = 0;                    /* starting code symbol */\r\n  len = min;                  /* starting code length */\r\n  next = table_index;              /* current table to fill in */\r\n  curr = root;                /* current table index bits */\r\n  drop = 0;                   /* current bits to drop from code for index */\r\n  low = -1;                   /* trigger new sub-table when len > root */\r\n  used = 1 << root;          /* use root table entries */\r\n  mask = used - 1;            /* mask for comparing low */\r\n\r\n  /* check available table space */\r\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\r\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\r\n    return 1;\r\n  }\r\n\r\n  var i = 0;\r\n  /* process all codes and make table entries */\r\n  for (;;) {\r\n    i++;\r\n    /* create table entry */\r\n    here_bits = len - drop;\r\n    if (work[sym] < end) {\r\n      here_op = 0;\r\n      here_val = work[sym];\r\n    }\r\n    else if (work[sym] > end) {\r\n      here_op = extra[extra_index + work[sym]];\r\n      here_val = base[base_index + work[sym]];\r\n    }\r\n    else {\r\n      here_op = 32 + 64;         /* end of block */\r\n      here_val = 0;\r\n    }\r\n\r\n    /* replicate for those indices with low len bits equal to huff */\r\n    incr = 1 << (len - drop);\r\n    fill = 1 << curr;\r\n    min = fill;                 /* save offset to next table */\r\n    do {\r\n      fill -= incr;\r\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\r\n    } while (fill !== 0);\r\n\r\n    /* backwards increment the len-bit code huff */\r\n    incr = 1 << (len - 1);\r\n    while (huff & incr) {\r\n      incr >>= 1;\r\n    }\r\n    if (incr !== 0) {\r\n      huff &= incr - 1;\r\n      huff += incr;\r\n    } else {\r\n      huff = 0;\r\n    }\r\n\r\n    /* go to next symbol, update count, len */\r\n    sym++;\r\n    if (--count[len] === 0) {\r\n      if (len === max) { break; }\r\n      len = lens[lens_index + work[sym]];\r\n    }\r\n\r\n    /* create new sub-table if needed */\r\n    if (len > root && (huff & mask) !== low) {\r\n      /* if first time, transition to sub-tables */\r\n      if (drop === 0) {\r\n        drop = root;\r\n      }\r\n\r\n      /* increment past last table */\r\n      next += min;            /* here min is 1 << curr */\r\n\r\n      /* determine length of next table */\r\n      curr = len - drop;\r\n      left = 1 << curr;\r\n      while (curr + drop < max) {\r\n        left -= count[curr + drop];\r\n        if (left <= 0) { break; }\r\n        curr++;\r\n        left <<= 1;\r\n      }\r\n\r\n      /* check for enough space */\r\n      used += 1 << curr;\r\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\r\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\r\n        return 1;\r\n      }\r\n\r\n      /* point entry in root table to sub-table */\r\n      low = huff & mask;\r\n      /*table.op[low] = curr;\r\n      table.bits[low] = root;\r\n      table.val[low] = next - opts.table_index;*/\r\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\r\n    }\r\n  }\r\n\r\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\r\n   at most one remaining entry, since if the code is incomplete, the\r\n   maximum code length that was allowed to get this far is one bit) */\r\n  if (huff !== 0) {\r\n    //table.op[next + huff] = 64;            /* invalid code marker */\r\n    //table.bits[next + huff] = len - drop;\r\n    //table.val[next + huff] = 0;\r\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\r\n  }\r\n\r\n  /* set return parameters */\r\n  //opts.table_index += used;\r\n  opts.bits = root;\r\n  return 0;\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\n// var utils         = require('../utils/common');\r\n// var adler32       = require('./adler32');\r\n// var crc32         = require('./crc32');\r\n// var inflate_fast  = require('./inffast');\r\n// var inflate_table = require('./inftrees');\r\n\r\nvar CODES = 0;\r\nvar LENS = 1;\r\nvar DISTS = 2;\r\n\r\n/* Public constants ==========================================================*/\r\n/* ===========================================================================*/\r\n\r\n\r\n/* Allowed flush values; see deflate() and inflate() below for details */\r\n//var Z_NO_FLUSH      = 0;\r\n//var Z_PARTIAL_FLUSH = 1;\r\n//var Z_SYNC_FLUSH    = 2;\r\n//var Z_FULL_FLUSH    = 3;\r\nvar Z_FINISH        = 4;\r\nvar Z_BLOCK         = 5;\r\nvar Z_TREES         = 6;\r\n\r\n\r\n/* Return codes for the compression/decompression functions. Negative values\r\n * are errors, positive values are used for special but normal events.\r\n */\r\nvar Z_OK            = 0;\r\nvar Z_STREAM_END    = 1;\r\nvar Z_NEED_DICT     = 2;\r\n//var Z_ERRNO         = -1;\r\nvar Z_STREAM_ERROR  = -2;\r\nvar Z_DATA_ERROR    = -3;\r\nvar Z_MEM_ERROR     = -4;\r\nvar Z_BUF_ERROR     = -5;\r\n//var Z_VERSION_ERROR = -6;\r\n\r\n/* The deflate compression method */\r\nvar Z_DEFLATED  = 8;\r\n\r\n\r\n/* STATES ====================================================================*/\r\n/* ===========================================================================*/\r\n\r\n\r\nvar    HEAD = 1;       /* i: waiting for magic header */\r\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\r\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\r\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\r\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\r\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\r\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\r\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\r\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\r\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\r\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\r\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\r\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\r\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\r\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\r\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\r\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\r\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\r\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\r\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\r\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\r\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\r\nvar            DIST = 23;      /* i: waiting for distance code */\r\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\r\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\r\nvar            LIT = 26;       /* o: waiting for output space to write literal */\r\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\r\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\r\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\r\nvar    BAD = 30;       /* got a data error -- remain here until reset */\r\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\r\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\r\n\r\n/* ===========================================================================*/\r\n\r\n\r\n\r\nvar ENOUGH_LENS = 852;\r\nvar ENOUGH_DISTS = 592;\r\nfunction zswap32(q) {\r\n  return  (((q >>> 24) & 0xff) +\r\n          ((q >>> 8) & 0xff00) +\r\n          ((q & 0xff00) << 8) +\r\n          ((q & 0xff) << 24));\r\n}\r\n\r\n\r\nfunction InflateState() {\r\n  this.mode = 0;             /* current inflate mode */\r\n  this.last = false;          /* true if processing last block */\r\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\r\n  this.havedict = false;      /* true if dictionary provided */\r\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\r\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\r\n  this.check = 0;             /* protected copy of check value */\r\n  this.total = 0;             /* protected copy of output count */\r\n  // TODO: may be {}\r\n  this.head = null;           /* where to save gzip header information */\r\n\r\n  /* sliding window */\r\n  this.wbits = 0;             /* log base 2 of requested window size */\r\n  this.wsize = 0;             /* window size or zero if not using window */\r\n  this.whave = 0;             /* valid bytes in the window */\r\n  this.wnext = 0;             /* window write index */\r\n  this.window = null;         /* allocated sliding window, if needed */\r\n\r\n  /* bit accumulator */\r\n  this.hold = 0;              /* input bit accumulator */\r\n  this.bits = 0;              /* number of bits in \"in\" */\r\n\r\n  /* for string and stored block copying */\r\n  this.length = 0;            /* literal or length of data to copy */\r\n  this.offset = 0;            /* distance back to copy string from */\r\n\r\n  /* for table and code decoding */\r\n  this.extra = 0;             /* extra bits needed */\r\n\r\n  /* fixed and dynamic code tables */\r\n  this.lencode = null;          /* starting table for length/literal codes */\r\n  this.distcode = null;         /* starting table for distance codes */\r\n  this.lenbits = 0;           /* index bits for lencode */\r\n  this.distbits = 0;          /* index bits for distcode */\r\n\r\n  /* dynamic table building */\r\n  this.ncode = 0;             /* number of code length code lengths */\r\n  this.nlen = 0;              /* number of length code lengths */\r\n  this.ndist = 0;             /* number of distance code lengths */\r\n  this.have = 0;              /* number of code lengths in lens[] */\r\n  this.next = null;              /* next available space in codes[] */\r\n\r\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\r\n  this.work = new Uint16Array(288); /* work area for code table building */\r\n\r\n  /*\r\n   because we don't have pointers in js, we use lencode and distcode directly\r\n   as buffers so we don't need codes\r\n  */\r\n  //this.codes = new Buf32(ENOUGH);       /* space for code tables */\r\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\r\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\r\n  this.sane = 0;                   /* if false, allow invalid distance too far */\r\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\r\n  this.was = 0;                    /* initial length of match */\r\n}\r\n\r\nfunction inflateResetKeep(strm) {\r\n  var state;\r\n\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  strm.total_in = strm.total_out = state.total = 0;\r\n  strm.msg = ''; /*Z_NULL*/\r\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\r\n    strm.adler = state.wrap & 1;\r\n  }\r\n  state.mode = HEAD;\r\n  state.last = 0;\r\n  state.havedict = 0;\r\n  state.dmax = 32768;\r\n  state.head = null/*Z_NULL*/;\r\n  state.hold = 0;\r\n  state.bits = 0;\r\n  //state.lencode = state.distcode = state.next = state.codes;\r\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\r\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\r\n\r\n  state.sane = 1;\r\n  state.back = -1;\r\n  //Tracev((stderr, \"inflate: reset\\n\"));\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateReset(strm) {\r\n  var state;\r\n\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  state.wsize = 0;\r\n  state.whave = 0;\r\n  state.wnext = 0;\r\n  return inflateResetKeep(strm);\r\n\r\n}\r\n\r\nfunction inflateReset2(strm, windowBits) {\r\n  var wrap;\r\n  var state;\r\n\r\n  /* get the state */\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n\r\n  /* extract wrap request from windowBits parameter */\r\n  if (windowBits < 0) {\r\n    wrap = 0;\r\n    windowBits = -windowBits;\r\n  }\r\n  else {\r\n    wrap = (windowBits >> 4) + 1;\r\n    if (windowBits < 48) {\r\n      windowBits &= 15;\r\n    }\r\n  }\r\n\r\n  /* set number of window bits, free window if different */\r\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n  if (state.window !== null && state.wbits !== windowBits) {\r\n    state.window = null;\r\n  }\r\n\r\n  /* update state and reset the rest of it */\r\n  state.wrap = wrap;\r\n  state.wbits = windowBits;\r\n  return inflateReset(strm);\r\n}\r\n\r\nfunction inflateInit2(strm, windowBits) {\r\n  var ret;\r\n  var state;\r\n\r\n  if (!strm) { return Z_STREAM_ERROR; }\r\n  //strm.msg = Z_NULL;                 /* in case we return an error */\r\n\r\n  state = new InflateState();\r\n\r\n  //if (state === Z_NULL) return Z_MEM_ERROR;\r\n  //Tracev((stderr, \"inflate: allocated\\n\"));\r\n  strm.state = state;\r\n  state.window = null/*Z_NULL*/;\r\n  ret = inflateReset2(strm, windowBits);\r\n  if (ret !== Z_OK) {\r\n    strm.state = null/*Z_NULL*/;\r\n  }\r\n  return ret;\r\n}\r\n\r\n/*\r\n Return state with length and distance decoding tables and index sizes set to\r\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\r\n If BUILDFIXED is defined, then instead this routine builds the tables the\r\n first time it's called, and returns those tables the first time and\r\n thereafter.  This reduces the size of the code by about 2K bytes, in\r\n exchange for a little execution time.  However, BUILDFIXED should not be\r\n used for threaded applications, since the rewriting of the tables and virgin\r\n may not be thread-safe.\r\n */\r\nvar virgin = true;\r\n\r\nvar lenfix;\r\nvar distfix;\r\n// We have no pointers in JS, so keep tables separate\r\n\r\nfunction fixedtables(state) {\r\n  /* build fixed huffman tables if first call (may not be thread safe) */\r\n  if (virgin) {\r\n    var sym;\r\n\r\n    lenfix = new Int32Array(512);\r\n    distfix = new Int32Array(32);\r\n\r\n    /* literal/length table */\r\n    sym = 0;\r\n    while (sym < 144) { state.lens[sym++] = 8; }\r\n    while (sym < 256) { state.lens[sym++] = 9; }\r\n    while (sym < 280) { state.lens[sym++] = 7; }\r\n    while (sym < 288) { state.lens[sym++] = 8; }\r\n\r\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\r\n\r\n    /* distance table */\r\n    sym = 0;\r\n    while (sym < 32) { state.lens[sym++] = 5; }\r\n\r\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\r\n\r\n    /* do this just once */\r\n    virgin = false;\r\n  }\r\n\r\n  state.lencode = lenfix;\r\n  state.lenbits = 9;\r\n  state.distcode = distfix;\r\n  state.distbits = 5;\r\n}\r\n\r\n\r\n/*\r\n Update the window with the last wsize (normally 32K) bytes written before\r\n returning.  If window does not exist yet, create it.  This is only called\r\n when a window is already in use, or when output has been written during this\r\n inflate call, but the end of the deflate stream has not been reached yet.\r\n It is also called to create a window for dictionary data when a dictionary\r\n is loaded.\r\n\r\n Providing output buffers larger than 32K to inflate() should provide a speed\r\n advantage, since only the last 32K of output is copied to the sliding window\r\n upon return from inflate(), and since all distances after the first 32K of\r\n output will fall in the output data, making match copies simpler and faster.\r\n The advantage may be dependent on the size of the processor's data caches.\r\n */\r\nfunction updatewindow(strm, src, end, copy) {\r\n  var dist;\r\n  var state = strm.state;\r\n\r\n  /* if it hasn't been done already, allocate space for the window */\r\n  if (state.window === null) {\r\n    state.wsize = 1 << state.wbits;\r\n    state.wnext = 0;\r\n    state.whave = 0;\r\n\r\n    state.window = new Uint8Array(state.wsize);\r\n  }\r\n\r\n  /* copy state->wsize or less output bytes into the circular window */\r\n  if (copy >= state.wsize) {\r\n    arraySet(state.window, src, end - state.wsize, state.wsize, 0);\r\n    state.wnext = 0;\r\n    state.whave = state.wsize;\r\n  }\r\n  else {\r\n    dist = state.wsize - state.wnext;\r\n    if (dist > copy) {\r\n      dist = copy;\r\n    }\r\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\r\n    arraySet(state.window, src, end - copy, dist, state.wnext);\r\n    copy -= dist;\r\n    if (copy) {\r\n      //zmemcpy(state->window, end - copy, copy);\r\n      arraySet(state.window, src, end - copy, copy, 0);\r\n      state.wnext = copy;\r\n      state.whave = state.wsize;\r\n    }\r\n    else {\r\n      state.wnext += dist;\r\n      if (state.wnext === state.wsize) { state.wnext = 0; }\r\n      if (state.whave < state.wsize) { state.whave += dist; }\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction inflate(strm, flush) {\r\n  var state;\r\n  var input, output;          // input/output buffers\r\n  var next;                   /* next input INDEX */\r\n  var put;                    /* next output INDEX */\r\n  var have, left;             /* available input and output */\r\n  var hold;                   /* bit buffer */\r\n  var bits;                   /* bits in bit buffer */\r\n  var _in, _out;              /* save starting available input and output */\r\n  var copy;                   /* number of stored or match bytes to copy */\r\n  var from;                   /* where to copy match bytes from */\r\n  var from_source;\r\n  var here = 0;               /* current decoding table entry */\r\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\r\n  //var last;                   /* parent table entry */\r\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\r\n  var len;                    /* length to copy for repeats, bits to drop */\r\n  var ret;                    /* return code */\r\n  var hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\r\n  var opts;\r\n\r\n  var n; // temporary var for NEED_BITS\r\n\r\n  var order = /* permutation of code lengths */\r\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\r\n\r\n\r\n  if (!strm || !strm.state || !strm.output ||\r\n      (!strm.input && strm.avail_in !== 0)) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  state = strm.state;\r\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\r\n\r\n\r\n  //--- LOAD() ---\r\n  put = strm.next_out;\r\n  output = strm.output;\r\n  left = strm.avail_out;\r\n  next = strm.next_in;\r\n  input = strm.input;\r\n  have = strm.avail_in;\r\n  hold = state.hold;\r\n  bits = state.bits;\r\n  //---\r\n\r\n  _in = have;\r\n  _out = left;\r\n  ret = Z_OK;\r\n\r\n  inf_leave: // goto emulation\r\n  for (;;) {\r\n    switch (state.mode) {\r\n    case HEAD:\r\n      if (state.wrap === 0) {\r\n        state.mode = TYPEDO;\r\n        break;\r\n      }\r\n      //=== NEEDBITS(16);\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\r\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        state.mode = FLAGS;\r\n        break;\r\n      }\r\n      state.flags = 0;           /* expect zlib header */\r\n      if (state.head) {\r\n        state.head.done = false;\r\n      }\r\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\r\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\r\n        strm.msg = 'incorrect header check';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\r\n        strm.msg = 'unknown compression method';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //--- DROPBITS(4) ---//\r\n      hold >>>= 4;\r\n      bits -= 4;\r\n      //---//\r\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\r\n      if (state.wbits === 0) {\r\n        state.wbits = len;\r\n      }\r\n      else if (len > state.wbits) {\r\n        strm.msg = 'invalid window size';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.dmax = 1 << len;\r\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\r\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\r\n      state.mode = hold & 0x200 ? DICTID : TYPE;\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      break;\r\n    case FLAGS:\r\n      //=== NEEDBITS(16); */\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.flags = hold;\r\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\r\n        strm.msg = 'unknown compression method';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if (state.flags & 0xe000) {\r\n        strm.msg = 'unknown header flags set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if (state.head) {\r\n        state.head.text = ((hold >> 8) & 1);\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = TIME;\r\n      /* falls through */\r\n    case TIME:\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if (state.head) {\r\n        state.head.time = hold;\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC4(state.check, hold)\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        hbuf[2] = (hold >>> 16) & 0xff;\r\n        hbuf[3] = (hold >>> 24) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 4, 0);\r\n        //===\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = OS;\r\n      /* falls through */\r\n    case OS:\r\n      //=== NEEDBITS(16); */\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if (state.head) {\r\n        state.head.xflags = (hold & 0xff);\r\n        state.head.os = (hold >> 8);\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = EXLEN;\r\n      /* falls through */\r\n    case EXLEN:\r\n      if (state.flags & 0x0400) {\r\n        //=== NEEDBITS(16); */\r\n        while (bits < 16) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.length = hold;\r\n        if (state.head) {\r\n          state.head.extra_len = hold;\r\n        }\r\n        if (state.flags & 0x0200) {\r\n          //=== CRC2(state.check, hold);\r\n          hbuf[0] = hold & 0xff;\r\n          hbuf[1] = (hold >>> 8) & 0xff;\r\n          state.check = crc32(state.check, hbuf, 2, 0);\r\n          //===//\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n      }\r\n      else if (state.head) {\r\n        state.head.extra = null/*Z_NULL*/;\r\n      }\r\n      state.mode = EXTRA;\r\n      /* falls through */\r\n    case EXTRA:\r\n      if (state.flags & 0x0400) {\r\n        copy = state.length;\r\n        if (copy > have) { copy = have; }\r\n        if (copy) {\r\n          if (state.head) {\r\n            len = state.head.extra_len - state.length;\r\n            if (!state.head.extra) {\r\n              // Use untyped array for more conveniend processing later\r\n              state.head.extra = new Array(state.head.extra_len);\r\n            }\r\n            arraySet(\r\n              state.head.extra,\r\n              input,\r\n              next,\r\n              // extra field is limited to 65536 bytes\r\n              // - no need for additional size check\r\n              copy,\r\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\r\n              len\r\n            );\r\n            //zmemcpy(state.head.extra + len, next,\r\n            //        len + copy > state.head.extra_max ?\r\n            //        state.head.extra_max - len : copy);\r\n          }\r\n          if (state.flags & 0x0200) {\r\n            state.check = crc32(state.check, input, copy, next);\r\n          }\r\n          have -= copy;\r\n          next += copy;\r\n          state.length -= copy;\r\n        }\r\n        if (state.length) { break inf_leave; }\r\n      }\r\n      state.length = 0;\r\n      state.mode = NAME;\r\n      /* falls through */\r\n    case NAME:\r\n      if (state.flags & 0x0800) {\r\n        if (have === 0) { break inf_leave; }\r\n        copy = 0;\r\n        do {\r\n          // TODO: 2 or 1 bytes?\r\n          len = input[next + copy++];\r\n          /* use constant limit because in js we should not preallocate memory */\r\n          if (state.head && len &&\r\n              (state.length < 65536 /*state.head.name_max*/)) {\r\n            state.head.name += String.fromCharCode(len);\r\n          }\r\n        } while (len && copy < have);\r\n\r\n        if (state.flags & 0x0200) {\r\n          state.check = crc32(state.check, input, copy, next);\r\n        }\r\n        have -= copy;\r\n        next += copy;\r\n        if (len) { break inf_leave; }\r\n      }\r\n      else if (state.head) {\r\n        state.head.name = null;\r\n      }\r\n      state.length = 0;\r\n      state.mode = COMMENT;\r\n      /* falls through */\r\n    case COMMENT:\r\n      if (state.flags & 0x1000) {\r\n        if (have === 0) { break inf_leave; }\r\n        copy = 0;\r\n        do {\r\n          len = input[next + copy++];\r\n          /* use constant limit because in js we should not preallocate memory */\r\n          if (state.head && len &&\r\n              (state.length < 65536 /*state.head.comm_max*/)) {\r\n            state.head.comment += String.fromCharCode(len);\r\n          }\r\n        } while (len && copy < have);\r\n        if (state.flags & 0x0200) {\r\n          state.check = crc32(state.check, input, copy, next);\r\n        }\r\n        have -= copy;\r\n        next += copy;\r\n        if (len) { break inf_leave; }\r\n      }\r\n      else if (state.head) {\r\n        state.head.comment = null;\r\n      }\r\n      state.mode = HCRC;\r\n      /* falls through */\r\n    case HCRC:\r\n      if (state.flags & 0x0200) {\r\n        //=== NEEDBITS(16); */\r\n        while (bits < 16) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        if (hold !== (state.check & 0xffff)) {\r\n          strm.msg = 'header crc mismatch';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n      }\r\n      if (state.head) {\r\n        state.head.hcrc = ((state.flags >> 9) & 1);\r\n        state.head.done = true;\r\n      }\r\n      strm.adler = state.check = 0;\r\n      state.mode = TYPE;\r\n      break;\r\n    case DICTID:\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      strm.adler = state.check = zswap32(hold);\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = DICT;\r\n      /* falls through */\r\n    case DICT:\r\n      if (state.havedict === 0) {\r\n        //--- RESTORE() ---\r\n        strm.next_out = put;\r\n        strm.avail_out = left;\r\n        strm.next_in = next;\r\n        strm.avail_in = have;\r\n        state.hold = hold;\r\n        state.bits = bits;\r\n        //---\r\n        return Z_NEED_DICT;\r\n      }\r\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\r\n      state.mode = TYPE;\r\n      /* falls through */\r\n    case TYPE:\r\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case TYPEDO:\r\n      if (state.last) {\r\n        //--- BYTEBITS() ---//\r\n        hold >>>= bits & 7;\r\n        bits -= bits & 7;\r\n        //---//\r\n        state.mode = CHECK;\r\n        break;\r\n      }\r\n      //=== NEEDBITS(3); */\r\n      while (bits < 3) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.last = (hold & 0x01)/*BITS(1)*/;\r\n      //--- DROPBITS(1) ---//\r\n      hold >>>= 1;\r\n      bits -= 1;\r\n      //---//\r\n\r\n      switch ((hold & 0x03)/*BITS(2)*/) {\r\n      case 0:                             /* stored block */\r\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = STORED;\r\n        break;\r\n      case 1:                             /* fixed block */\r\n        fixedtables(state);\r\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = LEN_;             /* decode codes */\r\n        if (flush === Z_TREES) {\r\n          //--- DROPBITS(2) ---//\r\n          hold >>>= 2;\r\n          bits -= 2;\r\n          //---//\r\n          break inf_leave;\r\n        }\r\n        break;\r\n      case 2:                             /* dynamic block */\r\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = TABLE;\r\n        break;\r\n      case 3:\r\n        strm.msg = 'invalid block type';\r\n        state.mode = BAD;\r\n      }\r\n      //--- DROPBITS(2) ---//\r\n      hold >>>= 2;\r\n      bits -= 2;\r\n      //---//\r\n      break;\r\n    case STORED:\r\n      //--- BYTEBITS() ---// /* go to byte boundary */\r\n      hold >>>= bits & 7;\r\n      bits -= bits & 7;\r\n      //---//\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\r\n        strm.msg = 'invalid stored block lengths';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.length = hold & 0xffff;\r\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\r\n      //        state.length));\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = COPY_;\r\n      if (flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case COPY_:\r\n      state.mode = COPY;\r\n      /* falls through */\r\n    case COPY:\r\n      copy = state.length;\r\n      if (copy) {\r\n        if (copy > have) { copy = have; }\r\n        if (copy > left) { copy = left; }\r\n        if (copy === 0) { break inf_leave; }\r\n        //--- zmemcpy(put, next, copy); ---\r\n        arraySet(output, input, next, copy, put);\r\n        //---//\r\n        have -= copy;\r\n        next += copy;\r\n        left -= copy;\r\n        put += copy;\r\n        state.length -= copy;\r\n        break;\r\n      }\r\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\r\n      state.mode = TYPE;\r\n      break;\r\n    case TABLE:\r\n      //=== NEEDBITS(14); */\r\n      while (bits < 14) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\r\n      //--- DROPBITS(5) ---//\r\n      hold >>>= 5;\r\n      bits -= 5;\r\n      //---//\r\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\r\n      //--- DROPBITS(5) ---//\r\n      hold >>>= 5;\r\n      bits -= 5;\r\n      //---//\r\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\r\n      //--- DROPBITS(4) ---//\r\n      hold >>>= 4;\r\n      bits -= 4;\r\n      //---//\r\n//#ifndef PKZIP_BUG_WORKAROUND\r\n      if (state.nlen > 286 || state.ndist > 30) {\r\n        strm.msg = 'too many length or distance symbols';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n//#endif\r\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\r\n      state.have = 0;\r\n      state.mode = LENLENS;\r\n      /* falls through */\r\n    case LENLENS:\r\n      while (state.have < state.ncode) {\r\n        //=== NEEDBITS(3);\r\n        while (bits < 3) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\r\n        //--- DROPBITS(3) ---//\r\n        hold >>>= 3;\r\n        bits -= 3;\r\n        //---//\r\n      }\r\n      while (state.have < 19) {\r\n        state.lens[order[state.have++]] = 0;\r\n      }\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      //state.next = state.codes;\r\n      //state.lencode = state.next;\r\n      // Switch to use dynamic table\r\n      state.lencode = state.lendyn;\r\n      state.lenbits = 7;\r\n\r\n      opts = { bits: state.lenbits };\r\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\r\n      state.lenbits = opts.bits;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid code lengths set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\r\n      state.have = 0;\r\n      state.mode = CODELENS;\r\n      /* falls through */\r\n    case CODELENS:\r\n      while (state.have < state.nlen + state.ndist) {\r\n        for (;;) {\r\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        if (here_val < 16) {\r\n          //--- DROPBITS(here.bits) ---//\r\n          hold >>>= here_bits;\r\n          bits -= here_bits;\r\n          //---//\r\n          state.lens[state.have++] = here_val;\r\n        }\r\n        else {\r\n          if (here_val === 16) {\r\n            //=== NEEDBITS(here.bits + 2);\r\n            n = here_bits + 2;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            if (state.have === 0) {\r\n              strm.msg = 'invalid bit length repeat';\r\n              state.mode = BAD;\r\n              break;\r\n            }\r\n            len = state.lens[state.have - 1];\r\n            copy = 3 + (hold & 0x03);//BITS(2);\r\n            //--- DROPBITS(2) ---//\r\n            hold >>>= 2;\r\n            bits -= 2;\r\n            //---//\r\n          }\r\n          else if (here_val === 17) {\r\n            //=== NEEDBITS(here.bits + 3);\r\n            n = here_bits + 3;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            len = 0;\r\n            copy = 3 + (hold & 0x07);//BITS(3);\r\n            //--- DROPBITS(3) ---//\r\n            hold >>>= 3;\r\n            bits -= 3;\r\n            //---//\r\n          }\r\n          else {\r\n            //=== NEEDBITS(here.bits + 7);\r\n            n = here_bits + 7;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            len = 0;\r\n            copy = 11 + (hold & 0x7f);//BITS(7);\r\n            //--- DROPBITS(7) ---//\r\n            hold >>>= 7;\r\n            bits -= 7;\r\n            //---//\r\n          }\r\n          if (state.have + copy > state.nlen + state.ndist) {\r\n            strm.msg = 'invalid bit length repeat';\r\n            state.mode = BAD;\r\n            break;\r\n          }\r\n          while (copy--) {\r\n            state.lens[state.have++] = len;\r\n          }\r\n        }\r\n      }\r\n\r\n      /* handle error breaks in while */\r\n      if (state.mode === BAD) { break; }\r\n\r\n      /* check for end-of-block code (better have one) */\r\n      if (state.lens[256] === 0) {\r\n        strm.msg = 'invalid code -- missing end-of-block';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n\r\n      /* build code tables -- note: do not change the lenbits or distbits\r\n         values here (9 and 6) without reading the comments in inftrees.h\r\n         concerning the ENOUGH constants, which depend on those values */\r\n      state.lenbits = 9;\r\n\r\n      opts = { bits: state.lenbits };\r\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      // state.next_index = opts.table_index;\r\n      state.lenbits = opts.bits;\r\n      // state.lencode = state.next;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid literal/lengths set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n\r\n      state.distbits = 6;\r\n      //state.distcode.copy(state.codes);\r\n      // Switch to use dynamic table\r\n      state.distcode = state.distdyn;\r\n      opts = { bits: state.distbits };\r\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      // state.next_index = opts.table_index;\r\n      state.distbits = opts.bits;\r\n      // state.distcode = state.next;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid distances set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\r\n      state.mode = LEN_;\r\n      if (flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case LEN_:\r\n      state.mode = LEN;\r\n      /* falls through */\r\n    case LEN:\r\n      if (have >= 6 && left >= 258) {\r\n        //--- RESTORE() ---\r\n        strm.next_out = put;\r\n        strm.avail_out = left;\r\n        strm.next_in = next;\r\n        strm.avail_in = have;\r\n        state.hold = hold;\r\n        state.bits = bits;\r\n        //---\r\n        inflate_fast(strm, _out);\r\n        //--- LOAD() ---\r\n        put = strm.next_out;\r\n        output = strm.output;\r\n        left = strm.avail_out;\r\n        next = strm.next_in;\r\n        input = strm.input;\r\n        have = strm.avail_in;\r\n        hold = state.hold;\r\n        bits = state.bits;\r\n        //---\r\n\r\n        if (state.mode === TYPE) {\r\n          state.back = -1;\r\n        }\r\n        break;\r\n      }\r\n      state.back = 0;\r\n      for (;;) {\r\n        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\r\n        here_bits = here >>> 24;\r\n        here_op = (here >>> 16) & 0xff;\r\n        here_val = here & 0xffff;\r\n\r\n        if (here_bits <= bits) { break; }\r\n        //--- PULLBYTE() ---//\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n        //---//\r\n      }\r\n      if (here_op && (here_op & 0xf0) === 0) {\r\n        last_bits = here_bits;\r\n        last_op = here_op;\r\n        last_val = here_val;\r\n        for (;;) {\r\n          here = state.lencode[last_val +\r\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((last_bits + here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        //--- DROPBITS(last.bits) ---//\r\n        hold >>>= last_bits;\r\n        bits -= last_bits;\r\n        //---//\r\n        state.back += last_bits;\r\n      }\r\n      //--- DROPBITS(here.bits) ---//\r\n      hold >>>= here_bits;\r\n      bits -= here_bits;\r\n      //---//\r\n      state.back += here_bits;\r\n      state.length = here_val;\r\n      if (here_op === 0) {\r\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\r\n        //        \"inflate:         literal '%c'\\n\" :\r\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\r\n        state.mode = LIT;\r\n        break;\r\n      }\r\n      if (here_op & 32) {\r\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\r\n        state.back = -1;\r\n        state.mode = TYPE;\r\n        break;\r\n      }\r\n      if (here_op & 64) {\r\n        strm.msg = 'invalid literal/length code';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.extra = here_op & 15;\r\n      state.mode = LENEXT;\r\n      /* falls through */\r\n    case LENEXT:\r\n      if (state.extra) {\r\n        //=== NEEDBITS(state.extra);\r\n        n = state.extra;\r\n        while (bits < n) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\r\n        //--- DROPBITS(state.extra) ---//\r\n        hold >>>= state.extra;\r\n        bits -= state.extra;\r\n        //---//\r\n        state.back += state.extra;\r\n      }\r\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\r\n      state.was = state.length;\r\n      state.mode = DIST;\r\n      /* falls through */\r\n    case DIST:\r\n      for (;;) {\r\n        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\r\n        here_bits = here >>> 24;\r\n        here_op = (here >>> 16) & 0xff;\r\n        here_val = here & 0xffff;\r\n\r\n        if ((here_bits) <= bits) { break; }\r\n        //--- PULLBYTE() ---//\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n        //---//\r\n      }\r\n      if ((here_op & 0xf0) === 0) {\r\n        last_bits = here_bits;\r\n        last_op = here_op;\r\n        last_val = here_val;\r\n        for (;;) {\r\n          here = state.distcode[last_val +\r\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((last_bits + here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        //--- DROPBITS(last.bits) ---//\r\n        hold >>>= last_bits;\r\n        bits -= last_bits;\r\n        //---//\r\n        state.back += last_bits;\r\n      }\r\n      //--- DROPBITS(here.bits) ---//\r\n      hold >>>= here_bits;\r\n      bits -= here_bits;\r\n      //---//\r\n      state.back += here_bits;\r\n      if (here_op & 64) {\r\n        strm.msg = 'invalid distance code';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.offset = here_val;\r\n      state.extra = (here_op) & 15;\r\n      state.mode = DISTEXT;\r\n      /* falls through */\r\n    case DISTEXT:\r\n      if (state.extra) {\r\n        //=== NEEDBITS(state.extra);\r\n        n = state.extra;\r\n        while (bits < n) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\r\n        //--- DROPBITS(state.extra) ---//\r\n        hold >>>= state.extra;\r\n        bits -= state.extra;\r\n        //---//\r\n        state.back += state.extra;\r\n      }\r\n//#ifdef INFLATE_STRICT\r\n      if (state.offset > state.dmax) {\r\n        strm.msg = 'invalid distance too far back';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n//#endif\r\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\r\n      state.mode = MATCH;\r\n      /* falls through */\r\n    case MATCH:\r\n      if (left === 0) { break inf_leave; }\r\n      copy = _out - left;\r\n      if (state.offset > copy) {         /* copy from window */\r\n        copy = state.offset - copy;\r\n        if (copy > state.whave) {\r\n          if (state.sane) {\r\n            strm.msg = 'invalid distance too far back';\r\n            state.mode = BAD;\r\n            break;\r\n          }\r\n// (!) This block is disabled in zlib defailts,\r\n// don't enable it for binary compatibility\r\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\r\n//          Trace((stderr, \"inflate.c too far\\n\"));\r\n//          copy -= state.whave;\r\n//          if (copy > state.length) { copy = state.length; }\r\n//          if (copy > left) { copy = left; }\r\n//          left -= copy;\r\n//          state.length -= copy;\r\n//          do {\r\n//            output[put++] = 0;\r\n//          } while (--copy);\r\n//          if (state.length === 0) { state.mode = LEN; }\r\n//          break;\r\n//#endif\r\n        }\r\n        if (copy > state.wnext) {\r\n          copy -= state.wnext;\r\n          from = state.wsize - copy;\r\n        }\r\n        else {\r\n          from = state.wnext - copy;\r\n        }\r\n        if (copy > state.length) { copy = state.length; }\r\n        from_source = state.window;\r\n      }\r\n      else {                              /* copy from output */\r\n        from_source = output;\r\n        from = put - state.offset;\r\n        copy = state.length;\r\n      }\r\n      if (copy > left) { copy = left; }\r\n      left -= copy;\r\n      state.length -= copy;\r\n      do {\r\n        output[put++] = from_source[from++];\r\n      } while (--copy);\r\n      if (state.length === 0) { state.mode = LEN; }\r\n      break;\r\n    case LIT:\r\n      if (left === 0) { break inf_leave; }\r\n      output[put++] = state.length;\r\n      left--;\r\n      state.mode = LEN;\r\n      break;\r\n    case CHECK:\r\n      if (state.wrap) {\r\n        //=== NEEDBITS(32);\r\n        while (bits < 32) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          // Use '|' insdead of '+' to make sure that result is signed\r\n          hold |= input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        _out -= left;\r\n        strm.total_out += _out;\r\n        state.total += _out;\r\n        if (_out) {\r\n          strm.adler = state.check =\r\n              /*UPDATE(state.check, put - _out, _out);*/\r\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\r\n\r\n        }\r\n        _out = left;\r\n        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\r\n        if ((state.flags ? hold : zswap32(hold)) !== state.check) {\r\n          strm.msg = 'incorrect data check';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\r\n      }\r\n      state.mode = LENGTH;\r\n      /* falls through */\r\n    case LENGTH:\r\n      if (state.wrap && state.flags) {\r\n        //=== NEEDBITS(32);\r\n        while (bits < 32) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        if (hold !== (state.total & 0xffffffff)) {\r\n          strm.msg = 'incorrect length check';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\r\n      }\r\n      state.mode = DONE;\r\n      /* falls through */\r\n    case DONE:\r\n      ret = Z_STREAM_END;\r\n      break inf_leave;\r\n    case BAD:\r\n      ret = Z_DATA_ERROR;\r\n      break inf_leave;\r\n    case MEM:\r\n      return Z_MEM_ERROR;\r\n    case SYNC:\r\n      /* falls through */\r\n    default:\r\n      return Z_STREAM_ERROR;\r\n    }\r\n  }\r\n\r\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\r\n\r\n  /*\r\n     Return from inflate(), updating the total counts and the check value.\r\n     If there was no progress during the inflate() call, return a buffer\r\n     error.  Call updatewindow() to create and/or update the window state.\r\n     Note: a memory error from inflate() is non-recoverable.\r\n   */\r\n\r\n  //--- RESTORE() ---\r\n  strm.next_out = put;\r\n  strm.avail_out = left;\r\n  strm.next_in = next;\r\n  strm.avail_in = have;\r\n  state.hold = hold;\r\n  state.bits = bits;\r\n  //---\r\n\r\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\r\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\r\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\r\n      state.mode = MEM;\r\n      return Z_MEM_ERROR;\r\n    }\r\n  }\r\n  _in -= strm.avail_in;\r\n  _out -= strm.avail_out;\r\n  strm.total_in += _in;\r\n  strm.total_out += _out;\r\n  state.total += _out;\r\n  if (state.wrap && _out) {\r\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\r\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\r\n  }\r\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\r\n                    (state.mode === TYPE ? 128 : 0) +\r\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\r\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\r\n    ret = Z_BUF_ERROR;\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction inflateEnd(strm) {\r\n\r\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  var state = strm.state;\r\n  if (state.window) {\r\n    state.window = null;\r\n  }\r\n  strm.state = null;\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateGetHeader(strm, head) {\r\n  var state;\r\n\r\n  /* check state */\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\r\n\r\n  /* save header structure */\r\n  state.head = head;\r\n  head.done = false;\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateSetDictionary(strm, dictionary) {\r\n  var dictLength = dictionary.length;\r\n\r\n  var state;\r\n  var dictid;\r\n  var ret;\r\n\r\n  /* check state */\r\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n\r\n  if (state.wrap !== 0 && state.mode !== DICT) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  /* check for correct dictionary identifier */\r\n  if (state.mode === DICT) {\r\n    dictid = 1; /* adler32(0, null, 0)*/\r\n    /* dictid = adler32(dictid, dictionary, dictLength); */\r\n    dictid = adler32(dictid, dictionary, dictLength, 0);\r\n    if (dictid !== state.check) {\r\n      return Z_DATA_ERROR;\r\n    }\r\n  }\r\n  /* copy dictionary to window using updatewindow(), which will amend the\r\n   existing dictionary if appropriate */\r\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\r\n  if (ret) {\r\n    state.mode = MEM;\r\n    return Z_MEM_ERROR;\r\n  }\r\n  state.havedict = 1;\r\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\r\n  return Z_OK;\r\n}\r\n\r\n// String encode/decode helpers\r\n// 'use strict';\r\n\r\n\r\n// var utils = require('./common');\r\n\r\n\r\n// Quick check if we can use fast array to bin string conversion\r\n//\r\n// - apply(Array) can fail on Android 2.2\r\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\r\n//\r\nvar STR_APPLY_OK = true;\r\nvar STR_APPLY_UIA_OK = true;\r\n\r\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\r\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\r\n\r\n\r\n// Table with utf8 lengths (calculated by first byte of sequence)\r\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\r\n// because max possible codepoint is 0x10ffff\r\nvar _utf8len = new Uint8Array(256);\r\nfor (var q = 0; q < 256; q++) {\r\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\r\n}\r\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\r\n\r\n\r\n// convert string to array (typed, when possible)\r\nfunction string2buf(str) {\r\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\r\n\r\n  // count binary size\r\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\r\n  }\r\n\r\n  // allocate buffer\r\n  buf = new Uint8Array(buf_len);\r\n\r\n  // convert\r\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    if (c < 0x80) {\r\n      /* one byte */\r\n      buf[i++] = c;\r\n    } else if (c < 0x800) {\r\n      /* two bytes */\r\n      buf[i++] = 0xC0 | (c >>> 6);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else if (c < 0x10000) {\r\n      /* three bytes */\r\n      buf[i++] = 0xE0 | (c >>> 12);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else {\r\n      /* four bytes */\r\n      buf[i++] = 0xf0 | (c >>> 18);\r\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    }\r\n  }\r\n\r\n  return buf;\r\n}\r\n\r\n// Helper (used in 2 places)\r\nfunction _buf2binstring(buf, len) {\r\n  // use fallback for big arrays to avoid stack overflow\r\n  if (len < 65537) {\r\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\r\n      return String.fromCharCode.apply(null, shrinkBuf(buf, len));\r\n    }\r\n  }\r\n\r\n  var result = '';\r\n  for (var i = 0; i < len; i++) {\r\n    result += String.fromCharCode(buf[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n\r\n// Convert binary string (typed, when possible)\r\nfunction binstring2buf(str) {\r\n  var buf = new Uint8Array(str.length);\r\n  for (var i = 0, len = buf.length; i < len; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n}\r\n\r\n\r\n// convert array to string\r\nfunction buf2string(buf, max) {\r\n  var i, out, c, c_len;\r\n  var len = max || buf.length;\r\n\r\n  // Reserve max possible length (2 words per char)\r\n  // NB: by unknown reasons, Array is significantly faster for\r\n  //     String.fromCharCode.apply than Uint16Array.\r\n  var utf16buf = new Array(len * 2);\r\n\r\n  for (out = 0, i = 0; i < len;) {\r\n    c = buf[i++];\r\n    // quick process ascii\r\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\r\n\r\n    c_len = _utf8len[c];\r\n    // skip 5 & 6 byte codes\r\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\r\n\r\n    // apply mask on first byte\r\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\r\n    // join the rest\r\n    while (c_len > 1 && i < len) {\r\n      c = (c << 6) | (buf[i++] & 0x3f);\r\n      c_len--;\r\n    }\r\n\r\n    // terminated by end of string?\r\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\r\n\r\n    if (c < 0x10000) {\r\n      utf16buf[out++] = c;\r\n    } else {\r\n      c -= 0x10000;\r\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\r\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\r\n    }\r\n  }\r\n\r\n  return _buf2binstring(utf16buf, out);\r\n}\r\n\r\n\r\n// Calculate max possible position in utf8 buffer,\r\n// that will not break sequence. If that's not possible\r\n// - (very small limits) return max size as is.\r\n//\r\n// buf[] - utf8 bytes array\r\n// max   - length limit (mandatory);\r\nfunction utf8border(buf, max) {\r\n  var pos;\r\n\r\n  max = max || buf.length;\r\n  if (max > buf.length) { max = buf.length; }\r\n\r\n  // go back from last position, until start of sequence found\r\n  pos = max - 1;\r\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\r\n\r\n  // Fuckup - very small and broken sequence,\r\n  // return max, because we should return something anyway.\r\n  if (pos < 0) { return max; }\r\n\r\n  // If we came to start of buffer - that means vuffer is too small,\r\n  // return max too.\r\n  if (pos === 0) { return max; }\r\n\r\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\r\n}\r\n\r\n/* Allowed flush values; see deflate() and inflate() below for details */\r\nvar Z_NO_FLUSH        = 0;\r\nvar Z_SYNC_FLUSH      = 2;\r\nvar Z_FINISH$1          = 4;\r\n/* Return codes for the compression/decompression functions. Negative values\r\n  * are errors, positive values are used for special but normal events.\r\n  */\r\nvar Z_OK$1              =  0;\r\nvar Z_STREAM_END$1      =  1;\r\nvar Z_NEED_DICT$1       =  2;\r\n//export var Z_MEM_ERROR     = -4;\r\nvar Z_BUF_ERROR$1       = -5;\r\n\r\n// 'use strict';\r\n\r\nvar messages = {\r\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\r\n  1:      'stream end',          /* Z_STREAM_END      1  */\r\n  0:      '',                    /* Z_OK              0  */\r\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\r\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\r\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\r\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\r\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\r\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\nfunction ZStream() {\r\n  /* next input byte */\r\n  this.input = null; // JS specific, because we have no pointers\r\n  this.next_in = 0;\r\n  /* number of bytes available at input */\r\n  this.avail_in = 0;\r\n  /* total number of input bytes read so far */\r\n  this.total_in = 0;\r\n  /* next output byte should be put there */\r\n  this.output = null; // JS specific, because we have no pointers\r\n  this.next_out = 0;\r\n  /* remaining free space at output */\r\n  this.avail_out = 0;\r\n  /* total number of bytes output so far */\r\n  this.total_out = 0;\r\n  /* last error message, NULL if no error */\r\n  this.msg = ''/*Z_NULL*/;\r\n  /* not visible by applications */\r\n  this.state = null;\r\n  /* best guess about the data type: binary or text */\r\n  this.data_type = 2/*Z_UNKNOWN*/;\r\n  /* adler32 value of the uncompressed data */\r\n  this.adler = 0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n\r\nfunction GZheader() {\r\n  /* true if compressed data believed to be text */\r\n  this.text       = 0;\r\n  /* modification time */\r\n  this.time       = 0;\r\n  /* extra flags (not used when writing a gzip file) */\r\n  this.xflags     = 0;\r\n  /* operating system */\r\n  this.os         = 0;\r\n  /* pointer to extra field or Z_NULL if none */\r\n  this.extra      = null;\r\n  /* extra field length (valid if extra != Z_NULL) */\r\n  this.extra_len  = 0; // Actually, we don't need it in JS,\r\n                       // but leave for few code modifications\r\n\r\n  //\r\n  // Setup limits is not necessary because in js we should not preallocate memory\r\n  // for inflate use constant limit in 65536 bytes\r\n  //\r\n\r\n  /* space at extra (only when reading header) */\r\n  // this.extra_max  = 0;\r\n  /* pointer to zero-terminated file name or Z_NULL */\r\n  this.name       = '';\r\n  /* space at name (only when reading header) */\r\n  // this.name_max   = 0;\r\n  /* pointer to zero-terminated comment or Z_NULL */\r\n  this.comment    = '';\r\n  /* space at comment (only when reading header) */\r\n  // this.comm_max   = 0;\r\n  /* true if there was or will be a header crc */\r\n  this.hcrc       = 0;\r\n  /* true when done reading gzip header (not used when writing a gzip file) */\r\n  this.done       = false;\r\n}\r\n\r\n// 'use strict';\r\n\r\n\r\n// var zlib_inflate = require('./zlib/inflate');\r\n// var utils        = require('./utils/common');\r\n// var strings      = require('./utils/strings');\r\n// var c            = require('./zlib/constants');\r\n// var msg          = require('./zlib/messages');\r\n// var ZStream      = require('./zlib/zstream');\r\n// var GZheader     = require('./zlib/gzheader');\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * class Inflate\r\n *\r\n * Generic JS-style wrapper for zlib calls. If you don't need\r\n * streaming behaviour - use more simple functions: [[inflate]]\r\n * and [[inflateRaw]].\r\n **/\r\n\r\n/* internal\r\n * inflate.chunks -> Array\r\n *\r\n * Chunks of output data, if [[Inflate#onData]] not overriden.\r\n **/\r\n\r\n/**\r\n * Inflate.result -> Uint8Array|Array|String\r\n *\r\n * Uncompressed result, generated by default [[Inflate#onData]]\r\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\r\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\r\n * push a chunk with explicit flush (call [[Inflate#push]] with\r\n * `Z_SYNC_FLUSH` param).\r\n **/\r\n\r\n/**\r\n * Inflate.err -> Number\r\n *\r\n * Error code after inflate finished. 0 (Z_OK) on success.\r\n * Should be checked if broken data possible.\r\n **/\r\n\r\n/**\r\n * Inflate.msg -> String\r\n *\r\n * Error message, if [[Inflate.err]] != 0\r\n **/\r\n\r\n\r\n/**\r\n * new Inflate(options)\r\n * - options (Object): zlib inflate options.\r\n *\r\n * Creates new inflator instance with specified params. Throws exception\r\n * on bad params. Supported options:\r\n *\r\n * - `windowBits`\r\n * - `dictionary`\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Additional options, for internal needs:\r\n *\r\n * - `chunkSize` - size of generated data chunks (16K by default)\r\n * - `raw` (Boolean) - do raw inflate\r\n * - `to` (String) - if equal to 'string', then result will be converted\r\n *   from utf8 to utf16 (javascript) string. When string output requested,\r\n *   chunk length can differ from `chunkSize`, depending on content.\r\n *\r\n * By default, when no options set, autodetect deflate/gzip data format via\r\n * wrapper header.\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\r\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\r\n *\r\n * var inflate = new pako.Inflate({ level: 3});\r\n *\r\n * inflate.push(chunk1, false);\r\n * inflate.push(chunk2, true);  // true -> last chunk\r\n *\r\n * if (inflate.err) { throw new Error(inflate.err); }\r\n *\r\n * console.log(inflate.result);\r\n * ```\r\n **/\r\nfunction Inflate(options) {\r\n  if (!(this instanceof Inflate)) return new Inflate(options);\r\n\r\n  this.options = assign({\r\n    chunkSize: 16384,\r\n    windowBits: 0,\r\n    to: ''\r\n  }, options || {});\r\n\r\n  var opt = this.options;\r\n\r\n  // Force window size for `raw` data, if not set directly,\r\n  // because we have no header for autodetect.\r\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\r\n    opt.windowBits = -opt.windowBits;\r\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\r\n  }\r\n\r\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\r\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\r\n      !(options && options.windowBits)) {\r\n    opt.windowBits += 32;\r\n  }\r\n\r\n  // Gzip header has no info about windows size, we can do autodetect only\r\n  // for deflate. So, if window size not set, force it to max when gzip possible\r\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\r\n    // bit 3 (16) -> gzipped data\r\n    // bit 4 (32) -> autodetect gzip/deflate\r\n    if ((opt.windowBits & 15) === 0) {\r\n      opt.windowBits |= 15;\r\n    }\r\n  }\r\n\r\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\r\n  this.msg    = '';     // error message\r\n  this.ended  = false;  // used to avoid multiple onEnd() calls\r\n  this.chunks = [];     // chunks of compressed data\r\n\r\n  this.strm   = new ZStream();\r\n  this.strm.avail_out = 0;\r\n\r\n  var status  = inflateInit2(\r\n    this.strm,\r\n    opt.windowBits\r\n  );\r\n\r\n  if (status !== Z_OK$1) {\r\n    throw new Error(messages[status]);\r\n  }\r\n\r\n  this.header = new GZheader();\r\n\r\n  inflateGetHeader(this.strm, this.header);\r\n}\r\n\r\n/**\r\n * Inflate#push(data[, mode]) -> Boolean\r\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\r\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\r\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\r\n *\r\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\r\n * new output chunks. Returns `true` on success. The last data block must have\r\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\r\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\r\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\r\n *\r\n * On fail call [[Inflate#onEnd]] with error code and return false.\r\n *\r\n * We strongly recommend to use `Uint8Array` on input for best speed (output\r\n * format is detected automatically). Also, don't skip last param and always\r\n * use the same type in your code (boolean or number). That will improve JS speed.\r\n *\r\n * For regular `Array`-s make sure all elements are [0..255].\r\n *\r\n * ##### Example\r\n *\r\n * ```javascript\r\n * push(chunk, false); // push one of data chunks\r\n * ...\r\n * push(chunk, true);  // push last chunk\r\n * ```\r\n **/\r\nInflate.prototype.push = function (data, mode) {\r\n  var strm = this.strm;\r\n  var chunkSize = this.options.chunkSize;\r\n  var dictionary = this.options.dictionary;\r\n  var status, _mode;\r\n  var next_out_utf8, tail, utf8str;\r\n  var dict;\r\n\r\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\r\n  // when we check that all output data was flushed.\r\n  var allowBufError = false;\r\n\r\n  if (this.ended) { return false; }\r\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH$1 : Z_NO_FLUSH);\r\n\r\n  // Convert data if needed\r\n  if (typeof data === 'string') {\r\n    // Only binary strings can be decompressed on practice\r\n    strm.input = binstring2buf(data);\r\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\r\n    strm.input = new Uint8Array(data);\r\n  } else {\r\n    strm.input = data;\r\n  }\r\n\r\n  strm.next_in = 0;\r\n  strm.avail_in = strm.input.length;\r\n\r\n  do {\r\n    if (strm.avail_out === 0) {\r\n      strm.output = new Uint8Array(chunkSize);\r\n      strm.next_out = 0;\r\n      strm.avail_out = chunkSize;\r\n    }\r\n\r\n    status = inflate(strm, Z_NO_FLUSH);    /* no bad return value */\r\n\r\n    if (status === Z_NEED_DICT$1 && dictionary) {\r\n      // Convert data if needed\r\n      if (typeof dictionary === 'string') {\r\n        dict = string2buf(dictionary);\r\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\r\n        dict = new Uint8Array(dictionary);\r\n      } else {\r\n        dict = dictionary;\r\n      }\r\n\r\n      status = inflateSetDictionary(this.strm, dict);\r\n\r\n    }\r\n\r\n    if (status === Z_BUF_ERROR$1 && allowBufError === true) {\r\n      status = Z_OK$1;\r\n      allowBufError = false;\r\n    }\r\n\r\n    if (status !== Z_STREAM_END$1 && status !== Z_OK$1) {\r\n      this.onEnd(status);\r\n      this.ended = true;\r\n      return false;\r\n    }\r\n\r\n    if (strm.next_out) {\r\n      if (strm.avail_out === 0 || status === Z_STREAM_END$1 || (strm.avail_in === 0 && (_mode === Z_FINISH$1 || _mode === Z_SYNC_FLUSH))) {\r\n\r\n        if (this.options.to === 'string') {\r\n\r\n          next_out_utf8 = utf8border(strm.output, strm.next_out);\r\n\r\n          tail = strm.next_out - next_out_utf8;\r\n          utf8str = buf2string(strm.output, next_out_utf8);\r\n\r\n          // move tail\r\n          strm.next_out = tail;\r\n          strm.avail_out = chunkSize - tail;\r\n          if (tail) { arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\r\n\r\n          this.onData(utf8str);\r\n\r\n        } else {\r\n          this.onData(shrinkBuf(strm.output, strm.next_out));\r\n        }\r\n      }\r\n    }\r\n\r\n    // When no more input data, we should check that internal inflate buffers\r\n    // are flushed. The only way to do it when avail_out = 0 - run one more\r\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\r\n    // Here we set flag to process this error properly.\r\n    //\r\n    // NOTE. Deflate does not return error in this case and does not needs such\r\n    // logic.\r\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\r\n      allowBufError = true;\r\n    }\r\n\r\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END$1);\r\n\r\n  if (status === Z_STREAM_END$1) {\r\n    _mode = Z_FINISH$1;\r\n  }\r\n\r\n  // Finalize on the last chunk.\r\n  if (_mode === Z_FINISH$1) {\r\n    status = inflateEnd(this.strm);\r\n    this.onEnd(status);\r\n    this.ended = true;\r\n    return status === Z_OK$1;\r\n  }\r\n\r\n  // callback interim results if Z_SYNC_FLUSH.\r\n  if (_mode === Z_SYNC_FLUSH) {\r\n    this.onEnd(Z_OK$1);\r\n    strm.avail_out = 0;\r\n    return true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * Inflate#onData(chunk) -> Void\r\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\r\n *   on js engine support. When string output requested, each chunk\r\n *   will be string.\r\n *\r\n * By default, stores data blocks in `chunks[]` property and glue\r\n * those in `onEnd`. Override this handler, if you need another behaviour.\r\n **/\r\nInflate.prototype.onData = function (chunk) {\r\n  this.chunks.push(chunk);\r\n};\r\n\r\n\r\n/**\r\n * Inflate#onEnd(status) -> Void\r\n * - status (Number): inflate status. 0 (Z_OK) on success,\r\n *   other if not.\r\n *\r\n * Called either after you tell inflate that the input stream is\r\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\r\n * or if an error happened. By default - join collected chunks,\r\n * free memory and fill `results` / `err` properties.\r\n **/\r\nInflate.prototype.onEnd = function (status) {\r\n  // On success - join\r\n  if (status === Z_OK$1) {\r\n    if (this.options.to === 'string') {\r\n      // Glue & convert here, until we teach pako to send\r\n      // utf8 alligned strings to onData\r\n      this.result = this.chunks.join('');\r\n    } else {\r\n      this.result = flattenChunks(this.chunks);\r\n    }\r\n  }\r\n  this.chunks = [];\r\n  this.err = status;\r\n  this.msg = this.strm.msg;\r\n};\r\n\r\n\r\n/**\r\n * inflate(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to decompress.\r\n * - options (Object): zlib inflate options.\r\n *\r\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\r\n * format via wrapper header by default. That's why we don't provide\r\n * separate `ungzip` method.\r\n *\r\n * Supported options are:\r\n *\r\n * - windowBits\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information.\r\n *\r\n * Sugar (options):\r\n *\r\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\r\n *   negative windowBits implicitly.\r\n * - `to` (String) - if equal to 'string', then result will be converted\r\n *   from utf8 to utf16 (javascript) string. When string output requested,\r\n *   chunk length can differ from `chunkSize`, depending on content.\r\n *\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\r\n *   , output;\r\n *\r\n * try {\r\n *   output = pako.inflate(input);\r\n * } catch (err)\r\n *   console.log(err);\r\n * }\r\n * ```\r\n **/\r\nfunction doInflate(input, options) {\r\n  var inflator = new Inflate(options);\r\n\r\n  inflator.push(input, true);\r\n\r\n  // That will never happens, if you don't cheat with options :)\r\n  if (inflator.err) { throw inflator.msg; }\r\n\r\n  return inflator.result;\r\n}\r\n\r\nexport { doInflate as ungzip };","/**\r\n * @file Gzip Decompressor\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { ungzip } from '../../lib/pako_inflate.es6.js';\r\nimport { DecompressorRegistry } from '../globals';\r\nfunction gzipDecompress(data) {\r\n    let decompressedData;\r\n    if (data instanceof ArrayBuffer) {\r\n        data = new Uint8Array(data);\r\n    }\r\n    try {\r\n        decompressedData = ungzip(data);\r\n    }\r\n    catch (e) {\r\n        decompressedData = data; // assume it is already uncompressed\r\n    }\r\n    return decompressedData;\r\n}\r\nDecompressorRegistry.add('gz', gzipDecompress);\r\n//# sourceMappingURL=gzip-decompressor.js.map","/**\r\n * @file Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n/**\r\n * Datasource base class\r\n * @interface\r\n */\r\nclass Datasource {\r\n}\r\nexport default Datasource;\r\n//# sourceMappingURL=datasource.js.map","/**\r\n * @file RCSB Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log, DatasourceRegistry } from '../globals';\r\nimport { getProtocol } from '../utils';\r\nimport { getFileInfo } from '../loader/loader-utils';\r\nimport Datasource from './datasource';\r\nconst baseUrl = '//files.rcsb.org/download/';\r\nconst mmtfBaseUrl = '//mmtf.rcsb.org/v1.0/';\r\nconst mmtfFullUrl = mmtfBaseUrl + 'full/';\r\nconst mmtfReducedUrl = mmtfBaseUrl + 'reduced/';\r\nclass RcsbDatasource extends Datasource {\r\n    getUrl(src) {\r\n        // valid path are\r\n        // XXXX.pdb, XXXX.pdb.gz, XXXX.cif, XXXX.cif.gz, XXXX.mmtf, XXXX.bb.mmtf\r\n        // XXXX defaults to XXXX.cif\r\n        const info = getFileInfo(src);\r\n        const pdbid = info.name.substr(0, 4);\r\n        let url;\r\n        if (['pdb', 'cif'].includes(info.ext) &&\r\n            (info.compressed === false || info.compressed === 'gz')) {\r\n            url = baseUrl + info.path;\r\n        }\r\n        else if (info.ext === 'mmtf') {\r\n            if (info.base.endsWith('.bb')) {\r\n                url = mmtfReducedUrl + pdbid;\r\n            }\r\n            else {\r\n                url = mmtfFullUrl + pdbid;\r\n            }\r\n        }\r\n        else if (!info.ext) {\r\n            url = mmtfFullUrl + pdbid;\r\n        }\r\n        else {\r\n            Log.warn('unsupported ext', info.ext);\r\n            url = mmtfFullUrl + pdbid;\r\n        }\r\n        return getProtocol() + url;\r\n    }\r\n    getExt(src) {\r\n        const ext = getFileInfo(src).ext;\r\n        return ext ? ext : 'mmtf';\r\n    }\r\n}\r\nDatasourceRegistry.add('rcsb', new RcsbDatasource());\r\nexport default RcsbDatasource;\r\n//# sourceMappingURL=rcsb-datasource.js.map","/**\r\n * @file PubChem Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { Log, DatasourceRegistry } from '../globals';\r\nimport { getProtocol } from '../utils';\r\nimport { getFileInfo } from '../loader/loader-utils';\r\nimport Datasource from './datasource';\r\nconst baseUrl = '//pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/';\r\nconst suffixUrl = '/SDF?record_type=3d';\r\nclass PubchemDatasource extends Datasource {\r\n    getUrl(src) {\r\n        const info = getFileInfo(src);\r\n        const cid = info.name;\r\n        let url;\r\n        if (!info.ext || info.ext === 'sdf') {\r\n            url = baseUrl + cid + suffixUrl;\r\n        }\r\n        else {\r\n            Log.warn('unsupported ext', info.ext);\r\n            url = baseUrl + cid + suffixUrl;\r\n        }\r\n        return getProtocol() + url;\r\n    }\r\n    getExt(src) {\r\n        const ext = getFileInfo(src).ext;\r\n        return ext ? ext : 'sdf';\r\n    }\r\n}\r\nDatasourceRegistry.add('pubchem', new PubchemDatasource());\r\nexport default PubchemDatasource;\r\n//# sourceMappingURL=pubchem-datasource.js.map","/**\r\n * @file Pass Through Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { DatasourceRegistry } from '../globals';\r\nimport { getFileInfo } from '../loader/loader-utils';\r\nimport Datasource from './datasource';\r\nclass PassThroughDatasource extends Datasource {\r\n    getUrl(path) {\r\n        return path;\r\n    }\r\n    getExt(path) {\r\n        return getFileInfo(path).ext;\r\n    }\r\n}\r\nDatasourceRegistry.add('ftp', new PassThroughDatasource());\r\nDatasourceRegistry.add('http', new PassThroughDatasource());\r\nDatasourceRegistry.add('https', new PassThroughDatasource());\r\nexport default PassThroughDatasource;\r\n//# sourceMappingURL=passthrough-datasource.js.map","/**\r\n * @file Static Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { getAbsolutePath } from '../utils';\r\nimport { getFileInfo } from '../loader/loader-utils';\r\nimport Datasource from './datasource';\r\nconst reProtocol = /^((http|https|ftp):)*\\/\\//;\r\nclass StaticDatasource extends Datasource {\r\n    constructor(baseUrl = '') {\r\n        super();\r\n        this.baseUrl = baseUrl;\r\n    }\r\n    getUrl(src) {\r\n        const info = getFileInfo(src);\r\n        let url = this.baseUrl + info.path;\r\n        if (!reProtocol.test(this.baseUrl)) {\r\n            url = getAbsolutePath(url);\r\n        }\r\n        return url;\r\n    }\r\n    getExt(src) {\r\n        return getFileInfo(src).ext;\r\n    }\r\n}\r\nexport default StaticDatasource;\r\n//# sourceMappingURL=static-datasource.js.map","/**\r\n * @file MDsrv Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nimport { autoLoad, getFileInfo } from '../loader/loader-utils';\r\nimport Datasource from './datasource';\r\nclass MdsrvDatasource extends Datasource {\r\n    constructor(baseUrl = '') {\r\n        super();\r\n        this.baseUrl = baseUrl;\r\n    }\r\n    getListing(path = '') {\r\n        let url = `${this.baseUrl}dir/${path}`;\r\n        if (url[url.length - 1] !== '/')\r\n            url += '/';\r\n        return autoLoad(url, {\r\n            ext: 'json'\r\n        }).then((jsonData) => ({\r\n            path: path,\r\n            data: jsonData.data\r\n        }));\r\n    }\r\n    getUrl(src) {\r\n        const info = getFileInfo(src);\r\n        return `${this.baseUrl}file/${info.path}${info.query}`;\r\n    }\r\n    getCountUrl(src) {\r\n        const info = getFileInfo(src);\r\n        return `${this.baseUrl}traj/numframes/${info.path}${info.query}`;\r\n    }\r\n    getFrameUrl(src, frameIndex) {\r\n        const info = getFileInfo(src);\r\n        return `${this.baseUrl}traj/frame/${frameIndex}/${info.path}${info.query}`;\r\n    }\r\n    getFrameParams(src, atomIndices) {\r\n        return `atomIndices=${atomIndices.join(';')}`;\r\n    }\r\n    getPathUrl(src, atomIndex) {\r\n        const info = getFileInfo(src);\r\n        return `${this.baseUrl}traj/path/${atomIndex}/${info.path}${info.query}`;\r\n    }\r\n    getExt(src) {\r\n        return getFileInfo(src).ext;\r\n    }\r\n}\r\nexport default MdsrvDatasource;\r\n//# sourceMappingURL=mdsrv-datasource.js.map","/**\r\n * @file UI Parameters\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { MouseActionPresets } from '../controls/mouse-actions';\r\nfunction BooleanParam() { return { type: 'boolean' }; }\r\nfunction ColorParam() { return { type: 'color' }; }\r\nfunction IntegerParam(max, min) {\r\n    return { type: 'integer', max, min };\r\n}\r\nfunction NumberParam(precision, max, min) {\r\n    return { type: 'number', precision, max, min };\r\n}\r\nfunction RangeParam(step, max, min) {\r\n    return { type: 'range', step, max, min };\r\n}\r\nfunction SelectParam(...options) {\r\n    return { type: 'select', options: options.reduce((o, k) => (Object.assign(Object.assign({}, o), { [k]: k })), {}) };\r\n}\r\nexport const UIStageParameters = {\r\n    backgroundColor: ColorParam(),\r\n    quality: SelectParam('auto', 'low', 'medium', 'high'),\r\n    sampleLevel: RangeParam(1, 5, -1),\r\n    impostor: BooleanParam(),\r\n    workerDefault: BooleanParam(),\r\n    rotateSpeed: NumberParam(1, 10, 0),\r\n    zoomSpeed: NumberParam(1, 10, 0),\r\n    panSpeed: NumberParam(1, 10, 0),\r\n    clipNear: RangeParam(1, 100, 0),\r\n    clipFar: RangeParam(1, 100, 0),\r\n    clipDist: IntegerParam(200, 0),\r\n    clipMode: SelectParam('scene', 'camera'),\r\n    clipScale: SelectParam('relative', 'absolute'),\r\n    fogNear: RangeParam(1, 100, 0),\r\n    fogFar: RangeParam(1, 100, 0),\r\n    cameraType: SelectParam('perspective', 'orthographic', 'stereo'),\r\n    cameraEyeSep: NumberParam(3, 1.0, 0.01),\r\n    cameraFov: RangeParam(1, 120, 15),\r\n    lightColor: ColorParam(),\r\n    lightIntensity: NumberParam(2, 10, 0),\r\n    ambientColor: ColorParam(),\r\n    ambientIntensity: NumberParam(2, 10, 0),\r\n    hoverTimeout: IntegerParam(10000, -1),\r\n    tooltip: BooleanParam(),\r\n    mousePreset: SelectParam(...Object.keys(MouseActionPresets))\r\n};\r\n//# sourceMappingURL=parameters.js.map","/**\r\n * @file Version\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport * as data from '../package.json';\r\n/**\r\n * Version name\r\n * @type {String}\r\n */\r\nconst Version = data.version;\r\nexport default Version;\r\n//# sourceMappingURL=version.js.map","import Component from '../component/component';\r\nclass CustomComponent extends Component {\r\n    constructor(stage, nanostructure, params = {}) {\r\n        super(stage, nanostructure, params);\r\n        this.stage = stage;\r\n        this.nanostructure = nanostructure;\r\n    }\r\n    get type() {\r\n        return \"custom\";\r\n    }\r\n    addRepresentation(type, params) {\r\n        return this._addRepresentation(type, this.nanostructure, params);\r\n    }\r\n}\r\nexport default CustomComponent;\r\n//# sourceMappingURL=CustomComponent.js.map","/**\r\n * @file ngl\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport './polyfills';\r\nimport _Promise from 'promise-polyfill';\r\n/**\r\n * The NGL module. These members are available in the `NGL` namespace when using the {@link https://github.com/umdjs/umd|UMD} build in the `ngl.js` file.\r\n * @module NGL\r\n */\r\nexport { Debug, setDebug, MeasurementDefaultParams, setMeasurementDefaultParams, ScriptExtensions, ColormakerRegistry, DatasourceRegistry, DecompressorRegistry, ParserRegistry, RepresentationRegistry, setListingDatasource, setTrajectoryDatasource, ListingDatasource, TrajectoryDatasource } from './globals';\r\nexport { autoLoad, getDataInfo, getFileInfo } from './loader/loader-utils';\r\nimport Selection from './selection/selection';\r\nimport PdbWriter from './writer/pdb-writer';\r\nimport SdfWriter from './writer/sdf-writer';\r\nimport StlWriter from './writer/stl-writer';\r\nimport Stage from './stage/stage';\r\nimport Collection from './component/collection';\r\nimport ComponentCollection from './component/component-collection';\r\nimport Component from './component/component';\r\nimport ShapeComponent from './component/shape-component';\r\nimport StructureComponent from './component/structure-component';\r\nimport SurfaceComponent from './component/surface-component';\r\nimport VolumeComponent from './component/volume-component';\r\nimport RepresentationCollection from './component/representation-collection';\r\nimport Assembly from './symmetry/assembly';\r\nimport TrajectoryPlayer from './trajectory/trajectory-player';\r\nimport Superposition from './align/superposition';\r\nexport { superpose } from './align/align-utils';\r\nexport { guessElement, concatStructures } from './structure/structure-utils';\r\nexport { flatten, throttle, download, getQuery, uniqueArray } from './utils';\r\nimport Queue from './utils/queue';\r\nimport Counter from './utils/counter';\r\nimport Frames from './trajectory/frames';\r\n//\r\nimport Colormaker from './color/colormaker';\r\nimport './color/atomindex-colormaker';\r\nimport './color/bfactor-colormaker';\r\nimport './color/chainid-colormaker';\r\nimport './color/chainindex-colormaker';\r\nimport './color/chainname-colormaker';\r\nimport './color/densityfit-colormaker';\r\nimport './color/electrostatic-colormaker';\r\nimport './color/element-colormaker';\r\nimport './color/entityindex-colormaker';\r\nimport './color/entitytype-colormaker';\r\nimport './color/geoquality-colormaker';\r\nimport './color/hydrophobicity-colormaker';\r\nimport './color/modelindex-colormaker';\r\nimport './color/moleculetype-colormaker';\r\nimport './color/occupancy-colormaker';\r\nimport './color/partialcharge-colormaker';\r\nimport './color/random-colormaker';\r\nimport './color/randomcoilindex-colormaker';\r\nimport './color/residueindex-colormaker';\r\nimport './color/resname-colormaker';\r\nimport './color/sstruc-colormaker';\r\nimport './color/uniform-colormaker';\r\nimport './color/value-colormaker';\r\nimport './color/volume-colormaker';\r\n//\r\nimport './component/shape-component';\r\nimport './component/structure-component';\r\nimport './component/surface-component';\r\nimport './component/volume-component';\r\n//\r\nimport './representation/angle-representation';\r\nimport './representation/axes-representation';\r\nimport './representation/backbone-representation';\r\nimport './representation/ballandstick-representation';\r\nimport './representation/base-representation';\r\nimport './representation/cartoon-representation';\r\nimport './representation/contact-representation';\r\nimport './representation/dihedral-representation';\r\nimport './representation/dihedral-histogram-representation';\r\nimport './representation/distance-representation';\r\nimport './representation/helixorient-representation';\r\nimport './representation/hyperball-representation';\r\nimport './representation/label-representation';\r\nimport './representation/licorice-representation';\r\nimport './representation/line-representation';\r\nimport './representation/molecularsurface-representation';\r\nimport './representation/point-representation';\r\nimport './representation/ribbon-representation';\r\nimport './representation/rocket-representation';\r\nimport './representation/rope-representation';\r\nimport './representation/spacefill-representation';\r\nimport './representation/trace-representation';\r\nimport './representation/tube-representation';\r\nimport './representation/unitcell-representation';\r\nimport './representation/validation-representation';\r\nimport BufferRepresentation from './representation/buffer-representation';\r\nimport ArrowBuffer from './buffer/arrow-buffer';\r\nimport BoxBuffer from './buffer/box-buffer';\r\nimport ConeBuffer from './buffer/cone-buffer';\r\nimport CylinderBuffer from './buffer/cylinder-buffer';\r\nimport EllipsoidBuffer from './buffer/ellipsoid-buffer';\r\nimport MeshBuffer from './buffer/mesh-buffer';\r\nimport OctahedronBuffer from './buffer/octahedron-buffer';\r\nimport PointBuffer from './buffer/point-buffer';\r\nimport SphereBuffer from './buffer/sphere-buffer';\r\nimport TetrahedronBuffer from './buffer/tetrahedron-buffer';\r\nimport TextBuffer from './buffer/text-buffer';\r\nimport TorusBuffer from './buffer/torus-buffer';\r\nimport WidelineBuffer from './buffer/wideline-buffer';\r\n//\r\nimport './parser/cif-parser';\r\nimport './parser/gro-parser';\r\nimport './parser/mmtf-parser';\r\nimport './parser/mol2-parser';\r\nimport './parser/pdb-parser';\r\nimport './parser/pdbqt-parser';\r\nimport './parser/pqr-parser';\r\nimport './parser/sdf-parser';\r\nimport './parser/prmtop-parser';\r\nimport './parser/psf-parser';\r\nimport './parser/top-parser';\r\nimport './parser/dcd-parser';\r\nimport './parser/nctraj-parser';\r\nimport './parser/trr-parser';\r\nimport './parser/xtc-parser';\r\nimport './parser/cube-parser';\r\nimport './parser/dsn6-parser';\r\nimport './parser/dx-parser';\r\nimport './parser/dxbin-parser';\r\nimport './parser/mrc-parser';\r\nimport './parser/xplor-parser';\r\nimport './parser/kin-parser';\r\nimport './parser/obj-parser';\r\nimport './parser/ply-parser';\r\nimport './parser/csv-parser';\r\nimport './parser/json-parser';\r\nimport './parser/msgpack-parser';\r\nimport './parser/netcdf-parser';\r\nimport './parser/text-parser';\r\nimport './parser/xml-parser';\r\nimport './parser/validation-parser';\r\n//\r\nimport Shape from './geometry/shape';\r\nimport Kdtree from './geometry/kdtree';\r\nimport SpatialHash from './geometry/spatial-hash';\r\nimport Structure from './structure/structure';\r\nimport MolecularSurface from './surface/molecular-surface';\r\nimport Volume from './surface/volume';\r\n//\r\nimport './utils/gzip-decompressor';\r\n//\r\nimport './datasource/rcsb-datasource';\r\nimport './datasource/pubchem-datasource';\r\nimport './datasource/passthrough-datasource';\r\nimport StaticDatasource from './datasource/static-datasource';\r\nimport MdsrvDatasource from './datasource/mdsrv-datasource';\r\n//\r\nexport { LeftMouseButton, MiddleMouseButton, RightMouseButton } from './constants';\r\nimport MouseActions from './controls/mouse-actions';\r\nimport KeyActions from './controls/key-actions';\r\nimport PickingProxy from './controls/picking-proxy';\r\n//\r\nexport { Signal } from 'signals';\r\nexport { Matrix3, Matrix4, Vector2, Vector3, Box3, Quaternion, Euler, Plane, Color } from 'three';\r\n//\r\nexport { UIStageParameters } from './ui/parameters';\r\n//\r\nimport Version from './version';\r\n// MARILIA codes\r\nimport CustomComponent from \"./marilia_custom_classes/CustomComponent\";\r\nimport DnaOrigamiNanostructure from \"./marilia_custom_classes/DnaOrigamiNanostructure\";\r\nif (!window.Promise) {\r\n    window.Promise = _Promise;\r\n}\r\nexport { Version, StaticDatasource, MdsrvDatasource, Colormaker, Selection, PdbWriter, SdfWriter, StlWriter, Stage, Collection, ComponentCollection, RepresentationCollection, Component, ShapeComponent, StructureComponent, SurfaceComponent, VolumeComponent, Assembly, TrajectoryPlayer, Superposition, Frames, Queue, Counter, BufferRepresentation, ArrowBuffer, BoxBuffer, ConeBuffer, CylinderBuffer, EllipsoidBuffer, MeshBuffer, OctahedronBuffer, PointBuffer, SphereBuffer, TetrahedronBuffer, TextBuffer, TorusBuffer, WidelineBuffer, Shape, Structure, Kdtree, SpatialHash, MolecularSurface, Volume, MouseActions, KeyActions, PickingProxy, CustomComponent, DnaOrigamiNanostructure };\r\n//# sourceMappingURL=ngl.js.map"],"names":["arguments","const","let","Vector2","Vector3","Matrix4","Quaternion","Color","chroma\r\n        .scale","test","Signal","prototypeAccessors","super","ColormakerRegistry","this","Debug","WorkerRegistry","_WorkerRegistry","_ColormakerRegistry","ParserRegistry","_ParserRegistry","ListingDatasource","TrajectoryDatasource","sprintf","signalsWrapper.Signal","ShaderChunk","i","c","angle","Points","Box3","PerspectiveCamera","OrthographicCamera","StereoCamera","Scene","Group","Fog","SpotLight","AmbientLight","WebGLRenderer","WebGLRenderTarget","NearestFilter","RGBAFormat","FloatType","UnsignedByteType","LinearFilter","Uniform","ShaderMaterial","AdditiveBlending","Mesh","PlaneGeometry","BufferGeometry","BufferAttribute","LineSegments","b","dx","dy","tmpRotateMatrix","tmpRotateVector","distance","prototypeAccessors$1","Worker","k3","tmpVec","size","n","k","state","invalidAtomContact","offset","outOfPlane","tmpColor","j","swap","Geometry","a","Matrix3","FrontSide","BackSide","DoubleSide","UniformsUtils","UniformsLib","NoBlending","wireframeIndex","tmpRotateQuaternion","tmpMatrix","Kdtree","_Kdtree","index","ai3","t","getHash","matrix","IcosahedronBufferGeometry","DataTexture","NormalBlending","iy","ix","iz","idx","val","DnaOrigamiNanostructure","Euler","d","name","atomSet","getData","s","scale","CylinderBufferGeometry","mapping","mappingIndices","MappedAlignedBoxBuffer","y","x","q","CanvasTexture","quadIndices","getSize","eye","target","up","getGeo","ConeBufferGeometry","BoxBufferGeometry","OctahedronBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","resname","chainname","inscode","resno","reWhitespace","ensureArray","ls","dates","depDates","r","reTrimQuotes","listMasters","listColor","listName","label","color","position","groupName","groupMasters","key","groupFlags","Face3","sele","jl","il","g","ga","clashes","atomDict","ca","ungzip","baseUrl","data.version"],"mappings":"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,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;EAC1qC,CAAC,CAAC;AACF,EAAOA,IAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC,EAKA;AACA,EAAOA,IAAM,QAAQ,GAAG;EACxmC,CAAC,CAAC;AACF,EAAOA,IAAM,gBAAgB,GAAG,GAAG,CAAC;AACpC,EA8tBA;AACA,EAAOA,IAAM,aAAa,GAAG;EAC7B,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EACjoC,CAAC,CAAC;AACF,EAAOA,IAAM,qBAAqB,GAAG,GAAG,CAAC;AACzC,EAAOA,IAAM,QAAQ,GAAG;EACxB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjB,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjB,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACd,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjB,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACd,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACjB,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACd,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EACX,IAAI,EAAE,EAAE,CAAC,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EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI;EAChF,IAAI,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI;EAChF,IAAI,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7E,IAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC/E,IAAI,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI;EAC7E,IAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC/E,IAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC/E,IAAI,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK;EACjF,IAAI,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;EACjF,IAAI,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI;EAClF,IAAI,KAAK,EAAE,IAAI,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AK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK;EAC7D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAC9D,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;EAC5D,KAAK,CAAC,CAAC;EACP,CAAC;EACD,SAAS,WAAW,GAAG;EACvB,IAAI,OAAO,IAAI,UAAU,CAAC;EAC1B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACtE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChhE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvD,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzD,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzD,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC1D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChhE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzD,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzhE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC7D,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACzD,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjhE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC/D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACjE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAChE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,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;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAIA,IAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACtB,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC5D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC5D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC5D,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC5D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;EAC3D,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,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C,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9E,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/E,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAClF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAChF,CAAC,CAAC;EACFA,IAAM,QAAQ,GAAG;EACjB;EACA,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACzF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACzF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACzrF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACtxF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACxF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/F,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpF,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5F,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC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lB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,CAAC,CAAC;EACFA,IAAM,mBAAmB,GAAG,QAAQ,CAAC;EACrC;EACA;EACA;EACA,IAAM,iBAAiB;MACnB,0BAAW,CAAC,MAAM,EAAE;EACxB,QAAQ,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;EAC/D,QAAQW,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB;;;;kEAAK;EACL,gCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQX,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;EAClC,QAAQ,IAAI,OAAO,KAAK,GAAG,EAAE;EAC7B,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACzC,SAAS;EACT,aAAa;EACb,YAAY,OAAO,aAAa,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC;EACjE,SAAS;EACT;;;IAbgC,aAc/B;AACDY,sBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;;ECrJrD;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,qBAAqB;MACvB,8BAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC;EAC/C,SAAS;EACT,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACjF,SAAS;EACT,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAChD;;;;0EAAK;EACL,oCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;EACpD;;;IAboC,aAcnC;AACDC,sBAAkB,CAAC,GAAG,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC;;ECzB7D;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,oBAAoB;;;;;;;;;qCACtB,gCAAU,CAAC,EAAE;EACjB,QAAQZ,IAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;EAC3B,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC;EAChD,QAAQ,QAAQ,EAAE;EAClB,YAAY,KAAK,aAAa;EAC9B,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,gBAAgB;EACjC,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,eAAe;EAChC,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,WAAW;EAC5B,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY;EACZ,gBAAgB,OAAO,QAAQ,CAAC;EAChC,SAAS;EACT;;;IAhBmC,aAiBlC;AACDY,sBAAkB,CAAC,GAAG,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;;EC7B3D;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,oBAAoB;MACtB,6BAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;EAC1B,QAAQX,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;EAChD,QAAQ,IAAI,GAAG,EAAE;EACjB,YAAY,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;EAC/C,YAAY,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;EACvC,SAAS;EACT;;;;wEAAK;EACL,mCAAI,gCAAU,IAAI,EAAE;EACpB,QAAQC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,OAAO;EACxB,cAAY,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAC;EACvC,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAC;EACzC,QAAQ,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;EACtC,QAAQA,IAAI,eAAe,CAAC;EAC5B,QAAQD,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;EAC/C,QAAQ,IAAI,OAAO,KAAK,SAAS,EAAE;EACnC,YAAYA,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;EAC7D,YAAY,eAAe,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;EACzD,SAAS;EACT,aAAa;EACb,YAAY,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,SAAS;EACT,QAAQ,IAAI,eAAe,KAAK,CAAC,EAAE;EACnC,YAAY,OAAO,QAAQ,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,eAAe,KAAK,CAAC,EAAE;EACxC,YAAY,OAAO,QAAQ,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,eAAe,KAAK,CAAC,EAAE;EACxC,YAAY,OAAO,QAAQ,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,eAAe,IAAI,CAAC,EAAE;EACvC,YAAY,OAAO,QAAQ,CAAC;EAC5B,SAAS;EACT,QAAQ,OAAO,QAAQ,CAAC;EACxB;;;IAxCmC,aAyClC;AACDY,sBAAkB,CAAC,GAAG,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;;ECrD3D;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,wBAAwB;MAC1B,iCAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;EAC7C,SAAS;EACT,QAAQX,IAAM,GAAG,GAAG,CAAC,CAAC;EACtB,QAAQ,KAAKA,IAAM,IAAI,IAAI,qBAAqB,EAAE;EAClD,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EAChE,SAAS;EACT,QAAQ,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC,GAAG,CAAC,CAAC;EAC9E,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,YAAYC,IAAI,GAAG,GAAG,QAAQ,CAAC;EAC/B,YAAYA,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;EAChC,YAAY,KAAKD,IAAMuG,MAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EAC3C,gBAAgBvG,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAACuG,MAAI,CAAC,CAAC;EAC7C,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACzC,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACzC,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;EACnD,SAAS;EACT,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EACvC;;;;gFAAK;EACL,uCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,4BAA4B,CAAC,CAAC;EACxF;;;IA1BuC,aA2BtC;AACD3F,sBAAkB,CAAC,GAAG,CAAC,gBAAgB,EAAE,wBAAwB,CAAC,CAAC;;ECvCnE;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,oBAAoB;MACtB,6BAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;EAC9C,SAAS;EACT,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EAC5E,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAC/C;;;;wEAAK;EACL,mCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;EAClD;;;IAbmC,aAclC;AACDC,sBAAkB,CAAC,GAAG,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;;ECzB3D;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,sBAAsB;;;;;;;;;uCACxB,gCAAU,CAAC,EAAE;EACjB,QAAQ,QAAQ,CAAC,CAAC,WAAW,CAAC,YAAY;EAC1C,YAAY,KAAK,SAAS;EAC1B,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,OAAO;EACxB,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,WAAW;EAC5B,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,OAAO;EACxB,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,OAAO;EACxB,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY,KAAK,cAAc;EAC/B,gBAAgB,OAAO,QAAQ,CAAC;EAChC,YAAY;EACZ,gBAAgB,OAAO,QAAQ,CAAC;EAChC,SAAS;EACT;;;IAlBqC,aAmBpC;AACDA,sBAAkB,CAAC,GAAG,CAAC,cAAc,EAAE,sBAAsB,CAAC,CAAC;;EC/B/D;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,mBAAmB;MACrB,4BAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC;EAC3C,SAAS;EACT,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,SAAS;EACT,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAC9C;;;;sEAAK;EACL,kCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;EAChD;;;IAbkC,aAcjC;AACDC,sBAAkB,CAAC,GAAG,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;;ECzBzD;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,uBAAuB;MACzB,gCAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;EAC1C,SAAS;EACT,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC5B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7C,SAAS;EACT,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAClD;;;;8EAAK;EACL,sCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC;EAC7D;;;IAbsC,aAcrC;AACDC,sBAAkB,CAAC,GAAG,CAAC,eAAe,EAAE,uBAAuB,CAAC,CAAC;;EClCjE;EACA;EACA;EACA;EACA;AACA,EAEA,SAAS,WAAW,GAAG;EACvB,IAAI,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC;EACpC,CAAC;EACD;EACA;EACA;EACA,IAAM,gBAAgB;;;;;;;;;iCAKlB,kCAAY;EAChB,QAAQ,OAAO,WAAW,EAAE,CAAC;EAC7B,MAAK;EACL;EACA;EACA;EACA;EACA,+BAAI,sCAAc;EAClB,QAAQ,OAAO,WAAW,EAAE,CAAC;EAC7B,MAAK;EACL;EACA;EACA;EACA;EACA,+BAAI,0CAAgB;EACpB,QAAQ,OAAO,WAAW,EAAE,CAAC;EAC7B;;;IArB+B,aAsB9B;AACDA,sBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;;ECpCnD;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,yBAAyB;MAC3B,kCAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;EAC1B,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;EAC7C,SAAS;EACT,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5D,QAAQX,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;EAChD,QAAQ,IAAI,GAAG;EACf,cAAY,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,GAAC;EACvC;;;;kFAAK;EACL,wCAAI,gCAAU,IAAI,EAAE;EACpB,QAAQC,IAAI,IAAI,GAAG,OAAI,IAAI,CAAC,QAAO,UAAI,IAAI,CAAC,MAAO,CAAC;EACpD,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAC;EACzC,QAAQD,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EACvC,QAAQ,OAAO,GAAG,KAAK,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;EACjE;;;IAlBwC,aAmBvC;AACDY,sBAAkB,CAAC,GAAG,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;;EC9BrE;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,sBAAsB;MACxB,+BAAW,CAAC,MAAM,EAAE;;;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;EAChC,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;EAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;EAC9C,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACrE,SAAS;EACT,QAAQ,MAAM,CAAC,SAAS,CAAC,SAAS,WAAE,EAAE,EAAK;EAC3C,YAAYE,MAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;EACvE,YAAYA,MAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,GAAGA,MAAI,CAAC,QAAQ,EAAE,CAAC;EAC3D,SAAS,CAAC,CAAC;EACX;;;;4EAAK;EACL,qCAAI,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;EAChE;;;IAfqC,aAgBpC;AACDD,sBAAkB,CAAC,GAAG,CAAC,cAAc,EAAE,sBAAsB,CAAC,CAAC;;EC5B/D;EACA;EACA;EACA;EACA;AACA,EAEA;EACAZ,IAAM,aAAa,GAAG;EACtB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,GAAG,EAAE,QAAQ;EACjB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,IAAI,IAAI,EAAE,QAAQ;EAClB,CAAC,CAAC;EACFA,IAAM,mBAAmB,GAAG,QAAQ,CAAC;EACrC;EACA;EACA;EACA,IAAM,iBAAiB;;;;;;;;;kCACnB,gCAAU,CAAC,EAAE;EACjB,QAAQ,OAAO,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC;EAC/D;;;IAHgC,aAI/B;AACDY,sBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;;EC3DrD;EACA;EACA;EACA;EACA;AACA,EAEA;EACAZ,IAAM,eAAe,GAAG;EACxB,IAAI,YAAY,EAAE,QAAQ;EAC1B,IAAI,eAAe,EAAE,QAAQ;EAC7B,IAAI,SAAS,EAAE,QAAQ;EACvB,IAAI,YAAY,EAAE,QAAQ;EAC1B,IAAI,UAAU,EAAE,QAAQ;EACxB,IAAI,MAAM,EAAE,QAAQ;EACpB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,cAAc,EAAE,QAAQ;EAC5B,CAAC,CAAC;EACFA,IAAM,qBAAqB,GAAG,QAAQ,CAAC;EACvC;EACA;EACA;EACA,IAAM,gBAAgB;MAClB,yBAAW,CAAC,MAAM,EAAE;EACxB,QAAQW,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;EAC/D;;;;gEAAK;EACL,+BAAI,gCAAU,EAAE,EAAE;EAClB,QAAQX,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;EACjC,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;EACrC,QAAQ,IAAI,MAAM,KAAK,GAAG,EAAE;EAC5B,YAAY,OAAO,eAAe,CAAC,UAAU,CAAC;EAC9C,SAAS;EACT,aAAa,IAAI,MAAM,KAAK,GAAG,EAAE;EACjC,YAAY,OAAO,eAAe,CAAC,aAAa,CAAC;EACjD,SAAS;EACT,aAAa,IAAI,MAAM,KAAK,GAAG,EAAE;EACjC,YAAY,OAAO,eAAe,CAAC,OAAO,CAAC;EAC3C,SAAS;EACT,aAAa,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;EACnD,YAAY,OAAO,eAAe,CAAC,UAAU,CAAC;EAC9C,SAAS;EACT,aAAa,IAAI,MAAM,KAAK,GAAG,EAAE;EACjC,YAAY,OAAO,eAAe,CAAC,QAAQ,CAAC;EAC5C,SAAS;EACT,aAAa;EACb,YAAY,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC;EACvC,YAAY,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;EAC5B,gBAAgB,OAAO,eAAe,CAAC,GAAG,CAAC;EAC3C,aAAa;EACb,iBAAiB,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;EACjC,gBAAgB,OAAO,eAAe,CAAC,GAAG,CAAC;EAC3C,aAAa;EACb,iBAAiB,IAAI,EAAE,CAAC,YAAY,EAAE,EAAE;EACxC,gBAAgB,OAAO,eAAe,CAAC,YAAY,CAAC;EACpD,aAAa;EACb,iBAAiB,IAAI,EAAE,CAAC,SAAS,EAAE,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;EACzE,gBAAgB,OAAO,eAAe,CAAC,IAAI,CAAC;EAC5C,aAAa;EACb,iBAAiB;EACjB,gBAAgB,OAAO,qBAAqB,CAAC;EAC7C,aAAa;EACb,SAAS;EACT;;;IAzC+B,aA0C9B;AACDY,sBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;;EClEnD;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,iBAAiB;;;;;;;;;kCACnB,kCAAY;EAChB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACrC,MAAK;EACL,gCAAI,kCAAY;EAChB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACrC,MAAK;EACL,gCAAI,oCAAa;EACjB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACrC,MAAK;EACL,gCAAI,sCAAc;EAClB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACrC;;;IAZgC,aAa/B;AACDA,sBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;;ECxBrD;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,eAAe;MACjB,wBAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAC1C;;;;8DAAK;EACL;EACA;EACA;EACA;EACA;EACA,8BAAI,oCAAY,KAAK,EAAE;EACvB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE;;;IAZ8B,aAa7B;AACDC,sBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;;ECxBjD;EACA;EACA;EACA;EACA;AACA,EAIA;EACA;EACA;EACA,IAAM,gBAAgB;MAClB,yBAAW,CAAC,MAAM,EAAE;EACxB,QAAQD,kBAAK,OAAC,MAAM,CAAC,CAAC;EACtB,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAIR,aAAO,EAAE,CAAC;EACjC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EAC1C;;;;gEAAK;EACL;EACA;EACA;EACA;EACA;EACA,+BAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQH,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;EAC9C,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;EAC9C,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EACzC,SAAS;EACT,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;EAC7B,QAAQA,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;EACjC,QAAQA,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;EAC7B,QAAQA,IAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;EAC7B,QAAQA,IAAM,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;EAC5B,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACzB,QAAQ,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;EAC/C;EACA,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC;EACA,QAAQA,IAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACjD,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;EAC1B,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;EAC3B,QAAQA,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3B,QAAQA,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;EAC3B,QAAQA,IAAM,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EAC7B,QAAQA,IAAM,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;EAC7B;EACA,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;EAC5B,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;EAC5B,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;EAC5B,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9B,QAAQA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;EAChC;EACA,QAAQA,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC9B;EACA,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpC,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACtC,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACtC,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;EACxC;EACA,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACtC,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACtC;EACA,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACnC,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC;;;IA5D+B,aA6D9B;AACDY,sBAAkB,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;;EC1EnD;EACA;EACA;EACA;EACA;AACA,EAOA;EACA;EACA;EACA;EACA,IAAM,yBAAyB;MAK3B,kCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQD,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EACnB,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,SAAS;EAC/B,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK;EACnE,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,OAAO;EAC7B,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,YAAY,EAAE,YAAY;EAC9C,oBAAoB,WAAW,EAAE,WAAW;EAC5C,oBAAoB,OAAO,EAAE,OAAO;EACpC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,YAAY;EACpC,aAAa;EACb,YAAY,cAAc,EAAE;EAC5B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,WAAW;EACnC,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,oBAAoB,MAAM,EAAE,MAAM;EAClC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,YAAY;EACpC,aAAa;EACb,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK;EAC9C,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS;EAClF,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS;EAClF,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS;EAClF,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,aAAa,EAAE,aAAa;EAChD,oBAAoB,eAAe,EAAE,eAAe;EACpD,oBAAoB,cAAc,EAAE,cAAc;EAClD,oBAAoB,aAAa,EAAE,aAAa;EAChD,oBAAoB,eAAe,EAAE,eAAe;EACpD,oBAAoB,cAAc,EAAE,cAAc;EAClD,oBAAoB,UAAU,EAAE,UAAU;EAC1C,oBAAoB,YAAY,EAAE,YAAY;EAC9C,oBAAoB,WAAW,EAAE,WAAW;EAC5C,iBAAiB;EACjB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY;EACrD,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa;EACpD,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,aAAa;EACrF,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,oBAAoB,EAAE;EAClC,gBAAgB,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,iBAAiB;EACxD,aAAa;EACb,YAAY,qBAAqB,EAAE;EACnC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC3E,aAAa;EACb,YAAY,sBAAsB,EAAE;EACpC,gBAAgB,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,mBAAmB;EACtF,aAAa;EACb,YAAY,cAAc,EAAE;EAC5B,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW;EACpD,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;EAC7D,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EAC9D,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,UAAU,EAAE,IAAI;EAC5B,SAAS,CAAC,CAAC;EACX;;;;kFAAK;EACL,wCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;EAC3D,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EAC3D,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;EACzE,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,KAAK,QAAQ,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;EAC1E,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;EAC1E,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;EAClE,QAAQ,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;EAClF,QAAQ,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;EAC5E,QAAQ,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,CAAC,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;EAC9E,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EAClD,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL;EACA,wCAAI,0BAAO,IAAI,EAAE;EACjB,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;EACzB,SAAS;EACT,aAAa;EACb,YAAYA,oCAAK,CAAC,WAAM,OAAC,IAAI,CAAC,CAAC;EAC/B,SAAS;EACT,MAAK;EACL,wCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQX,IAAM,QAAQ,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;EACrC,YAAY,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EACpF,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;EACtC,YAAYA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACjD,YAAY,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACrF,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EAChD,MAAK;EACL,wCAAI,wCAAc,MAAM,EAAE,IAAS,EAAE,OAAe,EAAE;qCAAxB,GAAG;2CAAW,GAAG;;EAC/C,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;EACxC,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAClC,SAAS;EACT,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,KAAK,QAAQ,CAAC,EAAE;EAC7E,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;EACnC,YAAY,OAAO,GAAG,IAAI,CAAC;EAC3B,SAAS;EACT,QAAQK,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;EACpD,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;EAC5D,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,EAAE;EACzD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7C,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,wCAAI,wCAAc,KAAK,EAAE,eAAe,EAAE;EAC1C,QAAQA,oCAAK,CAAC,kBAAa,OAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACzC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;EAC7B,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7E,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe;EAC5B,cAAY,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAC;EACxC,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,wCAAI,sDAAqB,MAAW,EAAE;yCAAP,GAAG;;EAClC,QAAQ,OAAOA,oCAAK,CAAC,oBAAe,OAAC,MAAM,CAAC,MAAM,CAAC;EACnD,YAAY,UAAU,EAAE,IAAI,CAAC,eAAe;EAC5C,YAAY,SAAS,EAAE,IAAI,CAAC,cAAc;EAC1C,YAAY,UAAU,EAAE,IAAI,CAAC,eAAe;EAC5C,YAAY,GAAG,EAAE,IAAI,CAAC,QAAQ;EAC9B,YAAY,OAAO,EAAE,IAAI,CAAC,YAAY;EACtC,YAAY,OAAO,EAAE,IAAI,CAAC,YAAY;EACtC,YAAY,OAAO,EAAE,IAAI,CAAC,YAAY;EACtC,YAAY,UAAU,EAAE,IAAI,CAAC,eAAe;EAC5C,YAAY,UAAU,EAAE,IAAI,CAAC,WAAW;EACxC,YAAY,WAAW,EAAE,IAAI,CAAC,gBAAgB;EAC9C,YAAY,WAAW,EAAE,IAAI,CAAC,gBAAgB;EAC9C,YAAY,cAAc,EAAE,IAAI,CAAC,eAAe;EAChD,YAAY,eAAe,EAAE,IAAI,CAAC,oBAAoB;EACtD,YAAY,gBAAgB,EAAE,IAAI,CAAC,qBAAqB;EACxD,YAAY,iBAAiB,EAAE,IAAI,CAAC,sBAAsB;EAC1D,YAAY,SAAS,EAAE,IAAI,CAAC,cAAc;EAC1C,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,OAAO,EAAE,IAAI,CAAC,YAAY;EACtC,SAAS,EAAE,MAAM,EAAE;EACnB,YAAY,OAAO,EAAE,GAAG;EACxB,SAAS,CAAC,CAAC,CAAC;EACZ,MAAK;EACL,wCAAI,0CAAgB;EACpB,QAAQ,OAAO,CAAC,CAAC;EACjB;;;IAzMwC,0BA0MvC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE;EACxC,IAAIX,IAAM,EAAE,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;EACpC,IAAIA,IAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC;EACjC,IAAIA,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;EAC/B,IAAI,IAAI,KAAK,KAAK,CAAC;EACnB,UAAQ,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,GAAC;EACnC;EACA,IAAIA,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EAClC,IAAIA,IAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;EACxC,IAAIA,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;EAClD,IAAIC,IAAI,CAAC,GAAG,CAAC,CAAC;EACd,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;EACnC,QAAQA,IAAI,MAAM,GAAG,KAAK,CAAC;EAC3B,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;EACxC,YAAYD,IAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,YAAY,IAAI,QAAQ,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;EACxE,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;EACzC,oBAAoB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;EACrC,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,MAAM,GAAG,IAAI,CAAC;EAClC,oBAAoB,MAAM;EAC1B,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;EACtC,gBAAgBA,IAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAC/D,gBAAgB,IAAI,WAAW,CAAC,MAAM,EAAE;EACxC,oBAAoB,EAAE,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9C,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,MAAM,GAAG,IAAI,CAAC;EAClC,oBAAoB,MAAM;EAC1B,iBAAiB;EACjB,aAAa;EACb,YAAYC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACnC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC/B,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC/B,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC/B,SAAS;EACT,QAAQ,IAAI,CAAC,MAAM;EACnB,cAAY,CAAC,IAAI,CAAC,GAAG,KAAK,GAAC;EAC3B,KAAK,CAAC,CAAC;EACP,IAAI,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,CAAC;EACD;EACA,SAAS,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;EAClD,IAAID,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC9B,IAAIA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC9B,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,CAAC;;;;;;EC1RD;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACrD,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;EACpC,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;EACvC,SAAS;EACT,QAAQ,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;EAClC,QAAQ,KAAKA,IAAI+G,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,MAAM,EAAEA,GAAC,EAAE,EAAE;EACzC,YAAY,IAAI,CAACA,GAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAACA,GAAC,CAAC,CAAC;EACvC,SAAS;EACT,KAAK;EACL,IAAI,KAAK/G,IAAI+G,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,MAAM,EAAEA,GAAC,EAAE,EAAE;EACrC,QAAQ,KAAK/G,IAAIgH,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,KAAK,EAAEA,GAAC,EAAE,EAAE;EACxC,YAAY,CAAC,CAACA,GAAC,CAAC,GAAG,IAAI,CAACD,GAAC,GAAG,KAAK,GAAGC,GAAC,CAAC,CAAC;EACvC,SAAS;EACT,QAAQ,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;EACjC,QAAQ,KAAKhH,IAAIgH,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,KAAK,EAAEA,GAAC,EAAE,EAAE;EACxC,YAAY,IAAI,CAACD,GAAC,GAAG,KAAK,GAAGC,GAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC;EAClD,SAAS;EACT,KAAK;EACL,CAAC;EACD;EACA,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACb,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;EACnC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;EACnC,IAAI,KAAKhH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EACvC,QAAQA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChF,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;EAC1B,YAAY,CAAC,EAAE,CAAC;EAChB,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChF,SAAS;EACT,QAAQ,CAAC,EAAE,CAAC;EACZ,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACjB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACjB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;EAC3C,KAAK;EACL,IAAI,KAAKA,IAAIiH,GAAC,GAAG,CAAC,EAAEjD,GAAC,GAAG,CAAC,EAAEiD,GAAC,GAAG,CAAC,EAAEA,GAAC,EAAE,EAAE;EACvC,QAAQ,OAAO,CAAC,CAACjD,GAAC,GAAG,CAAC,CAAC,GAAGiD,GAAC;EAC3B,cAAYjD,GAAC,EAAE,GAAC;EAChB,QAAQ,CAAC,CAACiD,GAAC,CAAC,GAAG,CAACA,GAAC,GAAG,CAAC,CAACjD,GAAC,CAAC,KAAKiD,GAAC,GAAG,CAAC,CAACjD,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAACA,GAAC,CAAC,CAAC,CAAC;EACjD,KAAK;EACL,CAAC;;EC/CD;EACA;EACA;EACA;EACA;AACA,EAUAjE,IAAM,cAAc,GAAG,EAAE,CAAC;EAC1B,SAAS,YAAY,CAAC,MAAM,EAAE;EAC9B,IAAIA,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EACxC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;EAC5C,QAAQ,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;EACrD,KAAK;EACL,IAAI,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;EAChC,CAAC;AACD,EAAOA,IAAM,sBAAsB,GAAG;EACtC,IAAI,IAAI,EAAE,YAAY;EACtB,IAAI,IAAI,EAAE,EAAE;EACZ,IAAI,KAAK,EAAE,QAAQ;EACnB,IAAI,OAAO,EAAE,QAAQ;EACrB,IAAI,MAAM,EAAE,QAAQ;EACpB,IAAI,OAAO,EAAE,CAAC;EACd,IAAI,KAAK,EAAE,IAAI;EACf,IAAI,MAAM,EAAE,IAAI;EAChB,CAAC,CAAC;AACF,EAAO,IAAM,SAAS,GAClB,kBAAW,CAAC,MAAW,EAAE;qCAAP,GAAG;;EACzB,IAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,IAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EACzB,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAC3B,IAAQ,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;EACvE,IAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;EAClC,IAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;EACjC,IAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;EAClC;EACA,IAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;EAC7F,IAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;EACrD;EACA,IAAQA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EACtE,IAAQ,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;EAChC,IAAQ,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;EACnC,IAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EAChE,IAAQ,GAAG,CAAC,IAAI,IAAM,CAAC,CAAC,gBAAS,CAAC,CAAC,QAAO,UAAI,CAAC,CAAC,OAAM,UAAI,CAAC,CAAC,KAAI,YAAM,CAAC,CAAC,KAAM,CAAC;EAC/E,IAAQ,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC;EAChC,IAAQ,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC;EAC/B,IAAQ,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;EACpC,IAAQ,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC;EAC/B;EACA,IAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC;EACjE,IAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC;EACjE,IAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;EAClE,IAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;EAClE,IAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACtE,IAAQ,IAAI,CAAC,CAAC,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;EAChE;EACA,IAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC3D,IAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EACxD,IAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;EACrC,IAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EACvC,IAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACtD;EACA,IAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;EACjE;EACA,IAAQ,KAAKC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,MAAM,EAAE,EAAE,CAAC,EAAE;EAC/C,QAAY,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,KAAS;EACT;EACA;EACA;EACA;EACA;EACA;EACA,IAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;EAC9C,IAAQ,IAAI,CAAC,OAAO,GAAG,IAAIkH,mBAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACvD,IAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;EACnC,IAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;EACpC,EAAC;sBACD,oBAAI,IAAI,EAAE;EACd,IAAQnH,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;EAClC,IAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;EAC7C,QAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5B,QAAY,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE;EACzD,YAAgB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAClC,YAAgB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;EAC/C,SAAa;EACb,QAAY,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,EAAE;EAC1D,YAAgB,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;EAChD,SAAa;EACb,QAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG;EAChC,YAAgB,CAAC,EAAE,IAAI,CAAC,QAAQ;EAChC,YAAgB,CAAC,EAAE,IAAI,CAAC,QAAQ;EAChC,YAAgB,CAAC,EAAE,IAAI,CAAC,QAAQ;EAChC,YAAgB,CAAC,EAAE,IAAI,CAAC,QAAQ;EAChC,SAAa,CAAC;EACd,QAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACjJ,QAAY,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;EAC3C,KAAS;EACT,IAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EAC7B,EAAC;sBACD,oBAAI,IAAI,EAAE;EACd,IAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC;EACjD,EAAC;sBACD,sBAAK,IAAI,EAAE;EACf,IAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;EAClC,IAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;EAClC,IAAQA,IAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;EAC5B,IAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;EACjC;EACA,IAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;EAClC;EACA;EACA,IAAQA,IAAM,CAAC,GAAG,CAAC,CAAC;EACpB,IAAQA,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;EAChC;EACA,IAAQA,IAAM,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;EACxC,IAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChE,IAAQA,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACxB;EACA,IAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAClC;EACA,IAAQ,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,IAAQA,IAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACvD,IAAQA,IAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;EACpC,IAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EACpC,QAAYD,IAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;EACtD,QAAY,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACpH,QAAY,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,gBAAgB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACpH,KAAS;EACT,IAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAClE,IAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAClE,IAAQ,KAAKC,IAAIwB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAEA,GAAC,EAAE,EAAE;EACpC,QAAYzB,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAACyB,GAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAACA,GAAC,CAAC,CAAC;EAC5D,QAAY,IAAI,CAACA,GAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAClH,KAAS;EACT,IAAQ,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;EACtB,EACH;AACD,EAAOzB,IAAM,2BAA2B,GAAG,MAAM,CAAC,MAAM,CAAC;EACzD,IAAI,UAAU,EAAE,YAAY;EAC5B,IAAI,SAAS,EAAE,QAAQ;EACvB,IAAI,UAAU,EAAE,MAAM;EACtB,IAAI,QAAQ,EAAE,EAAE;EAChB,IAAI,OAAO,EAAE,GAAG;EAChB,IAAI,OAAO,EAAE,GAAG;EAChB,IAAI,OAAO,EAAE,GAAG;EAChB,IAAI,UAAU,EAAE,aAAa;EAC7B,IAAI,UAAU,EAAE,KAAK;EACrB,IAAI,WAAW,EAAE,WAAW;EAC5B,IAAI,WAAW,EAAE,IAAI;EACrB,IAAI,cAAc,EAAE,KAAK;EACzB,IAAI,eAAe,EAAE,WAAW;EAChC,IAAI,gBAAgB,EAAE,GAAG;EACzB,IAAI,iBAAiB,EAAE,GAAG;EAC1B,IAAI,gBAAgB,EAAE,IAAI;EAC1B,IAAI,SAAS,EAAE,KAAK;EACpB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5BA,IAAM,wBAAwB,GAAG,MAAM,CAAC,MAAM,CAAC;EAC/C,IAAI,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACjC,IAAI,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAChC,IAAI,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACjC,IAAI,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAC/B,IAAI,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAC9B,IAAI,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAC9B,IAAI,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAC9B,IAAI,UAAU,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACjC,IAAI,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAClC,IAAI,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAClC,IAAI,eAAe,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACtC,IAAI,iBAAiB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EACxC,IAAI,SAAS,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;EACrC,CAAC,EAAE,oBAAoB,CAAC,CAAC;EACzB,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;EACpC,IAAIA,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACvC,IAAIC,IAAI,SAAS,GAAG,CAAC,CAAC;EACtB,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,QAAQ,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EACzC,KAAK;EACL,IAAI,IAAI,MAAM,CAAC,cAAc;EAC7B,UAAQ,SAAS,IAAI,CAAC,GAAC;EACvB,IAAI,OAAO,SAAS,CAAC;EACrB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,UAAU;MASZ,mBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQU,wBAAK,OAAC;EACd,YAAY,QAAQ,EAAE,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;EACtE,YAAY,KAAK,EAAE,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;EACnE,YAAY,OAAO,EAAE,IAAI,YAAY,EAAE;EACvC,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,IAAI,CAAC,cAAc,GAAG,wBAAwB,CAAC;EACvD,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;EACtC,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;EAClC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAC3B,QAAQ,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;EAC3C,QAAQ,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;EAC7C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC9B,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACtD,QAAQ,IAAI,CAAC,WAAW,CAAC;EACzB,YAAY,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;EAC1C,YAAY,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;EACzD,YAAY,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;EACzD,YAAY,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;EACzD,YAAY,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;EACrC,YAAY,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;EAC/D,YAAY,aAAa,EAAE,EAAE,KAAK,EAAE,IAAIL,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;EAC5E,YAAY,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;EACjE,YAAY,iBAAiB,EAAE,EAAE,KAAK,EAAE,IAAIA,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE;EACpF,YAAY,mBAAmB,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE;EAC7E,YAAY,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;EAC1C,YAAY,YAAY,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;EACxC,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,aAAa,CAAC;EAC3B,YAAY,eAAe,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;EACxD,YAAY,WAAW,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;EACnD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,2BAA2B,CAAC,GAAE;EACnE,yBAAI,wCAAe;EACnB,QAAQK,6BAAK,CAAC,iBAAY,KAAC,CAAC,CAAC;EAC7B,QAAQX,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;EACjC,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;EAChC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;EAC7B,QAAQ,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;EACxC,QAAQ,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;EACzB,QAAQ,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC;EAC3C,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;EAC7B,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC;EAC1C,QAAQ,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;EAC9B,QAAQ,EAAE,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;EACzC,QAAQ,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;EAC1B,QAAQ,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC;EAC5C,QAAQ,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;EAC9B,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC;EACxC,QAAQ,EAAE,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;EACzC,QAAQ,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;EAC1B,QAAQ,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC;EAC5C,QAAQ,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;EAC9B,MAAK;EACL,yBAAI,wCAAc,IAAS,EAAE;qCAAP,GAAG;;EACzB,QAAQC,IAAI,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC;EAClC,QAAQA,IAAI,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC;EACzC,QAAQD,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC/B,QAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACpD,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;EACrC,YAAY,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;EAClD,YAAY,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACnD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;EACvB,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,YAAY,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;EACnD,YAAY,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;EACpD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC/B,YAAY,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;EAC5C,YAAY,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;EAChD,SAAS;EACT,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;EACrC,QAAQC,IAAI,CAAC,EAAE,CAAC,CAAC;EACjB,QAAQA,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAI,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC;EAC9B,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,YAAY,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;EAC/B,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc;EAC9C,kBAAgB,KAAK,IAAI,CAAC,GAAC;EAC3B,YAAY,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE;EAChE,gBAAgB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAC5C,oBAAoB,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,oBAAoB,IAAI,QAAQ,EAAE;EAClC,wBAAwB,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnD,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,qBAAqB;EACrB,oBAAoB,IAAI,IAAI,EAAE;EAC9B,wBAAwB,SAAS,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAChE,qBAAqB;EACrB,oBAAoB,IAAI,KAAK,EAAE;EAC/B,wBAAwB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7C,wBAAwB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACrD,wBAAwB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACrD,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,MAAK;EACL,yBAAI,sCAAc;EAClB,QAAQ,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;EACtC,YAAY,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;EAC5C,YAAY,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;EAC5C,YAAY,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;EAC9C,YAAY,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;EAC1C,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;EAC9C,MAAK;EACL,yBAAI,sCAAc;EAClB,QAAQD,IAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;EAClC,QAAQA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC/B,QAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;EACtD,QAAQA,IAAM,MAAM,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,GAAG,IAAI,EAAE,CAAC;EACrF,QAAQA,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACjD,QAAQA,IAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;EAC1D,QAAQA,IAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;EACnD,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;EACrC,QAAQC,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAC9D,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,YAAY,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,QAAQ,GAAG,CAAC,CAAC;EACzB,YAAY,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;EAC/B;EACA,YAAY,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE;EACpD,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACvC,gBAAgB,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;EAC5D,aAAa;EACb;EACA,YAAY,IAAI,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;EAC9C,gBAAgB,MAAM,GAAG,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;EAC9C,aAAa;EACb,iBAAiB,IAAI,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;EACtD,gBAAgB,MAAM,GAAG,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC;EAC7C,aAAa;EACb,iBAAiB;EACjB,gBAAgB,MAAM,GAAG,CAAC,CAAC;EAC3B,aAAa;EACb,YAAY,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;EAC9C,gBAAgB,MAAM,GAAG,QAAQ,CAAC;EAClC,aAAa;EACb,iBAAiB,IAAI,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;EACpD,gBAAgB,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;EACtC,aAAa;EACb,iBAAiB;EACjB,gBAAgB,MAAM,GAAG,CAAC,CAAC;EAC3B,aAAa;EACb,YAAY,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;EAC5C,YAAY,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;EAC5C;EACA,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;EAChD,gBAAgB,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;EACrC,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;EAC3E,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC;EACtE,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;EAC3E,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;EAC1D,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC;EACjH,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC;EACtE,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC;EACjH,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;EAC1D,gBAAgB,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC1C,gBAAgB,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC1C,gBAAgB,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC1C,gBAAgB,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EAC1C,gBAAgB,QAAQ,IAAI,CAAC,CAAC;EAC9B,aAAa;EACb,YAAY,QAAQ,GAAG,CAAC,CAAC;EACzB,YAAY,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE;EAChE,gBAAgB,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACvC,gBAAgB,CAAC,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;EACrC,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC;EACxD,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EACnD,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,MAAM,CAAC;EACxD,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACjD,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EAC9D,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EACnD,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EAC9D,gBAAgB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACjD,gBAAgBD,IAAM,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;EACrD,gBAAgBA,IAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;EACvD,gBAAgBA,IAAM,SAAS,GAAG;EAClC,oBAAoB,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS;EACnD,oBAAoB,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS;EAC3D,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS;EAC3D,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS;EACnE,iBAAiB,CAAC;EAClB,gBAAgB,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EAChD,gBAAgB,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC;EAC5D,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC;EACjD,QAAQ,OAAO,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;EAC3C,MAAK;EACL,yBAAI,kCAAW,IAAI,EAAE;EACrB,QAAQA,IAAM,OAAO,GAAGW,6BAAK,CAAC,eAAU,OAAC,IAAI,CAAC,CAAC;EAC/C,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;EACvC,YAAY,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;EACnC,SAAS;EACT,QAAQ,OAAO,OAAO,CAAC;EACvB,MAAK;EACL,yBAAI,oCAAY,IAAI,EAAE;EACtB,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,UAAU,KAAK,SAAS;EAClD,YAAY,IAAI,CAAC,SAAS,KAAK,SAAS;EACxC,YAAY,IAAI,CAAC,UAAU,KAAK,SAAS;EACzC,YAAY,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,EAAE;EAC1C,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;EAC/B,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;EAC/B,YAAY,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;EAC5C,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;EAC5C,SAAS;EACT,QAAQA,6BAAK,CAAC,gBAAW,OAAC,IAAI,CAAC,CAAC;EAChC;;;;;IArOyB,mBAsOxB;EACD,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;EC/bvC;EACA;EACA;EACA;EACA;AACA,EAWA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,mBAAmB;MACrB,4BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,iCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,aAAa,EAAE;EAC3B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,aAAa,EAAE;EAC3B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;sEAAK;EACL,kCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC5C,QAAQ,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAC7C,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;EAC7D,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;EAC7D,QAAQW,sCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,kCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM;EACvD,cAAY,SAAO;EACnB,QAAQX,IAAM,YAAY,GAAG,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EACzE,QAAQA,IAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;EACrD,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;EAC9D,QAAQA,IAAM,UAAU,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACtD;EACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC;EACzC,YAAY,QAAQ,EAAE,SAAS,CAAC,aAAa;EAC7C,YAAY,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;EACjD,YAAY,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;EAC7E,YAAY,IAAI,EAAE,SAAS,CAAC,SAAS;EACrC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;EACxC,QAAQN,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAC7C,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,cAAc,CAAC,6BAA6B,CAAC;EAC7E,YAAY,SAAS,EAAE,SAAS,CAAC,eAAe;EAChD,YAAY,SAAS,EAAE,SAAS,CAAC,eAAe;EAChD,YAAY,KAAK,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtD,YAAY,MAAM,EAAE,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACvD,SAAS,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EACjC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,OAAO,EAAE,IAAI,CAAC,aAAa;EACvC,YAAY,OAAO,EAAE,IAAI,CAAC,WAAW;EACrC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC3D,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,CAAC,6BAA6B,CAAC;EAC1E,YAAY,SAAS,EAAE,SAAS,CAAC,YAAY;EAC7C,YAAY,SAAS,EAAE,SAAS,CAAC,YAAY;EAC7C,YAAY,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/D,YAAY,MAAM,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChE,SAAS,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EACjC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,OAAO,EAAE,IAAI,CAAC,UAAU;EACpC,YAAY,OAAO,EAAE,IAAI,CAAC,WAAW;EACrC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC;EAC3C,YAAY,QAAQ,EAAE,SAAS,CAAC,cAAc;EAC9C,YAAY,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC;EAChC,YAAY,OAAO,EAAE,IAAI,CAAC,aAAa;EACvC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,CAAC,UAAU;EAC/B,gBAAgB,IAAI,CAAC,YAAY;EACjC,gBAAgB,IAAI,CAAC,SAAS;EAC9B,gBAAgB,IAAI,CAAC,YAAY;EACjC,aAAa;EACb,SAAS,CAAC;EACV,MAAK;EACL,kCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQK,sCAAK,CAAC,eAAU,OAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrC,QAAQX,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,OAAO,GAAG,EAAE,CAAC;EAC3B,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAYA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACjD,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/D,gBAAgB,MAAM,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChE,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;EACnC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnE,gBAAgB,MAAM,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpE,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtE,aAAa,CAAC,CAAC;EACf,SAAS;EACT;EACA;EACA;EACA,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;EAC9C,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACpD,MAAK;EACL,kCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQK,sCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,aAAa,KAAK,SAAS;EACzD,YAAY,MAAM,CAAC,UAAU,KAAK,SAAS;EAC3C,YAAY,MAAM,CAAC,aAAa,KAAK,SAAS,CAAC,EAAE;EACjD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7C,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;EAC1C,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;EAC7E,YAAY,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;EAC1E,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;EACpD,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EAC3E,YAAY,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EACxE,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;EACxC,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EAC7E,YAAY,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EAC1E,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,kCAAI,wCAAc,KAAK,EAAE,eAAe,EAAE;EAC1C,QAAQA,sCAAK,CAAC,kBAAa,OAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACzC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;EAC/B,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAChF,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;EAC5B,YAAY,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAC1E,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;EAC/B,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAChF,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe;EAC5B,cAAY,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAC;EACxC,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IAjJkC,4BAkJjC;EACD;EACA;EACA;EACA;EACA;EACA,SAAS,iBAAiB,CAAC,QAAQ,EAAE;EACrC,IAAIX,IAAM,OAAO,GAAG,EAAE,CAAC;EACvB,IAAIA,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EAClC,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAChC;EACA,QAAQA,IAAI,IAAI,GAAG,IAAI,CAAC;EACxB,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EAC3C,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,gBAAgB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACnD,gBAAgB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;EACrD,gBAAgB,IAAI,GAAG,KAAK,CAAC;EAC7B,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,IAAI;EAChB,cAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAC;EAC5B,KAAK;EACL,IAAID,IAAM,WAAW,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7D,IAAIC,IAAI,MAAM,GAAG,CAAC,CAAC;EACnB,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;EACjC,QAAQ,SAAS,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/D,QAAQ,MAAM,EAAE,CAAC;EACjB,KAAK,CAAC,CAAC;EACP,IAAI,OAAO,WAAW,CAAC;EACvB,CAAC;EACD,SAAS,mBAAmB,CAAC,KAAK,EAAE,UAAU,EAAE;EAChD,IAAI,OAAO,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;EAClE,CAAC;EACD;EACA;EACA;EACA,SAAS,YAAY,CAAC,QAAQ,EAAE,MAAW,EAAE;qCAAP,GAAG;;EACzC,IAAID,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAC/D,IAAIA,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EAClC,IAAIA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD,IAAIA,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIA,IAAM,eAAe,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpD,IAAIA,IAAM,eAAe,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpD,IAAIA,IAAM,eAAe,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC,IAAIA,IAAM,eAAe,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC,IAAIA,IAAM,iBAAiB,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAIC,IAAI,aAAa,GAAG,CAAC,CAAC;EAC1B;EACA,IAAID,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,KAAK,GAAG,KAAK,EAAE,CAAC;EAC1B,IAAIA,IAAM,MAAM,GAAG,KAAK,EAAE,CAAC;EAC3B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,8BAAgC;EAChC,QAAQC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;EACrC,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,QAAQ,SAAS,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;EAC1C,QAAQ,SAAS,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;EAC1C,QAAQ,SAAS,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9C,QAAQ,SAAS,CAAC,EAAE,EAAE,eAAe,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9C,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,QAAQ,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACjC,QAAQD,IAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC5C,QAAQA,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACpC,QAAQA,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EAC/D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EAClF,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE;EACrC;EACA,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAC3B,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAC3B,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAC3B,SAAS;EACT,QAAQ,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;EACpC,QAAQ,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EACpC,QAAQ,YAAY,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC;EAC7D;EACA,QAAQ,SAAS,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD;EACA,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;EACvD,QAAQA,IAAM,cAAc,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EAC/D,QAAQ,iBAAiB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;EAC9C,QAAQA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EAC7D,QAAQA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EAC7D,QAAQ,eAAe,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;EAC1C,QAAQ,eAAe,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;EAC1C,QAAQ,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EACjC,QAAQA,IAAM,gBAAgB,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;EACjD,YAAYA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAYA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAY,SAAS,CAAC,EAAE,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;EAC9C,YAAY,SAAS,CAAC,QAAQ,EAAE,cAAc,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EACxD,YAAY,SAAS,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;EAClD,YAAY,YAAY,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;EACvD,YAAY,SAAS,CAAC,QAAQ,EAAE,cAAc,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EACxD,YAAY,SAAS,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;EAClD,SAAS,CAAC;EACV,QAAQC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,KAAKA,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,SAAS,EAAE;EAC3D,YAAY,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,YAAY,CAAC,EAAE,CAAC;EAChB,SAAS;EACT,QAAQ,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;EACnC,QAAQ,aAAa,IAAI,SAAS,CAAC;EACnC;;MAxDI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,YAwDzB;EACL;EACA,IAAID,IAAM,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC;EACtC,IAAIA,IAAM,UAAU,GAAG,aAAa,GAAG,CAAC,CAAC;EACzC,IAAIA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;EACnD,IAAIA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;EACnD,IAAIA,IAAM,cAAc,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;EACxD,IAAIC,IAAI,YAAY,GAAG,CAAC,CAAC;EACzB,IAAIA,IAAI,SAAS,GAAG,CAAC,CAAC;EACtB,IAAI,KAAKA,IAAIwB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAEA,GAAC,EAAE,EAAE;EAChC,QAAQzB,IAAM,GAAG,GAAG,eAAe,CAACyB,GAAC,CAAC,CAAC;EACvC,QAAQzB,IAAM,GAAG,GAAG,eAAe,CAACyB,GAAC,CAAC,CAAC;EACvC,QAAQ,SAAS,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EAC/D,QAAQ,SAAS,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EAC/D,QAAQ,SAAS,IAAI,GAAG,CAAC,MAAM,CAAC;EAChC,QAAQzB,IAAM,EAAE,GAAG,iBAAiB,CAACyB,GAAC,CAAC,CAAC;EACxC,QAAQ,SAAS,CAAC,EAAE,EAAE,cAAc,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;EAClE,QAAQ,YAAY,IAAI,EAAE,CAAC,MAAM,CAAC;EAClC,KAAK;EACL,IAAI,OAAO;EACX,uBAAQ,aAAa;EACrB,mBAAQ,SAAS;EACjB,yBAAQ,eAAe;EACvB,yBAAQ,eAAe;EACvB,sBAAQ,YAAY;EACpB,sBAAQ,YAAY;EACpB,wBAAQ,cAAc;EACtB,KAAK,CAAC;EACN,CAAC;EACD,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;;EC9TzD;EACA;EACA;EACA;EACA;AACA,EAQA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,kBAAkB;MAMpB,2BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQd,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK;EACnE,aAAa;EACb,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,eAAe,EAAE,IAAI;EACjC,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,QAAQ,EAAE,IAAI;EAC1B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;oEAAK;EACL,iCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACnD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;EAC5D,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAClD,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,iCAAI,gDAAmB;EACvB,QAAQV,IAAI,SAAS,CAAC;EACtB,QAAQD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;EAC5C,QAAQ,IAAI,QAAQ,EAAE;EACtB,YAAY,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;EAC5D,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;EAC9D,MAAK;EACL,iCAAI,oCAAY,KAAK,EAAE;EACvB,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC3C,QAAQA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAC7C,QAAQL,IAAI,EAAE,GAAG,CAAC,CAAC;EACnB,QAAQA,IAAI,EAAE,GAAG,CAAC,CAAC;EACnB,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;EAC1B,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,YAAY,EAAE,IAAI,EAAE,CAAC;EACrB,SAAS;EACT,QAAQD,IAAM,cAAc,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EACxD,QAAQA,IAAM,WAAW,GAAG,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7D,QAAQA,IAAM,YAAY,GAAG,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC/D,QAAQA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EACvD,QAAQA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EACvD,QAAQA,IAAM,SAAS,GAAG,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,QAAQA,IAAM,UAAU,GAAG,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC7D,QAAQC,IAAI,MAAM,GAAG,CAAC,CAAC;EACvB,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAYD,IAAM,OAAO,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;EAC9C,gBAAgB,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,gBAAgB,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;EAClD,gBAAgB,EAAE,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;EAClD,gBAAgB,MAAM,IAAI,CAAC,CAAC;EAC5B,aAAa,CAAC;EACd,YAAY,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;EACtC,YAAY,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;EACtC,YAAY,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;EACtC,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;EAC1B,YAAYA,IAAM,CAAC,GAAG,IAAIG,aAAO,EAAE,CAAC;EACpC,mBAAkD,GAAG,EAAE,CAAC,yBAAyB,CAAC,KAAK;cAAnE;cAAK;cAAK;cAAK;cAAK;cAAK,kBAA4C;EACzF;EACA,YAAYF,IAAI,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC;EACrC,YAAYD,IAAM,SAAS,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACpD,gBAAgB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;EACjC,qBAAqB,eAAe,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;EACrD,qBAAqB,eAAe,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC;EACrD,qBAAqB,eAAe,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EACtD,gBAAgB,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;EACnD,gBAAgB,OAAO,IAAI,CAAC,CAAC;EAC7B,aAAa,CAAC;EACd,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACrC,YAAYC,IAAI,UAAU,GAAG,MAAM,CAAC;EACpC,YAAYD,IAAM,OAAO,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;EAC5C,gBAAgB,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC/D,qBAAqB,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;EACxD,gBAAgB,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC/D,qBAAqB,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;EACxD,gBAAgB,UAAU,IAAI,CAAC,CAAC;EAChC,aAAa,CAAC;EACd,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1B,SAAS;EACT,QAAQA,IAAM,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;EAC1C,QAAQ,OAAO;EACf,YAAY,MAAM,EAAE;EACpB,gBAAgB,QAAQ,EAAE,cAAc;EACxC,gBAAgB,KAAK,EAAE,WAAW;EAClC,gBAAgB,MAAM,EAAE,YAAY;EACpC,gBAAgB,OAAO,EAAE,MAAM;EAC/B,aAAa;EACb,YAAY,IAAI,EAAE;EAClB,gBAAgB,SAAS,EAAE,aAAa;EACxC,gBAAgB,SAAS,EAAE,aAAa;EACxC,gBAAgB,KAAK,EAAE,SAAS;EAChC,gBAAgB,MAAM,EAAE,SAAS;EACjC,gBAAgB,MAAM,EAAE,UAAU;EAClC,gBAAgB,OAAO,EAAE,MAAM;EAC/B,aAAa;EACb,SAAS,CAAC;EACV,MAAK;EACL,iCAAI,4BAAS;EACb,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC9D,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC;EACnF,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC;EACrF,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,cAAc,EAAE,IAAI,CAAC,cAAc;EAC/C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC3B,YAAY,KAAK,EAAE,IAAI,CAAC,aAAa;EACrC,YAAY,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;EAChE,SAAS,CAAC,CAAC;EACX,MAAK;EACL,iCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,OAAO;EACf,MAAK;EACL,iCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACtD,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,YAAY,GAAG,EAAE,CAAC;EAChC,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;EAClD,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS;EAClD,gBAAgB,SAAS,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS;EAClD,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK;EAC5C,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK;EAC1C,gBAAgB,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK;EAC3C,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM;EAC9C,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM;EAC5C,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;EACxD;;;IA9LiC,0BA+LhC;EACD,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;;ECpOvD;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,sBAAsB;MAMxB,+BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,kCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;EAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE;EAC7D,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,WAAW,EAAE,IAAI;EAC7B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;4EAAK;EACL,qCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACpD,QAAQA,uCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,qCAAI,wCAAc,IAAI,EAAE;EACxB,QAAQ,OAAO,IAAI,CAAC,OAAO,EAAE,GAAGA,uCAAK,CAAC,kBAAa,OAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9D,MAAK;EACL,qCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;EACrC,QAAQ,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;EAC3E,MAAK;EACL,qCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;EACrC,QAAQ,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;EAC3E;;;IA7BqC,6BA8BpC;EACD,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;;ECnD/D;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,kBAAkB;MAMpB,2BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,kCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE;EAC7D,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,WAAW,EAAE,IAAI;EAC7B,SAAS,CAAC,CAAC;EACX;;;;oEAAK;EACL,iCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQV,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACnD,QAAQU,uCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,iCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;EACrC,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;EACvE,MAAK;EACL,iCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;EACrC,QAAQV,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACjD,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACrD,QAAQ,OAAO,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EACxC;;;IA3BiC,6BA4BhC;EACD,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;;ECjDvD;EACA;EACA;EACA;EACA;AACA,EAOA;EACA;EACA;EACA,IAAM,qBAAqB;MACvB,8BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQU,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;EAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,oBAAoB,EAAE;EAClC,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;EAC3C,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,cAAc,EAAE;EAC5B,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW;EACpD,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI;EAClF,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE;EACnE,aAAa;EACb,YAAY,kBAAkB,EAAE;EAChC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,kBAAkB,EAAE;EAChC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAChE,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAChE,aAAa;EACb,YAAY,qBAAqB,EAAE;EACnC,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC/D,aAAa;EACb,YAAY,qBAAqB,EAAE;EACnC,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC/D,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,mBAAmB,EAAE;EACjC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,kBAAkB,EAAE;EAChC,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAChE,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,kBAAkB,EAAE;EAChC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,mBAAmB,EAAE;EACjC,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAChE,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI;EAClE,aAAa;EACb,YAAY,qBAAqB,EAAE;EACnC,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI;EAC9E,aAAa;EACb,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,eAAe,EAAE,IAAI;EACjC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;0EAAK;EACL,oCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACpD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;EAC3D,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;EACpE,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;EACtE,QAAQ,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;EAC5E,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;EACrE,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5D,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;EACtE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;EACtE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;EAC3E,QAAQ,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;EAC3E,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;EACpE,QAAQ,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;EACxE,QAAQ,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;EACrE,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;EACpE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;EACtE,QAAQ,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;EACvE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;EACrE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;EAC5E,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,oCAAI,0CAAgB;EACpB,QAAQ,OAAO,CAAC,CAAC;EACjB,MAAK;EACL,oCAAI,4CAAe,KAAK,EAAE;EAC1B,QAAQX,IAAM,MAAM,GAAG;EACvB,YAAY,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;EACvD,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;EACvD,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;EAC7D,YAAY,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;EAC7D,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;EACzD,YAAY,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;EACvD,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;EACvD,YAAY,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;EACzD,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,qBAAqB,EAAE,IAAI,CAAC,qBAAqB;EAC7D,SAAS,CAAC;EACV,QAAQA,IAAM,UAAU,GAAG;EAC3B,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;EAC3D,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,QAAQ,EAAE,IAAI,CAAC,QAAQ;EACnC,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,MAAM,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW;EACtD,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,SAAS,CAAC;EACV,QAAQA,IAAM,QAAQ,GAAG,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EAC1D,QAAQ,OAAO,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;EAC3D,MAAK;EACL,oCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQA,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;EACvD,QAAQA,IAAM,UAAU,GAAG;EAC3B,YAAY,IAAI,cAAc,CAAC,qBAAqB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EACxF,gBAAgB,YAAY,EAAE,CAAC;EAC/B,gBAAgB,YAAY,EAAE,IAAI;EAClC,gBAAgB,eAAe,EAAE,IAAI,CAAC,eAAe;EACrD,aAAa,CAAC,CAAC;EACf,SAAS,CAAC;EACV,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;EAC/B,YAAYA,IAAM,WAAW,GAAG;EAChC,gBAAgB,IAAI,EAAE,IAAI,CAAC,SAAS;EACpC,gBAAgB,IAAI,EAAE,IAAI,CAAC,SAAS;EACpC,aAAa,CAAC;EACd,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9I,SAAS;EACT,QAAQ,OAAO,cAAE,UAAU,EAAE,CAAC;EAC9B;;;IArNoC,0BAsNnC;EACD,sBAAsB,CAAC,GAAG,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;;ECtO7D;EACA;EACA;EACA;EACA;AACA,EAWA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,sBAAsB;MACxB,+BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,iCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;EAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;EAC7D,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,aAAa,EAAE;EAC3B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;4EAAK;EACL,qCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC5C,QAAQ,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAC7C,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EACjD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;EAC3D,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;EAC7D,QAAQW,sCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,qCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;EACrD,cAAY,SAAO;EACnB,QAAQX,IAAM,YAAY,GAAG,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACpE,QAAQA,IAAM,YAAY,GAAG,eAAe,CAAC,YAAY,EAAE;EAC3D,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,SAAS,CAAC,CAAC;EACX,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;EACzD,QAAQA,IAAM,UAAU,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACtD,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC;EACzC,YAAY,QAAQ,EAAE,YAAY,CAAC,aAAa;EAChD,YAAY,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;EACjD,YAAY,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;EAC7E,YAAY,IAAI,EAAE,YAAY,CAAC,SAAS;EACxC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;EACxC,QAAQN,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAC7C,QAAQ,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;EAChE,QAAQN,IAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,6BAA6B,CAAC;EAC3E,YAAY,SAAS,EAAE,YAAY,CAAC,aAAa;EACjD,YAAY,SAAS,EAAE,YAAY,CAAC,aAAa;EACjD,YAAY,KAAK,EAAE,SAAS;EAC5B,YAAY,MAAM,EAAE,SAAS;EAC7B,SAAS,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EACjC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,OAAO,EAAE,IAAI,CAAC,WAAW;EACrC,YAAY,OAAO,EAAE,IAAI,CAAC,WAAW;EACrC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC;EAC1C,YAAY,QAAQ,EAAE,YAAY,CAAC,aAAa;EAChD,YAAY,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC;EAChC,YAAY,OAAO,EAAE,IAAI,CAAC,YAAY;EACtC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;EACnE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC;EAC3C,YAAY,QAAQ,EAAE,YAAY,CAAC,cAAc;EACjD,YAAY,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC;EAChC,YAAY,OAAO,EAAE,IAAI,CAAC,aAAa;EACvC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,CAAC,UAAU;EAC/B,gBAAgB,IAAI,CAAC,UAAU;EAC/B,gBAAgB,IAAI,CAAC,WAAW;EAChC,gBAAgB,IAAI,CAAC,YAAY;EACjC,aAAa;EACb,SAAS,CAAC;EACV,MAAK;EACL,qCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQW,sCAAK,CAAC,eAAU,OAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrC,QAAQX,IAAM,QAAQ,GAAG,EAAE,CAAC;EAC5B,QAAQA,IAAM,SAAS,GAAG,EAAE,CAAC;EAC7B,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAYA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACjD,YAAY,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;EACpC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACpE,gBAAgB,MAAM,EAAE,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrE,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EACrC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrE,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EACtC,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtE,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACpD,MAAK;EACL,qCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQK,sCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,WAAW,KAAK,SAAS;EACvD,YAAY,MAAM,CAAC,aAAa,KAAK,SAAS;EAC9C,YAAY,MAAM,CAAC,YAAY,KAAK,SAAS,CAAC,EAAE;EAChD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7C,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;EAC1C,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;EAC3E,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;EACpD,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EACzE,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;EACxC,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EAC3E,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,qCAAI,wCAAc,KAAK,EAAE,eAAe,EAAE;EAC1C,QAAQA,sCAAK,CAAC,kBAAa,OAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACzC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;EAC7B,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAC5E,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAC9E,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;EAC/B,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;EAChF,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe;EAC5B,cAAY,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAC;EACxC,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IA7IqC,4BA8IpC;EACD;EACA;EACA;EACA;EACA;EACA,SAAS,eAAe,CAAC,QAAQ,EAAE,MAAW,EAAE;qCAAP,GAAG;;EAC5C,IAAIX,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAC/D,IAAIA,IAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;EACjC,IAAIA,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;EACnC,IAAIA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD,IAAIA,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC;EACA,IAAIA,IAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,IAAIA,IAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,IAAIA,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIA,IAAM,QAAQ,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC;EACA,IAAIC,IAAI,UAAU,GAAG,CAAC,CAAC;EACvB,IAAIA,IAAI,aAAa,GAAG,CAAC,CAAC;EAC1B,IAAIA,IAAI,WAAW,GAAG,CAAC,CAAC;EACxB,IAAID,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,KAAK,GAAG,KAAK,EAAE,CAAC;EAC1B,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,KAAK,GAAG,KAAK,EAAE,CAAC;EAC1B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIC,IAAI,CAAC,GAAG,CAAC,CAAC;EACd,8BAAuC;EACvC;EACA,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;EACrC,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC;EACA,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;EACnC,YAAY,OAAS;EACrB,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC3B,QAAQ,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACxC,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EAC5B,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B;EACA;EACA,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EAC5B,QAAQD,IAAM,aAAa,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;EACpD,QAAQ,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EAC5B,QAAQA,IAAM,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;EAClD;EACA,QAAQ,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACpD,QAAQ,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAClC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACpD,QAAQ,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAClC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE;EACtE,YAAY,OAAS;EACrB,SAAS;EACT,QAAQ,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACxC,QAAQ,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACxC;EACA,QAAQA,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;EACvE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EAClF,QAAQ,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;EACtC,QAAQ,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EAClC,QAAQ,IAAI,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,GAAG,EAAE;EAC1C,YAAY,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EACnC,SAAS;EACT,QAAQ,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC;EAC7D,QAAQ,SAAS,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7C,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;EACvD;EACA;EACA,QAAQA,IAAM,MAAM,GAAG,SAAS,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACjE;EACA,QAAQA,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC;EACnD,QAAQA,IAAM,KAAK,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACnD,QAAQA,IAAM,KAAK,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACnD,QAAQA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EACvD;EACA,QAAQA,IAAM,KAAK,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;EAChD,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAC5B,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAC5B,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EAC9B,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAC5B;EACA;EACA,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE;EAC/B,YAAY,IAAI,aAAa,EAAE;EAC/B,gBAAgB,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACnC,gBAAgB,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACtC,gBAAgB,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EACzE,gBAAgB,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxC,aAAa;EACb,iBAAiB;EACjB,gBAAgB,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EACzE,gBAAgB,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxC,aAAa;EACb,YAAY,IAAI,WAAW,EAAE;EAC7B,gBAAgB,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACnC,gBAAgB,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACtC,gBAAgB,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EACvE,gBAAgB,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACpC,aAAa;EACb,iBAAiB;EACjB,gBAAgB,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EACvE,gBAAgB,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;EACpC,aAAa;EACb,SAAS;EACT,QAAQ,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;EACvC;EACA,QAAQC,IAAI,EAAE,GAAG,CAAC,CAAC;EACnB;EACA;EACA,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE;EAC/B,YAAY,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACrC,YAAY,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxC,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,YAAY,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxC,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB;EACA;EACA,YAAY,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACvC,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EAC1C,YAAY,SAAS,CAAC,aAAa,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACzD,YAAY,SAAS,CAAC,aAAa,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACzD,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,SAAS;EACT,aAAa;EACb;EACA,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,SAAS;EACT,QAAQD,IAAM,gBAAgB,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;EACjD,YAAYA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAY,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;EACvC,YAAY,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EAChD,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EAC5D,YAAY,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;EAChD,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,SAAS,CAAC;EACV,QAAQC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,KAAKA,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,SAAS,EAAE;EAC3D,YAAY,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrC,SAAS;EACT,QAAQ,gBAAgB,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EACrC,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE;EAC/B,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACzD,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,YAAY,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EACnD;EACA,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,SAAS,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxD,YAAY,SAAS,CAAC,WAAW,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACxD,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,SAAS;EACT,aAAa;EACb,YAAY,SAAS,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtC,YAAY,EAAE,IAAI,CAAC,CAAC;EACpB,SAAS;EACT,QAAQ,UAAU,IAAI,MAAM,GAAG,CAAC,CAAC;EACjC,QAAQ,aAAa,IAAI,SAAS,GAAG,CAAC,CAAC;EACvC,QAAQ,WAAW,IAAI,OAAO,CAAC;EAC/B,QAAQ,CAAC,IAAI,CAAC,CAAC;EACf;;MAnJI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,YAmJhC;EACL,IAAID,IAAM,QAAQ,GAAG,CAAC,CAAC;EACvB,IAAIA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;EACvD,IAAIA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;EACvD,IAAIA,IAAM,cAAc,GAAG,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC;EAC3D,IAAIA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;EACxD,IAAIC,IAAI,UAAU,GAAG,CAAC,CAAC;EACvB,IAAIA,IAAI,YAAY,GAAG,CAAC,CAAC;EACzB,IAAIA,IAAI,WAAW,GAAG,CAAC,CAAC;EACxB,IAAI,KAAKA,IAAIwB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,QAAQ,EAAEA,GAAC,EAAE,EAAE;EACvC,QAAQzB,IAAM,GAAG,GAAG,QAAQ,CAACyB,GAAC,CAAC,CAAC;EAChC,QAAQzB,IAAM,GAAG,GAAG,QAAQ,CAACyB,GAAC,CAAC,CAAC;EAChC,QAAQzB,IAAM,EAAE,GAAG,SAAS,CAACyB,GAAC,CAAC,CAAC;EAChC,QAAQzB,IAAM,EAAE,GAAG,QAAQ,CAACyB,GAAC,CAAC,CAAC;EAC/B,QAAQ,SAAS,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACjE,QAAQ,SAAS,CAAC,GAAG,EAAE,aAAa,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACjE,QAAQ,SAAS,CAAC,EAAE,EAAE,cAAc,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;EAClE,QAAQ,SAAS,CAAC,EAAE,EAAE,aAAa,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;EAChE,QAAQ,UAAU,IAAI,GAAG,CAAC,MAAM,CAAC;EACjC,QAAQ,YAAY,IAAI,EAAE,CAAC,MAAM,CAAC;EAClC,QAAQ,WAAW,IAAI,EAAE,CAAC,MAAM,CAAC;EACjC,KAAK;EACL,IAAI,OAAO;EACX,QAAQ,aAAa,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;EAC9D,QAAQ,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC;EAC/C,uBAAQ,aAAa;EACrB,uBAAQ,aAAa;EACrB,uBAAQ,aAAa;EACrB,wBAAQ,cAAc;EACtB,KAAK,CAAC;EACN,CAAC;EACD,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;;EClY/D;EACA;EACA;EACA;EACA;AACA,EASAzB,IAAM,WAAW,GAAG,CAAC,CAAC;EACtBA,IAAM,gBAAgB,GAAG,CAAC,CAAC;EAC3B,SAAS,mBAAmB,CAAC,CAAC,EAAE,YAAY,EAAE;EAC9C,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;EAC9B,QAAQ,OAAO,GAAG,IAAI,GAAG,CAAC;EAC1B,KAAK;EACL,IAAIA,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACxC,IAAI,KAAKA,IAAM,GAAG,IAAI,MAAM,EAAE;EAC9B,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE;EAC9D,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACnE,SAAS;EACT,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;EACD,SAAS,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAE;EAC9C,IAAIA,IAAM,UAAU,GAAG,IAAIM,WAAK,CAAC,KAAK,CAAC,CAAC;EACxC,IAAIN,IAAM,WAAW,GAAG,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;EAC1D,IAAI,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;EACtF,IAAI,OAAO,WAAW,CAAC;EACvB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,+BAA+B;MACjC,wCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;EACzC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,cAAc,EAAE;EAC5B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,yBAAyB,EAAE;EACvC,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,oBAAoB,EAAE;EAClC,gBAAgB,IAAI,EAAE,SAAS;EAC/B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE,KAAK;EAC9B,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;8FAAK;EACL,8CAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQA,IAAM,gBAAgB,GAAG;EACjC,YAAY,uBAAuB,EAAE,MAAM;EAC3C,YAAY,sBAAsB,EAAE,OAAO;EAC3C,YAAY,qBAAqB,EAAE,SAAS;EAC5C,YAAY,mBAAmB,EAAE,OAAO;EACxC,YAAY,kBAAkB,EAAE,MAAM;EACtC,YAAY,qBAAqB,EAAE,OAAO;EAC1C,SAAS,CAAC;EACV,QAAQA,IAAM,SAAS,GAAG,mBAAmB,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;EACnE,QAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACvC,QAAQA,IAAM,iBAAiB,GAAG;EAClC,YAAY,cAAc,EAAE,EAAE;EAC9B,YAAY,gBAAgB,EAAE,GAAG;EACjC,YAAY,uBAAuB,EAAE,IAAI;EACzC,YAAY,uBAAuB,EAAE,GAAG;EACxC,YAAY,yBAAyB,EAAE,IAAI;EAC3C,YAAY,uBAAuB,EAAE,CAAC;EACtC,YAAY,yBAAyB,EAAE,GAAG;EAC1C,YAAY,gBAAgB,EAAE,IAAI;EAClC,YAAY,cAAc,EAAE,CAAC;EAC7B,YAAY,gBAAgB,EAAE,GAAG;EACjC,YAAY,oBAAoB,EAAE,KAAK;EACvC,SAAS,CAAC;EACV,QAAQA,IAAM,UAAU,GAAG,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;EACrE,QAAQ,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;EACxC,QAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,WAAC,GAAK;EACzC,YAAYA,IAAM,iBAAiB,GAAG,mBAAmB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACxE,YAAY,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;EAChD,SAAS,CAAC,CAAC;EACX,QAAQ,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC5C,QAAQ,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAC7C,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;EACtD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACpD,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,8CAAI,0FAAwC;EAC5C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;EACpC,YAAY,SAAS,EAAE,IAAI,CAAC,uBAAuB;EACnD,YAAY,OAAO,EAAE,IAAI,CAAC,yBAAyB;EACnD,YAAY,OAAO,EAAE,IAAI,CAAC,yBAAyB;EACnD,SAAS,CAAC,CAAC;EACX,MAAK;EACL,8CAAI,0EAAgC;EACpC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;EACpC,YAAY,SAAS,EAAE,IAAI,CAAC,cAAc;EAC1C,YAAY,OAAO,EAAE,IAAI,CAAC,gBAAgB;EAC1C,YAAY,OAAO,EAAE,IAAI,CAAC,gBAAgB;EAC1C,SAAS,CAAC,CAAC;EACX,MAAK;EACL,8CAAI,sFAAsC;EAC1C,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;EACpC,YAAY,OAAO,EAAE,IAAI,CAAC,uBAAuB;EACjD,YAAY,OAAO,EAAE,IAAI,CAAC,uBAAuB;EACjD,SAAS,CAAC,CAAC;EACX,MAAK;EACL,8CAAI,wEAA+B;EACnC,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC;EACpC,YAAY,OAAO,EAAE,IAAI;EACzB,YAAY,OAAO,EAAE,IAAI,CAAC,gBAAgB;EAC1C,YAAY,IAAI,EAAE,QAAQ;EAC1B,SAAS,CAAC,CAAC;EACX,MAAK;EACL,8CAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM;EAC3D,cAAY,SAAO;EACnB,QAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,WAAC,YAAK,CAAC,CAAC,aAAa,GAAG,gBAAgB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAC,CAAC,CAAC;EAClG,QAAQX,IAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC;EACzH,QAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,WAAC,YAAK,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,IAAC,CAAC,CAAC;EAC/F,QAAQ,SAAS,aAAa,CAAC,MAAM,EAAE;EACvC,YAAYA,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,SAAM,CAAC,CAAC;EACtD,YAAYA,IAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC/D,YAAYC,IAAI,iBAAiB,GAAG,CAAC,CAAC;EACtC,YAAY,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACpD,gBAAgB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;EACzD,gBAAgB,iBAAiB,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EACtD,aAAa;EACb,YAAY,OAAO,MAAM,CAAC;EAC1B,SAAS;EACT,QAAQ,SAAS,oBAAoB,CAAC,SAAS,EAAE,MAAM,EAAE;EACzD,YAAY,OAAO,IAAI,cAAc,CAAC;EACtC,gBAAgB,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,cAAW,CAAC,CAAC;EAC3E,gBAAgB,SAAS,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,YAAS,CAAC,CAAC;EACzE,gBAAgB,KAAK,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,cAAW,CAAC,CAAC;EACvE,gBAAgB,MAAM,EAAE,aAAa,CAAC,SAAS,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,YAAS,CAAC,CAAC;EACtE,aAAa,EAAE,MAAM,CAAC,CAAC;EACvB,SAAS;EACT,QAAQ,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE;EAChD,YAAY,OAAO,IAAI,UAAU,CAAC;EAClC,gBAAgB,QAAQ,EAAE,aAAa,CAAC,IAAI,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,YAAS,CAAC,CAAC;EACnE,gBAAgB,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,iBAAc,CAAC,CAAC;EACrE,aAAa,EAAE,MAAM,CAAC,CAAC;EACvB,SAAS;EACT,QAAQD,IAAM,iBAAiB,GAAG,EAAE,CAAC;EACrC,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7D,YAAYA,IAAI,YAAY,GAAG,SAAS,CAAC;EACzC,YAAYA,IAAI,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAYA,IAAI,mBAAmB,GAAG,oBAAoB,CAAC,YAAY,CAAC;EACxE,YAAY,IAAI,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;EACjD,gBAAgB,YAAY,GAAG,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;EAChF,aAAa;EACb,YAAY,IAAI,OAAO,YAAY,KAAK,WAAW;EACnD,kBAAgB,WAAS;EACzB,YAAY,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EACjD,SAAS;EACT,QAAQ,IAAI,CAAC,8BAA8B,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,2BAAwB,CAAC,EAAE,IAAI,CAAC,qCAAqC,EAAE,CAAC,CAAC;EACzK,QAAQ,IAAI,CAAC,6BAA6B,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,0BAAuB,CAAC,EAAE,IAAI,CAAC,qCAAqC,EAAE,CAAC,CAAC;EACvK,QAAQ,IAAI,CAAC,wBAAwB,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,qBAAkB,CAAC,EAAE,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC;EACrJ,QAAQ,IAAI,CAAC,uBAAuB,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,oBAAiB,CAAC,EAAE,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC;EACnJ,QAAQ,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,mBAAgB,CAAC,EAAE,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC;EACnJ,QAAQ,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,iBAAc,CAAC,EAAE,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC;EACxI,QAAQ,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,WAAC,YAAK,CAAC,CAAC,gBAAa,CAAC,EAAE,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC;EACtI,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,mBAAmB,CAAC;EACzP,SAAS,CAAC;EACV,MAAK;EACL,8CAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQD,IAAM,OAAO,GAAG,KAAK,CAAC;EAC9B,QAAQA,IAAM,IAAI,GAAG,EAAE,CAAC;EACxB,QAAQW,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,yBAAyB,KAAK,SAAS,CAAC,EAAE;EACxE,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7C,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,8CAAI,wCAAc,KAAK,EAAE,eAAe,EAAE;EAC1C,QAAQA,oCAAK,CAAC,kBAAa,OAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACzC,QAAQ,IAAI,IAAI,CAAC,8BAA8B,EAAE;EACjD,YAAY,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;EAC9F,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,6BAA6B,EAAE;EAChD,YAAY,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;EAC7F,SAAS;EACT,QAAQ,IAAI,CAAC,eAAe;EAC5B,cAAY,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,GAAC;EACxC,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IA5J8C,0BA6J7C;EACD;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,0BAA0B,CAAC,aAAa,EAAE;EACnD,IAAIX,IAAM,uBAAuB,GAAG,aAAa,CAAC,aAAa,CAAC;EAChE,IAAIA,IAAM,SAAS,GAAG,aAAa,CAAC,kBAAkB,CAAC;EACvD,IAAIA,IAAM,sCAAsC,GAAG,SAAS,CAAC,MAAM,IAAI,GAAG,GAAG,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;EACxG,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC;EAC3B,IAAIA,IAAM,gBAAgB,GAAG;EAC7B,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,sCAAsC,GAAG,gBAAgB,GAAG,WAAW,CAAC;EAC5G,QAAQ,cAAc,EAAE,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,EAAE,sCAAsC,GAAG,gBAAgB,CAAC;EACxI,KAAK,CAAC;EACN,IAAIA,IAAM,cAAc,GAAG;EAC3B,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,gBAAgB,GAAG,WAAW,CAAC;EACtF,QAAQ,cAAc,EAAE,gBAAgB,CAAC,aAAa,CAAC,mBAAmB,EAAE,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC;EAChH,KAAK,CAAC;EACN,IAAIA,IAAM,aAAa,GAAG;EAC1B,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,gBAAgB,GAAG,WAAW,CAAC;EACtF,QAAQ,cAAc,EAAE,gBAAgB,CAAC,aAAa,CAAC,kBAAkB,EAAE,SAAS,CAAC,MAAM,GAAG,gBAAgB,CAAC;EAC/G,KAAK,CAAC;EACN,IAAIA,IAAM,wBAAwB,GAAG;EACrC,QAAQ,WAAW,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC;EACrE,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC;EACnE,QAAQ,WAAW,EAAE,gBAAgB,CAAC,aAAa,CAAC,uBAAuB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC9F,QAAQ,SAAS,EAAE,gBAAgB,CAAC,aAAa,CAAC,uBAAuB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC5F,KAAK,CAAC;EACN,IAAIA,IAAM,uBAAuB,GAAG;EACpC,QAAQ,WAAW,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC;EACrE,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC;EACnE,QAAQ,WAAW,EAAE,gBAAgB,CAAC,aAAa,CAAC,uBAAuB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC9F,QAAQ,SAAS,EAAE,gBAAgB,CAAC,aAAa,CAAC,uBAAuB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC5F,KAAK,CAAC;EACN,IAAIA,IAAM,kBAAkB,GAAG;EAC/B,QAAQ,WAAW,EAAE,IAAI,YAAY,CAAC,YAAY,GAAG,WAAW,CAAC;EACjE,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,YAAY,GAAG,WAAW,CAAC;EAC/D,QAAQ,WAAW,EAAE,gBAAgB,CAAC,aAAa,CAAC,sBAAsB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC7F,QAAQ,SAAS,EAAE,gBAAgB,CAAC,aAAa,CAAC,sBAAsB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC3F,KAAK,CAAC;EACN,IAAIA,IAAM,iBAAiB,GAAG;EAC9B,QAAQ,WAAW,EAAE,IAAI,YAAY,CAAC,YAAY,GAAG,WAAW,CAAC;EACjE,QAAQ,SAAS,EAAE,IAAI,YAAY,CAAC,YAAY,GAAG,WAAW,CAAC;EAC/D,QAAQ,WAAW,EAAE,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC5F,QAAQ,SAAS,EAAE,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,EAAE,SAAS,CAAC,MAAM,CAAC;EAC1F,KAAK,CAAC;EACN,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,EAAE,GAAG,KAAK,EAAE,CAAC;EACvB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,MAAM,GAAG,KAAK,EAAE,CAAC;EAC3B,IAAIA,IAAM,MAAM,GAAG,KAAK,EAAE,CAAC;EAC3B,IAAIA,IAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;EAC7B,IAAIA,IAAM,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,IAAIA,IAAM,IAAI,GAAG,KAAK,EAAE,CAAC;EACzB;EACA,IAAIA,IAAM,mBAAmB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACjD,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACzD,QAAQ,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,uBAAuB,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;EACtF,KAAK;EACL;EACA,IAAI,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACvB,IAAI,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACvB,IAAI,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACvB,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;EAC/B,QAAQ,OAAO;EACf,KAAK;EACL,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACpC,IAAI,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EACxB,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1B,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1B,IAAI,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1B,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACvB;EACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAChD,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAChD,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC9B,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE;EAClE,QAAQ,OAAO;EACf,KAAK;EACL,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACpC,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACpC;EACA,IAAID,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;EAC1D,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;EACnC,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;EACnC,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAChC,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAChC,IAAIC,IAAI,KAAK,GAAG,QAAQ,CAAC;EACzB,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,GAAG,EAAE;EACvC,QAAQ,KAAK,GAAG,CAAC,QAAQ,CAAC;EAC1B,KAAK;EACL,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;EACnC;EACA,IAAID,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EACpD,IAAIA,IAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC;EAC9D,IAAI,SAAS,0BAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE,gBAAgB,EAAE;EACnG,QAAQA,IAAM,WAAW,GAAG,GAAG,GAAG,gBAAgB,GAAG,WAAW,CAAC;EACjE,QAAQ,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;EACzC,QAAQA,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;EAC/D,QAAQ,gBAAgB,CAAC,GAAG,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;EAC/D,QAAQ,gBAAgB,CAAC,IAAI,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;EAC3D,QAAQ,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,gBAAgB,CAAC,CAAC;EACvE,QAAQ,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;EAChE,QAAQ,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,gBAAgB,CAAC,CAAC;EAC7E,QAAQ,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;EAChE,KAAK;EACL,IAAI,SAAS,mBAAmB,CAAC,aAAa,EAAE,UAAU,EAAE,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE;EAChG;EACA,QAAQ,SAAS,CAAC,GAAG,EAAE,kBAAkB,CAAC,WAAW,EAAE,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACzF,QAAQ,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAC,GAAG,gBAAgB,GAAG,CAAC,CAAC,CAAC;EACxF,QAAQ,SAAS,CAAC,GAAG,EAAE,kBAAkB,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACvF,QAAQ,SAAS,CAAC,GAAG,EAAE,iBAAiB,CAAC,WAAW,EAAE,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACxF,QAAQ,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;EACrE,QAAQ,SAAS,CAAC,GAAG,EAAE,iBAAiB,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACtF;EACA,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,YAAY,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACzE,YAAY,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAC,GAAG,gBAAgB,GAAG,CAAC,CAAC,CAAC;EAC5F,YAAY,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;EACvE,SAAS;EACT;EACA,QAAQ,KAAKA,IAAI,YAAY,GAAG,CAAC,EAAE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;EACpF,YAAY,0BAA0B,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,gBAAgB,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;EAC/H,SAAS;EACT,KAAK;EACL;EACA,IAAID,IAAM,2BAA2B,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,sCAAsC,CAAC;EAC7F,IAAI,KAAKC,IAAI,YAAY,GAAG,CAAC,EAAE,YAAY,GAAG,sCAAsC,EAAE,YAAY,EAAE,EAAE;EACtG,QAAQD,IAAM,WAAW,GAAG,YAAY,GAAG,gBAAgB,GAAG,WAAW,CAAC;EAC1E,QAAQ,SAAS,CAAC,GAAG,EAAE,gBAAgB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;EAChE,QAAQ,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,GAAG,2BAA2B,CAAC,CAAC;EAClG,QAAQ,SAAS,CAAC,QAAQ,EAAE,gBAAgB,CAAC,SAAS,EAAE,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;EACvF,QAAQ,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,YAAY,GAAG,CAAC,IAAI,2BAA2B,CAAC,CAAC;EACxG,QAAQ,SAAS,CAAC,QAAQ,EAAE,gBAAgB,CAAC,SAAS,EAAE,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;EACvF,KAAK;EACL;EACA,IAAIA,IAAM,oBAAoB,GAAG,IAAI,CAAC;EACtC,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,oBAAoB,CAAC,CAAC;EACtD,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACzB,IAAI,mBAAmB,CAAC,cAAc,EAAE,wBAAwB,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EACvF;EACA,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,oBAAoB,CAAC,CAAC;EACzD,IAAI,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACzB,IAAI,mBAAmB,CAAC,aAAa,EAAE,uBAAuB,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EACrF,IAAI,OAAO;EACX,0BAAQ,gBAAgB;EACxB,wBAAQ,cAAc;EACtB,uBAAQ,aAAa;EACrB,kCAAQ,wBAAwB;EAChC,iCAAQ,uBAAuB;EAC/B,4BAAQ,kBAAkB;EAC1B,2BAAQ,iBAAiB;EACzB,KAAK,CAAC;EACN,CAAC;EACD,sBAAsB,CAAC,GAAG,CAAC,oBAAoB,EAAE,+BAA+B,CAAC,CAAC;;EClXlF;EACA;EACA;EACA;EACA;EACA;AACA,EAaA;EACA;EACA;EACA,IAAM,sBAAsB;MAiBxB,+BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,iCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;EAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,eAAe,EAAE,IAAI;EACjC,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE;EACnE,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI;EAC7C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;4EAAK;EACL,qCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;EACjD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;EACtD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAC1D,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;EACjD,QAAQW,sCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,qCAAI,4CAAgB,KAAK,EAAE,QAAQ,EAAE;;;EACrC,QAAQV,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;EAChC,QAAQD,IAAM,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,QAAQC,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C,QAAQD,IAAM,KAAK,GAAG,IAAI,SAAS,EAAE,CAAC;EACtC,QAAQA,IAAM,KAAK,GAAG,IAAI,SAAS,EAAE,CAAC;EACtC,QAAQA,IAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;EAC1C,QAAQA,IAAM,GAAG,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;EACzC,QAAQA,IAAM,GAAG,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;EACzC,QAAQC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQD,IAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;EAC5C,QAAQ,QAAQ,CAAC,OAAO,WAAE,IAAI,EAAE,CAAC,EAAK;EACtC,YAAYC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7B,YAAYA,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC7B,YAAY,IAAI,QAAQ,EAAE,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;EACtH,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;EAC1D,oBAAoB,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;EACnC,oBAAoB,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;EACnC,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,CAAC,IAAI,CAAC,CAAC;EAC3B,oBAAoB,OAAO;EAC3B,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EACpC,gBAAgB,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;EACpC,gBAAgB,IAAI,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;EAC/D,gBAAgB,IAAI,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;EAC/D,gBAAgB,IAAI,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,EAAE;EAChE,oBAAoB,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;EAChD,oBAAoB,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;EAChD,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,CAAC,IAAI,CAAC,CAAC;EAC3B,oBAAoB,OAAO;EAC3B,iBAAiB;EACjB,aAAa;EACb,YAAY,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3C,YAAY,CAAC,IAAI,CAAC,CAAC;EACnB,YAAY,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;EACxC,YAAY,QAAQY,MAAI,CAAC,SAAS;EAClC,gBAAgB,KAAK,UAAU;EAC/B,oBAAoB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EAC/E,oBAAoB,MAAM;EAC1B,gBAAgB,KAAK,IAAI;EACzB,oBAAoB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;EAC1D,oBAAoB,MAAM;EAC1B,gBAAgB;EAChB,oBAAoB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC3C,oBAAoB,MAAM;EAC1B,aAAa;EACb,YAAY,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3B,YAAY,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;EACnD,YAAY,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;EACnD,YAAY,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;EACnD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;EACnB,YAAY,CAAC,IAAI,CAAC,CAAC;EACnB,YAAY,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,SAAS;EACT,QAAQ,IAAI,OAAO,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EAC1D,QAAQ,OAAO;EACf,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,QAAQ,EAAE,QAAQ;EAC9B,YAAY,OAAO,EAAE,OAAO;EAC5B,YAAY,SAAS,EAAE,SAAS;EAChC,SAAS,CAAC;EACV,MAAK;EACL,qCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;EACrC,QAAQb,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;EAC7E,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;EAC9B,YAAY,QAAQ,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;EACxH,SAAS;EACT,QAAQ,OAAO,QAAQ,CAAC;EACxB,MAAK;EACL,qCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM;EACrD,cAAY,SAAO;EACnB,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;EACvC,QAAQA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EAC7C,QAAQN,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;EACxE,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC;EACzC,YAAY,QAAQ,EAAE,YAAY,CAAC,QAAQ;EAC3C,YAAY,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;EACjD,YAAY,KAAK,EAAE,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClD,YAAY,IAAI,EAAE,YAAY,CAAC,IAAI;EACnC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;EACxC,QAAQA,IAAM,UAAU,GAAG;EAC3B,YAAY,OAAO,EAAE,YAAY,CAAC,OAAO;EACzC,YAAY,SAAS,EAAE,YAAY,CAAC,SAAS;EAC7C,SAAS,CAAC;EACV,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC,CAAC;EACvI,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC;EACpF,gBAAgB,SAAS,EAAE,IAAI,CAAC,SAAS;EACzC,gBAAgB,cAAc,EAAE,IAAI,CAAC,cAAc;EACnD,gBAAgB,eAAe,EAAE,IAAI,CAAC,eAAe;EACrD,gBAAgB,YAAY,EAAE,IAAI;EAClC,aAAa,CAAC,CAAC,CAAC;EAChB,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,sBAAsB,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EAC5G,gBAAgB,SAAS,EAAE,IAAI,CAAC,SAAS;EACzC,gBAAgB,OAAO,EAAE,IAAI,CAAC,WAAW;EACzC,gBAAgB,OAAO,EAAE,IAAI,CAAC,WAAW;EACzC,aAAa,CAAC,CAAC,CAAC;EAChB,SAAS;EACT,QAAQ,OAAO;EACf,YAAY,OAAO,EAAE,YAAY,CAAC,OAAO;EACzC,YAAY,SAAS,EAAE,YAAY,CAAC,SAAS;EAC7C,YAAY,QAAQ,EAAE,YAAY,CAAC,QAAQ;EAC3C,YAAY,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC;EAC9D,SAAS,CAAC;EACV,MAAK;EACL,qCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQW,sCAAK,CAAC,eAAU,OAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACrC,QAAQX,IAAM,UAAU,GAAG;EAC3B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,SAAS,CAAC;EACV,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;EACxE,QAAQA,IAAM,YAAY,GAAG,EAAE,CAAC;EAChC,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,KAAK,EAAE,QAAQ,CAAC,KAAK;EACrC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,MAAM;EACvC,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;EACrE,SAAS;EACT,QAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;EACxD,MAAK;EACL,qCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQC,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQD,IAAM,IAAI,GAAG,EAAE,CAAC;EACxB,QAAQW,sCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;EAC/B,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;EAC9C,gBAAgB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;EACnF,aAAa;EACb,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;EACxD,gBAAgB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EACjF,aAAa;EACb,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;EAC5C,gBAAgB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EACnF,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IAtMqC,4BAuMpC;EACD,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;;EC9N/D;EACA;EACA;EACA;EACA;AACA,EAMA,SAAS,OAAO,CAAC,IAAI,EAAE;EACvB,IAAIX,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACvC,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACrB,CAAC;AACD,EAAOA,IAAM,6BAA6B,GAAG,MAAM,CAAC,MAAM,CAAC;EAC3D,IAAI,KAAK,EAAE,CAAC;EACZ,IAAI,KAAK,EAAE,MAAM;EACjB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5B;EACA;EACA;EACA,IAAM,YAAY;MAOd,qBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,cAAK,OAAC;EACd,YAAY,QAAQ,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EACrD,YAAY,KAAK,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAC3B,QAAQ,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;EACxC,QAAQ,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;EAC1C,QAAQX,IAAM,KAAK,GAAG,IAAIM,WAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EACvD,QAAQN,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACpD,QAAQ,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAC5F,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,6BAA6B,CAAC,GAAE;EACrE,2BAAI,wCAAc,IAAS,EAAE;qCAAP,GAAG;;EACzB,QAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACpD,QAAQC,IAAI,QAAQ,EAAE,MAAM,CAAC;EAC7B,QAAQA,IAAI,SAAS,CAAC;EACtB,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;EAC1C,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;EACrC,YAAY,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EACjC,YAAY,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;EAClD,YAAY,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACnD,SAAS;EACT,QAAQD,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;EAChC,QAAQA,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;EAC5C,QAAQ,IAAI,QAAQ,IAAI,MAAM,EAAE;EAChC,YAAY,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EACxC,gBAAgBD,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACpC,gBAAgBA,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAChC,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnD,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC3E,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC3E,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC3E,aAAa;EACb,SAAS;EACT;;;;;IA7C2B,SA8C1B;;ECpED;EACA;EACA;EACA;EACA;AACA,EAMA;EACA;EACA;EACA,IAAM,yBAAyB;MAC3B,kCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;EAClC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,eAAe,EAAE,IAAI;EACjC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;kFAAK;EACL,wCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;EAC1D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;EACtD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACpD,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,wCAAI,kCAAW,KAAK,EAAE;;;EACtB,QAAQX,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,WAAW,GAAG,EAAE,CAAC;EAC/B,QAAQ,IAAI,CAAC,SAAS,CAAC,WAAW,WAAC,SAAW;EAC9C,YAAY,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC;EACxC,kBAAgB,SAAO;EACvB,YAAY,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACtC,YAAYA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;EACzD,YAAYA,IAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;EACvD,YAAYA,IAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAACa,MAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EACtE,YAAYb,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAACa,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACrE,YAAYb,IAAM,OAAO,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;EACrD,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC;EAC7C,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,MAAM;EACzC,gBAAgB,KAAK,EAAE,KAAK,CAAC,KAAK;EAClC,gBAAgB,MAAM,EAAE,IAAI,CAAC,IAAI;EACjC,gBAAgB,OAAO,EAAE,OAAO,CAAC,OAAO;EACxC,aAAa,EAAEa,MAAI,CAAC,eAAe,CAAC;EACpC,gBAAgB,YAAY,EAAEA,MAAI,CAAC,YAAY;EAC/C,gBAAgB,eAAe,EAAEA,MAAI,CAAC,eAAe;EACrD,gBAAgB,YAAY,EAAE,IAAI;EAClC,aAAa,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC;EAClC,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,MAAM;EACzC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,IAAI;EACrC,aAAa,EAAEA,MAAI,CAAC,eAAe,CAAC;EACpC,gBAAgB,KAAK,EAAE,SAAS;EAChC,gBAAgB,KAAK,EAAE,CAAC;EACxB,aAAa,CAAC,CAAC,EAAE,IAAI,YAAY,CAAC;EAClC,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,MAAM;EACzC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,MAAM;EACvC,aAAa,EAAEA,MAAI,CAAC,eAAe,CAAC;EACpC,gBAAgB,KAAK,EAAE,YAAY;EACnC,gBAAgB,KAAK,EAAE,CAAC;EACxB,aAAa,CAAC,CAAC,CAAC,CAAC;EACjB,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;EACjC,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,UAAU;EAClC,YAAY,WAAW,EAAE,WAAW;EACpC,SAAS,CAAC;EACV,MAAK;EACL,wCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAIC,aAAK;EACjB,cAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,GAAC;EACjD,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAC1B,QAAQ,KAAKb,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACnE,YAAYD,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC5B,YAAYA,IAAM,UAAU,GAAG,EAAE,CAAC;EAClC,YAAYA,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EAChD,YAAYA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;EACzD,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC/B,gBAAgBA,IAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;EAC3D,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;EACzE,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC;EACrD,oBAAoB,UAAU,EAAE,QAAQ,CAAC,MAAM;EAC/C,oBAAoB,QAAQ,EAAE,QAAQ,CAAC,IAAI;EAC3C,iBAAiB,CAAC,CAAC;EACnB,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC;EACrD,oBAAoB,UAAU,EAAE,QAAQ,CAAC,MAAM;EAC/C,oBAAoB,QAAQ,EAAE,QAAQ,CAAC,MAAM;EAC7C,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACzD,SAAS;EACT,QAAQ,IAAIc,aAAK;EACjB,cAAY,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,GAAC;EACpD;;;IApFwC,0BAqFvC;EACD,sBAAsB,CAAC,GAAG,CAAC,aAAa,EAAE,yBAAyB,CAAC,CAAC;;ECpGrE;EACA;EACA;EACA;EACA;AACA,EAEA;EACA;EACA;EACA,IAAM,sBAAsB;MAOxB,+BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQH,kCAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;EAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;EACpF;;;;4EAAK;EACL,qCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;EAC5B,QAAQA,uCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB;;;IAhBqC,6BAiBpC;EACD,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;;;;;;EC5B/D;EACA;EACA;EACA;EACA;AACA,EACAX,IAAM6G,SAAO,GAAG,IAAI,YAAY,CAAC;EACjC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;EACpB,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG;EACnB,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;EAClB,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;EACnB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;EACnB,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG;EAClB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG;EACjB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;EAClB,CAAC,CAAC,CAAC;EACH7G,IAAM8G,gBAAc,GAAG,IAAI,WAAW,CAAC;EACvC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,CAAC,CAAC,CAAC;EACH;EACA;EACA;EACA;EACA,IAAM,eAAe;MACjB,wBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQnG,oBAAK,OAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;EAClC;;;;;;iOAAK;EACL,IAAI,mBAAI,0BAAU,EAAE,OAAOkG,SAAO,CAAC,GAAE;EACrC,IAAI,mBAAI,iCAAiB,EAAE,OAAOC,gBAAc,CAAC,GAAE;EACnD,IAAI,mBAAI,qCAAqB,EAAE,OAAO,EAAE,CAAC,GAAE;EAC3C,IAAI,mBAAI,8BAAc,EAAE,OAAO,CAAC,CAAC,GAAE;EACnC,IAAI,mBAAI,kCAAkB,EAAE,OAAO,CAAC,CAAC;;;;;IARP,eAS7B;;EC3CD;EACA;EACA;EACA;EACA;AACA,EAMO9G,IAAM,6CAA6C,GAAG,MAAM,CAAC,MAAM,CAAC;EAC3E,IAAI,MAAM,EAAE,IAAI;EAChB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5BA,IAAM,0CAA0C,GAAG,MAAM,CAAC,MAAM,CAAC;EACjE,IAAI,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;EAC7B,CAAC,EAAE,oBAAoB,CAAC,CAAC;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,4BAA4B;MAC9B,qCAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,uBAAK,OAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,cAAc,GAAG,0CAA0C,CAAC;EACzE,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;EAC/B,QAAQ,IAAI,CAAC,YAAY,GAAG,6BAA6B,CAAC;EAC1D,QAAQ,IAAI,CAAC,cAAc,GAAG,6BAA6B,CAAC;EAC5D,QAAQ,IAAI,CAAC,WAAW,CAAC;EACzB,YAAY,2BAA2B,EAAE,EAAE,KAAK,EAAE,IAAIP,aAAO,EAAE,EAAE;EACjE,YAAY,kCAAkC,EAAE,EAAE,KAAK,EAAE,IAAIA,aAAO,EAAE,EAAE;EACxE,YAAY,iCAAiC,EAAE,EAAE,KAAK,EAAE,IAAIA,aAAO,EAAE,EAAE;EACvE,YAAY,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;EACvD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,aAAa,CAAC;EAC3B,YAAY,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;EACpD,YAAY,WAAW,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;EACpD,YAAY,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;EAChD,YAAY,QAAQ,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;EAChD,YAAY,SAAS,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;EACjD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;EAC3B;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,6CAA6C,CAAC;;;;;IAvBxC,kBAwB1C;;ECtDD;EACA;EACA;EACA;EACA;AACA,EAIOJ,IAAM,qCAAqC,GAAG,MAAM,CAAC,MAAM,CAAC;EACnE,IAAI,eAAe,EAAE,KAAK;EAC1B,CAAC,EAAE,uCAAuC,EAAE,6CAA6C,CAAC,CAAC;EAC3F;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,oBAAoB,GAYtB,6BAAW,CAAC,IAAI,EAAE,MAAW,EAAE;qCAAP,GAAG;;EAC/B,IAAQ,IAAI,CAAC,kBAAkB,KAAK,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,EAAE;EACvE,QAAY,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;EACvE,QAAY,OAAO,IAAI,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC5D,KAAS;EACT,SAAa;EACb,QAAY,OAAO,IAAI,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAClE,KAAS;EACL,EACH;;ECjDD;EACA;EACA;EACA;EACA;AACA,EAMA;EACA;EACA;EACA,IAAM,uBAAuB;MACzB,gCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,8BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;EAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI;EAChF,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,WAAW,EAAE,IAAI;EAC7B,SAAS,CAAC,CAAC;EACX;;;;8EAAK;EACL,sCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EAC/C,QAAQA,mCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,sCAAI,wCAAc,IAAI,EAAE,MAAM,EAAE;EAChC,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;EAC9D,SAAS;EACT,QAAQ,OAAOA,mCAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACjD,MAAK;EACL,sCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EAC1G,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EAC9D,QAAQ,IAAI,WAAW,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EACjH,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM;EAC/B,YAAY,cAAc,EAAE,IAAI,CAAC,cAAc;EAC/C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;EACnD,SAAS,CAAC;EACV,MAAK;EACL,sCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;EACpE,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;EACpE,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;EACvE,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC;EAC1C,YAAY,IAAI,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC;EACxC,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EACrC,gBAAgB,QAAQ,EAAE,oBAAoB,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC;EACvE,gBAAgB,SAAS,EAAE,IAAI;EAC/B,gBAAgB,SAAS,EAAE,EAAE;EAC7B,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EACrC,gBAAgB,KAAK,EAAE,QAAQ,CAAC,KAAK;EACrC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,MAAM;EACvC,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;EACnE,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;EACrC,gBAAgB,MAAM,EAAE,QAAQ,CAAC,MAAM;EACvC,gBAAgB,OAAO,EAAE,QAAQ,CAAC,OAAO;EACzC,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;EACpD;;;IA3EsC,yBA4ErC;EACD,sBAAsB,CAAC,GAAG,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC;;EC3FjE;EACA;EACA;EACA;EACA;AACA,EAEOX,IAAM,iBAAiB,GAAG;EACjC,IAAI,EAAE,EAAE,EAAE;EACV,IAAI,UAAU,EAAE,WAAW;EAC3B,IAAI,WAAW,EAAE,YAAY;EAC7B,IAAI,WAAW,EAAE,WAAW;EAC5B,IAAI,SAAS,EAAE,UAAU;EACzB,IAAI,QAAQ,EAAE,QAAQ;EACtB,IAAI,SAAS,EAAE,SAAS;EACxB,IAAI,MAAM,EAAE,mBAAmB;EAC/B,IAAI,SAAS,EAAE,cAAc;EAC7B,IAAI,OAAO,EAAE,YAAY;EACzB,IAAI,KAAK,EAAE,sBAAsB;EACjC,IAAI,SAAS,EAAE,+BAA+B;EAC9C,IAAI,MAAM,EAAE,MAAM;EAClB,IAAI,QAAQ,EAAE,QAAQ;EACtB,IAAI,WAAW,EAAE,gBAAgB;EACjC,CAAC,CAAC;EACF,IAAM,YAAY,GACd,qBAAW,CAAC,IAAI,EAAE,IAAS,EAAE,MAAW,EAAE;iCAApB,GAAG;qCAAU,GAAG;;EAC1C,IAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,IAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACzB,IAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;EACzB,EAAC;yBACD,gCAAU,CAAC,EAAE;EACjB,IAAQA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC/B,IAAQC,IAAI,CAAC,CAAC;EACd,IAAQ,QAAQ,IAAI;EACpB,QAAY,KAAK,UAAU;EAC3B,YAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;EAC/B,YAAgB,MAAM;EACtB,QAAY,KAAK,WAAW;EAC5B,YAAgB,CAAC,GAAG,MAAG,CAAC,CAAC,MAAO,CAAC;EACjC,YAAgB,MAAM;EACtB,QAAY,KAAK,WAAW;EAC5B,YAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC3C,YAAgB,MAAM;EACtB,QAAY,KAAK,SAAS;EAC1B,YAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACzC,YAAgB,MAAM;EACtB,QAAY,KAAK,QAAQ;EACzB,YAAgB,CAAC,GAAG,MAAG,CAAC,CAAC,OAAQ,CAAC;EAClC,YAAgB,MAAM;EACtB,QAAY,KAAK,SAAS;EAC1B,YAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;EAC9B,YAAgB,MAAM;EACtB,QAAY,KAAK,MAAM;EACvB,YAAgB,CAAC,IAAM,CAAC,CAAC,mBAAY,CAAC,CAAC,MAAO,CAAC;EAC/C,YAAgB,MAAM;EACtB,QAAY,KAAK,SAAS;EAC1B,YAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;EAC9B,YAAgB,MAAM;EACtB,QAAY,KAAK,OAAO;EACxB,YAAgB,CAAC,GAAG,MAAG,CAAC,CAAC,MAAO,CAAC;EACjC,YAAgB,MAAM;EACtB,QAAY,KAAK,KAAK;EACtB,YAAgB,CAAC,GAAG,OAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,MAAI,CAAC,CAAC,MAAO,CAAC;EAC/E,YAAgB,MAAM;EACtB,QAAY,KAAK,SAAS;EAC1B,YAAgBD,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;EACzD,YAAgB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;EACvC,gBAAoB,CAAC,GAAG,KAAG,OAAM,CAAC,CAAC,MAAO,CAAC;EAC3C,aAAiB;EACjB,iBAAqB;EACrB,gBAAoB,CAAC,GAAG,OAAI,CAAC,CAAC,QAAO,UAAI,CAAC,CAAC,UAAQ,CAAC,CAAC,QAAS,CAAC;EAC/D,aAAiB;EACjB,YAAgB,MAAM;EACtB,QAAY,KAAK,MAAM;EACvB,YAAgB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EACvC,YAAgB,MAAM;EACtB,QAAY,KAAK,QAAQ;EACzB,YAAgB,CAAC,GAAGsB,iBAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAC5C,YAAgB,MAAM;EACtB;EACA,QAAY;EACZ,YAAgB,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;EACtC,YAAgB,MAAM;EACtB,KAAS;EACT,IAAQ,OAAO,CAAC,KAAK,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;EACpC,EACH;EACD,YAAY,CAAC,KAAK,GAAG,iBAAiB,CAAC;;ECvFvC;EACA;EACA;EACA;EACA;AACA,EAMA;EACA;EACA;EACA,IAAM,mBAAmB;MAOrB,4BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQX,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI;EAC1E,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;EAC3C,aAAa;EACb,YAAY,aAAa,EAAE;EAC3B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,MAAM,EAAE,MAAM;EAClC,oBAAoB,SAAS,EAAE,SAAS;EACxC,iBAAiB;EACjB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,YAAY,EAAE,YAAY;EAC9C,oBAAoB,WAAW,EAAE,WAAW;EAC5C,oBAAoB,OAAO,EAAE,OAAO;EACpC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,IAAI;EAC5B,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,IAAI;EAC5B,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,oBAAoB,MAAM,EAAE,MAAM;EAClC,iBAAiB;EACjB,gBAAgB,MAAM,EAAE,IAAI;EAC5B,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI;EAC7E,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI;EAC7E,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI;EAC7E,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,aAAa,EAAE,aAAa;EAChD,oBAAoB,eAAe,EAAE,eAAe;EACpD,oBAAoB,cAAc,EAAE,cAAc;EAClD,oBAAoB,aAAa,EAAE,aAAa;EAChD,oBAAoB,eAAe,EAAE,eAAe;EACpD,oBAAoB,cAAc,EAAE,cAAc;EAClD,oBAAoB,UAAU,EAAE,UAAU;EAC1C,oBAAoB,YAAY,EAAE,YAAY;EAC9C,oBAAoB,WAAW,EAAE,WAAW;EAC5C,iBAAiB;EACjB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;EAC3C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EAC5E,aAAa;EACb,YAAY,cAAc,EAAE;EAC5B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;EAC3C,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC3E,aAAa;EACb,YAAY,iBAAiB,EAAE;EAC/B,gBAAgB,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EACvE,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,OAAO,EAAE,IAAI;EACzB,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;sEAAK;EACL,kCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;EACtD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;EAC/D,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;EAC/D,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;EACxE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;EAClE,QAAQ,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;EACpE,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;EACtD,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,kCAAI,oCAAY,KAAK,EAAE,IAAI,EAAE;EAC7B,QAAQX,IAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EAC3C,QAAQA,IAAM,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;EAChG,QAAQC,IAAI,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC;EAClE,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,EAAE;EAC3C,YAAYD,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EAClD,YAAY,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;EACzC,YAAY,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;EACnC,YAAY,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;EACnC,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;EACpC,gBAAgB,IAAI,GAAG,EAAE,CAAC;EAC1B,gBAAgB,KAAK,CAAC,QAAQ,WAAC,aAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,IAAC,CAAC,CAAC;EAC5E,aAAa;EACb,SAAS;EACT,aAAa,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;EACnD,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;EACtC,kBAAgB,SAAS,GAAG,EAAE,GAAC;EAC/B,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK;EACnC,kBAAgB,MAAM,GAAG,EAAE,GAAC;EAC5B,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM;EACpC,kBAAgB,KAAK,GAAG,EAAE,GAAC;EAC3B,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;EAClC,kBAAgB,IAAI,GAAG,EAAE,GAAC;EAC1B,YAAY,IAAI,CAAC,CAAC,WAAW;EAC7B,kBAAgB,CAAC,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,GAAC;EAC/D,YAAYA,IAAM,UAAU,GAAGY,oBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;EAC3E,YAAYZ,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;EACpE,YAAYA,IAAM,GAAG,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;EAC7C,YAAYC,IAAI,CAAC,GAAG,CAAC,CAAC;EACtB,YAAY,KAAK,CAAC,WAAW,WAAC,IAAM;EACpC,gBAAgBD,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACjC,gBAAgB,IAAI,EAAE,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,EAAE;EACtD,oBAAoB,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC;EAClD,oBAAoB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EAChD,wBAAwB,GAAG,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EAC3D,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC;EAC9C,oBAAoB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EAChD,wBAAwB,EAAE,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;EAC1D,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACzC,oBAAoB,UAAU,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;EACjE,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAC1C,oBAAoB,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;EAC7D,iBAAiB;EACjB,gBAAgB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;EACxC,oBAAoB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,iBAAiB;EACjB,gBAAgB,EAAE,CAAC,CAAC;EACpB,aAAa,CAAC,CAAC;EACf,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;EACtC,kBAAgB,QAAQ,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,GAAC;EACvD,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK;EACnC,kBAAgB,KAAK,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,GAAC;EACjD,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM;EACpC,kBAAgB,IAAI,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,GAAC;EAC/C,SAAS;EACT,QAAQ,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;EAC5E,MAAK;EACL,kCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQA,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;EAC/E,QAAQA,IAAM,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EAC9F,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,cAAc,EAAE,IAAI,CAAC,cAAc;EAC/C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;EACrD,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC;EAC5C,MAAK;EACL,kCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;EAC7E,MAAK;EACL,kCAAI,0CAAgB;EACpB,QAAQ,OAAO,CAAC,CAAC;EACjB;;;IAhOkC,0BAiOjC;EACD,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;;EChPzD;EACA;EACA;EACA;EACA;AACA,EAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,cAAc,CAAC,SAAS,EAAE;EACnC,IAAIA,IAAM,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;EAC3C,IAAIA,IAAM,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;EAC3C,IAAIA,IAAM,EAAE,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;EACxC,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EACnC,QAAQ,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;EACvB,QAAQ,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;EACrC,QAAQ,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;EACrC,KAAK,CAAC,CAAC;EACP,IAAI,OAAO,OAAO,CAAC;EACnB,CAAC;EACD;EACA;EACA;EACA,IAAM,kBAAkB;MAmBpB,2BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,YAAY,EAAE;EAC1B,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,KAAK,EAAE,KAAK;EAChC,oBAAoB,WAAW,EAAE,WAAW;EAC5C,oBAAoB,QAAQ,EAAE,QAAQ;EACtC,iBAAiB;EACjB,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAChE,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EAC9D,aAAa;EACb,YAAY,KAAK,EAAE;EACnB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,KAAK,EAAE,KAAK;EAChC,oBAAoB,MAAM,EAAE,MAAM;EAClC,oBAAoB,KAAK,EAAE,KAAK;EAChC,iBAAiB;EACjB,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAChE,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;oEAAK;EACL,iCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5D,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EAC7C,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;EACpD,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,iCAAI,wCAAc,IAAI,EAAE;EACxB,QAAQ,OAAO,GAAG,CAAC;EACnB,MAAK;EACL,iCAAI,wCAAc,IAAI,EAAE,MAAM,EAAE;EAChC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EAC/B,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,YAAY,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE;EACrE,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,OAAOA,oCAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACjD,MAAK;EACL,iCAAI,kCAAW,IAAI,EAAE,KAAK,EAAE;EAC5B,QAAQ,IAAI,IAAI,EAAE;EAClB,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK;EAC7C,kBAAgB,SAAO;EACvB,SAAS;EACT,QAAQX,IAAM,CAAC,GAAG,EAAE,CAAC;EACrB,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE;EACrC,YAAY,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACjE,SAAS;EACT,QAAQA,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;EACxE,QAAQA,IAAM,SAAS,GAAG,EAAE,CAAC;EAC7B,QAAQA,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;EAC3C,QAAQA,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;EACrC,QAAQA,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;EACzC,QAAQA,IAAM,IAAI,GAAG,CAAC,QAAQ,IAAI,KAAK,EAAE,MAAM,CAAC;EAChD,QAAQA,IAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;EAClC,QAAQC,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EAC7C,QAAQA,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EAC7C,QAAQA,IAAI,MAAM,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQA,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1C,QAAQA,IAAI,OAAO,GAAG,CAAC,CAAC;EACxB,QAAQA,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,UAAU,GAAG,SAAS,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;EAC1E,YAAY,UAAU,GAAG,SAAS,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;EAC1E,YAAY,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;EACzC,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,GAAG,SAAS,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;EAClE,YAAY,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;EACpE,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;EACnC,YAAY,YAAY,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/E,SAAS;EACT,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;EACvC,YAAYD,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC5B,YAAYA,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC5B,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACxC,gBAAgBA,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,gBAAgBA,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgBA,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAC5C,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAC5C,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAChD,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAChD,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAChD,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACtC,gBAAgB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAChD,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACrC,gBAAgBA,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;EACpC,gBAAgB,KAAKC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE;EACtD,oBAAoB,MAAM,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD,oBAAoB,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpE,oBAAoB,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpE,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;EACvC,gBAAgB,YAAY,CAAC,CAAC,CAAC;EAC/B,oBAAoB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EACvC,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/D,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;EACnC,YAAY,SAAS,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;EAChF,SAAS;EACT,QAAQ,OAAO,SAAS,CAAC;EACzB,MAAK;EACL,iCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQD,IAAM,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;EACpE,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAYA,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzE,YAAYA,IAAM,UAAU,GAAG,IAAI,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACjH,YAAY,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACxC,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;EACpC,YAAYA,IAAM,WAAW,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACtI,YAAY,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EACzC,SAAS;EACT,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,UAAU;EAClC,SAAS,CAAC;EACV,MAAK;EACL,iCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQC,IAAI,SAAS,GAAG,CAAC,CAAC;EAC1B,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAYD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9E,YAAYA,IAAM,cAAc,GAAG,EAAE,CAAC;EACtC,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACxC,gBAAgB,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;EAC9C,oBAAoB,SAAS,EAAE,QAAQ,CAAC,SAAS;EACjD,oBAAoB,SAAS,EAAE,QAAQ,CAAC,SAAS;EACjD,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACrC,gBAAgB,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;EAC9C,oBAAoB,KAAK,EAAE,QAAQ,CAAC,KAAK;EACzC,oBAAoB,MAAM,EAAE,QAAQ,CAAC,MAAM;EAC3C,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;EACvE,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;EACpC,YAAYA,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EAChE,YAAYA,IAAM,eAAe,GAAG,EAAE,CAAC;EACvC,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACxC,gBAAgB,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;EAC/C,oBAAoB,SAAS,EAAE,SAAS,CAAC,SAAS;EAClD,oBAAoB,SAAS,EAAE,SAAS,CAAC,SAAS;EAClD,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACrC,gBAAgB,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;EAC/C,oBAAoB,KAAK,EAAE,SAAS,CAAC,KAAK;EAC1C,oBAAoB,MAAM,EAAE,SAAS,CAAC,MAAM;EAC5C,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;EACxE,SAAS;EACT,MAAK;EACL,iCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;EAChE,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;EACpD,SAAS;EACT,QAAQW,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IA/NiC,0BAgOhC;EACD,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;;EClQvD,SAAS,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;EAC7D,IAAI,QAAQ,GAAG,QAAQ,IAAI,UAAU,CAAC;EACtC,IAAI,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC;EAC7B,IAAIX,IAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC;EAClE,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC5B,QAAQ,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,QAAQ,CAAC;EAC7D,KAAK;EACL,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAU,EAAE;;;;EACnC,QAAQA,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;EAC3C,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAClC,SAAS;EACT,KAAK;EACL,IAAI,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAU,EAAE,MAAU,EAAE;uCAAnB,GAAG;yCAAU,GAAG;;EACnD,QAAQD,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;EAC3C,YAAY,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5C,SAAS;EACT,KAAK;EACL,IAAI,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAU,EAAE;yCAAN,GAAG;;EAChD,QAAQD,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;EAC3C,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC5C,SAAS;EACT,KAAK;EACL,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE;EACxB,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5B,KAAK;EACL;EACA;EACA;EACA;EACA;EACA,IAAI,OAAO,QAAE,IAAI,SAAE,KAAK,OAAE,GAAG,WAAE,OAAO,aAAE,SAAS,QAAE,IAAI,EAAE,CAAC;EAC1D,CAAC;;EClCD;EACA;EACA;EACA;EACA;AACA,EAIA,SAAS,UAAU,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,IAAI,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;EAC/C,IAAI,IAAI,IAAI,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;EAC7C,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;EAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/B,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/B,KAAK;EACL,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC;EACzC,IAAI,IAAI,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;EACjC,IAAI,IAAI,MAAM,EAAE,KAAK,CAAC;EACtB,IAAI,IAAI,KAAK,EAAE,KAAK,CAAC;EACrB,IAAI,IAAI,SAAS,CAAC;EAClB,IAAI,IAAI,SAAS,CAAC;EAClB,IAAI,IAAI,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC;EACrC,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE;EAC1E,QAAQ,WAAW,GAAG,YAAY,IAAI,GAAG,CAAC;EAC1C,QAAQ,WAAW,GAAG,YAAY,IAAI,GAAG,CAAC;EAC1C,QAAQ,SAAS,GAAG,UAAU,IAAI,IAAI,CAAC;EACvC,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC;EAC1B,QAAQ,KAAK,IAAI,MAAM,IAAI,UAAU,EAAE;EACvC,YAAY,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;EACpD,SAAS;EACT,QAAQ,IAAI,IAAI,GAAG,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;EAC7F,QAAQ,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9B,QAAQ,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,QAAQ,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9B,QAAQ,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EAC7B,QAAQ,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;EAC1B,QAAQ,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;EACvC;EACA,QAAQ,KAAK,GAAG,EAAE,CAAC;EACnB,QAAQ,KAAK,GAAG,EAAE,CAAC;EACnB,QAAQ,YAAY,CAAC,KAAK,CAAC,CAAC;EAC5B,QAAQ,SAAS,GAAG,WAAW,GAAG,WAAW,CAAC;EAC9C,QAAQ,IAAI,OAAO,EAAE;EACrB,YAAY,MAAM,GAAG,OAAO,CAAC;EAC7B,SAAS;EACT,aAAa;EACb;EACA,YAAY,MAAM,GAAG,WAAW,GAAG,WAAW,CAAC;EAC/C,SAAS;EACT,QAAQ,MAAM,GAAG,IAAI,UAAU,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;EAC5D,QAAQ,IAAI,KAAK,EAAE;EACnB,YAAY,UAAU,GAAG,IAAI,YAAY,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;EACtE,SAAS;EACT,QAAQ,IAAI,SAAS,EAAE;EACvB,YAAY,QAAQ,GAAG,IAAI,UAAU,CAAC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;EAClE,SAAS;EACT,KAAK;EACL;EACA,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;EAClB,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;EACnB,IAAI,IAAI,OAAO,GAAG,CAAC,CAAC;EACpB,IAAI,IAAI,EAAE,GAAG;EACb,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChE,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,KAAK,CAAC;EACN;EACA,IAAI,IAAI,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE;EAClF,QAAQ,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;EAC7C,QAAQ,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,CAAC;EACnC,QAAQ,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;EACjE,QAAQ,UAAU,CAAC,KAAK,CAAC,CAAC;EAC1B,QAAQ,aAAa,EAAE,CAAC;EACxB,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE;EAC7C,YAAY,eAAe,EAAE,CAAC;EAC9B,SAAS;EACT,QAAQ,IAAI,IAAI,KAAK,KAAK,EAAE;EAC5B,YAAY,YAAY,CAAC,KAAK,CAAC,CAAC;EAChC,YAAY,eAAe,EAAE,CAAC;EAC9B,SAAS;EACT,QAAQ,gBAAgB,CAAC,IAAI,CAAC,CAAC;EAC/B;EACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC3D,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,SAAS;EACT,QAAQ,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;EAChD,QAAQ,OAAO;EACf,YAAY,IAAI,EAAE,MAAM;EACxB,YAAY,EAAE,EAAE,OAAO;EACvB,YAAY,EAAE,EAAE,MAAM;EACtB,YAAY,EAAE,EAAE,OAAO;EACvB,YAAY,SAAS,EAAE,QAAQ;EAC/B,SAAS,CAAC;EACV,KAAK,CAAC;EACN,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE;EACpG,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;EACnF,QAAQ,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;EACpF,QAAQ,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACzE,KAAK,CAAC;EACN,IAAI,SAAS,YAAY,CAAC,KAAK,EAAE;EACjC,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,GAAG,CAAC;EAChB,QAAQ,IAAI,KAAK,CAAC;EAClB,QAAQ,IAAI,OAAO,CAAC;EACpB,QAAQ,IAAI,OAAO,CAAC;EACpB,QAAQ,IAAI,MAAM,CAAC;EACnB,QAAQ,IAAI,SAAS,CAAC;EACtB,QAAQ,IAAI,IAAI,CAAC;EACjB,QAAQ,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;EACrC,YAAY,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;EACjC,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC;EAC3B,kBAAgB,WAAS;EACzB,YAAY,IAAI,CAAC,KAAK,EAAE;EACxB,gBAAgB,OAAO,GAAG,CAAC,GAAG,WAAW,GAAG,GAAG,CAAC;EAChD,aAAa;EACb,iBAAiB;EACjB,gBAAgB,OAAO,GAAG,CAAC,CAAC,GAAG,WAAW,IAAI,WAAW,GAAG,GAAG,CAAC;EAChE,aAAa;EACb,YAAY,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;EACxC,YAAY,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;EAC7C,YAAY,SAAS,GAAG,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;EACxD,YAAY,IAAI,GAAG,CAAC,CAAC;EACrB,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACzC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EAC7C,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACxC,oBAAoB,IAAI,GAAG,GAAG,OAAO,EAAE;EACvC,wBAAwB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAC7C,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;EACzD,wBAAwB,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAC5D,qBAAqB;EACrB,oBAAoB,EAAE,IAAI,CAAC;EAC3B,iBAAiB;EACjB,aAAa;EACb,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;EACjC,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;EACpC,SAAS;EACT,KAAK;EACL,IAAI,SAAS,QAAQ,CAAC,GAAG,EAAE;EAC3B,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC;EACrB,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACpE,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvB,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,QAAQ,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;EAChC,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EAChC,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;EACrB,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC;EACnC,QAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EAC1B,QAAQ,IAAI,WAAW,CAAC;EACxB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;EAC5C,gBAAgB,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;EACxC,oBAAoB,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EAChD,wBAAwB,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EACpD,4BAA4B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EACxD,gCAAgC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;EACtE,oCAAoC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,oCAAoC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,oCAAoC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,EAAE,CAAC,EAAE;EACvE,wCAAwC,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;EACpD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;EACtE,4CAA4C,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,OAAO,EAAE;EAC5F,4CAA4C,SAAS;EACrD,yCAAyC;EACzC,wCAAwC,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAC;EACjF,wCAAwC,IAAI,CAAC,SAAS,EAAE;EACxD,4CAA4C,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;EACnE,yCAAyC;EACzC,6CAA6C;EAC7C,4CAA4C,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE;EAC1E,gDAAgD,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;EACvE,gDAAgD,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;EACtE,6CAA6C;EAC7C,iDAAiD,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE;EAC5E,gDAAgD,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EAC1E,gDAAgD,IAAI,GAAG,KAAK,EAAE,EAAE;EAChE,oDAAoD,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/H,oDAAoD,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnI,oDAAoD,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnI,oDAAoD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;EACnH,wDAAwD,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;EAC9E,qDAAqD;EACrD,iDAAiD;EACjD,6CAA6C;EAC7C,yCAAyC;EACzC,qCAAqC;EACrC,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,IAAI,EAAE,CAAC;EACvB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE;EAC/B,QAAQ,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;EAC9C,QAAQ,IAAI,CAAC,EAAE,EAAE,CAAC;EAClB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACrD,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1B,YAAY,IAAI,KAAK;EACrB,kBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAC;EACrC,YAAY,IAAI,SAAS;EACzB,kBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC;EACjC,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC5D,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxB,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACrD,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE;EACnC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;EACpC,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;EACjD,KAAK;EACL,IAAI,SAAS,aAAa,CAAC,GAAG,EAAE;EAChC,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC;EACrB,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;EACrB,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,QAAQ,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;EAChC,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC;EACnC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAC/C,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;EAC5C,oBAAoB,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EAChD,wBAAwB,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EACpD,4BAA4B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;EACxD,gCAAgC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;EACtE,oCAAoC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,oCAAoC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,oCAAoC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;EAC3E,wCAAwC,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;EACpD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wCAAwC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;EACtE,4CAA4C,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,OAAO,EAAE;EAC5F,4CAA4C,SAAS;EACrD,yCAAyC;EACzC,wCAAwC,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAC;EACjF,wCAAwC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EACvE,4CAA4C,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;EACpE,4CAA4C,IAAI,SAAS;EACzD,kDAAgD,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,GAAC;EACtE,yCAAyC;EACzC,6CAA6C,IAAI,SAAS,EAAE;EAC5D,4CAA4C,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;EACtE,4CAA4C,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7G,4CAA4C,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjH,4CAA4C,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjH,4CAA4C,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;EAC3G,gDAAgD,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;EACtE,6CAA6C;EAC7C,yCAAyC;EACzC,qCAAqC;EACrC,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,IAAI,EAAE,CAAC;EACvB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,eAAe,GAAG;EAC/B,QAAQ,IAAI,CAAC,EAAE,EAAE,CAAC;EAClB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACrD,YAAY,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;EACjC,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC5D,YAAY,aAAa,CAAC,CAAC,CAAC,CAAC;EAC7B,SAAS;EACT,KAAK;EACL,IAAI,SAAS,aAAa,GAAG;EAC7B,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC;EACnC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EACtC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EAC1C,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EAC7C,oBAAoB,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;EAC1D,oBAAoB,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE;EAC/C;EACA,wBAAwB,IAAI,EAAE,GAAG,CAAC,CAAC;EACnC;EACA,wBAAwB,OAAO,EAAE,GAAG,EAAE,EAAE;EACxC,4BAA4B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,4BAA4B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,4BAA4B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,4BAA4B,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,OAAO;EACvD,gCAAgC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM;EACtD,gCAAgC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,OAAO;EACvD,gCAAgC,EAAE,MAAM,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE;EACjF,gCAAgC,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACzD;EACA,gCAAgC,MAAM;EACtC,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,EAAE,EAAE,CAAC;EACrC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,eAAe,GAAG;EAC/B,QAAQ,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;EACnD,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvB,QAAQ,IAAI,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;EAC5E,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC;EACnC,QAAQ,IAAI,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC;EAC3C,QAAQ,IAAI,eAAe,GAAG,CAAC,CAAC;EAChC;EACA,QAAQ,IAAI,KAAK,CAAC;EAClB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EACtC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACzC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EAC9C,oBAAoB,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;EACtD,oBAAoB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;EAC7C,oBAAoB,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE;EAC/C,wBAAwB,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,EAAE;EACrD,4BAA4B,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7D,4BAA4B,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAClD,4BAA4B,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;EACpD,4BAA4B,eAAe,IAAI,CAAC,CAAC;EACjD,yBAAyB;EACzB;EACA;EACA,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC;EAC1D,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;EACxB,QAAQ,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC;EAC3D,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EACtC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACzC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EAC9C,oBAAoB,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;EACtD,oBAAoB,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,EAAE;EACjD,wBAAwB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;EAC7C,wBAAwB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACjD,wBAAwB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACjD,wBAAwB,OAAO,IAAI,CAAC,CAAC;EACrC,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EAClD,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,GAAG;EACX,YAAY,QAAQ,GAAG,YAAY,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;EAC5E,YAAY,OAAO,GAAG,CAAC,CAAC;EACxB,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EACrD,gBAAgB,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACxF,gBAAgB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EAC1C,gBAAgB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,MAAM,GAAG,MAAM,EAAE;EAC1D;EACA,oBAAoB,OAAO,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnD,oBAAoB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,oBAAoB,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC3D,oBAAoB,OAAO,IAAI,CAAC,CAAC;EACjC,iBAAiB;EACjB,aAAa;EACb,SAAS,QAAQ,OAAO,GAAG,CAAC,EAAE;EAC9B;EACA;EACA,QAAQ,IAAI,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;EACvC,QAAQ,IAAI,MAAM,CAAC;EACnB,QAAQ,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;EACpC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EACtC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACzC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;EAC9C,oBAAoB,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;EACtD,oBAAoB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EAC9C;EACA,oBAAoB,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE;EAC/C,wBAAwB,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACrD,6BAA6B,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,KAAK,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,EAAE;EACzF,4BAA4B,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACrD,4BAA4B,IAAI,SAAS,KAAK,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EACvE,gCAAgC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EAChE,gCAAgC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/E,gCAAgC,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;EACnE,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;EACtD,KAAK;EACL,IAAI,SAAS,YAAY,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;EAClE;EACA;EACA;EACA,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvB,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvB,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpB,QAAQ,IAAI,MAAM,CAAC;EACnB,QAAQ,IAAI,KAAK,CAAC;EAClB,QAAQ,IAAI,GAAG,CAAC;EAChB,QAAQ,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;EACpC,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,OAAO,KAAK,CAAC,EAAE;EAC3B,YAAY,OAAO,QAAQ,CAAC;EAC5B,SAAS;EACT,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;EACvB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;EACvB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;EACvB,QAAQ,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC;EACnC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EAChD,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/C,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5B,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;EACjD,oBAAoB,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;EAChD,oBAAoB,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACnD,oBAAoB,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC;EAClE,oBAAoB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAC9E,wBAAwB,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtE,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACnD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;EAChD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACjD,wBAAwB,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EACnD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,IAAI,CAAC,CAAC;EACtC,qBAAqB;EACrB,yBAAyB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAClF,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;EACxD,4BAA4B,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC1E,4BAA4B,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACvD,4BAA4B,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE;EAC5D,gCAAgC,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACzD,gCAAgC,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EAC3D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,IAAI,CAAC,CAAC;EAC9C,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EAChD,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/C,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;EACrC,gBAAgB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5B,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;EACjD,oBAAoB,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;EAChD,oBAAoB,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACnD,oBAAoB,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC;EAClE,oBAAoB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAC9E,wBAAwB,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtE,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACnD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;EAChD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACjD,wBAAwB,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EACnD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,IAAI,CAAC,CAAC;EACtC,qBAAqB;EACrB,yBAAyB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAClF,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;EACxD,4BAA4B,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC1E,4BAA4B,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACvD,4BAA4B,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE;EAC5D,gCAAgC,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACzD,gCAAgC,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EAC3D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,IAAI,CAAC,CAAC;EAC9C,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EAChD,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChC,YAAY,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAC/C,YAAY,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;EACtC,gBAAgB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5B,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;EACjD,oBAAoB,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;EAChD,oBAAoB,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;EACnD,oBAAoB,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC;EAClE,oBAAoB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAC9E,wBAAwB,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EACtE,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACnD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;EAChD,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACjD,wBAAwB,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EACnD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EACvD,wBAAwB,QAAQ,IAAI,CAAC,CAAC;EACtC,qBAAqB;EACrB,yBAAyB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;EAClF,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7D;EACA,wBAAwB,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;EACxD,4BAA4B,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;EAC1E,4BAA4B,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;EACvD,4BAA4B,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE;EAC5D,gCAAgC,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;EACzD,gCAAgC,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EAC3D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;EAC/D,gCAAgC,QAAQ,IAAI,CAAC,CAAC;EAC9C,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,QAAQ,CAAC;EACxB,KAAK;EACL,IAAI,SAAS,gBAAgB,CAAC,KAAK,EAAE;EACrC,QAAQ,IAAI,CAAC,CAAC;EACd,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;EAC9B,QAAQ,IAAI,KAAK,KAAK,KAAK,EAAE;EAC7B,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EACtC,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;EACzD,aAAa;EACb,SAAS;EACT,aAAa,IAAI,KAAK,KAAK,IAAI,EAAE;EACjC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;EACrC,gBAAgB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE;EACzC,oBAAoB,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;EACxC,iBAAiB;EACjB,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EACtC,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;EACzD,aAAa;EACb,SAAS;EACT,aAAa,IAAI,KAAK,KAAK,KAAK,EAAE;EAClC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,MAAM,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE;EACnE,oBAAoB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EAC1C,iBAAiB;EACjB,qBAAqB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE;EACzE,oBAAoB,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;EACxC,iBAAiB;EACjB,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;EACzD,aAAa;EACb,SAAS;EACT,aAAa,IAAI,KAAK,KAAK,KAAK,EAAE;EAClC,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EACtC,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;EACzD,aAAa;EACb,SAAS;EACT,KAAK;EACL,CAAC;EACD,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE;EACpC,QAAQ,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,QAAQ;EAClF,KAAK,EAAE,CAAC,CAAC;;ECtpBT;EACA;EACA;EACA;EACA;AACA,EAKA,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE;EAC3E,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;EAC7C,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EAC/B,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE;EAC/B,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,WAAW,CAAC,CAAC;EACpD,KAAK;EACL,IAAI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACxC,IAAI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACxC,IAAI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;EACxC,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;EACpC,IAAI,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;EAC5B;EACA,IAAI,IAAI,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACpC,QAAQ,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EAC7F,KAAK,CAAC;EACN;EACA,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;EACrB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACrC,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;EACxC,YAAY,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/B,SAAS;EACT,aAAa;EACb,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACjC,SAAS;EACT,KAAK;EACL,IAAI,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;EAC9C,IAAI,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;EAC9C,IAAI,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;EACvC,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;EACnB,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;EAC1B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACjC,QAAQ,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EAC5C,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAClC,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;EACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACtD,gBAAgB,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,gBAAgB,MAAM,EAAE,CAAC;EACzB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,UAAU,GAAG,MAAM,GAAG,KAAK,CAAC;EACxC,QAAQ,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;EACpC,QAAQ,IAAI,UAAU,GAAG,aAAa,EAAE;EACxC,YAAY,aAAa,GAAG,UAAU,CAAC;EACvC,SAAS;EACT,KAAK;EACL;EACA,IAAID,IAAM,mBAAmB,GAAG,CAAC,EAAE,GAAG,aAAa,IAAI,CAAC,CAAC;EACzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIA,IAAM,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;EACxD,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC;EACvB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EACtC,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EACtC,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EACtC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EACzC,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EAC5C,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EAC5C,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;EAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;EACxC,YAAY,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC;EACpC,YAAY,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;EAC5C,gBAAgB,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC;EACvC,gBAAgB,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;EAChD,oBAAoB,IAAI,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;EACpD,oBAAoB,IAAI,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;EACrD,oBAAoB,IAAI,OAAO,GAAG,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;EAC/D,oBAAoB,KAAK,IAAI,SAAS,GAAG,SAAS,EAAE,SAAS,GAAG,OAAO,EAAE,SAAS,EAAE,EAAE;EACtF,wBAAwB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;EACxD,wBAAwB,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;EACvD,wBAAwB,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;EACvD,wBAAwB,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;EACvD,wBAAwB,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;EAC9D,wBAAwB,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE;EAC5E,4BAA4B,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;EAC5D,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT;EACA,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACzB,KAAK,CAAC;EACN,IAAI,OAAO;EACX,QAAQ,mBAAmB,EAAE,mBAAmB;EAChD,QAAQ,WAAW,EAAE,WAAW;EAChC,KAAK,CAAC;EACN,CAAC;EACD,SAAS,SAAS,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE;EACrD;EACA;EACA;EACA;EACA;EACA;EACA,IAAIA,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;EACrC,IAAIA,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EACvC,IAAIA,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EACvC,IAAIA,IAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EACvC,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACrC,QAAQD,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACzB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;EAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACjC,KAAK;EACL,IAAIC,IAAI,IAAI,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;EAC7C,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;EAChC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/B,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/B,KAAK;EACL,IAAID,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACxB,IAAIA,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACxB,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC;EACd,IAAIA,IAAI,SAAS,CAAC;EAClB;EACA,IAAIA,IAAI,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC;EAC5D;EACA,IAAIA,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;EACtB;EACA,IAAIA,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC;EACrC;EACA,IAAIA,IAAI,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC5B;EACA,IAAIA,IAAI,QAAQ,EAAE,QAAQ,CAAC;EAC3B;EACA,IAAIA,IAAI,IAAI,CAAC;EACb;EACA,IAAIA,IAAI,UAAU,CAAC;EACnB;EACA,IAAID,IAAM,IAAI,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACnD,IAAIA,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAClD,IAAIA,IAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACjD,IAAIA,IAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACjD,IAAIC,IAAI,OAAO,CAAC;EAChB,IAAI,SAAS,IAAI,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe,EAAE;EAC3E,QAAQ,WAAW,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAClD,QAAQ,WAAW,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;EAClD,QAAQ,SAAS,GAAG,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EAC/C,QAAQ,cAAc,GAAG,QAAQ,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;EACvD,QAAQ,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EACrC,QAAQ,EAAE,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EACtC,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EAC3C,YAAY,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;EACnD,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EACxB,YAAY,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;EAChC,SAAS;EACT,QAAQ,SAAS,GAAG,CAAC,CAAC;EACtB,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EAC3C,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS;EAChC,kBAAgB,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC;EACjC,SAAS;EACT,QAAQ,cAAc,EAAE,CAAC;EACzB,QAAQ,qBAAqB,EAAE,CAAC;EAChC,QAAQ,cAAc,EAAE,CAAC;EACzB,QAAQ,QAAQ,GAAG,CAAC,CAAC,CAAC;EACtB,KAAK;EACL,IAAI,SAAS,WAAW,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;EACzC,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC3C,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;EACtC,SAAS;EACT,KAAK;EACL,IAAI,SAAS,cAAc,GAAG;EAC9B,QAAQD,IAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;EAC/E,QAAQ,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;EAC3C,QAAQ,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;EAC3B,QAAQ,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;EACjC,QAAQ,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC;EACzE,QAAQ,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;EAC/D,QAAQ,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAChD,QAAQ,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC,QAAQ,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;EACpD,QAAQ,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;EACpD,QAAQ,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;EACpD,KAAK;EACL,IAAI,SAAS,qBAAqB,GAAG;EACrC,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC;EACxB,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,cAAc,CAAC;EAChD,QAAQ,QAAQ,GAAG,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC;EACpD,QAAQ,QAAQ,GAAG,IAAI,YAAY,CAAC,cAAc,CAAC,CAAC;EACpD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;EACjD,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC1C,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC1C,YAAY,KAAK,IAAI,IAAI,CAAC;EAC1B,SAAS;EACT,KAAK;EACL,IAAI,SAAS,cAAc,GAAG;EAC9B,QAAQ,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,SAAS,CAAC,CAAC;EAClE,QAAQ,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;EAC9D,KAAK;EACL,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACrC;EACA;EACA;EACA;EACA;EACA,QAAQC,IAAI,EAAE,CAAC;EACf,QAAQ,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;EAC7B,YAAY,EAAE,GAAG,QAAQ,CAAC;EAC1B,YAAY,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,kBAAkB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;EACzE,gBAAgB,OAAO,EAAE,CAAC;EAC1B,aAAa;EACb,iBAAiB;EACjB,gBAAgB,QAAQ,GAAG,CAAC,CAAC,CAAC;EAC9B,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC;EACnB,QAAQ,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;EAC5B,QAAQ,OAAO,EAAE,IAAI,CAAC,EAAE;EACxB,YAAY,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,kBAAkB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;EACzE,gBAAgB,QAAQ,GAAG,EAAE,CAAC;EAC9B,gBAAgB,OAAO,EAAE,CAAC;EAC1B,aAAa;EACb,YAAY,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;EAClC,SAAS;EACT,QAAQ,QAAQ,GAAG,CAAC,CAAC,CAAC;EACtB,QAAQ,OAAO,CAAC,CAAC,CAAC;EAClB,KAAK;EACL,IAAI,SAAS,kBAAkB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EAC7C,QAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;EACxB,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACzB,QAAQ,IAAI,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACnC,QAAQ,IAAI,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACvC,QAAQ,IAAI,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACvC,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7C,QAAQ,OAAO,EAAE,GAAG,GAAG,CAAC;EACxB,KAAK;EACL,IAAI,SAAS,aAAa,GAAG;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,YAAY,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5B,YAAY,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;EACzD;EACA,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC;EACjD;EACA,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D;EACA,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EAC7C,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EAC7C,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EAC7C;EACA;EACA;EACA,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACtD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACtD,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACtD,YAAY,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EACjD,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;EACxC,gBAAgB,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACnD,gBAAgB,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EACrD,oBAAoB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;EAC5C,oBAAoB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACjD,oBAAoB,IAAI,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACzD,oBAAoB,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EACzD,wBAAwB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;EAChD,wBAAwB,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAChD,wBAAwB,IAAI,EAAE,GAAG,GAAG,EAAE;EACtC,4BAA4B,IAAI,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAC;EACpD,4BAA4B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;EACjD;EACA,gCAAgC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACvD,6BAA6B;EAC7B;EACA;EACA,4BAA4B,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAClD,4BAA4B,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC5C,4BAA4B,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;EAC9C,4BAA4B,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;EAC9C,4BAA4B,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;EAC9C,4BAA4B,GAAG,IAAI,EAAE,CAAC;EACtC,4BAA4B,GAAG,IAAI,EAAE,CAAC;EACtC,4BAA4B,GAAG,IAAI,EAAE,CAAC;EACtC,4BAA4B,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;EACvE,gCAAgC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAChD,gCAAgC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE;EACpD,oCAAoC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;EACnD,oCAAoC,IAAI,SAAS;EACjD,0CAAwC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAC;EAC3D,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,YAAY,GAAG;EAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACzC,YAAY,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;EACjE,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC;EACvB,YAAY,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;EACpC,YAAY,OAAO,EAAE,IAAI,CAAC,EAAE;EAC5B,gBAAgB,IAAI,CAAC,GAAG,EAAE,EAAE;EAC5B,oBAAoB,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACxC,iBAAiB;EACjB,gBAAgB,EAAE,GAAG,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC;EACtC,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;EAChC,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7C;EACA;EACA,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC9B;EACA;EACA,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAChE;EACA,QAAQ,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;EAC5B,QAAQ,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EAChC;EACA,QAAQ,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EAC/B,QAAQ,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5B;EACA,QAAQ,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;EAC9B,QAAQ,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAC5B;EACA,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;EAClD,QAAQ,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;EACvC,QAAQ,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;EACvC,QAAQ,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;EAC1C,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,QAAQ,QAAQ,GAAG,CAAC,CAAC,CAAC;EACtB,QAAQ,IAAI,EAAE,GAAG,OAAO,CAAC;EACzB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;EACjD,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,YAAY,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D,YAAY,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D,YAAY,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D,YAAY,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;EACnD;EACA;EACA,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EACjD,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EACjD,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;EACjD,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1D,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1D,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1D,gBAAgB,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EACrD,oBAAoB,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EACxC,oBAAoB,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACvD,oBAAoB,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EACzD,wBAAwB,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EAC5C,wBAAwB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EACrD,wBAAwB,IAAI,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAC7D,wBAAwB,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;EAC7D,4BAA4B,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EAChD,4BAA4B,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;EAChD,4BAA4B,IAAI,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAC;EACpD,4BAA4B,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EACpD,4BAA4B,IAAI,OAAO,GAAG,GAAG,IAAI,EAAE,IAAI,OAAO,GAAG,OAAO,CAAC,EAAE;EAC3E,gCAAgC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC1D,gCAAgC,IAAI,SAAS,EAAE;EAC/C;EACA;EACA,oCAAoCD,IAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1F,oCAAoC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;EACtE,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,IAAI,SAAS,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE;EAClC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EACvC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;EACxB,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;EAC7B,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;EAC7B,YAAY,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,SAAS;EACT,QAAQ,OAAO,GAAG,CAAC;EACnB,KAAK;EACL,IAAI,SAAS,YAAY,GAAG;EAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC9C,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAC3B,kBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAC;EAC5B,SAAS;EACT,KAAK;EACL,IAAI,SAAS,UAAU,GAAG;EAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,SAAS;EACT,KAAK;EACL,IAAI,SAAS,SAAS,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE;EAC5D;EACA;EACA;EACA;EACA,QAAQ,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;EAC5C,QAAQ,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;EACvC,QAAQ,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;EAClD,QAAQ,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;EAC1C,QAAQ,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;EAChD,QAAQ,aAAa,EAAE,CAAC;EACxB,QAAQ,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;EACnD,QAAQ,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;EAC/C,QAAQ,YAAY,EAAE,CAAC;EACvB,QAAQ,OAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;EAClD,QAAQ,YAAY,EAAE,CAAC;EACvB,QAAQ,UAAU,EAAE,CAAC;EACrB,QAAQ,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;EAC/C,KAAK;EACL,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE;EACpG;EACA;EACA,QAAQ,SAAS,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;EACvD,QAAQ,IAAI,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;EACjF,QAAQ,OAAO,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAClF,KAAK,CAAC;EACN,CAAC;EACD,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE;EACnC,QAAQ,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,kBAAkB;EACvE,QAAQ,gBAAgB,EAAE,OAAO,EAAE,WAAW;EAC9C,QAAQ,UAAU;EAClB,QAAQ,QAAQ;EAChB,KAAK,EAAE,CAAC,CAAC;;EC9dT;EACA;EACA;EACA;EACA;AACA,AAMAe,kBAAc,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE;EACzD,IAAIf,IAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;EAC1B,IAAIA,IAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;EAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;EAChB,QAAQA,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC;EACrE,QAAQA,IAAM,IAAI,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;EAC3E,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;EAC9G,QAAQA,IAAM,YAAY,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;EACnE,QAAQ,IAAI,EAAE,CAAC,MAAM;EACrB,cAAY,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAC;EAChD,QAAQ,IAAI,EAAE,CAAC,SAAS;EACxB,cAAY,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,GAAC;EACnD,QAAQA,IAAM,IAAI,GAAG;EACrB,YAAY,EAAE,EAAE,EAAE;EAClB,YAAY,CAAC,EAAE,CAAC;EAChB,SAAS,CAAC;EACV,QAAQ,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;EACrC,KAAK;EACL,CAAC,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;EAC5B;EACA;EACA;EACA,IAAM,gBAAgB,GAClB,yBAAW,CAAC,SAAS,EAAE;EAC3B,IAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC/B,EAAC;6BACD,sCAAa,MAAM,EAAE;EACzB,IAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;EAC1C,QAAY,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;EAC/D,QAAY,YAAY,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE;EACxD,YAAgB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;EACvC,SAAa,CAAC;EACd,KAAS,CAAC,CAAC;EACP,EAAC;6BACD,sCAAa,EAAE,EAAE,CAAC,EAAE;EACxB,IAAQ,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAClD,IAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;EACnC,IAAQ,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;EACjD,IAAQ,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;EACjD,IAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EACvC,IAAQ,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EACvC,IAAQ,OAAO,OAAO,CAAC;EACnB,EAAC;EACD;EACJ;EACA;EACA;EACA;6BACI,kCAAW,MAAM,EAAE;EACvB,IAAQA,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,IAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EACnD,IAAQA,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;EAC5C,IAAQA,IAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;EAC3C,IAAQA,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAQA,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC;EACrE,IAAQA,IAAM,IAAI,GAAG,IAAI,SAAS,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;EACrE,IAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;EAC9G,IAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACpC,EAAC;EACD;EACJ;EACA;EACA;EACA;EACA;6BACI,8CAAiB,MAAM,EAAE,QAAQ,EAAE;;;EACvC,IAAQA,IAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;EAC5C,IAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;EAC7C,QAAY,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;EAC3C,YAAgB,IAAI,CAAC,MAAM,GAAG,IAAI4D,OAAM,CAAC,SAAS,CAAC,CAAC;EACpD,SAAa;EACb,QAAY5D,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;EACvD,QAAYA,IAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;EAChD,QAAYA,IAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC;EAC/C,QAAYA,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;EAC7C,QAAYA,IAAM,GAAG,GAAG;EACxB,YAAgB,IAAI,EAAE;EACtB,gBAAoB,SAAS,EAAE,SAAS;EACxC,gBAAoB,UAAU,EAAE,UAAU;EAC1C,gBAAoB,SAAS,EAAE,SAAS;EACxC,aAAiB;EACjB,YAAgB,MAAM,EAAE,CAAC;EACzB,SAAa,CAAC;EACd,QAAYA,IAAM,YAAY,GAAG;EACjC,YAAgB,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,MAAM;EACrE,SAAa,CAAC;EACd,QAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,YAAG,CAAC,EAAK;EACvD,YAAgB,QAAQ,CAACa,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D,SAAa,YAAG,CAAC,EAAK;EACtB,YAAgB,OAAO,CAAC,IAAI,CAAC,iEAAiE,EAAE,CAAC,CAAC,CAAC;EACnG,YAAgBA,MAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;EACxC,YAAgBA,MAAI,CAAC,MAAM,GAAG,SAAS,CAAC;EACxC,YAAgBb,IAAM,OAAO,GAAGa,MAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACnD,YAAgB,QAAQ,CAAC,OAAO,CAAC,CAAC;EAClC,SAAa,CAAC,CAAC;EACf,KAAS;EACT,SAAa;EACb,QAAYb,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAC/C,QAAY,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC9B,KAAS;EACL,EAAC;EACD;EACJ;EACA;EACA;6BACI,8BAAU;EACd,IAAQ,IAAI,IAAI,CAAC,MAAM;EACvB,UAAY,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAC;EAChC,EACH;;ECxHD;EACA;EACA;EACA;EACA;AACA,EAUA;EACA;EACA;EACA,IAAM,8BAA8B;MAChC,uCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;;;EAC3C,QAAQW,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;EAC9B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,OAAO,EAAE,IAAI;EAC7B,gBAAgB,OAAO,EAAE;EACzB,oBAAoB,KAAK,EAAE,KAAK;EAChC,oBAAoB,KAAK,EAAE,KAAK;EAChC,oBAAoB,IAAI,EAAE,IAAI;EAC9B,oBAAoB,KAAK,EAAE,KAAK;EAChC,oBAAoB,IAAI,EAAE,IAAI;EAC9B,iBAAiB;EACjB,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,SAAS,EAAE,CAAC;EAC5B,gBAAgB,GAAG,EAAE,EAAE;EACvB,gBAAgB,GAAG,EAAE,CAAC;EACtB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,SAAS;EAC/B,gBAAgB,SAAS,EAAE,CAAC;EAC5B,gBAAgB,GAAG,EAAE,EAAE;EACvB,gBAAgB,GAAG,EAAE,CAAC;EACtB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,SAAS,EAAE,CAAC;EAC5B,gBAAgB,GAAG,EAAE,CAAC;EACtB,gBAAgB,GAAG,EAAE,CAAC;EACtB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,gBAAgB,SAAS,EAAE,CAAC;EAC5B,gBAAgB,GAAG,EAAE,EAAE;EACvB,gBAAgB,GAAG,EAAE,CAAC;EACtB,gBAAgB,OAAO,EAAE,IAAI;EAC7B,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;EAC3C,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,QAAQ;EAC9B,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,MAAM,EAAE,IAAI;EACxB,YAAY,KAAK,EAAE,IAAI;EACvB,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;EAC7B;EACA,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,aAAO;EACnD,YAAYE,MAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;EAC1C,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;EACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;4FAAK;EACL,6CAAI,sBAAK,MAAM,EAAE;EACjB,QAAQb,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;EAC3D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxD,QAAQ,CAAC,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;EAC5D,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EACzD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAC5C,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAC9C,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;EACvD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;EAC9D,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;EACrD,QAAQW,oCAAK,CAAC,SAAI,OAAC,MAAM,CAAC,CAAC;EAC3B,MAAK;EACL,6CAAI,oCAAY,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE;EACpC,QAAQV,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACtC,QAAQ,IAAI,CAAC,IAAI,EAAE;EACnB,YAAY,IAAI,GAAG,EAAE,CAAC;EACtB,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EACtC,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;EACnE,YAAY,IAAI,IAAI,CAAC,UAAU,EAAE;EACjC,gBAAgBD,IAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5F,gBAAgBA,IAAM,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,IAAIG,aAAO,EAAE,CAAC,CAAC;EAC9E,gBAAgBH,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;EACtE,gBAAgBA,IAAM,QAAQ,GAAG,KAAK,CAAC,qBAAqB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;EACrG,gBAAgB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,KAAK,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;EAClH,gBAAgB,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;EAC3C,oBAAoB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChC,oBAAoB,OAAO;EAC3B,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;EAC/C,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;EACvD,YAAYA,IAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;EAC9C,YAAYA,IAAM,eAAe,aAAI,OAAO,EAAK;EACjD,gBAAgB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACvC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5B,aAAa,CAAC;EACd,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;EAChC,gBAAgB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;EAClE,aAAa;EACb,iBAAiB;EACjB,gBAAgB,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,aAAa;EACb,SAAS;EACT,aAAa;EACb,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxB,SAAS;EACT,MAAK;EACL,6CAAI,4BAAQ,QAAQ,EAAE;;;EACtB,QAAQ,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM;EAC3E,YAAY,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE;EAC9E,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,WAAE,IAAI,EAAK;EAC9C,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;EAC1C,oBAAoB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;EAC3C,iBAAiB;EACjB,aAAa,CAAC,CAAC;EACf,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EACvC,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,CAAC,EAAE;EAChD,YAAY,QAAQ,EAAE,CAAC;EACvB,YAAY,OAAO;EACnB,SAAS;EACT,QAAQA,IAAM,KAAK,eAAS;EAC5B,YAAYa,MAAI,CAAC,MAAM,GAAGA,MAAI,CAAC,SAAS,CAAC,MAAM,CAAC;EAChD,YAAYA,MAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAACA,MAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;EAC3E,YAAYA,MAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;EAC3C,YAAY,QAAQ,EAAE,CAAC;EACvB,SAAS,CAAC;EACV,QAAQb,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;EACxF,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EACzD,QAAQ,IAAI,QAAQ,EAAE;EACtB,YAAY,QAAQ,CAAC,QAAQ,CAAC,OAAO,WAAE,IAAI,EAAE,CAAC,EAAK;EACnD,gBAAgBA,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAACa,MAAI,CAAC,aAAa,CAAC,CAAC;EAC/D,gBAAgBA,MAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,YAAG,EAAE,EAAK;EACnD,oBAAoB,IAAI,EAAE,KAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;EAC3D,0BAAwB,KAAK,EAAE,GAAC;EAChC,iBAAiB,CAAC,CAAC;EACnB,aAAa,CAAC,CAAC;EACf,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;EAC3D,SAAS;EACT,MAAK;EACL,6CAAI,kCAAW,KAAK,EAAE,CAAC,EAAE;EACzB,QAAQb,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACxC,QAAQA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;EACrC,QAAQ,IAAI,CAAC,OAAO,EAAE;EACtB;EACA,YAAY,OAAO;EACnB,SAAS;EACT,QAAQA,IAAM,WAAW,GAAG;EAC5B,YAAY,QAAQ,EAAE,OAAO,CAAC,WAAW,EAAE;EAC3C,YAAY,KAAK,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;EAC1D,YAAY,KAAK,EAAE,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;EACnE,SAAS,CAAC;EACV,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;EAC7B,YAAYA,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC;EACtF,gBAAgB,SAAS,EAAE,KAAK;EAChC,aAAa,CAAC,CAAC,CAAC;EAChB,YAAY,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC3C,SAAS;EACT,aAAa;EACb,YAAY,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;EACvC,gBAAgB,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE;EAC3C,gBAAgB,OAAO,EAAE,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;EACjE,aAAa,CAAC,CAAC;EACf,YAAYA,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC;EACtF,gBAAgB,UAAU,EAAE,IAAI,CAAC,UAAU;EAC3C,gBAAgB,UAAU,EAAE,IAAI,CAAC,UAAU;EAC3C,gBAAgB,YAAY,EAAE,KAAK;EACnC,aAAa,CAAC,CAAC,CAAC;EAChB,YAAY,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,IAAI,QAAQ,EAAE;EACzD,gBAAgBA,IAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,aAAa,CAAC,CAAC;EAC/E,gBAAgB,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;EACnD,aAAa;EACb,iBAAiB;EACjB,gBAAgB,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC/C,aAAa;EACb,SAAS;EACT,QAAQ,OAAO,cAAE,UAAU,QAAE,IAAI,EAAE,CAAC;EACpC,MAAK;EACL,6CAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQA,IAAM,WAAW,GAAG,EAAE,CAAC;EAC/B,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;EAC1C,YAAY,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;EAC1C,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;EACzB,YAAY,OAAO;EACnB,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAY,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAClF,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAY,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EAChG,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;EACtD,MAAK;EACL,6CAAI,wCAAc,MAAM,EAAE,IAAS,EAAE,OAAO,EAAE;qCAAhB,GAAG;;EACjC,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE;EACzC,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAC9B,SAAS;EACT,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,SAAS,EAAE;EACxD,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAC9B,SAAS;EACT;EACA,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;EAC9G,YAAY,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;EACrC,SAAS;EACT,QAAQW,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,OAAO,IAAI,CAAC;EACpB,MAAK;EACL,6CAAI,8CAAiB,MAAW,EAAE;yCAAP,GAAG;;EAC9B,QAAQX,IAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;EAChC,YAAY,IAAI,EAAE,IAAI,CAAC,WAAW;EAClC,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;EAChD,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM;EAC/B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE;EAChD,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,OAAO,CAAC,CAAC;EACjB,MAAK;EACL,6CAAI,4CAAiB;EACrB,QAAQA,IAAM,CAAC,GAAGW,oCAAK,CAAC,mBAAc,KAAC,CAAC,CAAC;EACzC,QAAQ,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;EACpC,QAAQ,OAAO,CAAC,CAAC;EACjB,MAAK;EACL,6CAAI,0CAAgB;EACpB,QAAQ,OAAO,CAAC,CAAC;EACjB,MAAK;EACL,6CAAI,0BAAQ;EACZ,QAAQA,oCAAK,CAAC,UAAK,KAAC,CAAC,CAAC;EACtB,MAAK;EACL,6CAAI,8BAAU;EACd,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,WAAE,IAAI,EAAK;EAC1C,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;EACtC,gBAAgB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;EACvC,aAAa;EACb,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;EACnC,QAAQA,oCAAK,CAAC,YAAO,KAAC,CAAC,CAAC;EACxB;;;IAvQ6C,0BAwQ5C;EACD,sBAAsB,CAAC,GAAG,CAAC,SAAS,EAAE,8BAA8B,CAAC,CAAC;;EC3RtE;EACA;EACA;EACA;EACA;AACA,EAIA;EACA;EACA;EACA,IAAM,mBAAmB;MACrB,4BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EAC5E,aAAa;EACb,YAAY,eAAe,EAAE;EAC7B,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,aAAa,EAAE;EAC3B,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,SAAS,EAAE;EACvB,gBAAgB,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EACxE,aAAa;EACb,YAAY,gBAAgB,EAAE;EAC9B,gBAAgB,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;EAC7C,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;EACxE,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;sEAAK;EACL,kCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;EAC9D,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;EACpE,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACtD,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,kCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;EAClE,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACnE,QAAQ,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC;EACzE,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,aAAa,EAAE,IAAI,CAAC,aAAa;EAC7C,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;EACnD,YAAY,UAAU,EAAE,IAAI,CAAC,UAAU;EACvC,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,CAAC,WAAW,CAAC;EACrC,SAAS,CAAC;EACV,MAAK;EACL,kCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACxE,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;EAC3B,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;EACtE,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;EAChE,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;EACpD,MAAK;EACL,kCAAI,0CAAgB;EACpB,QAAQ,OAAO,GAAG,CAAC;EACnB;;;IA5EkC,0BA6EjC;EACD,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;;;;EC1FzD;EACA;EACA;EACA;EACA;AACA,EAKAX,IAAMoH,aAAW,GAAG,IAAI,WAAW,CAAC;EACpC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;EACX,CAAC,CAAC,CAAC;EACH,SAASC,SAAO,CAAC,IAAI,EAAE;EACvB,IAAIrH,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;EAC7C,IAAIA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACrB,IAAIA,IAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACrB,IAAI,OAAO,CAAC,CAAC;EACb,CAAC;EACD;EACA;EACA;EACA,IAAM,YAAY;MAWd,qBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,kBAAK,OAAC;EACd,YAAY,QAAQ,EAAE,IAAI,YAAY,CAAC0G,SAAO,CAAC,IAAI,CAAC,CAAC;EACrD,YAAY,KAAK,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;EAClD,YAAY,KAAK,EAAE,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,EAAEA,SAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACjE,YAAY,MAAM,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;EACnD,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;EAC1C,QAAQrH,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;EACjD,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,CAAC,aAAa,CAAC;EAC3B,YAAY,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;EAC7D,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,aAAa,CAAC;EAC3B,YAAY,MAAM,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE;EAC9D,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;EAC1C,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;EACzB;;;;wDAAK;EACL,2BAAI,wCAAc,IAAS,EAAE;qCAAP,GAAG;;EACzB,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,QAAQA,IAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACpD,QAAQC,IAAI,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,WAAW,CAAC;EAC5D,QAAQA,IAAI,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,CAAC;EAClE,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;EACrC,YAAY,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;EAClD,YAAY,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACnD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;EACzB,YAAY,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EACjC,YAAY,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;EAC9C,YAAY,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;EACjD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;EACvB,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;EAC7B,YAAY,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;EAC1C,YAAY,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;EAC/C,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE;EACtB,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;EAC3B,YAAY,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;EACxC,YAAY,UAAU,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;EAC9C,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC/B,YAAY,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;EAC5C,YAAY,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;EAChD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;EAC9B,YAAY,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;EAC3C,YAAY,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC;EACxD,YAAY,UAAU,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;EACtD,SAAS;EACT,QAAQA,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC9B,QAAQA,IAAI,QAAQ,CAAC;EACrB,QAAQA,IAAI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;EAC7C,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACvB,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1B,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,YAAY,IAAI,QAAQ,EAAE;EAC1B,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;EAC/D,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACvE,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACvE,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACvE,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACxE,gBAAgB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACxE,aAAa;EACb,YAAY,IAAI,MAAM,EAAE;EACxB,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;EAC1D,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClE,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClE,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClE,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACnE,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACnE,aAAa;EACb,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9B,gBAAgB,IAAI,KAAK,EAAE;EAC3B,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;EAC1C,oBAAoB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClD,oBAAoB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAClD,iBAAiB;EACjB,gBAAgB,IAAI,WAAW,EAAE;EACjC,oBAAoB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;EACzD,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,IAAI,EAAE;EACtB,gBAAgB,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACnC,gBAAgB,IAAI,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;EAC1C,oBAAoB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;EACxC,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;EACxC,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,oBAAoB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;EAC5C,iBAAiB;EACjB,gBAAgB,QAAQ,GAAG,QAAQ,CAAC;EACpC,aAAa;EACb,YAAY,IAAI,GAAG,EAAE;EACrB,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;EAClC,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACvC,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC3C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC3C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,gBAAgB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC3C,gBAAgB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5C,gBAAgB,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC5C,aAAa;EACb,SAAS;EACT,MAAK;EACL,2BAAI,kCAAY;EAChB,QAAQD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;EAC/C,QAAQ,IAAI,CAAC,KAAK,EAAE;EACpB,YAAY,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;EACvC,YAAY,OAAO;EACnB,SAAS;EACT,QAAQA,IAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;EACtC,QAAQA,IAAM,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3C,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,YAAYD,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAYA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7B,YAAY,SAAS,CAAC,GAAG,CAACoH,aAAW,EAAE,EAAE,CAAC,CAAC;EAC3C,YAAY,KAAKnH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACxC,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;EACxC,aAAa;EACb,SAAS;EACT;;;IAvJ2B,aAwJ1B;;EC/KD;EACA;EACA;EACA;EACA;AACA,EAKA;EACA;EACA;EACA,IAAM,oBAAoB;MACtB,6BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQU,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;EAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC/D,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAChE,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,SAAS,EAAE,IAAI;EAC3B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;wEAAK;EACL,mCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EAC7D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxD,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxD,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;EACjC,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,EAAE;EACzC,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,EAAE;EACvC,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EAC7B,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAChD,SAAS;EACT,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAC1D,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,mCAAI,4CAAgB,MAAM,EAAE;EAC5B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC;EAC7B,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM;EAC/B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,WAAW,EAAE,IAAI;EAC7B,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,MAAK;EACL,mCAAI,wCAAc,IAAI,EAAE;EACxB,QAAQ,OAAO,IAAI,CAAC,OAAO,EAAE,GAAGA,oCAAK,CAAC,kBAAa,OAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9D,MAAK;EACL,mCAAI,kCAAW,KAAK,EAAE;;;EACtB,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;EAC7B,QAAQ,IAAI,CAAC,SAAS,CAAC,WAAW,WAAC,SAAW;EAC9C,YAAY,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC;EACxC,kBAAgB,SAAO;EACvB,YAAY,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACtC,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAEE,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACrE,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;EACxD,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;EAC3D,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAACA,MAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAC1E,YAAY,IAAI,OAAO,GAAG,MAAM,CAAC,oBAAoB,EAAE,CAAC;EACxD,YAAY,IAAI,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAACA,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EAC3E,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,YAAY,EAAE;EAC9C,gBAAgB,QAAQ,EAAE,MAAM,CAAC,QAAQ;EACzC,gBAAgB,MAAM,EAAE,MAAM,CAAC,QAAQ;EACvC,gBAAgB,GAAG,EAAE,MAAM,CAAC,MAAM;EAClC,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;EACnC,gBAAgB,IAAI,EAAE,OAAO,CAAC,IAAI;EAClC,gBAAgB,OAAO,EAAE,OAAO,CAAC,OAAO;EACxC,aAAa,GAAGA,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;EACzC,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;EACjC,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,UAAU;EAClC,YAAY,WAAW,EAAE,WAAW;EACpC,SAAS,CAAC;EACV,MAAK;EACL,mCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAC1B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;EACxC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,IAAI,UAAU,GAAG,EAAE,CAAC;EAChC,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACjF,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC/B,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;EAC5D,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;EAC/D,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EAC1C,oBAAoB,QAAQ,EAAE,MAAM,CAAC,QAAQ;EAC7C,oBAAoB,MAAM,EAAE,MAAM,CAAC,QAAQ;EAC3C,oBAAoB,GAAG,EAAE,MAAM,CAAC,MAAM;EACtC,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;EAC3C,gBAAgB,IAAI,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EAC/E,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;EAClE,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;EAC5B,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAC9E,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EACnE,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACzD,SAAS;EACT,MAAK;EACL,mCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;EACtC,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;EACpD,SAAS;EACT,QAAQF,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IApHmC,0BAqHlC;EACD,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;;ECnI3D;EACA;EACA;EACA;EACA;AACA,EAMA;EACA;EACA;EACA,IAAM,oBAAoB;MAEtB,6BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;EAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAChE,aAAa;EACb,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC5E,aAAa;EACb,YAAY,QAAQ,EAAE;EACtB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,eAAe,EAAE,IAAI;EACjC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B;EACA,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;wEAAK;EACL,mCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQV,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;EAC1D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACnD,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;EACnD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;EACtD,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;EACpD,QAAQU,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,mCAAI,kCAAW,KAAK,EAAE;;;EACtB,QAAQV,IAAI,MAAM,GAAG,CAAC,CAAC;EACvB,QAAQD,IAAM,QAAQ,GAAG,EAAE,CAAC;EAC5B,QAAQA,IAAM,eAAe,GAAG,EAAE,CAAC;EACnC,QAAQ,IAAI,CAAC,SAAS,CAAC,WAAW,WAAC,SAAW;EAC9C,YAAY,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,EAAE;EAC/D,kBAAgB,SAAO;EACvB,YAAYA,IAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;EACzD,YAAYA,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAACa,MAAI,CAAC,UAAU,EAAEA,MAAI,CAAC,UAAU,EAAEA,MAAI,CAAC,QAAQ,EAAEA,MAAI,CAAC,cAAc,EAAE,EAAEA,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EAC7I,YAAY,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EACvC,YAAY,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChC,YAAY,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC9C,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;EACjC,QAAQb,IAAM,QAAQ,GAAG;EACzB,YAAY,KAAK,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC/C,YAAY,GAAG,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC7C,YAAY,IAAI,EAAE,IAAI,YAAY,CAAC,MAAM,CAAC;EAC1C,YAAY,KAAK,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC/C,YAAY,OAAO,EAAE,EAAE;EACvB,SAAS,CAAC;EACV,QAAQC,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;EAC/C,QAAQA,IAAI,MAAM,GAAG,CAAC,CAAC;EACvB,QAAQ,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;EACzC,YAAY,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,YAAY,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;EACnD,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EACjD,YAAY,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;EACvD,YAAY,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EACpD,YAAY,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EACvC,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,MAAM,EAAE;EACpB,YAAY,QAAQ,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;EAC7E,SAAS;EACT,QAAQD,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC;EAClD,YAAY,SAAS,EAAE,QAAQ,CAAC,KAAK;EACrC,YAAY,SAAS,EAAE,QAAQ,CAAC,GAAG;EACnC,YAAY,KAAK,EAAE,QAAQ,CAAC,KAAK;EACjC,YAAY,MAAM,EAAE,QAAQ,CAAC,KAAK;EAClC,YAAY,MAAM,EAAE,QAAQ,CAAC,IAAI;EACjC,YAAY,OAAO,EAAE,QAAQ,CAAC,OAAO;EACrC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC;EAChC,YAAY,SAAS,EAAE,IAAI,CAAC,SAAS;EACrC,YAAY,cAAc,EAAE,IAAI,CAAC,cAAc;EAC/C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,CAAC,cAAc,CAAC;EACxC,YAAY,QAAQ,EAAE,QAAQ;EAC9B,YAAY,eAAe,EAAE,eAAe;EAC5C,YAAY,QAAQ,EAAE,QAAQ;EAC9B,SAAS,CAAC;EACV,MAAK;EACL,mCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;;;EAC3B,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAC1B,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;EACzB,YAAY,OAAO;EACnB,SAAS;EACT,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;EACvC,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;EAC3B,YAAY,IAAI,CAAC,eAAe,CAAC,OAAO,WAAE,WAAW,EAAK;EAC1D,gBAAgB,IAAI,IAAI,GAAG,WAAW,CAAC,OAAO,CAACa,MAAI,CAAC,UAAU,EAAEA,MAAI,CAAC,UAAU,EAAEA,MAAI,CAAC,QAAQ,EAAEA,MAAI,CAAC,cAAc,EAAE,EAAEA,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EAC/I,gBAAgB,IAAI,IAAI,CAAC,KAAK,EAAE;EAChC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;EACpE,iBAAiB;EACjB,gBAAgB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;EAC/C,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;EAC9D,iBAAiB;EACjB,gBAAgB,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;EAC3C,aAAa,CAAC,CAAC;EACf,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;EAC5B,gBAAgB,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EAC5C,oBAAoB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;EAC9C,oBAAoB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;EAC/C,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;EAC3C,gBAAgB,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EAC5C,oBAAoB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;EAC9C,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;EACvD;;;IAvHmC,0BAwHlC;EACD,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;;ECvI3D;EACA;EACA;EACA;EACA;AACA,EAKA;EACA;EACA;EACA,IAAM,kBAAkB;MACpB,2BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQF,6BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC/D,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,WAAW,EAAE,IAAI;EAC7B,YAAY,WAAW,EAAE,IAAI;EAC7B,SAAS,CAAC,CAAC;EACX;;;;oEAAK;EACL,iCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAC7C,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;EAC9B,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAC5C,QAAQA,kCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,iCAAI,gCAAU,OAAO,EAAE;EACvB,QAAQ,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;EACnD,QAAQ,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC;EACxD,YAAY,WAAW,EAAE,KAAK;EAC9B,YAAY,gBAAgB,EAAE,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;EACxE,SAAS,CAAC,CAAC,CAAC;EACZ;;;IA5BiC,wBA6BhC;EACD,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;;EC3CvD;EACA;EACA;EACA;EACA;AACA,EAIA;EACA;EACA;EACA,IAAM,uBAAuB;MACzB,gCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;EAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,eAAe,EAAE,IAAI;EACjC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;8EAAK;EACL,sCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,sCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;EAC1G,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,CAAC,YAAY,CAAC;EACtC,SAAS,CAAC;EACV,MAAK;EACL,sCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACxE,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;EACvE,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;EACjE,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;EACnE,SAAS;EACT,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACrD;;;IAtCsC,0BAuCrC;EACD,sBAAsB,CAAC,GAAG,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC;;ECpDjE;EACA;EACA;EACA;EACA;AACA,EAIA,SAAS0G,SAAO,CAAC,IAAI,EAAE;EACvB,IAAIrH,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;EACvC,IAAIA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACrB,IAAI,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,CAAC;EACD;EACA;EACA;EACA,IAAM,WAAW;MAOb,oBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,cAAK,OAAC;EACd,YAAY,QAAQ,EAAE,IAAI,YAAY,CAAC0G,SAAO,CAAC,IAAI,CAAC,CAAC;EACrD,YAAY,KAAK,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;EAClD,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;EAC3B,QAAQ,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;EACxC,QAAQ,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC;EAC1C,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACjC;;;;sDAAK;EACL,0BAAI,wCAAc,IAAI,EAAE;EACxB,QAAQpH,IAAI,QAAQ,EAAE,KAAK,CAAC;EAC5B,QAAQA,IAAI,YAAY,EAAE,SAAS,CAAC;EACpC,QAAQD,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;EACpD,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC3B,YAAY,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;EACrC,YAAY,YAAY,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;EACrD,YAAY,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;EACnD,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC/B,YAAY,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;EAC/C,YAAY,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;EAChD,SAAS;EACT,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,GAAG,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;EACpE,YAAY,OAAO;EACnB,SAAS;EACT,QAAQC,IAAI,CAAC,EAAE,EAAE,CAAC;EAClB,QAAQD,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;EAC5B,QAAQA,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACzB,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACrC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACtB,YAAY,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3B,YAAY,IAAI,QAAQ,EAAE;EAC1B,gBAAgB,YAAY,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/C,gBAAgB,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,gBAAgB,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,aAAa;EACb,YAAY,IAAI,KAAK,EAAE;EACvB,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,aAAa;EACb,SAAS;EACT;;;IA1D0B,SA2DzB;;EC5ED;EACA;EACA;EACA;EACA;AACA,EAKA;EACA;EACA;EACA,IAAM,mBAAmB;MACrB,4BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQU,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,MAAM,EAAE;EACpB,gBAAgB,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;EAC/D,aAAa;EACb,YAAY,OAAO,EAAE;EACrB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EAChE,aAAa;EACb,YAAY,WAAW,EAAE;EACzB,gBAAgB,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;EAC9C,aAAa;EACb,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,IAAI,EAAE,IAAI;EACtB,YAAY,SAAS,EAAE,IAAI;EAC3B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;sEAAK;EACL,kCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EAC7D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;EACjC,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,EAAE;EACzC,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5B,SAAS;EACT,aAAa,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,EAAE;EACvC,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EAC7B,SAAS;EACT,aAAa;EACb,YAAY,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;EAChD,SAAS;EACT,QAAQ,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAChD,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;EAC1D,QAAQA,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,kCAAI,4CAAgB,MAAM,EAAE;EAC5B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC;EAC7B,YAAY,MAAM,EAAE,IAAI,CAAC,MAAM;EAC/B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,YAAY,WAAW,EAAE,KAAK;EAC9B,YAAY,WAAW,EAAE,IAAI,CAAC,WAAW;EACzC,SAAS,EAAE,MAAM,CAAC,CAAC;EACnB,MAAK;EACL,kCAAI,wCAAc,IAAI,EAAE;EACxB,QAAQ,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;EACxC,MAAK;EACL,kCAAI,kCAAW,KAAK,EAAE;;;EACtB,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;EAC7B,QAAQ,IAAI,CAAC,SAAS,CAAC,WAAW,WAAC,SAAW;EAC9C,YAAY,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC;EACxC,kBAAgB,SAAO;EACvB,YAAY,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACtC,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAEE,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACrE,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;EACxD,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAACA,MAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAC1E,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,EAAEA,MAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;EACxG,SAAS,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;EACjC,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,UAAU;EAClC,YAAY,WAAW,EAAE,WAAW;EACpC,SAAS,CAAC;EACV,MAAK;EACL,kCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;EAC1B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;EACxC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,IAAI,UAAU,GAAG,EAAE,CAAC;EAChC,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;EACjF,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;EAC/B,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;EAC5D,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;EACzE,aAAa;EACb,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;EAC5B,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAC9E,gBAAgB,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EACnE,aAAa;EACb,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACzD,SAAS;EACT,MAAK;EACL,kCAAI,wCAAc,MAAM,EAAE;EAC1B,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;EACtC,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;EACpD,SAAS;EACT,QAAQF,oCAAK,CAAC,kBAAa,OAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;EACnD,QAAQ,OAAO,IAAI,CAAC;EACpB;;;IA/FkC,0BAgGjC;EACD,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;;EC9GzD;EACA;EACA;EACA;EACA;AACA,EAGA;EACA;EACA;EACA,IAAM,kBAAkB;MACpB,2BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,6BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;EACpF;;;;oEAAK;EACL,iCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQ,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;EAC5B,QAAQ,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;EACjC,YAAY,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;EACpC,SAAS;EACT,QAAQA,kCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,iCAAI,2DAA+B;EACnC,QAAQ,OAAOA,kCAAK,CAAC,oBAAe,OAAC;EACrC,YAAY,WAAW,EAAE,KAAK;EAC9B,SAAS,CAAC,CAAC;EACX;;;IAnBiC,wBAoBhC;EACD,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;;EChCvD;EACA;EACA;EACA;EACA;AACA,EAKA;EACA;EACA;EACA,IAAM,sBAAsB;MACxB,+BAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQA,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;EAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,YAAY,UAAU,EAAE;EACxB,gBAAgB,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK;EACnE,aAAa;EACb,YAAY,YAAY,EAAE,IAAI;EAC9B,YAAY,cAAc,EAAE,IAAI;EAChC,YAAY,eAAe,EAAE,IAAI;EACjC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE;EAC5B,YAAY,QAAQ,EAAE,IAAI;EAC1B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;4EAAK;EACL,qCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQC,IAAI,aAAa,GAAG,GAAG,CAAC;EAChC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;EACrC,YAAY,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;EAC5E,SAAS;EACT,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;EAC7D,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACxD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQU,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,qCAAI,4CAAgB,SAAS,EAAE;EAC/B,QAAQ,OAAO,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACrD,MAAK;EACL,qCAAI,4BAAS;EACb,QAAQX,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;EAC5D,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ;EAC/B,cAAY,SAAO;EACnB,QAAQA,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;EAC7D,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC;EACvF,YAAY,YAAY,EAAE,IAAI,CAAC,YAAY;EAC3C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC;EACzF,YAAY,SAAS,EAAE,IAAI;EAC3B,YAAY,cAAc,EAAE,IAAI,CAAC,cAAc;EAC/C,YAAY,eAAe,EAAE,IAAI,CAAC,eAAe;EACjD,YAAY,YAAY,EAAE,IAAI;EAC9B,SAAS,CAAC,CAAC,CAAC;EACZ,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC3B,YAAY,KAAK,EAAE,IAAI,CAAC,aAAa;EACrC,YAAY,UAAU,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;EAChE,SAAS,CAAC,CAAC;EACX,MAAK;EACL,qCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,OAAO;EACf,MAAK;EACL,qCAAI,kCAAW,IAAI,EAAE,IAAI,EAAE;EAC3B,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;EACpD,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ;EAC/B,cAAY,SAAO;EACnB,QAAQA,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;EAC7D,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,YAAY,GAAG,EAAE,CAAC;EAChC,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACpC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;EAClF,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS;EACtD,gBAAgB,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS;EACtD,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;EACjC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;EAC5E,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;EACxC,gBAAgB,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK;EAC9C,gBAAgB,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM;EAChD,aAAa,CAAC,CAAC;EACf,SAAS;EACT,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;EAClC,YAAY,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;EAC9E,YAAY,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;EAC9E,SAAS;EACT,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;EACpD,QAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;EACxD;;;IAjFqC,0BAkFpC;EACD,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAAC;;EChG/D;EACA;EACA;EACA;EACA;AACA,EAIA;EACA;EACA;EACA,IAAM,wBAAwB;MAC1B,iCAAW,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;EAC3C,QAAQW,+BAAK,OAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;EACjC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE;EAC7D,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,UAAU,EAAE,IAAI;EAC5B,YAAY,WAAW,EAAE,IAAI;EAC7B,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC1B;;;;gFAAK;EACL,uCAAI,sBAAK,MAAM,EAAE;EACjB,QAAQX,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQ,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;EACzD,QAAQ,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;EAChE,QAAQW,oCAAK,CAAC,SAAI,OAAC,CAAC,CAAC,CAAC;EACtB,MAAK;EACL,uCAAI,kCAAW,KAAK,EAAE;EACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU;EAC7B,cAAY,SAAO;EACnB,QAAQX,IAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;EACxD,YAAY,SAAS,EAAE,KAAK;EAC5B,YAAY,KAAK,EAAE,IAAI,CAAC,UAAU;EAClC,SAAS,CAAC,CAAC;EACX,QAAQA,IAAM,cAAc,GAAG,IAAI,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACzG,QAAQ,OAAO;EACf,YAAY,UAAU,EAAE,CAAC,cAAc,CAAC;EACxC,SAAS,CAAC;EACV;;;IA5BuC,0BA6BtC;EACD,sBAAsB,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAwB,CAAC,CAAC;;EC1CnE;EACA;EACA;EACA;EACA;AACA,EAMAA,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,EAAE,CAAC;EAC1BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,SAASsH,QAAM,CAAC,MAAW,EAAE;qCAAP,GAAG;;EACzB,IAAIzH,IAAM,GAAG,GAAG,IAAI0H,wBAAkB,CAAC,CAAC;EACxC,IAAI,CAAC;EACL,IAAI,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC;EACvC,IAAI,CAAC;EACL,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC;EACrC,KAAK,CAAC;EACN,IAAI,GAAG,CAAC,YAAY,CAAC,IAAItH,aAAO,EAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EAChE,IAAI,OAAO,GAAG,CAAC;EACf,CAAC;AACD,EAAOJ,IAAM,2BAA2B,GAAG,MAAM,CAAC,MAAM,CAAC;EACzD,IAAI,cAAc,EAAE,EAAE;EACtB,IAAI,SAAS,EAAE,KAAK;EACpB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,UAAU;MAUZ,mBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,sBAAK,OAAC;EACd,YAAY,QAAQ,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;EAC7D,YAAY,KAAK,EAAE,IAAI,CAAC,KAAK;EAC7B,YAAY,OAAO,EAAE,IAAI,CAAC,OAAO;EACjC,SAAS,EAAE,MAAM,EAAE8G,QAAM,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,2BAA2B,CAAC,GAAE;EACnE,yBAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQH,KAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC3C,QAAQC,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC9C,QAAQ,MAAM,CAAC,MAAM,CAACD,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQxH,IAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAClC,QAAQ2G,OAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEW,KAAG,CAAC,UAAU,CAACC,QAAM,CAAC,CAAC,CAAC;EAChD,QAAQ,MAAM,CAAC,KAAK,CAACZ,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,yBAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;EAC9C,YAAY,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;EACjF,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;EAC7C,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;EAC7C,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;EAC3C,SAAS;EACT,QAAQ,IAAI,IAAI,CAAC,MAAM;EACvB,cAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAC;EACvC,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;;;IAvCyB,iBAwCxB;EACD,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;EClFvC;EACA;EACA;EACA;EACA;AACA,EACA,IAAM,aAAa,GACf,sBAAW,CAAC,YAAiB,EAAE;iDAAP,GAAG;;EAC/B,IAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;EACrC,EAAC;0BACD,oDAAqB;;;EACzB,IAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;EAC/B,QAAY,IAAI,CAAC,WAAW,GAAG,IAAIkB,UAAI,EAAE,CAAC;EAC1C,KAAS;EACT,SAAa;EACb,QAAY,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;EACrC,KAAS;EACT,IAAQ,IAAI,CAAC,YAAY,CAAC,OAAO,WAAC,KAAO;EACzC,QAAY,IAAI,CAAC,GAAG,CAAC,WAAW;EAChC,cAAgB,GAAG,CAAC,kBAAkB,EAAE,GAAC;EACzC,QAAYhB,MAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;EACpD,KAAS,CAAC,CAAC;EACP,EACH;;ECvBD;EACA;EACA;EACA;EACA;AACA,EAQOb,IAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;EAC1D,IAAI,WAAW,EAAE,GAAG;EACpB,IAAI,cAAc,EAAE,EAAE;EACtB,IAAI,SAAS,EAAE,KAAK;EACpB,IAAI,eAAe,EAAE,KAAK;EAC1B,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,WAAW,GAUb,oBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;qCAAP,GAAG;;EAC/B,IAAQ,IAAI,CAAC,KAAK,GAAG,IAAIkC,WAAK,EAAE,CAAC;EACjC,IAAQ,IAAI,CAAC,cAAc,GAAG,IAAIA,WAAK,EAAE,CAAC;EAC1C,IAAQ,IAAI,CAAC,YAAY,GAAG,IAAIA,WAAK,EAAE,CAAC;EACxC,IAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;EAC5B,IAAQ,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;EACvE,IAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EACrE,IAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EACnE,IAAQlC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAC/C,IAAQA,IAAM,YAAY,GAAG;EAC7B,QAAY,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc;EAC1D,QAAY,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;EAChD,QAAY,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe;EAC5D,KAAS,CAAC;EACV,IAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;EAC9E,IAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;EAClE,IAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC;EAC1C,QAAY,IAAI,CAAC,cAAc,CAAC,QAAQ;EACxC,QAAY,IAAI,CAAC,UAAU,CAAC,QAAQ;EACpC,KAAS,CAAC,CAAC;EACX;EACA,IAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAII,aAAO,EAAE,CAAC,CAAC;EAC7D,IAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;EAChC;;2IAAC;AACDM,uBAAI,oCAAoB,EAAE,OAAO,4BAA4B,CAAC,GAAE;AAChEA,uBAAI,uBAAO,CAAC,EAAE;EAClB,IAAQ,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EAC7C,EAAC;AACDA,uBAAI,yBAAS;EACjB,IAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;EACrC,EAAC;AACDA,uBAAI,2BAAW;EACnB,IAAQ,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;EAC1B,EAAC;wBACD,0CAAe,IAAS,EAAE;qCAAP,GAAG;;EAC1B,IAAQV,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;EACjD,IAAQA,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;EACnD,IAAQA,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;EACxD,IAAQC,IAAI,CAAC,EAAE,EAAE,CAAC;EAClB,IAAQD,IAAM,QAAQ,GAAG,EAAE,CAAC;EAC5B,IAAQA,IAAM,IAAI,GAAG,EAAE,CAAC;EACxB,IAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;EACzB,QAAY,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACjE,YAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;EACjE,SAAa;EACb,QAAY,QAAQ,CAAC,MAAM,GAAG,cAAc,CAAC;EAC7C,QAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EACtC,KAAS;EACT,IAAQ,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;EAC9C,QAAYA,IAAM,KAAK,GAAG,IAAIG,aAAO,EAAE,CAAC;EACxC,QAAYH,IAAM,GAAG,GAAG,IAAIG,aAAO,EAAE,CAAC;EACtC,QAAYH,IAAM,IAAI,GAAG,IAAIG,aAAO,EAAE,CAAC;EACvC,QAAYH,IAAM,MAAM,GAAG,IAAIG,aAAO,EAAE,CAAC;EACzC,QAAY,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;EACnE,YAAgB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACnD,YAAgB,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACjD,YAAgB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAC5C,YAAgBH,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;EACjD,YAAgBA,IAAM,UAAU,GAAG,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,CAAC;EAC3E,YAAgBA,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;EAChE,YAAgB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;EACvC,YAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAC3C,YAAgB,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;EACjD,SAAa;EACb,QAAY,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;EAChD,QAAY,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC;EAC/C,QAAY,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;EAC3C,QAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;EAC5C,KAAS;EACT,IAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;EACxB,QAAY,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACxC,QAAY,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;EACzC,QAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACpC,KAAS;EACT,IAAQ,OAAO;EACf,QAAY,QAAQ,EAAE,QAAQ;EAC9B,QAAY,IAAI,EAAE,IAAI;EACtB,KAAS,CAAC;EACN,EAAC;wBACD,8BAAU;EACd,IAAQ,OAAO,IAAIkC,WAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;EACrF,EAAC;wBACD,gDAAmB;EACvB,IAAQ,OAAO,IAAIA,WAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;EACvG,EAAC;wBACD,4CAAiB;EACrB,IAAQ,OAAO,IAAIA,WAAK,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;EACnG,EAAC;wBACD,wCAAc,IAAS,EAAE;qCAAP,GAAG;;EACzB,IAAQlC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;EAC/C,IAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EACzD,IAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7C,EAAC;EACD;EACJ;EACA;EACA;EACA;wBACI,wCAAc,MAAW,EAAE;yCAAP,GAAG;;EAC3B,IAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;EAC3C,IAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;EACnD,QAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EACxC,KAAS;EACT,IAAQ,OAAO,MAAM,CAAC,MAAM,CAAC;EAC7B,IAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,EAAE;EACtD,QAAY,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;EACzD,QAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EAC7C,KAAS;EACT,IAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;EAClD,IAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;EAC1C,EAAC;wBACD,wCAAc,KAAK,EAAE;EACzB,IAAQ,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACrD,EAAC;wBACD,8BAAU;EACd,IAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;EACtC,IAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;EAC9B;;yEACH;EACD,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;;EChKzC;EACA;EACA;EACA;EACA;AACA,EAGAA,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,EAAE,CAAC;EACzBH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,SAAS;MACX,kBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQQ,sBAAK,OAAC,IAAI,EAAE,MAAM,EAAE,IAAIgH,uBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5D,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;kDAAK;EACL,wBAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQJ,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;EAC/C,QAAQC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC1C,QAAQ,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQb,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAEa,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAC;EAC/D,QAAQ,MAAM,CAAC,KAAK,CAACZ,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,wBAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,IAAI;EACrB,cAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,UAAU;EAC3B,cAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,GAAC;EAC/C,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;IArBwB,iBAsBvB;EACD,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;EC/CrC;EACA;EACA;EACA;EACA;AACA,EAKAX,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,EAAE,CAAC;EACzBH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,EAAOH,IAAM,gCAAgC,GAAG,MAAM,CAAC,MAAM,CAAC;EAC9D,IAAI,YAAY,EAAE,CAAC;EACnB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,eAAe;MACjB,wBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,sBAAK,OAAC,IAAI,EAAE,MAAM,EAAE,IAAIiF,+BAAyB,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChG,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,gCAAgC,CAAC,GAAE;EACxE,8BAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQ2B,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC9C,QAAQC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC1C,QAAQ,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQb,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAEa,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAC;EACjE,QAAQ,MAAM,CAAC,KAAK,CAACZ,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,8BAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,MAAM;EACvB,cAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAC;EACvC,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;;;IAtB8B,iBAuB7B;EACD,cAAc,CAAC,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;;ECrDjD;EACA;EACA;EACA;EACA;AACA,EAGAX,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,EAAE,CAAC;EACzBH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,gBAAgB;MAClB,yBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQQ,sBAAK,OAAC,IAAI,EAAE,MAAM,EAAE,IAAIiH,8BAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;gEAAK;EACL,+BAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQL,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;EAC/C,QAAQC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC1C,QAAQ,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQb,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAEa,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAC;EAC/D,QAAQ,MAAM,CAAC,KAAK,CAACZ,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,+BAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,IAAI;EACrB,cAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,UAAU;EAC3B,cAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,GAAC;EAC/C,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;IArB+B,iBAsB9B;EACD,cAAc,CAAC,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;;EC/CnD;EACA;EACA;EACA;EACA;AACA,EAGAX,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,EAAE,CAAC;EACzBH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,iBAAiB;MACnB,0BAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQQ,sBAAK,OAAC,IAAI,EAAE,MAAM,EAAE,IAAIkH,+BAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;kEAAK;EACL,gCAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQN,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;EAC/C,QAAQC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC1C,QAAQ,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQb,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAEa,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAC;EAC/D,QAAQ,MAAM,CAAC,KAAK,CAACZ,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,gCAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,IAAI;EACrB,cAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,GAAC;EACnC,QAAQ,IAAI,IAAI,CAAC,UAAU;EAC3B,cAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,GAAC;EAC/C,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;IArBgC,iBAsB/B;EACD,cAAc,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;;EC/CrD;EACA;EACA;EACA;EACA;AACA,EAKAX,IAAM2G,OAAK,GAAG,IAAIxG,aAAO,EAAE,CAAC;EAC5BH,IAAMuH,QAAM,GAAG,IAAIpH,aAAO,EAAE,CAAC;EAC7BH,IAAMwH,IAAE,GAAG,IAAIrH,aAAO,EAAE,CAAC;EACzBH,IAAMsH,KAAG,GAAG,IAAInH,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC,EAAOH,IAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;EAC1D,IAAI,WAAW,EAAE,GAAG;EACpB,IAAI,cAAc,EAAE,EAAE;EACtB,IAAI,eAAe,EAAE,EAAE;EACvB,CAAC,EAAE,uBAAuB,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAM,WAAW;MACb,oBAAW,CAAC,IAAI,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAC/B,QAAQW,sBAAK,OAAC,IAAI,EAAE,MAAM,EAAE,IAAImH,yBAAmB,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACtK,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACvC;;;;;;6EAAK;EACL,IAAI,mBAAI,oCAAoB,EAAE,OAAO,4BAA4B,CAAC,GAAE;EACpE,0BAAI,0DAAuB,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;EAC1C,QAAQP,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC9C,QAAQC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAC1C,QAAQ,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAC;EACvC,QAAQxH,IAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAClC,QAAQ2G,OAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3B,QAAQ,MAAM,CAAC,KAAK,CAACA,OAAK,CAAC,CAAC;EAC5B,MAAK;EACL,0BAAI,wCAAc,IAAS,EAAE,WAAW,EAAE;qCAApB,GAAG;;EACzB,QAAQ,IAAI,IAAI,CAAC,MAAM;EACvB,cAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAC;EACvC,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQ,IAAI,IAAI,CAAC,SAAS;EAC1B,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAC;EAC7C,QAAQhG,2BAAK,CAAC,kBAAa,OAAC,IAAI,EAAE,WAAW,CAAC,CAAC;EAC/C;;;;;IAvB0B,iBAwBzB;EACD,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;;ECxDzC;EACA;EACA;EACA;EACA;AACA,EAEA,IAAM,MAAM,GACR,eAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;EAClC,IAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,IAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;EACjC,IAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EACzC,IAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EACrC;;8LAAC;AACDD,uBAAI,uBAAO,EAAE,OAAO,EAAE,CAAC,GAAE;AACzBA,uBAAI,4BAAY,EAAE,OAAO,EAAE,CAAC,GAAE;AAC9BA,uBAAI,2BAAW,EAAE,OAAO,KAAK,CAAC,GAAE;AAChCA,uBAAI,yBAAS,EAAE,OAAO,KAAK,CAAC,GAAE;AAC9BA,uBAAI,wBAAQ,EAAE,OAAO,KAAK,CAAC,GAAE;mBAC7B,0BAAQ;;;EACZ,IAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,aAAO;EAC/C,QAAYG,MAAI,CAAC,YAAY,EAAE,CAAC;EAChC,QAAYA,MAAI,CAAC,MAAM,EAAE,CAAC;EAC1B,QAAYA,MAAI,CAAC,WAAW,EAAE,CAAC;EAC/B,QAAY,OAAOA,MAAI,CAACA,MAAI,CAAC,SAAS,CAAC,CAAC;EACxC,KAAS,CAAC,CAAC;EACP,EAAC;mBACD,4BAAS,IAAG;mBACZ,wCAAe,IAAG;mBAClB,sCAAc;EAClB,IAAQ,IAAIC,aAAK;EACjB,UAAY,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAC;EACtC;;oEACH;;ECjCD;EACA;EACA;EACA;EACA;AACA,EAIA,IAAM,eAAe;MACjB,wBAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;EAClC,QAAQ,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC7B,QAAQH,cAAK,OAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC3B,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;EAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;EAC5D,QAAQ,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;EAC7D,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACrE;;;;;;kGAAK;EACL,IAAI,mBAAI,uBAAO,EAAE,OAAO,WAAW,CAAC,GAAE;EACtC,IAAI,mBAAI,4BAAY,EAAE,OAAO,WAAW,CAAC;;;;;IAXX,SAY7B;;ECrBD;EACA;EACA;EACA;EACA;AACA,EACA,SAAS,oBAAoB,CAAC,MAAM,EAAE;EACtC,IAAI,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;EAClC,IAAI,QAAQ,MAAM;EAClB,QAAQ,KAAK,SAAS;EACtB,YAAY,OAAO,aAAa,CAAC;EACjC,QAAQ,KAAK,aAAa;EAC1B,YAAY,OAAO,gBAAgB,CAAC;EACpC,QAAQ,KAAK,WAAW;EACxB,YAAY,OAAO,eAAe,CAAC;EACnC,QAAQ,KAAK,OAAO;EACpB,YAAY,OAAO,WAAW,CAAC;EAC/B,QAAQ;EACR,YAAY,OAAO,aAAa,CAAC;EACjC,KAAK;EACL,CAAC;EACD,SAAS,cAAc,CAAC,IAAI,EAAE;EAC9B,IAAI,QAAQ,IAAI;EAChB,QAAQ,KAAK,aAAa;EAC1B,YAAY,OAAO,SAAS,CAAC;EAC7B,QAAQ,KAAK,gBAAgB;EAC7B,YAAY,OAAO,aAAa,CAAC;EACjC,QAAQ,KAAK,eAAe;EAC5B,YAAY,OAAO,WAAW,CAAC;EAC/B,QAAQ,KAAK,WAAW;EACxB,YAAY,OAAO,OAAO,CAAC;EAC3B,QAAQ;EACR,YAAY,OAAO,SAAS,CAAC;EAC7B,KAAK;EACL,CAAC;AACD,EAMA;EACA;EACA;EACe,IAAM,MAAM,GAQvB,eAAW,CAAC,SAAS,EAAE,KAAK,EAAE,WAAgB,EAAE,IAAI,EAAE,cAAmB,EAAE;+CAAlC,GAAG;qDAAwB,GAAG;;EAC3E,IAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EACnC,IAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EAC3B,IAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;EACvC,IAAQ,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;EAC3D,IAAQ,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;EAC7C,IAAQ,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;EAC7C,QAAY,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;EACzD,KAAS,CAAC,CAAC;EACP;;8DAAC;AACDD,uBAAI,uBAAO,EAAE,OAAO,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAE;mBACtD,0CAAgB;EACpB,IAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;EAC3B,EAAC;mBACD,kCAAY;EAChB,IAAQ,OAAO,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC;EAC7C,EAAC;mBACD,wCAAe;EACnB,IAAQ,OAAO,IAAI,CAAC,UAAU,KAAK,gBAAgB,CAAC;EAChD,EAAC;mBACD,sCAAc;EAClB,IAAQ,OAAO,IAAI,CAAC,UAAU,KAAK,eAAe,CAAC;EAC/C,EAAC;mBACD,8BAAU;EACd,IAAQ,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,CAAC;EAC3C,EAAC;mBACD,gCAAU,QAAQ,EAAE;EACxB,IAAQV,IAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;EAClD,IAAQ,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;EACrD,QAAY,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;EAC7B,QAAY,QAAQ,CAAC,EAAE,CAAC,CAAC;EACzB,KAAS,CAAC,CAAC;EACP;;;;ECpFJ;EACA;EACA;EACA;EACA;AACA,EAKAA,IAAM,gBAAgB,GAAG;EACzB,IAAI,CAAC,EAAE,CAAC;EACR,IAAI,CAAC,EAAE,CAAC;EACR,IAAI,CAAC,EAAE,CAAC;EACR,IAAI,KAAK,EAAE,EAAE;EACb,IAAI,IAAI,EAAE,EAAE;EACZ,IAAI,KAAK,EAAE,EAAE;EACb,IAAI,UAAU,EAAE,KAAK;EACrB,CAAC,CAAC;EACF;EACA;EACA;EACA,IAAM,QAAQ,GAcV,iBAAW,CAAC,MAAyB,EAAE;qCAArB,GAAG;;EACzB,IAAQ,IAAI,CAAC,UAAU,GAAG,IAAII,aAAO,EAAE,CAAC;EACxC,IAAQ,IAAI,CAAC,UAAU,GAAG,IAAIA,aAAO,EAAE,CAAC;EACxC,IAAQ,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;EAC1B,IAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;EAClC,IAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;EAChC,IAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;EAClC,IAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;EAC5C,IAAQJ,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC9C,IAAQA,IAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5C,IAAQA,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC9C,IAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC5C,IAAQA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EAC1C,IAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC5C,IAAQA,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EAC1C,IAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAC5C,IAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;EAC/C,QAAY,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ;EACvF,YAAgB,GAAG,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;EACtD,IAAQ,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;EAC7C;EACA,QAAYA,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC;EACrE,QAAYA,IAAM,YAAY,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,KAAK,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;EAC1F,QAAY,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,YAAY,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;EACzL,QAAY,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACxD,KAAS;EACT,SAAa;EACb,QAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;EACpD,QAAY,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACxD,KAAS;EACL,EAAC;qBACD,oCAAY,SAAS,EAAE;EAC3B,IAAQA,IAAM,cAAc,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACvD,IAAQ,IAAI,SAAS,CAAC,QAAQ,EAAE;EAChC,QAAYA,IAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC;EAC1C,QAAYA,IAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;EAC5F,QAAYA,IAAM,CAAC,GAAG,IAAIG,aAAO,EAAE,CAAC;EACpC,QAAYF,IAAI,YAAY,GAAG,CAAC,CAAC;EACjC,QAAYD,IAAM,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;EACjD,YAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9B,iBAAqB,GAAG,CAAC,UAAU,CAAC;EACpC,iBAAqB,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC;EAChD,iBAAqB,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;EAC3D,YAAgB,YAAY,IAAI,CAAC,CAAC;EAClC,SAAa,CAAC;EACd,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,QAAY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,KAAS;EACT,IAAQ,OAAO,cAAc,CAAC;EAC1B,EAAC;qBACD,gCAAU,SAAS,EAAE;EACzB,IAAQ,OAAO,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;EACrD,EAAC;qBACD,4BAAQ,SAAS,EAAE,MAAW,EAAE;yCAAP,GAAG;;EAChC,IAAQA,IAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;EACjE,IAAQA,IAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;EAC7E,IAAQA,IAAM,CAAC,GAAG,IAAIM,WAAK,CAAC,UAAU,CAAC,CAAC;EACxC,IAAQN,IAAM,CAAC,GAAG,IAAIG,aAAO,EAAE,CAAC;EAChC,IAAQH,IAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;EAC3D,IAAQA,IAAM,WAAW,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,IAAQA,IAAM,YAAY,GAAG,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EACrD,IAAQA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EACvD,IAAQA,IAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EACvD,IAAQA,IAAM,SAAS,GAAG,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,IAAQA,IAAM,UAAU,GAAG,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;EACpD,IAAQC,IAAI,UAAU,GAAG,CAAC,CAAC;EAC3B,IAAQ,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;EAC/B,QAAY,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,CAAC;EAC9C,aAAiB,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;EACpD,QAAY,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,CAAC;EAC9C,aAAiB,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;EACpD,QAAY,UAAU,IAAI,CAAC,CAAC;EAC5B,KAAS;EACT,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,IAAQD,IAAM,MAAM,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAC3D,IAAQ,OAAO;EACf,QAAY,MAAM,EAAE;EACpB,YAAgB,QAAQ,EAAE,cAAc;EACxC,YAAgB,KAAK,EAAE,WAAW;EAClC,YAAgB,MAAM,EAAE,YAAY;EACpC,YAAgB,OAAO,EAAE,MAAM;EAC/B,SAAa;EACb,QAAY,IAAI,EAAE;EAClB,YAAgB,SAAS,EAAE,aAAa;EACxC,YAAgB,SAAS,EAAE,aAAa;EACxC,YAAgB,KAAK,EAAE,SAAS;EAChC,YAAgB,MAAM,EAAE,SAAS;EACjC,YAAgB,MAAM,EAAE,UAAU;EAClC,YAAgB,OAAO,EAAE,MAAM;EAC/B,SAAa;EACb,KAAS,CAAC;EACN,EACH;;ECnJD;EACA;EACA;EACA;EACA;AACA,EASA;EACAA,IAAM,UAAU,GAAG;EACnB,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,CAAC,EAAE,GAAG;EACV,IAAI,EAAE,EAAE,GAAG;EACX,IAAI,CAAC,EAAE,GAAG;EACV,CAAC,CAAC;EACFA,IAAM,WAAW,GAAG;EACpB,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT,IAAI,KAAK;EACT;EACA,CAAC,CAAC;EACFA,IAAM,aAAa,GAAG;EACtB,IAAI,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS;EACxD,IAAI,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe;EACnD,CAAC,CAAC;EACFA,IAAM,YAAY,GAAG,KAAK,CAAC;EAC3B,SAAS,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE;EAChD,IAAIC,IAAI,EAAE,GAAG,KAAG,KAAO,CAAC;EACxB,IAAI,IAAI,SAAS;EACjB,UAAQ,EAAE,IAAI,MAAI,SAAW,GAAC;EAC9B,IAAI,IAAI,OAAO;EACf,UAAQ,EAAE,IAAI,MAAI,OAAS,GAAC;EAC5B,IAAI,OAAO,EAAE,CAAC;EACd,CAAC;EACD,IAAM,SAAS;MAUX,kBAAW,CAAC,QAAQ,EAAE,MAAM,EAAE;EAClC,QAAQD,IAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;EAC/B,QAAQW,uBAAK,OAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;EAC3B,QAAQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EAC1C;;;;;;gEAAK;EACL,IAAI,mBAAI,uBAAO,EAAE,OAAO,KAAK,CAAC,GAAE;EAChC,wBAAI,4BAAS;EACb;EACA,QAAQ,IAAIG,aAAK;EACjB,cAAY,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAC;EACtD,QAAQb,IAAI,QAAQ,GAAG,KAAK,CAAC;EAC7B,QAAQD,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,QAAQA,IAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD,QAAQA,IAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD,QAAQ,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE;EACtD,YAAY,QAAQ,GAAG,IAAI,CAAC;EAC5B,SAAS;EACT,QAAQA,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;EAC1C,QAAQA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;EAC9C,QAAQA,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;EACjC,QAAQA,IAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;EACzC,QAAQA,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;EAC7B,QAAQC,IAAI,WAAW,GAAG,EAAE,CAAC;EAC7B,QAAQA,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQD,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;EACnD,QAAQA,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;EAC/C,QAAQA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;EAC3C,QAAQA,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EAChC,QAAQA,IAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;EAC9B,QAAQC,IAAI,QAAQ,GAAG,KAAK,CAAC;EAC7B,QAAQA,IAAI,YAAY,EAAE,YAAY,CAAC;EACvC,QAAQD,IAAM,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;EACxC,QAAQC,IAAI,aAAa,CAAC;EAC1B,QAAQA,IAAI,WAAW,CAAC;EACxB,QAAQA,IAAI,aAAa,CAAC;EAC1B,QAAQA,IAAI,IAAI,EAAE,UAAU,CAAC;EAC7B,QAAQA,IAAI,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC;EACzD,QAAQA,IAAI,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EACvD,QAAQA,IAAI,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC;EAC9C,QAAQA,IAAI,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;EACxC,QAAQA,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQD,IAAM,YAAY,GAAG,EAAE,CAAC;EAChC,QAAQA,IAAM,QAAQ,GAAG,EAAE,CAAC;EAC5B,QAAQA,IAAM,cAAc,GAAG,EAAE,CAAC;EAClC,QAAQC,IAAI,iBAAiB,CAAC;EAC9B,QAAQA,IAAI,gBAAgB,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,QAAQD,IAAM,WAAW,GAAG,EAAE,CAAC;EAC/B,QAAQA,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQA,IAAM,SAAS,GAAG,EAAE,CAAC;EAC7B,QAAQC,IAAI,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;EACxC,QAAQA,IAAI,gBAAgB,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,CAAC;EAC3E,QAAQD,IAAM,UAAU,GAAG,EAAE,CAAC;EAC9B,QAAQC,IAAI,sBAAsB,CAAC;EACnC,QAAQD,IAAM,SAAS,GAAG;EAC1B,YAAY,OAAO,EAAE,EAAE;EACvB,YAAY,MAAM,EAAE,EAAE;EACtB,SAAS,CAAC;EACV,QAAQA,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;EAC1C,QAAQA,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;EACxC,QAAQA,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;EAClC,QAAQA,IAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;EACtC,QAAQ,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;EACrE,QAAQ,IAAI,KAAK,IAAI,OAAO;EAC5B,cAAY,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,GAAC;EAC9D,QAAQ,IAAI,KAAK;EACjB,cAAY,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,GAAC;EACvD,QAAQA,IAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;EACrC,QAAQA,IAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;EACrC,QAAQC,IAAI,GAAG,GAAG,CAAC,CAAC;EACpB,QAAQA,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQA,IAAI,YAAY,GAAG,IAAI,CAAC;EAChC,QAAQ,SAAS,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;;;EACnD,YAAY,KAAKA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC1C,gBAAgB,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,gBAAgB,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/C,gBAAgB,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,QAAQ,EAAE;EACxE;EACA;EACA,oBAAoB,IAAI,YAAY,EAAE;EACtC,wBAAwB,IAAI,YAAY,EAAE;EAC1C,4BAA4B,IAAI,QAAQ,EAAE;EAC1C,gCAAgC,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACrF,gCAAgC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EAC1D,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,YAAY,GAAG,EAAE,CAAC;EAClD,6BAA6B;EAC7B,4BAA4B,YAAY,GAAG,CAAC,CAAC;EAC7C,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,IAAI,CAAC,cAAc;EAC/C,kCAAgC,UAAU,GAAG,EAAE,GAAC;EAChD,yBAAyB;EACzB,wBAAwB,QAAQ,GAAG,CAAC,CAAC;EACrC,wBAAwB,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;EACtD,wBAAwB,QAAQ,GAAG,IAAI,CAAC;EACxC,wBAAwB,YAAY,GAAG,KAAK,CAAC;EAC7C,qBAAqB;EACrB,oBAAoB,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;EACtD,0BAAwB,WAAS;EACjC,oBAAoBA,IAAI,YAAC,EAAE,YAAC,EAAE,YAAC,EAAE,aAAE,EAAE,EAAE,GAAG,CAAC,CAAC;EAC5C,oBAAoB,IAAI,KAAK,EAAE;EAC/B,wBAAwB,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;EACtD,wBAAwB,EAAE,GAAG,EAAE,CAAC,MAAM,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EACtD,wBAAwB,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EACzC,wBAAwB,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;EAC3D,8BAA4B,WAAS;EACrC,wBAAwB,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EACnD,wBAAwB,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EACnD,wBAAwB,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EACnD,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC7D,wBAAwB,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;EAC3D,8BAA4B,WAAS;EACrC,wBAAwB,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3D,wBAAwB,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3D,wBAAwB,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3D,qBAAqB;EACrB,oBAAoB,IAAI,YAAY,EAAE;EACtC,wBAAwBD,IAAM,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;EACnD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,IAAI,CAAC,CAAC;EAC1C,wBAAwB,IAAI,QAAQ;EACpC,8BAA4B,WAAS;EACrC,qBAAqB;EACrB,oBAAoBC,IAAI,kBAAO,CAAC;EAChC,oBAAoB,IAAI,KAAK,EAAE;EAC/B,wBAAwB,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,wBAAwB,OAAO,GAAG,EAAE,CAAC;EACrC,wBAAwB,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC3D,wBAAwB,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,wBAAwB,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EACrD,wBAAwB,OAAO,GAAG,EAAE,CAAC;EACrC,wBAAwB,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EACxC,wBAAwB,MAAM,GAAG,EAAE,CAAC;EACpC,wBAAwB,SAAS,GAAG,GAAG,CAAC;EACxC,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;EAC1E,wBAAwB,IAAI,GAAG,IAAI,MAAM,KAAK,KAAK,EAAE;EACrD,4BAA4B,WAAW,GAAG,EAAE,CAAC;EAC7C,yBAAyB;EACzB,wBAAwB,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC3D,wBAAwB,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACpD,wBAAwB,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;EACzE,wBAAwB,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,EAAE;EACnD,4BAA4B,UAAU,GAAG,EAAE,CAAC;EAC5C,yBAAyB;EACzB,wBAAwB,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAClD,wBAAwB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC;EACrE,wBAAwB,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,wBAAwB,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjD,wBAAwB,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACnE,wBAAwB,IAAI,CAAC,QAAQ,EAAE;EACvC,4BAA4B,IAAI,OAAO,EAAE;EACzC,gCAAgC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACpE,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACpE,gCAAgC,IAAI,CAAC,SAAS,EAAE;EAChD,oCAAoC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC1E,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,oBAAoB,SAAS,CAAC,UAAU,EAAE,CAAC;EAC3C,oBAAoB,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EAC/E,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACnD,oBAAoB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoB,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;EAChF,oBAAoB,IAAI,KAAK,EAAE;EAC/B,wBAAwB,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC9E,wBAAwB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EACxE,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAC9E,wBAAwB,IAAI,OAAO,EAAE;EACrC,4BAA4B,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1F,yBAAyB;EACzB,qBAAqB;EACrB,oBAAoBD,IAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;EAC5E;EACA;EACA,oBAAoB,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;EAC3F,wBAAwB,IAAI,gBAAgB,KAAK,SAAS,IAAI,cAAc,KAAK,OAAO;EACxF,6BAA6B,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;EAC1D,iCAAiC,YAAY,KAAK,KAAK,IAAI,cAAc,KAAK,OAAO,CAAC,CAAC,EAAE;EACzF,4BAA4B,QAAQ,IAAI,CAAC,CAAC;EAC1C,4BAA4B,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;EAC1D,4BAA4B,YAAY,GAAG,KAAK,CAAC;EACjD,4BAA4B,cAAc,GAAG,OAAO,CAAC;EACrD,4BAA4B,cAAc,GAAG,OAAO,CAAC;EACrD,yBAAyB;EACzB,qBAAqB;EACrB,yBAAyB,IAAI,CAAC,QAAQ,IAAI,gBAAgB,KAAK,SAAS,EAAE;EAC1E,wBAAwB,QAAQ,IAAI,CAAC,CAAC;EACtC,wBAAwB,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;EACtD,qBAAqB;EACrB,oBAAoB,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;EACzG,oBAAoB,UAAU,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;EAC7C,oBAAoB,GAAG,IAAI,CAAC,CAAC;EAC7B,oBAAoB,QAAQ,GAAG,KAAK,CAAC;EACrC,oBAAoB,gBAAgB,GAAG,SAAS,CAAC;EACjD,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoBA,IAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,oBAAoBA,IAAM,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACjD,oBAAoBA,IAAM,SAAS,GAAG,EAAE,CAAC;EACzC,oBAAoB,IAAI,OAAO,KAAK,SAAS,EAAE;EAC/C;EACA,wBAAwB,SAAS;EACjC,qBAAqB;EACrB,oBAAoB,KAAKC,IAAIsE,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAE,EAAEA,GAAC,EAAE;EAChD,wBAAwBtE,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAACsE,GAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrE,wBAAwB,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;EAC/C,8BAA4B,WAAS;EACrC,wBAAwB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;EAClD,wBAAwB,IAAI,KAAK,KAAK,SAAS,EAAE;EACjD;EACA,4BAA4B,SAAS;EACrC,yBAAyB;EACzB;EACA;EACA;EACA;EACA;EACA,wBAAwB,IAAI,OAAO,GAAG,KAAK,EAAE;EAC7C,4BAA4B,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC;EAChD,4BAA4B,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;EAC9C,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;EAC9C,4BAA4B,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC;EAChD,yBAAyB;EACzB;EACA;EACA,wBAAwB,IAAI,SAAS,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;EAC5D,4BAA4B,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;EACzE,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4BvE,IAAM,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;EACrE,4BAA4B,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;EAC9D,gCAAgC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;EACtD,gCAAgC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;EACrE,gCAAgC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EACjE,6BAA6B;EAC7B,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjD,oBAAoB,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,oBAAoB,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjD,oBAAoB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC/C,oBAAoB,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3D,oBAAoB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC/C,oBAAoBC,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoB,SAAS,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;EACvF,oBAAoB,OAAO,CAAC,IAAI,CAAC;EACjC,wBAAwB,UAAU,EAAE,SAAS,EAAE,UAAU;EACzD,wBAAwB,QAAQ,EAAE,OAAO,EAAE,QAAQ;EACnD,wBAAwB,SAAS;EACjC,qBAAqB,CAAC,CAAC;EACvB,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjD,oBAAoB,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7D,oBAAoB,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjD,oBAAoB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC/C,oBAAoB,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3D,oBAAoB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC/C,oBAAoB,MAAM,CAAC,IAAI,CAAC;EAChC,wBAAwB,UAAU,EAAE,SAAS,EAAE,UAAU;EACzD,wBAAwB,QAAQ,EAAE,OAAO,EAAE,QAAQ;EACnD,qBAAqB,CAAC,CAAC;EACvB,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC7E,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoBD,IAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC5D,oBAAoB,IAAI,eAAe,KAAK,sBAAsB,EAAE;EACpE,wBAAwB,UAAU,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;EACzD,wBAAwB,sBAAsB,GAAG,eAAe,CAAC;EACjE,qBAAqB;EACrB,2BAAoB,UAAU,CAAC,eAAe,GAAE,UAAI,MAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;EACpG,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD;EACA,oBAAoBA,IAAM+H,SAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC9D,oBAAoB/H,IAAMgI,WAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACtD,oBAAoBhI,IAAMiI,SAAO,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACpD,oBAAoBjI,IAAMkI,OAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;EACtE,oBAAoBlI,IAAM,EAAE,GAAG,WAAW,CAACkI,OAAK,EAAEF,WAAS,EAAEC,SAAO,CAAC,CAAC;EACtE,oBAAoB,UAAU,CAAC,EAAE,CAAC,GAAG,WAAEF,SAAO,aAAEC,WAAS,WAAEC,SAAO,SAAEC,OAAK,EAAE,CAAC;EAC5E,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoBlI,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC5D,oBAAoBA,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;EACrD,oBAAoBA,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAC1D,oBAAoBC,IAAI,gBAAK,CAAC;EAC9B,oBAAoB,IAAI,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;EACrD,wBAAwB,gBAAgB,GAAG,GAAG,CAAC;EAC/C,wBAAwB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC3D,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,KAAK,GAAG,IAAI,CAAC;EACrC,qBAAqB;EACrB,oBAAoB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EACpD,oBAAoB,IAAI,gBAAgB,KAAK,QAAQ,EAAE;EACvD,wBAAwB,iBAAiB,GAAG;EAC5C,4BAA4B,SAAS,EAAE,EAAE;EACzC,4BAA4B,IAAI,EAAE,EAAE;EACpC,yBAAyB,CAAC;EAC1B,wBAAwB,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;EAC/D,qBAAqB;EACrB,yBAAyB,IAAI,gBAAgB,KAAK,UAAU,EAAE;EAC9D,wBAAwB,IAAI,iBAAiB,CAAC,IAAI;EAClD,8BAA4B,iBAAiB,CAAC,IAAI,IAAI,GAAG,GAAC;EAC1D,wBAAwB,iBAAiB,CAAC,IAAI,IAAI,KAAK,CAAC;EACxD,qBAAqB;EACrB,yBAAyB,IAAI,gBAAgB,KAAK,OAAO,EAAE;EAC3D,wBAAwB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;EACxG,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;EACjD,oBAAoBD,IAAM,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;EACvD,oBAAoB,QAAQ,IAAI,CAAC,CAAC;EAClC,oBAAoB,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;EAClD,oBAAoB,QAAQ,GAAG,IAAI,CAAC;EACpC,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;EACjF,oBAAoB,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,cAAc,EAAE;EAChE,wBAAwBC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC1D,wBAAwB,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;EAC1D,8BAA4B,IAAI,GAAG,IAAI,GAAG,IAAI,GAAC;EAC/C,wBAAwB,aAAa,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;EAC3D,wBAAwB,UAAU,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC;EACzD,qBAAqB;EACrB,yBAAyB,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EAC7D,wBAAwBD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EACxD,wBAAwBA,IAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3D,wBAAwB,IAAI,GAAG,KAAK,CAAC,EAAE;EACvC,4BAA4B,aAAa,GAAG,IAAII,aAAO,EAAE,CAAC;EAC1D,4BAA4B,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EACvE,yBAAyB;EACzB,wBAAwBJ,IAAM,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC;EACjE,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACtE,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACtE,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACtE,wBAAwB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACtE,qBAAqB;EACrB,yBAAyB,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,gCAAgC;EACrF,wBAAwB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,gCAAgC,EAAE;EAClF,wBAAwB,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EAC5D,4BAA4B,WAAW,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;EAClE,yBAAyB;EACzB,wBAAwBA,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACzE,wBAAwB,KAAKC,IAAIsE,GAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAEA,GAAC,EAAE;EAC5E,4BAA4BvE,IAAM,CAAC,GAAG,SAAS,CAACuE,GAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC1D,4BAA4B,IAAI,CAAC;EACjC,kCAAgC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAC;EAC9D,yBAAyB;EACzB,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9C,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EACjF,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD,oBAAoB,YAAY,GAAG,IAAI,CAAC;EACxC,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,KAAK,EAAE;EAC3E,oBAAoB,IAAI,YAAY;EACpC,0BAAwB,WAAS;EACjC,oBAAoB,IAAI,YAAY,IAAI,CAAC,QAAQ,EAAE;EACnD,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;EACpE,wBAAwB,QAAQ,GAAG,IAAI,CAAC;EACxC,qBAAqB;EACrB,oBAAoB,QAAQ,IAAI,CAAC,CAAC;EAClC,oBAAoB,YAAY,GAAG,IAAI,CAAC;EACxC,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EACxD;EACA,oBAAoB,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG;EACxC,0BAAwB,WAAS;EACjC,oBAAoB,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,KAAK,KAAK,EAAE;EACxE,wBAAwBvE,IAAM,OAAO,GAAG,KAAK,CAAC;EAC9C,wBAAwB,aAAa,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC9D,wBAAwB,UAAU,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC;EAC5D,wBAAwB,WAAW,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;EAC9D,qBAAqB;EACrB,oBAAoBA,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAClD,oBAAoBA,IAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACzD,oBAAoB,IAAI,MAAM,KAAK,CAAC,EAAE;EACtC,wBAAwB,aAAa,GAAG,IAAII,aAAO,EAAE,CAAC;EACtD,wBAAwB,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EACnE,qBAAqB;EACrB,oBAAoBJ,IAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,CAAC;EAC3D,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EACxD,oBAAoB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;EAC7C,wBAAwB,YAAY,CAAC,KAAK,GAAG,IAAII,aAAO,EAAE,CAAC;EAC3D,qBAAqB;EACrB,oBAAoBJ,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EACpD,oBAAoBA,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3D,oBAAoBA,IAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;EAClE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EACxD,oBAAoB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;EAC7C,wBAAwB,YAAY,CAAC,KAAK,GAAG,IAAII,aAAO,EAAE,CAAC;EAC3D,qBAAqB;EACrB,oBAAoBJ,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EACpD,oBAAoBA,IAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3D,oBAAoBA,IAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;EAClE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,oBAAoB,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,iBAAiB;EACjB,qBAAqB,IAAI,UAAU,KAAK,QAAQ,EAAE;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAoBA,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClE,oBAAoBA,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACnE,oBAAoBA,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACnE,oBAAoBA,IAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoBA,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAChE,oBAAoBA,IAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EACjE,oBAAoBA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;EAC9D;EACA,oBAAoBA,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACpD,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;EACrC,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;EACrC,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;EACrC,oBAAoB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACpC,oBAAoB,IAAI,QAAQ,KAAK,CAAC,EAAE;EACxC,wBAAwB,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;EACjD,wBAAwB,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;EACjD,wBAAwB,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;EACjD,wBAAwB,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;EACnD,wBAAwB,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;EACjD,wBAAwB,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;EACnD,wBAAwB,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;EACzD,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA6B;EACnF,YAAY,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;EACvD,SAAS,CAAC,CAAC;EACX;EACA;EACA,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;EACtB;EACA,QAAQA,IAAM,EAAE,GAAG,cAAc,CAAC,MAAM,CAAC;EACzC,QAAQ,IAAI,EAAE,EAAE;EAChB,YAAY,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE;EACtC,gBAAgB,EAAE,CAAC,WAAW,GAAG,EAAE,CAAC;EACpC,aAAa,CAAC,CAAC;EACf,YAAY,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;EACnD,gBAAgBA,IAAM,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,SAAS,EAAE;EAC5E,oBAAoB,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;EAChD,iBAAiB,CAAC,CAAC;EACnB,gBAAgB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;EACvF,aAAa,CAAC,CAAC;EACf,YAAYC,IAAI,EAAE,GAAG,cAAc,CAAC,MAAM,CAAC;EAC3C,YAAYD,IAAM,EAAE,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;EAC3C,YAAYA,IAAM,WAAW,GAAG,EAAE,CAAC;EACnC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE;EACtC,gBAAgB,IAAI,EAAE,CAAC,WAAW,KAAK,EAAE,EAAE;EAC3C,oBAAoB,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,aAAa,CAAC;EAChD,oBAAoB,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;EAClD,wBAAwB,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;EACrD,qBAAqB;EACrB,oBAAoB,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAC3D,iBAAiB;EACjB,aAAa,CAAC,CAAC;EACf,YAAY,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE;EAChE,gBAAgBA,IAAM,SAAS,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;EACvD,gBAAgBC,IAAI,IAAI,GAAG,aAAa,CAAC;EACzC,gBAAgBA,IAAI,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAC3D,gBAAgB,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;EAClD,oBAAoB,IAAI,GAAG,OAAO,CAAC;EACnC,oBAAoB,IAAI,GAAG,OAAO,CAAC;EACnC,iBAAiB;EACjB,gBAAgB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;EAC5E,gBAAgB,EAAE,IAAI,CAAC,CAAC;EACxB,aAAa,CAAC,CAAC;EACf,SAAS;EACT;EACA,QAAQ,IAAI,YAAY,CAAC,CAAC,KAAK,SAAS,EAAE;EAC1C,YAAY,CAAC,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC;EACpD,SAAS;EACT,aAAa;EACb,YAAY,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAC;EACnC,SAAS;EACT,QAAQ,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;EAC7C,YAAY,wBAAwB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;EACnD,SAAS;EACT,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;EAC1B,QAAQ,IAAI,CAAC,QAAQ;EACrB,cAAY,mBAAmB,CAAC,CAAC,CAAC,GAAC;EACnC,QAAQ,cAAc,CAAC,CAAC,CAAC,CAAC;EAC1B,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;EAC1B,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAC/C,YAAY,2BAA2B,CAAC,CAAC,CAAC,CAAC;EAC3C,SAAS;EACT,QAAQ,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACjC,QAAQ,IAAIa,aAAK;EACjB,cAAY,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAC;EACzD;;;;;IA9iBwB,kBA+iBvB;AACDI,kBAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACrCA,kBAAc,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACtCA,kBAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;EClnBrC;EACA;EACA;EACA;EACA;AACA,EASAlB,IAAMmI,cAAY,GAAG,KAAK,CAAC;EAC3BnI,IAAM,kBAAkB,GAAG,4CAA4C,CAAC;EACxEA,IAAM,aAAa,GAAG,IAAI,CAAC;EAC3BA,IAAM,YAAY,GAAG,gBAAgB,CAAC;EACtC,SAAS,UAAU,CAAC,GAAG,EAAE;EACzB,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;EACrF,QAAQ,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAChD,KAAK;EACL,SAAS;EACT,QAAQ,OAAO,GAAG,CAAC;EACnB,KAAK;EACL,CAAC;EACD,SAASoI,aAAW,CAAC,IAAI,EAAE,KAAK,EAAE;EAClC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;EACrC,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EACjD,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACpC,SAAS,CAAC,CAAC;EACX,KAAK;EACL,CAAC;EACD,SAAS,QAAQ,CAAC,CAAC,EAAE;EACrB,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC;EACrB,CAAC;EACD,SAAS,WAAW,CAAC,KAAK,EAAE,YAAY,EAAE;EAC1C,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC;EAClD,CAAC;EACD,SAAS,YAAY,CAAC,UAAU,EAAE;EAClC,IAAI,QAAQ,UAAU,CAAC,WAAW,EAAE;EACpC,QAAQ,KAAK,GAAG,CAAC;EACjB,QAAQ,KAAK,MAAM;EACnB,YAAY,OAAO,CAAC,CAAC;EACrB,QAAQ,KAAK,MAAM;EACnB,YAAY,OAAO,CAAC,CAAC;EACrB,QAAQ,KAAK,MAAM;EACnB,YAAY,OAAO,CAAC,CAAC;EACrB,QAAQ,KAAK,MAAM;EACnB,YAAY,OAAO,CAAC,CAAC;EACrB,KAAK;EACL,IAAI,OAAO,CAAC,CAAC;EACb,CAAC;EACD,SAAS,aAAa,CAAC,GAAG,EAAE,SAAS,EAAE,gBAAgB,EAAE;EACzD,IAAIpI,IAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;EAC1C,IAAIA,IAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;EACtC,IAAIC,IAAI,CAAC,EAAE,CAAC,CAAC;EACb,IAAID,IAAM,EAAE,GAAG,GAAG,CAAC,SAAS,CAAC;EAC7B,IAAIA,IAAM,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC;EACnC,IAAIA,IAAM,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC;EACnC,IAAI,IAAI,EAAE,EAAE;EACZ,QAAQ,IAAI,EAAE,CAAC,IAAI,EAAE;EACrB,YAAY,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EACvE,SAAS;EACT,QAAQ,IAAI,EAAE,CAAC,EAAE,EAAE;EACnB,YAAY,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EAClE,SAAS;EACT,KAAK;EACL,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;EAC1B,IAAI,IAAI,GAAG,EAAE;EACb,QAAQoI,aAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;EACpC,QAAQ,IAAI,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;EAC9C,QAAQ,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;EAC/B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,SAAS,CAAC,UAAU,EAAE,CAAC;EACnC,YAAY,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACjE,YAAY,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EACzC,YAAY,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;EACvC,YAAY,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EACrE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EAClD,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EAClD,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EAClD,YAAY,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpC,YAAY,OAAO,GAAG,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EACpD,YAAY,KAAK,GAAG,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnF,YAAY,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;EACtE,SAAS;EACT,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC1B,YAAY,SAAS,CAAC,UAAU,EAAE,CAAC;EACnC,YAAY,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACjE,YAAY,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EACzC,YAAY,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EACrE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;EAC7D,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;EAC7D,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;EAC7D,YAAY,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpC,YAAY,OAAO,GAAG,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;EACpD,YAAY,KAAK,GAAG,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnF,YAAY,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;EACtE,SAAS;EACT,KAAK;EACL,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE;EACpB,QAAQA,aAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;EACpC,QAAQ,IAAI,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAC5C,QAAQ,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;EAC/B,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;EACpC,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;EAC3C,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;EAC3C,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACpE,YAAY,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACpE,YAAY,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,YAAY,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;EAChD,YAAY,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;EAChD,YAAY,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;EAC7C,YAAY,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;EAC7D,YAAY,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;EAC5B,YAAY,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC;EAC5B,YAAY,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;EAC7C,YAAY,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;EAC7D,SAAS;EACT,KAAK;EACL,CAAC;EACD,SAAS,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,gBAAgB,EAAE;EACrD,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;EACxC,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;EACpC,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE;EAClB,QAAQ,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;EAChC,QAAQ,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EAClC,KAAK;EACL,IAAI,SAAS,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC;EACtC,QAAQ,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;EACxC,QAAQ,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;EACxC,QAAQ,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;EACxC,QAAQ,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC;EAC/C,QAAQ,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC;EAC7C,QAAQ,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC;EAC/C,QAAQ,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;EACpE,KAAK,CAAC,CAAC;EACP,IAAIpI,IAAM,CAAC,GAAG,IAAIG,aAAO,EAAE,CAAC;EAC5B,IAAIH,IAAM,CAAC,GAAG,IAAIG,aAAO,EAAE,CAAC;EAC5B,IAAIH,IAAM,CAAC,GAAG,GAAG,CAAC,qBAAqB,CAAC,MAAM,CAAC;EAC/C,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,QAAQ,SAAS,CAAC,UAAU,EAAE,CAAC;EAC/B,QAAQD,IAAM,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EAChD,QAAQA,IAAM,OAAO,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACrD,QAAQ,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EACjE,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5F,QAAQ,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;EACtD,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjB,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,QAAQ,IAAI,GAAG,CAAC,mBAAmB,EAAE;EACrC,YAAY,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5E,SAAS;EACT,QAAQ,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAChC,QAAQ,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;EAC5D,KAAK;EACL,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;EACtB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;EACzB,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;EACrC,IAAIA,IAAM,EAAE,GAAG,IAAIG,aAAO,EAAE,CAAC;EAC7B,IAAIH,IAAM,EAAE,GAAG,IAAIG,aAAO,EAAE,CAAC;EAC7B,IAAIH,IAAM,EAAE,GAAG,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;EACrE,IAAIC,IAAI,CAAC,GAAG,CAAC,CAAC;EACd,IAAI,SAAS,QAAQ,CAAC,GAAG,EAAE;EAC3B,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;EAC/D,KAAK;EACL,IAAID,IAAM,cAAc,GAAG,IAAII,aAAO,EAAE,CAAC;EACzC,8BAAgC;EAChC,QAAQJ,IAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,QAAQ,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;EAChC,YAAY,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EACxC,kBAAgB,SAAO;EACvB,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;EAC/B,YAAY,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACxC,gBAAgB,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,gBAAgBD,IAAM,WAAW,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;EAC7D,gBAAgBA,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;EAClD,gBAAgBA,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;EACnC,gBAAgBA,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;EACnC,gBAAgB,IAAI,WAAW,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,WAAW,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;EACxE,oBAAoB,SAAS,CAAC,UAAU,EAAE,CAAC;EAC3C,oBAAoB,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACtE,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC1C,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC1C,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC1C,oBAAoB,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EACpE,oBAAoB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC5C,oBAAoB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EAC5D,oBAAoB,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;EACxE,oBAAoB,CAAC,IAAI,CAAC,CAAC;EAC3B,oBAAoB,OAAO;EAC3B,iBAAiB;EACjB,aAAa;EACb,SAAS,CAAC,CAAC;EACX;;MA7BI,KAAKC,IAAIwB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,EAAE,EAAEA,GAAC,cA6BzB;EACL,CAAC;EACD,SAAS,yBAAyB,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE;EAC/D,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;EACrB,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;EACpB,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAClC;EACA,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,CAAC;EAC7B,IAAI,IAAI,EAAE,EAAE;EACZ,QAAQ2G,aAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EAC9B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACjE,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;EAC1C,gBAAgB,QAAQ,GAAG,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACvD,gBAAgB,QAAQ,GAAG,EAAE,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACvD,gBAAgB,OAAO,CAAC,IAAI,CAAC;EAC7B,oBAAoB,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvD,oBAAoB,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EACnD,oBAAoB,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;EAC7C,oBAAoB,UAAU,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvD,oBAAoB,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EACnD,oBAAoB,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;EAC7C,oBAAoB,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;EAC1E,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,SAAS;EACT,KAAK;EACL;EACA,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,kBAAkB,CAAC;EACrC,IAAI,IAAI,GAAG,EAAE;EACb,QAAQA,aAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;EAC/B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAClE,YAAY,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACpD,YAAY,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACpD,YAAY,MAAM,CAAC,IAAI,CAAC;EACxB,gBAAgB,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACpD,gBAAgB,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EAChD,gBAAgB,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;EACzC,gBAAgB,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACpD,gBAAgB,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EAChD,gBAAgB,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;EACzC,aAAa,CAAC,CAAC;EACf,SAAS;EACT,KAAK;EACL,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE;EACnB,QAAQ,OAAO;EACf,YAAY,OAAO,EAAE,OAAO;EAC5B,YAAY,MAAM,EAAE,MAAM;EAC1B,SAAS,CAAC;EACV,KAAK;EACL,SAAS;EACT,QAAQ,OAAO,KAAK,CAAC;EACrB,KAAK;EACL,CAAC;EACD,SAAS,eAAe,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE;EACrD;EACA,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;EACtB,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;EAC1C,IAAI,IAAI,GAAG,CAAC,qBAAqB,EAAE;EACnC,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAC;EACjD,QAAQA,aAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EACpC,QAAQ,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;EAC7C,YAAY,IAAI,CAAC,GAAG,IAAIhI,aAAO,EAAE,CAAC;EAClC,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC;EAClC,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;EAC1B,YAAY,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EAC7B,SAAS,CAAC,CAAC;EACX,KAAK;EACL,IAAI,IAAI,GAAG,CAAC,wBAAwB,EAAE;EACtC,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,wBAAwB,CAAC;EAC/C,QAAQgI,aAAW,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;EACxC,QAAQ,IAAI,aAAa,GAAG,UAAU,IAAI,EAAE;EAC5C,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC;EAC7B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC1D,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;EACnC,gBAAgB,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;EACrC,oBAAoB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC1C,oBAAoB,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,oBAAoB,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,oBAAoB,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;EACxC,wBAAwB,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjD,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,OAAO,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC7C,iBAAiB;EACjB,aAAa,CAAC,CAAC;EACf,YAAY,OAAO,OAAO,CAAC;EAC3B,SAAS,CAAC;EACV,QAAQ,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;EACjD,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC;EACxB,YAAY,IAAI,EAAE,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;EACxE,YAAY,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;EAC1D,gBAAgB,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACnC,gBAAgB,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,gBAAgB,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;EACvD,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;EAC3D,wBAAwB,IAAI,GAAG,GAAG,IAAIhI,aAAO,EAAE,CAAC;EAChD,wBAAwB,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/D,wBAAwB,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;EAChD,qBAAqB,CAAC,CAAC;EACvB,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,iBAAiB;EACjB,gBAAgB,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;EACvC,aAAa;EACb,YAAY,IAAI,UAAU,GAAG,EAAE,CAAC;EAChC,YAAY,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;EAC9B,gBAAgB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,aAAa;EACb,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC;EAC1B,YAAY,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;EAC9C,kBAAgB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAC;EACnC,YAAY,IAAI,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAC3D,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAChE,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,aAAa;EACb,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;EAChD,gBAAgB,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;EACtD,aAAa;EACb,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;EAC5D,SAAS,CAAC,CAAC;EACX,KAAK;EACL;EACA,IAAI,IAAI,GAAG,CAAC,eAAe,EAAE;EAC7B,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC;EACxC,QAAQgI,aAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EACjC,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;EAC5B,QAAQ,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;EACpD,QAAQ,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;EACpD,QAAQ,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE;EAC1C;EACA,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO;EACzC,kBAAgB,SAAO;EACvB,YAAY,IAAI,CAAC,GAAG,IAAIhI,aAAO,EAAE,CAAC;EAClC,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC;EAClC,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;EAC1B,YAAY,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvC,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;EAC7C,YAAY,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;EACvC,SAAS;EACT,KAAK;EACL;EACA,IAAIJ,IAAM,YAAY,GAAG,EAAE,CAAC;EAC5B,IAAI,IAAI,GAAG,CAAC,IAAI,EAAE;EAClB,QAAQA,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EAC9B,QAAQA,IAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5C,QAAQA,IAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5C,QAAQA,IAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5C,QAAQA,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EACxC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACnB,QAAQ,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClC,QAAQ,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3B,QAAQ,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3B,QAAQ,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3B,QAAQ,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC1D,QAAQ,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;EACxD,QAAQ,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EAC1D,KAAK;EACL,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE;EACtB,QAAQ,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACnF,KAAK;EACL;EACA,IAAI,IAAI,KAAK,GAAG,IAAII,aAAO,EAAE,CAAC;EAC9B,IAAI,IAAI,GAAG,CAAC,mBAAmB,EAAE;EACjC,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC,mBAAmB,CAAC;EAC/C,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;EACvC,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC3D,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;EAC5D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC/D,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC/D,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAChE,QAAQ,KAAK,CAAC,SAAS,EAAE,CAAC;EAC1B,QAAQ,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;EACnC,KAAK;EACL;EACA,IAAI,IAAI,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAC;EAC9B,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE;EACxB,QAAQ,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC;EACtC,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;EACvC,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EACzE,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;EAC1E,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACtE,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACtE,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACvE,QAAQ,KAAK,CAAC,SAAS,EAAE,CAAC;EAC1B,QAAQ,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;EACnC,KAAK;EACL,IAAI,IAAI,YAAY,CAAC,CAAC,KAAK,SAAS,EAAE;EACtC,QAAQ,SAAS,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC;EACxD,KAAK;EACL,SAAS;EACT,QAAQ,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC;EACvC,KAAK;EACL,CAAC;EACD,SAAS,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE;EACxD;EACA,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,CAAC;EAC7B,IAAI,IAAI,EAAE,EAAE;EACZ,QAAQgI,aAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;EAC9B,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC;EACjC,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;EAC3C,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAC;EAC3C,QAAQ,IAAI,gBAAgB,GAAG,EAAE,CAAC;EAClC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACxD;EACA;EACA;EACA;EACA,YAAY,IAAI,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;EAChD,YAAY,IAAI,UAAU,KAAK,QAAQ;EACvC,gBAAgB,UAAU,KAAK,QAAQ;EACvC,gBAAgB,UAAU,KAAK,QAAQ;EACvC,kBAAgB,WAAS;EACzB;EACA,YAAY,IAAI,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,OAAO;EAChD,gBAAgB,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,OAAO;EAChD,kBAAgB,WAAS;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACzD,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACxD,YAAY,IAAI,KAAK,IAAI,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAChD,iBAAiB,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC;EAC5D,gBAAgB,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAC3D,gBAAgB,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;EAC1E,iBAAiB,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5D,YAAY,IAAI,YAAY,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;EACvD,YAAY,IAAI,CAAC,YAAY,EAAE;EAC/B,gBAAgB,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;EACtD,gBAAgB,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE;EAChD,oBAAoB,IAAItH,aAAK;EAC7B,0BAAwB,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,GAAC;EAC5E,oBAAoB,SAAS;EAC7B,iBAAiB;EACjB,gBAAgB,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;EACpE,gBAAgB,gBAAgB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;EACvD,aAAa;EACb,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACzD,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;EACxD,YAAY,IAAI,KAAK,IAAI,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAChD,iBAAiB,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC;EAC5D,gBAAgB,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAC3D,gBAAgB,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;EAC1E,iBAAiB,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5D,YAAY,IAAI,YAAY,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;EACvD,YAAY,IAAI,CAAC,YAAY,EAAE;EAC/B,gBAAgB,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;EACtD,gBAAgB,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE;EAChD,oBAAoB,IAAIA,aAAK;EAC7B,0BAAwB,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,GAAC;EAC5E,oBAAoB,SAAS;EAC7B,iBAAiB;EACjB,gBAAgB,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;EACpE,gBAAgB,gBAAgB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;EACvD,aAAa;EACb;EACA;EACA;EACA;EACA,YAAY,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;EACxC,YAAY,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;EACxC,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE;EACvB,gBAAgB,IAAI,IAAI,GAAG,CAAC,CAAC;EAC7B,gBAAgB,CAAC,GAAG,CAAC,CAAC;EACtB,gBAAgB,CAAC,GAAG,IAAI,CAAC;EACzB,gBAAgB,IAAI,IAAI,GAAG,YAAY,CAAC;EACxC,gBAAgB,YAAY,GAAG,YAAY,CAAC;EAC5C,gBAAgB,YAAY,GAAG,IAAI,CAAC;EACpC,aAAa;EACb;EACA,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EACpC,gBAAgB,IAAIA,aAAK;EACzB,sBAAoB,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,KAAK,CAAC,GAAC;EACjE,gBAAgB,SAAS;EACzB,aAAa;EACb,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACxC,gBAAgB,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAChD,gBAAgB,GAAG,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;EAC5C,gBAAgB,IAAI,GAAG,IAAI,GAAG,EAAE;EAChC,oBAAoB,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChG,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;EAC9D,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,KAAK;EACL,CAAC;EACD,SAAS,eAAe,CAAC,GAAG,EAAE,SAAS,EAAE,cAAc,EAAE;EACzD,IAAI,IAAI,GAAG,CAAC,MAAM,EAAE;EACpB,QAAQsH,aAAW,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EACtC,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;EAC3B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC;EAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EACpC,YAAY,IAAI,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACpD,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACjC,YAAY,IAAI,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,YAAY,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;EAClG,SAAS;EACT,KAAK;EACL,CAAC;EACD;EACA,IAAM,SAAS;;;;;;;;;;;MACX,mBAAI,uBAAO,EAAE,OAAO,KAAK,CAAC,GAAE;EAChC,wBAAI,4BAAS;EACb;EACA,QAAQ,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;EAC/B,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;EACvC,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;EACjD,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;EAC7C,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;EACzC,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EAC9B,QAAQ,IAAI,YAAY,EAAE,YAAY,CAAC;EACvC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;EAC1B;EACA,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;EACrB,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;EAC5B,QAAQ,IAAI,cAAc,GAAG,EAAE,CAAC;EAChC,QAAQ,IAAI,aAAa,GAAG,KAAK,CAAC;EAClC,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC;EACjC,QAAQ,IAAI,YAAY,GAAG,KAAK,CAAC;EACjC,QAAQ,IAAI,WAAW,GAAG,KAAK,CAAC;EAChC,QAAQ,IAAI,WAAW,GAAG,KAAK,CAAC;EAChC,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,gBAAgB,GAAG,IAAI,CAAC;EACpC,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC;EACnC,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC;EAC/B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;EACzB,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;EAC9B,QAAQ,IAAI,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,UAAU,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC;EAC/M;EACA,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;EAChC,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;EACpC,QAAQ,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;EAC1D,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;EACpB,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,QAAQ,CAAC;EACrB,QAAQ,SAAS,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;EACnD,YAAY,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC1C,gBAAgB,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,gBAAgB,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;EACtC,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAClF;EACA,oBAAoB,aAAa,GAAG,KAAK,CAAC;EAC1C,oBAAoB,WAAW,GAAG,KAAK,CAAC;EACxC,oBAAoB,YAAY,GAAG,KAAK,CAAC;EACzC,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5C,oBAAoB,gBAAgB,GAAG,IAAI,CAAC;EAC5C,oBAAoB,eAAe,GAAG,IAAI,CAAC;EAC3C,oBAAoB,WAAW,GAAG,IAAI,CAAC;EACvC,oBAAoB,KAAK,GAAG,IAAI,CAAC;EACjC,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5C,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;EAC3D,oBAAoB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACxD;EACA,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAC1C,oBAAoB,IAAI,aAAa,EAAE;EACvC;EACA,wBAAwB,IAAI,WAAW,EAAE;EACzC,4BAA4B,IAAI,gBAAgB,KAAK,YAAY,CAAC,MAAM,EAAE;EAC1E,gCAAgC,gBAAgB,GAAG,CAAC,CAAC;EACrD,6BAA6B;EAC7B,4BAA4B,YAAY,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EAC/E,4BAA4B,gBAAgB,IAAI,CAAC,CAAC;EAClD,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,IAAI,WAAW,KAAK,KAAK,EAAE;EACvD,gCAAgC,GAAG,CAAC,eAAe,CAAC,GAAG,aAAa,CAAC;EACrE,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,GAAG,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;EAClF,6BAA6B;EAC7B,yBAAyB;EACzB,wBAAwB,aAAa,GAAG,KAAK,CAAC;EAC9C,wBAAwB,aAAa,GAAG,IAAI,CAAC;EAC7C,qBAAqB;EACrB,yBAAyB;EACzB;EACA,wBAAwB,aAAa,GAAG,IAAI,CAAC;EAC7C,wBAAwB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC1D,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,KAAK,OAAO,EAAE;EAC3C;EACA,oBAAoB,WAAW,GAAG,IAAI,CAAC;EACvC,oBAAoB,WAAW,GAAG,IAAI,CAAC;EACvC,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5C,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC5C,oBAAoB,gBAAgB,GAAG,CAAC,CAAC;EACzC,iBAAiB;EACjB,qBAAqB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAC1C,oBAAoB,IAAI,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC;EACjD,oBAAoB,IAAI,WAAW,IAAI,CAAC,WAAW,EAAE;EACrD,wBAAwB,WAAW,GAAG,KAAK,CAAC;EAC5C,qBAAqB;EACrB,oBAAoB,IAAI,WAAW,EAAE;EACrC;EACA,wBAAwB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACnD,wBAAwB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5D,wBAAwB,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;EACnD,4BAA4B,IAAI,GAAG,KAAK,CAAC;EACzC,4BAA4B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;EAC9C,kCAAgC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAC;EACnD,4BAA4B,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC7D,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;EAC9C,kCAAgC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAC;EACnD,4BAA4B,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;EACrD,gCAAgC,IAAItH,aAAK;EACzC,sCAAoC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,GAAC;EAC/E,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;EACzD,gCAAgC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;EACvE,gCAAgC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxD,6BAA6B;EAC7B,yBAAyB;EACzB,wBAAwB,eAAe,GAAG,QAAQ,CAAC;EACnD,wBAAwB,WAAW,GAAG,IAAI,CAAC;EAC3C,wBAAwB,KAAK,GAAG,IAAI,CAAC;EACrC,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EAC1E,wBAAwB,IAAI,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;EAClD,wBAAwB,IAAI,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;EACpD,wBAAwB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAClD,wBAAwB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5D,wBAAwB,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3C,wBAAwB,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;EACnD,4BAA4B,IAAI,GAAG,KAAK,CAAC;EACzC,4BAA4B,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;EAClD,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;EAC9C,kCAAgC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAC;EACnD,4BAA4B,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE;EACrD,gCAAgC,IAAIA,aAAK;EACzC,sCAAoC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,GAAC;EAC/E,6BAA6B;EAC7B,iCAAiC;EACjC,gCAAgC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;EAC5D,6BAA6B;EAC7B,yBAAyB;EACzB,wBAAwB,IAAI,CAAC,KAAK;EAClC,8BAA4B,YAAY,GAAG,IAAI,GAAC;EAChD,wBAAwB,eAAe,GAAG,QAAQ,CAAC;EACnD,wBAAwB,WAAW,GAAG,IAAI,CAAC;EAC3C,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,IAAI,aAAa,EAAE;EACvC;EACA,wBAAwB,aAAa,IAAI,OAAO,CAAC;EACjD,qBAAqB;EACrB,yBAAyB,IAAI,WAAW,EAAE;EAC1C;EACA,wBAAwB,IAAI,CAAC,IAAI,EAAE;EACnC,4BAA4B,SAAS;EACrC,yBAAyB;EACzB,6BAA6B,IAAI,eAAe,KAAK,WAAW,EAAE;EAClE,4BAA4Bd,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAACmI,cAAY,CAAC,CAAC;EAChE,4BAA4B,IAAI,KAAK,EAAE;EACvC,gCAAgC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;EAClF,gCAAgC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;EAChF,gCAAgC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;EACpF,gCAAgC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;EACpF,gCAAgC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;EACpF,gCAAgC,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;EACxF,gCAAgC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;EAClF,gCAAgC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACzE,gCAAgC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACzE,gCAAgC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;EACzE,gCAAgC,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAChE,gCAAgC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;EACjF,gCAAgC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC7E,gCAAgC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;EACrF,gCAAgC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;EAC7F,gCAAgC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;EAC3F,gCAAgC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC9E,gCAAgC,KAAK,GAAG,KAAK,CAAC;EAC9C,gCAAgC,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;EACzE,gCAAgC,IAAI,YAAY,EAAE;EAClD,oCAAoC,YAAY,GAAG,EAAE,CAAC;EACtD,oCAAoC,YAAY,GAAG,CAAC,CAAC;EACrD,iCAAiC;EACjC,6BAA6B;EAC7B;EACA,4BAA4BnI,IAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;EAC5E,4BAA4B,IAAI,QAAQ,KAAK,SAAS,EAAE;EACxD,gCAAgC,IAAI,YAAY,EAAE;EAClD,oCAAoC,IAAI,QAAQ,KAAK,CAAC,EAAE;EACxD,wCAAwC,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;EACpF,qCAAqC;EACrC,oCAAoC,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACzF,oCAAoC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EAC9D,oCAAoC,YAAY,GAAG,CAAC,CAAC;EACrD,iCAAiC;EACjC,gCAAgC,QAAQ,IAAI,CAAC,CAAC;EAC9C,6BAA6B;EAC7B,4BAA4B,QAAQ,GAAG,SAAS,CAAC;EACjD,4BAA4B,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;EAC9D,kCAAgC,WAAS;EACzC;EACA,4BAA4BA,IAAM,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;EACxF,4BAA4B,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;EAC/D,kCAAgC,WAAS;EACzC,4BAA4BA,IAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7D,4BAA4BA,IAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7D,4BAA4BA,IAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;EAC7D,4BAA4B,IAAI,YAAY,EAAE;EAC9C,gCAAgCA,IAAM,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC;EACrE,gCAAgC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAClE,gCAAgC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAClE,gCAAgC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAClE,gCAAgC,YAAY,IAAI,CAAC,CAAC;EAClD,gCAAgC,IAAI,QAAQ,GAAG,CAAC;EAChD,sCAAoC,WAAS;EAC7C,6BAA6B;EAC7B;EACA,4BAA4BA,IAAM,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5D,4BAA4BA,IAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;EAClE,4BAA4BC,IAAI,OAAO,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC;EAC7D,4BAA4B,OAAO,GAAG,CAAC,OAAO,KAAK,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC;EACvE,4BAA4BD,IAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;EAC7D,4BAA4BA,IAAM,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;EAC5D,4BAA4BA,IAAM,MAAM,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7E;EACA,4BAA4BA,IAAM,OAAO,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;EAC3D,4BAA4BA,IAAM,OAAO,GAAG,UAAU,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;EACxE,4BAA4BA,IAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;EAClE,4BAA4BC,IAAI,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;EACxD,4BAA4B,MAAM,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC;EACpE,4BAA4B,SAAS,CAAC,UAAU,EAAE,CAAC;EACnD,4BAA4B,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;EACvF,4BAA4B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACjD,4BAA4B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACjD,4BAA4B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACjD,4BAA4B,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACrE,4BAA4B,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAClF,4BAA4B,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;EAC5E,4BAA4B,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;EACzE,4BAA4B,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;EACjH,4BAA4B,IAAIa,aAAK,EAAE;EACvC;EACA;EACA,gCAAgCd,IAAM,iBAAiB,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;EAC9E,gCAAgC,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,SAAS,EAAE;EACxG,oCAAoC,IAAIc,aAAK;EAC7C,0CAAwC,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,SAAS,CAAC,GAAC;EAC/E,iCAAiC;EACjC,6BAA6B;EAC7B;EACA,4BAA4B,UAAU,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;EAC5D;EACA,4BAA4Bd,IAAM,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC;EAC/D,4BAA4B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;EAC3D,gCAAgC,cAAc,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;EACrE,6BAA6B;EAC7B,4BAA4B,cAAc,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACjF,4BAA4B,GAAG,IAAI,CAAC,CAAC;EACrC,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4BA,IAAMqI,IAAE,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACtE,4BAA4BrI,IAAM,EAAE,GAAGqI,IAAE,CAAC,MAAM,CAAC;EACjD,4BAA4B,IAAI,gBAAgB,KAAK,YAAY,CAAC,MAAM,EAAE;EAC1E,gCAAgC,gBAAgB,GAAG,CAAC,CAAC;EACrD,6BAA6B;EAC7B;EACA;EACA,4BAA4B,KAAKpI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EACzD,gCAAgC,YAAY,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,IAAI,CAACoI,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/E,6BAA6B;EAC7B,4BAA4B,gBAAgB,IAAI,EAAE,CAAC;EACnD,yBAAyB;EACzB,wBAAwB,WAAW,GAAG,KAAK,CAAC;EAC5C,qBAAqB;EACrB,yBAAyB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;EAC/E;EACA,wBAAwBrI,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACvE,wBAAwB,IAAI,WAAW,KAAK,KAAK,EAAE;EACnD,4BAA4B,GAAG,CAAC,eAAe,CAAC,GAAG,GAAG,CAAC;EACvD,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,GAAG,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;EACpE,yBAAyB;EACzB,qBAAqB;EACrB,yBAAyB,IAAI,YAAY,EAAE;EAC3C;EACA,wBAAwB,IAAI,WAAW,KAAK,KAAK,EAAE;EACnD,4BAA4B,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;EACxD,yBAAyB;EACzB,6BAA6B;EAC7B,4BAA4B,GAAG,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;EACrE,yBAAyB;EACzB,qBAAqB;EACrB,yBAAyB;EACzB,wBAAwB,IAAIc,aAAK;EACjC,8BAA4B,GAAG,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,GAAC;EAC7E,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA6B;EACnF,YAAY,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;EACvD,SAAS,CAAC,CAAC;EACX,QAAQ,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,cAAc,EAAE;EACjD,YAAY,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EACtC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC;EAC1B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B,YAAY,sBAAsB,CAAC,CAAC,CAAC,CAAC;EACtC,SAAS;EACT,aAAa,IAAI,GAAG,CAAC,qBAAqB,IAAI,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,iBAAiB,EAAE;EAC5F,YAAY,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EAClC,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC;EAC1B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC;EAC9B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B;EACA,SAAS;EACT,aAAa;EACb,YAAY,IAAI,SAAS,GAAG,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;EAC1E,YAAY,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;EAChD,YAAY,kBAAkB,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;EACnD,YAAY,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;EACpD,YAAY,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;EAChD,gBAAgB,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EAC5E,aAAa;EACb,YAAY,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE;EAC3C,gBAAgB,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EACrE,aAAa;EACb;EACA,YAAY,IAAI,GAAG,CAAC,2BAA2B,EAAE;EACjD,gBAAgB,IAAI,GAAG,CAAC,2BAA2B,CAAC,aAAa,EAAE;EACnE,oBAAoBsH,aAAW,CAAC,GAAG,CAAC,2BAA2B,EAAE,eAAe,CAAC,CAAC;EAClF,oBAAoBpI,IAAM,KAAK,GAAG,GAAG,CAAC,2BAA2B,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EACjG,oBAAoB,IAAI,KAAK,CAAC,MAAM,EAAE;EACtC,wBAAwB,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,IAAI,GAAG,CAAC,oBAAoB,CAAC,6BAA6B,EAAE;EAC5E,oBAAoBoI,aAAW,CAAC,GAAG,CAAC,oBAAoB,EAAE,+BAA+B,CAAC,CAAC;EAC3F,oBAAoBpI,IAAM,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EAC7G,oBAAoB,IAAI,QAAQ,CAAC,MAAM,EAAE;EACzC,wBAAwB,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,iBAAiB,IAAI,GAAG,CAAC,gBAAgB,EAAE;EAC3C,gBAAgB,IAAI,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE;EAC/C,oBAAoBoI,aAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;EAC9D,oBAAoBpI,IAAMsI,OAAK,GAAG,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EAC7E,oBAAoB,IAAIA,OAAK,CAAC,MAAM,EAAE;EACtC,wBAAwB,CAAC,CAAC,MAAM,CAAC,WAAW,GAAGA,OAAK,CAAC,CAAC,CAAC,CAAC;EACxD,qBAAqB;EACrB,iBAAiB;EACjB,gBAAgB,IAAI,GAAG,CAAC,gBAAgB,CAAC,aAAa,EAAE;EACxD,oBAAoBF,aAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;EACvE,oBAAoBpI,IAAMuI,UAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EACzF,oBAAoB,IAAIA,UAAQ,CAAC,MAAM,EAAE;EACzC,wBAAwB,CAAC,CAAC,MAAM,CAAC,cAAc,GAAGA,UAAQ,CAAC,CAAC,CAAC,CAAC;EAC9D,qBAAqB;EACrB,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE;EAC5D,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;EAC5D,oBAAoB,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;EACnF,iBAAiB;EACjB,aAAa;EACb,iBAAiB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE;EAC7D,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;EACxD,oBAAoB,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;EAC/E,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;EAC7D,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;EAC7D,oBAAoB,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;EAC/E,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;EAC7D,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;EAC7D,oBAAoB,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;EAC/E,iBAAiB;EACjB,aAAa;EACb,YAAY,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE;EAC/C,gBAAgBH,aAAW,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EACjD,gBAAgB,CAAC,CAAC,MAAM,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;EACjF,oBAAoB,OAAO,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EACvD,iBAAiB,CAAC,CAAC;EACnB,aAAa;EACb,YAAY,EAAE,CAAC,QAAQ,EAAE,CAAC;EAC1B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC;EAC9B,YAAY,CAAC,CAAC,aAAa,EAAE,CAAC;EAC9B,YAAY,IAAI,CAAC,SAAS,EAAE;EAC5B,gBAAgB,2BAA2B,CAAC,CAAC,CAAC,CAAC;EAC/C,aAAa;EACb,iBAAiB;EACjB,gBAAgB,wBAAwB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;EACvD,aAAa;EACb,YAAY,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACrC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;EAClC,SAAS;EACT,QAAQ,IAAItH,aAAK;EACjB,cAAY,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAC;EACzD;;;;;IAxZwB,kBAyZvB;AACDI,kBAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACrCA,kBAAc,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACtCA,kBAAc,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;;ECt8BvC;EACA;EACA;EACA;EACA;AACA,EAGA,IAAM,SAAS;;;;;;;;;;;MACX,mBAAI,uBAAO,EAAE,OAAO,KAAK,CAAC,GAAE;EAChC,wBAAI,4BAAS;EACb;EACA,QAAQ,IAAIJ,aAAK;EACjB,cAAY,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAC;EACtD,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;EAC/B,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;EACvC,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;EACjD,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;EAC7C,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;EACzC,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;EAC9B,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;EAC5B,QAAQ,IAAI,YAAY,EAAE,YAAY,CAAC;EACvC,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;EACpD,QAAQ,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACvC;EACA,QAAQ,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC7E,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;EAC5B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;EACtB,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;EAC7B,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC;EACjC;EACA,QAAQ,IAAI,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;EAC7C,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,QAAQ,IAAI,cAAc,GAAG,SAAS,GAAG,CAAC,CAAC;EAC3C,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;EAChC,QAAQ,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;EACpC,QAAQ,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;EACpC,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;EACpB,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;EACzB,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC;EACvB,QAAQ,SAAS,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;EACnD,YAAY,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;EAC1C,gBAAgB,EAAE,MAAM,CAAC;EACzB,gBAAgB,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;EACnC,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,gBAAgB,IAAI,CAAC,IAAI;EACzB,sBAAoB,WAAS;EAC7B,gBAAgB,IAAI,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE;EAC9C;EACA,oBAAoB,IAAI,YAAY,EAAE;EACtC,wBAAwB,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EACvE,wBAAwB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;EAClD,wBAAwB,YAAY,GAAG,CAAC,CAAC;EACzC,qBAAqB;EACrB,iBAAiB;EACjB,qBAAqB,IAAI,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE,CAElC;EACjB,qBAAqB,IAAI,CAAC,GAAG,cAAc,KAAK,cAAc,GAAG,CAAC,EAAE;EACpE,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EACvD,oBAAoB,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;EAClD,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACrD,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACrD,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EACrD,oBAAoB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EACpC,oBAAoB,IAAI,cAAc,EAAE;EACxC,wBAAwB,OAAO,IAAI,CAAC;EACpC,qBAAqB;EACrB,oBAAoB,QAAQ,IAAI,CAAC,CAAC;EAClC,iBAAiB;EACjB,qBAAqB;EACrB,oBAAoB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACzD,oBAAoB,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;EACvD,0BAAwB,WAAS;EACjC,oBAAoB,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;EACrE,oBAAoB,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;EACrE,oBAAoB,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;EACrE,oBAAoB,IAAI,YAAY,EAAE;EACtC,wBAAwB,IAAI,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;EACjD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAChD,wBAAwB,YAAY,IAAI,CAAC,CAAC;EAC1C,wBAAwB,IAAI,CAAC,GAAG,cAAc;EAC9C,8BAA4B,WAAS;EACrC,qBAAqB;EACrB,oBAAoB,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACvD,oBAAoB,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACxD,oBAAoB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;EAC1D,oBAAoB,SAAS,CAAC,UAAU,EAAE,CAAC;EAC3C,oBAAoB,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EACtE,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACzC,oBAAoB,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;EACnD,oBAAoB,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;EACzE,oBAAoB,GAAG,IAAI,CAAC,CAAC;EAC7B,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,QAAQ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA6B;EACnF,YAAY,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;EACvD,SAAS,CAAC,CAAC;EACX,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;EACtB,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;EAC1B,QAAQ,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAC/B,QAAQ,cAAc,CAAC,CAAC,CAAC,CAAC;EAC1B,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;EAC1B,QAAQ,2BAA2B,CAAC,CAAC,CAAC,CAAC;EACvC,QAAQ,IAAIA,aAAK;EACjB,cAAY,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAC;EACzD;;;;;IAvGwB,kBAwGvB;AACDI,kBAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;;ECjHrC;EACA;EACA;EACA;EACA;EACA;EACA;AACA,AAuWA;EACA;EACA;EACA;EACA;EACA;;;EAGA,IAAI,iBAAiB,GAAG;EACxB,IAAI,aAAa,EAAE,cAAc;EACjC,IAAI,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO;EACpD,IAAI,gBAAgB,EAAE,aAAa;EACnC,IAAI,qBAAqB,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO;EACzD,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW;EACnE,IAAI,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;EACjE,IAAI,gBAAgB,EAAE,gBAAgB,EACrC,CAAC;;EAEF,IAAI,aAAa,GAAG;EACpB;EACA,IAAI,YAAY,EAAE,YAAY,EAAE,YAAY;EAC5C,IAAI,aAAa,EAAE,eAAe;EAClC,IAAI,aAAa;EACjB;EACA,IAAI,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe;EAC9D,IAAI,eAAe,EAAE,aAAa,EAAE,mBAAmB;EACvD,IAAI,eAAe;EACnB,IAAI,cAAc,EAAE,eAAe;EACnC,CAAC,CAAC;;EAEF,IAAI,SAAS,GAAG,iBAAiB,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;;EAE1D;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;;EAGA,SAAS,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE;EAC9C,IAAI,OAAO,UAAU,GAAG,IAAI,IAAI;EAChC,QAAQ,UAAU,CAAC,MAAM;EACzB,QAAQ,UAAU,CAAC,UAAU;EAC7B,QAAQ,UAAU,CAAC,UAAU,KAAK,QAAQ,IAAI,CAAC,EAAE;EACjD,KAAK,GAAG,SAAS,CAAC;EAClB,CAAC;;EAED,SAAS,WAAW,EAAE,UAAU,EAAE;EAClC,IAAI,OAAO,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;EAC3C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,YAAY,EAAE,UAAU,EAAE;EACnC,IAAI,OAAO,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;EAC7C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,WAAW,EAAE,UAAU,EAAE;EAClC,IAAI,OAAO,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;EAC5C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,YAAY,EAAE,UAAU,EAAE;EACnC,IAAI,OAAO,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC;EAChD,CAAC;;EAED,SAAS,cAAc,EAAE,UAAU,EAAE;EACrC,IAAI,OAAO,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC;EAClD,CAAC;;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;EAC7B,IAAI,IAAI,CAAC,MAAM,KAAG,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,EAAE,GAAC;EAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;EACjD,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9D,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AAgBA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;EAC7B,IAAI,IAAI,CAAC,MAAM,KAAG,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,EAAE,GAAC;EAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;EACjD,QAAQ,MAAM,EAAE,CAAC,EAAE;EACnB,YAAY,KAAK,EAAE,EAAE,MAAM,IAAI,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE;EACzD,YAAY,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;EACzD,SAAS,CAAC;EACV,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AAgBA;EACA,SAAS,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE;EACvC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;EACzB,IAAI,IAAI,CAAC,MAAM,KAAG,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC,GAAG,CAAC,EAAE,GAAC;EACrD,IAAI,IAAI,KAAK,GAAG,WAAW,EAAE,MAAM,EAAE,CAAC;EACtC,IAAI,IAAI,IAAI,GAAG,WAAW,EAAE,KAAK,EAAE,CAAC;EACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;EAC9D,QAAQ,KAAK,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;EAC5D,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;EACnD,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;EAC5B,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;EAC3B,IAAI,IAAI,CAAC,MAAM,KAAG,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC,EAAE,GAAC;EACjD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC;EACA,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;EAC7C,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AASA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;EACnC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;EACd,IAAI,IAAI,CAAC,MAAM,EAAE;EACjB;EACA,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;EAC3B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;EACrD,YAAY,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;EACzC,SAAS;EACT;EACA,QAAQ,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,CAAC;EACrD,KAAK;EACL,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC;EACvB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;EACjD,QAAQ,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC;EAC/B,QAAQ,IAAI,MAAM,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;EACpC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;EACzC,YAAY,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;EACzC,YAAY,EAAE,UAAU,CAAC;EACzB,SAAS;EACT,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AA4BA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;EACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;EACzB,IAAI,IAAI,CAAC,MAAM,KAAG,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,GAAC;EACtD,IAAI,IAAI,CAAC,KAAG,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,GAAC;EACrC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;EACnD,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AAUA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE;EAC1C,IAAI,IAAI,UAAU,GAAG,QAAQ,YAAY,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC;EACnE,IAAI,IAAI,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;EACrC,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;EAC5B,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;EACb,IAAI,IAAI,CAAC,MAAM,EAAE;EACjB,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;EAC3B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;EAChC,YAAY,IAAI,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,IAAI,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,EAAE;EAC1E,gBAAgB,EAAE,UAAU,CAAC;EAC7B,aAAa;EACb,SAAS;EACT,QAAQ,MAAM,GAAG,IAAI,UAAU,EAAE,UAAU,EAAE,CAAC;EAC9C,KAAK;EACL,IAAI,CAAC,GAAG,CAAC,CAAC;EACV,IAAI,CAAC,GAAG,CAAC,CAAC;EACV,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;EAClB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;EACtB,QAAQ,OAAO,QAAQ,EAAE,CAAC,EAAE,KAAK,UAAU,IAAI,QAAQ,EAAE,CAAC,EAAE,KAAK,UAAU,EAAE;EAC7E,YAAY,KAAK,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;EACnC,YAAY,EAAE,CAAC,CAAC;EAChB,SAAS;EACT,QAAQ,KAAK,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;EAC/B,QAAQ,EAAE,CAAC,CAAC;EACZ,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;EAC5B,QAAQ,EAAE,CAAC,CAAC;EACZ,KAAK;EACL,IAAI,OAAO,MAAM,CAAC;EAClB,CAAC;AACD,AA+CA;;;EAGA,SAAS,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE;EACxC,IAAI,OAAO,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC;EACrD,CAAC;AACD,AAIA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;EACtD,IAAI,OAAO,aAAa;EACxB,QAAQ,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;EACtE,KAAK,CAAC;EACN,CAAC;AACD,AAIA;;;EAGA,SAAS,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;EACxD,IAAI,OAAO,aAAa;EACxB,QAAQ,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;EACxE,KAAK,CAAC;EACN,CAAC;AACD,AAIA;;;EAGA,SAAS,oBAAoB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;EAC1D,IAAI,OAAO,aAAa;EACxB,QAAQ,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;EAC1E,KAAK,CAAC;EACN,CAAC;;EAED,SAAS,yBAAyB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;EAC/D,IAAI,IAAI,QAAQ,GAAG,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,CAAC;EACrE,IAAI,OAAO,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,EAAE,CAAC;EAC/E,CAAC;AACD,AAIA;;;EAGA,SAAS,WAAW,EAAE,KAAK,EAAE;EAC7B,IAAI,IAAI,EAAE,GAAG,WAAW,EAAE,KAAK,EAAE,CAAC;EAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;EAChC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;EAChC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACxC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;EACrC,IAAI,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;EACxC,CAAC;AACD,AAmJA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,aAAa,CAAC,MAAM,EAAE;EAC/B;EACA;EACA;EACA;EACA,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC;EACjB,EAAE,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;EACvB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;EACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACrC,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;EACxB,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC;EAC3B,KAAK;EACL,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG;;EAEH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;EACvB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;EACzD,IAAI,MAAM,IAAI,MAAM,CAAC;EACrB,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG;;EAEH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;EACvB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;EACzD,IAAI,MAAM,IAAI,MAAM,CAAC;EACrB;EACA;EACA,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC;EAC3B,IAAI,GAAG,MAAM,GAAG,SAAS,CAAC;EAC1B,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;EACjB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,SAAS,EAAE;EACvD,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK;EACxC,UAAU,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC;EAChD,SAAS,CAAC,CAAC;EACX,OAAO;EACP,MAAM,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EACxB,KAAK,IAAI;EACT,MAAM,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpD,KAAK;EACL,GAAG;;EAEH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,KAAK,CAAC,MAAM,EAAE;EACzB,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;EAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;EACrC,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC;EACzB,KAAK;EACL,IAAI,OAAO,KAAK,CAAC;EACjB,GAAG;;EAEH;EACA;EACA;EACA;EACA,EAAE,SAAS,KAAK,GAAG;EACnB,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;EAC9B,IAAI,IAAI,KAAK,EAAE,MAAM,CAAU;EAC/B;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;EAChC,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,IAAI,CAAC;EAClB,KAAK;EACL;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;EAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;EAC3B,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB,KAAK;EACL;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;EAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;EAC3B,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;EAC3B,KAAK;EACL;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;EAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;EAC3B,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB,KAAK;EACL;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;EAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;EACvC,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,KAAK,CAAC;EACnB,KAAK;EACL,IAAI,QAAQ,IAAI;EAChB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,IAAI,CAAC;EAClB;EACA;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,EAAE,CAAC;EACf,MAAM,OAAO,IAAI,CAAC;EAClB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EACjC,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC3C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC5C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC5C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;EAC3B;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;EAC3B;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB;EACA,IAAI,KAAK,IAAI;EACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;EAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;EACzB,KAAK;;EAEL,IAAI,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3D,GAAG;;EAEH;EACA,EAAE,OAAO,KAAK,EAAE,CAAC;EACjB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,eAAe,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;;EAEpD,IAAI,QAAQ,IAAI;EAChB,QAAQ,KAAK,CAAC;EACd,YAAY,OAAO,aAAa,EAAE,KAAK,EAAE,CAAC;EAC1C,QAAQ,KAAK,CAAC;EACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;EACxC,QAAQ,KAAK,CAAC;EACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;EACxC,QAAQ,KAAK,CAAC;EACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;EACxC,QAAQ,KAAK,CAAC;EACd;EACA,YAAY,OAAO,YAAY,EAAE,KAAK,EAAE,CAAC;EACzC,QAAQ,KAAK,CAAC;EACd;EACA,YAAY,OAAO,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,IAA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"}